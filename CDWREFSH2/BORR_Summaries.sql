USE CDW
GO

MERGE
	dbo.BORR_Summaries ExistingData
USING
	(
		SELECT DISTINCT 
			PD10.DF_SPE_ACC_ID, 
			SUM(LN10.LA_CUR_PRI) AS LA_CUR_PRI, 
			SUM(DW01.WA_TOT_BRI_OTS) AS WA_TOT_BRI_OTS, 
			CAST(SUM(CAST(CAST(((CASE WHEN DW01.WC_DW_LON_STA IN ('01', '02', '04') AND LN10.IC_LON_PGM IN ('SUBSPC', 'DSCON', 'DSS', 'SUBCNS', 'STFFRD') THEN 0 ELSE LN10.LA_CUR_PRI END)) * COALESCE (LN72.LR_ITR, 0) / 365 AS INTEGER) AS NUMERIC(8, 2)) / 100) AS NUMERIC(8, 2)) AS LR_ITR_DLY, 
			CAST(SUM(CAST(CAST(((CASE WHEN DW01.WC_DW_LON_STA IN ('01', '02', '04') AND LN10.IC_LON_PGM IN ('SUBSPC', 'DSCON', 'DSS', 'SUBCNS', 'STFFRD') THEN 0 ELSE LN10.LA_CUR_PRI END)) * COALESCE (LN72.LR_ITR, 0) / 365 AS INTEGER) AS NUMERIC(8, 2)) / 100) AS NUMERIC(8, 2)) * 31 AS LR_ITR_MONTH,
			CAST(CASE WHEN SUM(LN10.LA_CUR_PRI) > 0 THEN SUM(CAST(CAST(((CASE WHEN DW01.WC_DW_LON_STA IN ('01', '02', '04') AND LN10.IC_LON_PGM IN ('SUBSPC', 'DSCON', 'DSS', 'SUBCNS', 'STFFRD') THEN 0 ELSE LN10.LA_CUR_PRI END)) * COALESCE (LN72.LR_ITR, 0) / 365 AS INTEGER) AS NUMERIC(8, 2)) / 100) * 31 + 5 ELSE 0 END AS NUMERIC(8, 2)) AS LR_ITR_MONTH_5,  
			CONVERT(VARCHAR(4), YEAR(DATEADD(MONTH, 3, MAX(CAST(DW01.WD_LON_RPD_SR AS DATETIME))))) AS COHORT,
			CASE 
				WHEN YEAR(DATEADD(MONTH, 3, MAX(CAST(WD_LON_RPD_SR AS DATETIME)))) >= YEAR(DATEADD(YEAR, - 2, (DATEADD(MONTH, 3, GETDATE())))) THEN 'Y' 
				ELSE 'N' 
			END AS COHORT_IND
		FROM        
			LN10_LON LN10
			INNER JOIN PD10_PRS_NME PD10
				ON PD10.DF_PRS_ID = LN10.BF_SSN
			INNER JOIN DW01_DW_CLC_CLU DW01
				ON DW01.BF_SSN = LN10.BF_SSN 
				AND DW01.LN_SEQ = LN10.LN_SEQ 
			LEFT JOIN
			(
				SELECT
					LN72.BF_SSN,
					LN72.LN_SEQ,
					LN72.LR_ITR,
					LN72.LR_INT_RDC_PGM_ORG,
					ROW_NUMBER() OVER (PARTITION BY LN72.BF_SSN, LN72.LN_SEQ ORDER BY LD_STA_LON72 DESC) AS SEQ
				FROM	
					LN72_INT_RTE_HST LN72
					INNER JOIN PD10_PRS_NME PD10
						ON PD10.DF_PRS_ID = LN72.BF_SSN
				WHERE
					LN72.LC_STA_LON72 = 'A'
					AND CAST(GETDATE() AS DATE) BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END
			) LN72 
				ON LN72.BF_SSN = LN10.BF_SSN
				AND LN72.LN_SEQ = LN10.LN_SEQ 
				AND LN72.SEQ = 1
		GROUP BY
			PD10.DF_SPE_ACC_ID
	) NewData
		ON NewData.DF_SPE_ACC_ID = ExistingData.DF_SPE_ACC_ID
WHEN MATCHED THEN UPDATE SET
	ExistingData.LA_CUR_PRI = NewData.LA_CUR_PRI,
	ExistingData.WA_TOT_BRI_OTS = NewData.WA_TOT_BRI_OTS,
	ExistingData.LR_ITR_DLY = NewData.LR_ITR_DLY,
	ExistingData.LR_ITR_MONTH = NewData.LR_ITR_MONTH,
	ExistingData.LR_ITR_MONTH_5 = NewData.LR_ITR_MONTH_5,
	ExistingData.COHORT = NewData.COHORT,
	ExistingData.COHORT_IND = NewData.COHORT_IND
WHEN NOT MATCHED THEN
	INSERT
	(
		DF_SPE_ACC_ID,
		LA_CUR_PRI,
		WA_TOT_BRI_OTS,
		LR_ITR_DLY,
		LR_ITR_MONTH,
		LR_ITR_MONTH_5,
		COHORT,
		COHORT_IND
	)
	VALUES
	(
		NewData.DF_SPE_ACC_ID,
		NewData.LA_CUR_PRI,
		NewData.WA_TOT_BRI_OTS,
		NewData.LR_ITR_DLY,
		NewData.LR_ITR_MONTH,
		NewData.LR_ITR_MONTH_5,
		NewData.COHORT,
		NewData.COHORT_IND
	)
WHEN NOT MATCHED BY SOURCE THEN
	DELETE;