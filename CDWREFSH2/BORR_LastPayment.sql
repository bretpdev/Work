USE CDW
GO

MERGE
	dbo.BORR_LastPayment ExistingData
USING
	(
		SELECT
			PD10.DF_SPE_ACC_ID,
			CONVERT(VARCHAR, MAX_BORR_PAYMENT.LD_FAT_EFF, 101) AS LST_PMT_RCVD,
			CONVERT(DECIMAL(9, 2), MAX_BORR_PAYMENT.TRANS_AMT) AS TRAN_AMT,
			CONVERT(VARCHAR, COALESCE(MAX_IVR_PAYMENT.LD_FAT_EFF,'') ,112) AS LST_PMT_IVR,
			CONVERT(DECIMAL(9, 2), COALESCE(MAX_IVR_PAYMENT.TRANS_AMT,0.00)) AS LST_AMT_IVR,
			CONVERT(VARCHAR, MAX_BORR_PAYMENT.LD_FAT_EFF, 103) AS LST_PMT_RCVD_IVR
		FROM
			PD10_PRS_NME PD10
			INNER JOIN --GETS THE LAST PAYMENT OF TYPE 10
			(
				SELECT
					LN90.BF_SSN,
					MAX(LN90.LD_FAT_EFF) AS LD_FAT_EFF,
					SUM(ABS(COALESCE(LN90.LA_FAT_CUR_PRI,0) + COALESCE(LN90.LA_FAT_NSI,0) + COALESCE(LN90.LA_FAT_LTE_FEE,0))) AS TRANS_AMT
				FROM
					CDW..LN90_FIN_ATY LN90
					INNER JOIN
					(
						SELECT
							LN90.BF_SSN,
							MAX(LN90.LD_FAT_EFF) AS LD_FAT_EFF
						FROM	
							LN90_FIN_ATY LN90
						WHERE
							LN90.LC_STA_LON90 = 'A'
							AND COALESCE(LN90.LC_FAT_REV_REA,'') = ''--NOT REVERSED
							AND LN90.PC_FAT_TYP = '10'
						GROUP BY
							LN90.BF_SSN
					) MAX_PAYMENT
						ON MAX_PAYMENT.BF_SSN = LN90.BF_SSN
						AND MAX_PAYMENT.LD_FAT_EFF = LN90.LD_FAT_EFF
				WHERE
					LN90.LC_STA_LON90 = 'A'
					AND COALESCE(LN90.LC_FAT_REV_REA,'') = ''--NOT REVERSED
					AND LN90.PC_FAT_TYP = '10'
				GROUP BY
					LN90.BF_SSN
			) MAX_BORR_PAYMENT
				ON MAX_BORR_PAYMENT.BF_SSN = PD10.DF_PRS_ID
			LEFT JOIN --GETS THE LAST PAYMENT OF TYPE 10 SUB TYPE 10
			(
				SELECT
					LN90.BF_SSN,
					MAX(LN90.LD_FAT_EFF) AS LD_FAT_EFF,
					SUM(ABS(COALESCE(LN90.LA_FAT_CUR_PRI,0) + COALESCE(LN90.LA_FAT_NSI,0) + COALESCE(LN90.LA_FAT_LTE_FEE,0))) AS TRANS_AMT
				FROM
					CDW..LN90_FIN_ATY LN90
					INNER JOIN
					(
						SELECT
							LN90.BF_SSN,
							MAX(LN90.LD_FAT_EFF) AS LD_FAT_EFF
						FROM	
							LN90_FIN_ATY LN90
						WHERE
							LN90.LC_STA_LON90 = 'A'
							AND COALESCE(LN90.LC_FAT_REV_REA,'') = ''--NOT REVERSED
							AND LN90.PC_FAT_TYP = '10'
							AND LN90.PC_FAT_SUB_TYP = '10'
						GROUP BY
							LN90.BF_SSN
					) MAX_PAYMENT
						ON MAX_PAYMENT.BF_SSN = LN90.BF_SSN
						AND MAX_PAYMENT.LD_FAT_EFF = LN90.LD_FAT_EFF
				WHERE
					LN90.LC_STA_LON90 = 'A'
					AND COALESCE(LN90.LC_FAT_REV_REA,'') = ''--NOT REVERSED
					AND LN90.PC_FAT_TYP = '10'
					AND LN90.PC_FAT_SUB_TYP = '10'
				GROUP BY
					LN90.BF_SSN
			) MAX_IVR_PAYMENT
				ON MAX_IVR_PAYMENT.BF_SSN = PD10.DF_PRS_ID
	) NewData
		ON NewData.DF_SPE_ACC_ID = ExistingData.DF_SPE_ACC_ID
WHEN MATCHED THEN UPDATE SET
	ExistingData.LST_PMT_RCVD = NewData.LST_PMT_RCVD,
	ExistingData.TRAN_AMT = NewData.TRAN_AMT,
	ExistingData.LST_PMT_IVR = NewData.LST_PMT_IVR,
	ExistingData.LST_AMT_IVR = NewData.LST_AMT_IVR,
	ExistingData.LST_PMT_RCVD_IVR = NewData.LST_PMT_RCVD_IVR
WHEN NOT MATCHED THEN
	INSERT
	(
		DF_SPE_ACC_ID,
		LST_PMT_RCVD,
		TRAN_AMT,
		LST_PMT_IVR,
		LST_AMT_IVR,
		LST_PMT_RCVD_IVR
	)
	VALUES
	(
		NewData.DF_SPE_ACC_ID,
		NewData.LST_PMT_RCVD,
		NewData.TRAN_AMT,
		NewData.LST_PMT_IVR,
		NewData.LST_AMT_IVR,
		NewData.LST_PMT_RCVD_IVR
	)
WHEN NOT MATCHED BY SOURCE THEN
	DELETE;