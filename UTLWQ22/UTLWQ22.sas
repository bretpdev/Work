*-----------------------------------------------*
|UTLWQ22 MONTHLY CLAIM PAID TOTALS BY LENDER ID |
*-----------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWQ22.LWQ22R2";
FILENAME REPORTZ "&RPTLIB/ULWQ22.LWQ22RZ";
DATA _NULL_;
     CALL SYMPUT('BEGIN',"'"||PUT(INTNX('MONTH',TODAY(),-1,'BEGINNING'), MMDDYYD10.)||"'");
	 CALL SYMPUT('END',"'"||PUT(INTNX('MONTH',TODAY(),-1,'END'), MMDDYYD10.)||"'");
     CALL SYMPUT('EFFDATE',TRIM(LEFT(UPCASE(
		PUT(INTNX('MONTH',TODAY(),-1), MONNAME9.)||' '||
		PUT(INTNX('MONTH',TODAY(),-1), YEAR4.)))));
RUN;
%SYSLPUT BEGIN = &BEGIN;
%SYSLPUT END = &END;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE MCPTBLID AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.BF_SSN
	,A.AF_APL_ID||A.AF_APL_ID_SFX AS CLUID
	,B.AF_CUR_LON_SER_AGY
	,B.AF_CUR_LON_OPS_LDR	
	,CASE 
		WHEN A.LC_PCL_REA IN ('BC','BH','BO') THEN 'BANKRUPTCY'
		WHEN A.LC_PCL_REA IN ('DB','DF','DQ') THEN 'DEFAULT'
		WHEN A.LC_PCL_REA = 'CS' THEN 'CLOSED SCHOOL'
		WHEN A.LC_PCL_REA = 'DE' THEN 'DEATH'
		WHEN A.LC_PCL_REA = 'DI' THEN 'DISABILITY'
		WHEN A.LC_PCL_REA = 'DU' THEN 'ABBREVIATED CURE'
		WHEN A.LC_PCL_REA = 'FC' THEN 'FALSE CERTIFICATION'
		WHEN A.LC_PCL_REA = 'IN' THEN 'INELIGIBLE BORROWER'
	 END AS LC_PCL_REA
	,A.LA_CLM_PRI 
	,A.LA_CLM_INT 
	,A.LA_CLM_UNS
	,A.LD_LDR_POF
	,CASE 
		WHEN B.AF_CUR_LON_SER_AGY = '700126' THEN '1'
		ELSE '2'
	 END AS SVAR
	,CASE
		WHEN B.AF_CUR_LON_SER_AGY = '700126' THEN 'UHEAA'
		WHEN B.AF_CUR_LON_SER_AGY = '700121' THEN 'NELNET'
		WHEN B.AF_CUR_LON_SER_AGY = '700191' THEN 'SALLIE MAE'
	 END AS SERV_NM
FROM OLWHRM1.DC01_LON_CLM_INF A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
	AND A.AF_APL_ID_SFX = B.AF_APL_ID_SFX
WHERE A.LC_STA_DC10 IN ('03','04')
AND A.LD_LDR_POF BETWEEN &BEGIN AND &END
FOR READ ONLY WITH UR
);

CREATE TABLE SKIPDD AS
SELECT *
FROM CONNECTION TO DB2 (
		SELECT DISTINCT A.BF_SSN
			,B.AF_CUR_LON_SER_AGY
			,1 AS SKPCT
		FROM OLWHRM1.DC01_LON_CLM_INF A
		INNER JOIN OLWHRM1.GA10_LON_APP B
			ON A.AF_APL_ID = B.AF_APL_ID
			AND A.AF_APL_ID_SFX = B.AF_APL_ID_SFX
		INNER JOIN OLWHRM1.PD03_PRS_ADR_PHN C
			ON A.BF_SSN = C.DF_PRS_ID
		WHERE A.LC_STA_DC10 IN ('03','04')
		AND A.LD_LDR_POF BETWEEN &BEGIN AND &END
		AND C.DC_ADR = 'L'
		AND 
		( 
			(
				C.DI_VLD_ADR = 'N' AND
				C.DD_LST_UPD_ADR >= A.LD_DCO
			)
		OR 
			(
				C.DI_PHN_VLD = 'N' AND
				C.DD_LST_UPD_PHN >= A.LD_DCO
			)
		)
UNION
		SELECT DISTINCT A.BF_SSN
			,B.AF_CUR_LON_SER_AGY
			,1 AS SKPCT
		FROM OLWHRM1.DC01_LON_CLM_INF A
		INNER JOIN OLWHRM1.GA10_LON_APP B
			ON A.AF_APL_ID = B.AF_APL_ID
			AND A.AF_APL_ID_SFX = B.AF_APL_ID_SFX
		INNER JOIN OLWHRM1.PD03_PRS_ADR_PHN C
			ON A.BF_SSN = C.DF_PRS_ID
		INNER JOIN OLWHRM1.PD04_ADR_PHN_HST D
			ON C.DF_PRS_ID = D.DF_PRS_ID
			AND C.DC_ADR = D.DC_ADR_HST
		INNER JOIN (
				SELECT DISTINCT X.BF_SSN
					,MAX(Y.DD_LST_UPD_ADR_HST) AS MAX_ADD_HST
					,MAX(Y.DD_LST_UPD_ADR_HST) AS MAX_PHN_HST /*THIS DATE IS MEANINGLESS IT IS  
																ONLY USED TO SUPPORT THE UNION*/
				FROM OLWHRM1.DC01_LON_CLM_INF X
				INNER JOIN OLWHRM1.PD04_ADR_PHN_HST Y
					ON X.BF_SSN = Y.DF_PRS_ID
				WHERE Y.DD_LST_UPD_ADR_HST < X.LD_DCO
				AND Y.DC_ADR_HST = 'L'
				GROUP BY X.BF_SSN
			UNION
				SELECT DISTINCT X.BF_SSN
					,MAX(Y.DD_LST_UPD_PHN_HST) AS MAX_ADD_HST /*THIS DATE IS MEANINGLESS IT IS  
																ONLY USED TO SUPPORT THE UNION*/
					,MAX(Y.DD_LST_UPD_PHN_HST) AS MAX_PHN_HST
				FROM OLWHRM1.DC01_LON_CLM_INF X
				INNER JOIN OLWHRM1.PD04_ADR_PHN_HST Y
					ON X.BF_SSN = Y.DF_PRS_ID
				WHERE Y.DD_LST_UPD_PHN_HST < X.LD_DCO
				AND Y.DC_ADR_HST = 'L'
				GROUP BY X.BF_SSN
			 ) SKP
			ON A.BF_SSN = SKP.BF_SSN	
		WHERE A.LC_STA_DC10 IN ('03','04')
		AND A.LD_LDR_POF BETWEEN &BEGIN AND &END
		AND C.DC_ADR = 'L'
		AND 
		( 
			(
				C.DI_VLD_ADR = 'Y' AND
				C.DD_LST_UPD_ADR >= A.LD_DCO AND 
				(
					(
						D.DD_LST_UPD_ADR_HST = SKP.MAX_ADD_HST AND 
						D.DI_VLD_ADR_HST = 'N'		
					)
					OR
					(
						D.DD_LST_UPD_ADR_HST BETWEEN A.LD_DCO AND A.LD_LDR_POF AND 
						D.DI_VLD_ADR_HST = 'N'		
					)
				)
			)
		OR 
			(
				C.DI_PHN_VLD = 'Y' AND
				C.DD_LST_UPD_PHN >= A.LD_DCO AND 
				(
					(
						D.DD_LST_UPD_PHN_HST = SKP.MAX_PHN_HST AND 
						D.DI_PHN_VLD_HST = 'N'
					)
				OR
					(
						D.DD_LST_UPD_PHN_HST BETWEEN A.LD_DCO AND A.LD_LDR_POF AND 
						D.DI_PHN_VLD_HST = 'N'	
					)
				)
			)
		)
FOR READ ONLY WITH UR
);

CREATE TABLE SKIPCP AS
SELECT *
FROM CONNECTION TO DB2 (
		SELECT DISTINCT A.BF_SSN
			,B.AF_CUR_LON_SER_AGY
			,1 AS SKPCT
		FROM OLWHRM1.DC01_LON_CLM_INF A
		INNER JOIN OLWHRM1.GA10_LON_APP B
			ON A.AF_APL_ID = B.AF_APL_ID
			AND A.AF_APL_ID_SFX = B.AF_APL_ID_SFX
		INNER JOIN OLWHRM1.PD03_PRS_ADR_PHN C
			ON A.BF_SSN = C.DF_PRS_ID
		WHERE A.LC_STA_DC10 IN ('03','04')
		AND A.LD_LDR_POF BETWEEN &BEGIN AND &END
		AND C.DC_ADR = 'L'
		AND 
		( 
			(
				C.DI_VLD_ADR = 'N' AND
				C.DD_LST_UPD_ADR <= A.LD_LDR_POF
			)
		OR 
			(
				C.DI_PHN_VLD = 'N' AND
				C.DD_LST_UPD_PHN <= A.LD_LDR_POF
			)
		)
UNION
		SELECT DISTINCT A.BF_SSN
			,B.AF_CUR_LON_SER_AGY
			,1 AS SKPCT
		FROM OLWHRM1.DC01_LON_CLM_INF A
		INNER JOIN OLWHRM1.GA10_LON_APP B
			ON A.AF_APL_ID = B.AF_APL_ID
			AND A.AF_APL_ID_SFX = B.AF_APL_ID_SFX
		INNER JOIN OLWHRM1.PD03_PRS_ADR_PHN C
			ON A.BF_SSN = C.DF_PRS_ID
		INNER JOIN OLWHRM1.PD04_ADR_PHN_HST D
			ON C.DF_PRS_ID = D.DF_PRS_ID
			AND C.DC_ADR = D.DC_ADR_HST
		INNER JOIN (
				SELECT DISTINCT X.BF_SSN
					,MAX(Y.DD_LST_UPD_ADR_HST) AS MAX_ADD_HST
					,MAX(Y.DD_LST_UPD_ADR_HST) AS MAX_PHN_HST /*THIS DATE IS MEANINGLESS IT IS  
																ONLY USED TO SUPPORT THE UNION*/
				FROM OLWHRM1.DC01_LON_CLM_INF X
				INNER JOIN OLWHRM1.PD04_ADR_PHN_HST Y
					ON X.BF_SSN = Y.DF_PRS_ID
				WHERE Y.DD_LST_UPD_ADR_HST < X.LD_LDR_POF 
				AND Y.DC_ADR_HST = 'L'
				GROUP BY X.BF_SSN
			UNION
				SELECT DISTINCT X.BF_SSN
					,MAX(Y.DD_LST_UPD_PHN_HST) AS MAX_ADD_HST /*THIS DATE IS MEANINGLESS IT IS  
																ONLY USED TO SUPPORT THE UNION*/
					,MAX(Y.DD_LST_UPD_PHN_HST) AS MAX_PHN_HST
				FROM OLWHRM1.DC01_LON_CLM_INF X
				INNER JOIN OLWHRM1.PD04_ADR_PHN_HST Y
					ON X.BF_SSN = Y.DF_PRS_ID
				WHERE Y.DD_LST_UPD_PHN_HST < X.LD_LDR_POF 
				AND Y.DC_ADR_HST = 'L'
				GROUP BY X.BF_SSN
			 ) SKP
			ON A.BF_SSN = SKP.BF_SSN	
		WHERE A.LC_STA_DC10 IN ('03','04')
		AND A.LD_LDR_POF BETWEEN &BEGIN AND &END
		AND C.DC_ADR = 'L'
		AND 
		( 
			(
				C.DI_VLD_ADR = 'Y' AND
				C.DD_LST_UPD_ADR >= A.LD_LDR_POF AND 
				D.DD_LST_UPD_ADR_HST = SKP.MAX_ADD_HST AND 
				D.DI_VLD_ADR_HST = 'N'		
			)
		OR 
			(
				C.DI_PHN_VLD = 'Y' AND
				C.DD_LST_UPD_PHN >= A.LD_LDR_POF AND 
				D.DD_LST_UPD_PHN_HST = SKP.MAX_PHN_HST AND 
				D.DI_PHN_VLD_HST = 'N'
			)
		)
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWQ22.LWQ22RZ);*/
/*QUIT;*/
ENDRSUBMIT;
DATA MCPTBLID;SET WORKLOCL.MCPTBLID;RUN;
DATA SKIPDD;SET WORKLOCL.SKIPDD;RUN;
DATA SKIPCP;SET WORKLOCL.SKIPCP;RUN;

PROC SQL;
CREATE TABLE MCPTBLID2 AS 
SELECT DISTINCT A.*
	,COALESCE(B.SKPCT,0) AS DD
	,COALESCE(C.SKPCT,0) AS CP
FROM MCPTBLID A
LEFT OUTER JOIN SKIPDD B
	ON A.BF_SSN = B.BF_SSN
	AND A.AF_CUR_LON_SER_AGY = B.AF_CUR_LON_SER_AGY
LEFT OUTER JOIN SKIPCP C
	ON A.BF_SSN = C.BF_SSN
	AND A.AF_CUR_LON_SER_AGY = C.AF_CUR_LON_SER_AGY
;
QUIT;

PROC SORT DATA = MCPTBLID2;
BY BF_SSN AF_CUR_LON_SER_AGY AF_CUR_LON_OPS_LDR LC_PCL_REA;
RUN;
DATA MCPTBLID2X;
SET MCPTBLID2;
BY BF_SSN AF_CUR_LON_SER_AGY AF_CUR_LON_OPS_LDR LC_PCL_REA ;
IF FIRST.LC_PCL_REA THEN DO;
	SERV_AGY_BR_CT = 1;
	SKP_DD = DD;
	SKP_CP = CP;
	END;
ELSE DO;
	SERV_AGY_BR_CT = 0;
	SKP_DD = 0;
	SKP_CP = 0;
	END;
RUN;
/*******************************************
* LENDER LEVEL DATASET
********************************************/
PROC SQL;
CREATE TABLE LNDR_DAT AS 
SELECT AF_CUR_LON_SER_AGY 
	,SERV_NM
	,AF_CUR_LON_OPS_LDR 
	,LC_PCL_REA
	,SVAR
	,COUNT(DISTINCT CLUID) AS LOAN_COUNT
	,SUM(SERV_AGY_BR_CT) AS BR_COUNT
	,SUM(SKP_DD) AS DD_COUNT
	,SUM(SKP_CP) AS CP_COUNT
	,SUM(
		COALESCE(LA_CLM_PRI,0)+
		COALESCE(LA_CLM_INT,0)
		) AS BOR_RES
	,SUM(
		COALESCE(LA_CLM_PRI,0)+
		COALESCE(LA_CLM_INT,0)-
		COALESCE(LA_CLM_UNS,0) 
		) AS TOT_PD_2_LDR
FROM MCPTBLID2X
GROUP BY AF_CUR_LON_SER_AGY 
	,SERV_NM
	,AF_CUR_LON_OPS_LDR 
	,LC_PCL_REA
	,SVAR
;
QUIT;

PROC SORT DATA = LNDR_DAT;
BY SVAR AF_CUR_LON_SER_AGY SERV_NM AF_CUR_LON_OPS_LDR ;
RUN;
DATA SERV (KEEP=SVAR AF_CUR_LON_SER_AGY SER_BR_COUNT DD_COUNT CP_COUNT);
SET LNDR_DAT;
BY SVAR AF_CUR_LON_SER_AGY ;
IF FIRST.AF_CUR_LON_SER_AGY THEN DO;
	TOTL_BR = 0;
	REAL_DD = 0;
	REAL_CP = 0;
	END;
TOTL_BR+BR_COUNT;
REAL_DD+DD_COUNT ;
REAL_CP+CP_COUNT;
IF LAST.AF_CUR_LON_SER_AGY THEN DO;
	SER_BR_COUNT = TOTL_BR;
	DD_COUNT = REAL_DD;
	CP_COUNT = REAL_CP;
OUTPUT;
END;
RUN;
PROC SORT DATA = LNDR_DAT;BY SVAR AF_CUR_LON_SER_AGY;RUN;
PROC SORT DATA = SERV;BY SVAR AF_CUR_LON_SER_AGY;RUN;
DATA LNDR_DAT;
MERGE LNDR_DAT (DROP=DD_COUNT CP_COUNT) SERV;
BY SVAR AF_CUR_LON_SER_AGY;
RUN;

PROC SORT DATA = LNDR_DAT;BY SVAR AF_CUR_LON_SER_AGY;RUN;
/*******************************************
* SERVICER LEVEL DATA SET
********************************************/
PROC SQL;
CREATE TABLE SERV_DAT AS 
SELECT AF_CUR_LON_SER_AGY 
	,SERV_NM
	,LC_PCL_REA
	,SVAR
	,SUM(SKP_DD) AS DD
	,SUM(SKP_CP) AS CP
	,COUNT(DISTINCT CLUID) AS LOAN_COUNT
	,SUM(SERV_AGY_BR_CT) AS BR_COUNT
	,SUM(SKP_DD)/SUM(SERV_AGY_BR_CT) AS DD_COUNT
	,SUM(SKP_CP)/SUM(SERV_AGY_BR_CT) AS CP_COUNT
	,SUM(
		COALESCE(LA_CLM_PRI,0)+
		COALESCE(LA_CLM_INT,0)
		) AS BOR_RES
	,SUM(
		COALESCE(LA_CLM_PRI,0)+
		COALESCE(LA_CLM_INT,0)-
		COALESCE(LA_CLM_UNS,0) 
		) AS TOT_PD_2_LDR
FROM MCPTBLID2X
GROUP BY AF_CUR_LON_SER_AGY 
	,SERV_NM
	,LC_PCL_REA
	,SVAR
;
QUIT;

PROC SQL;
CREATE TABLE PCAL AS 
SELECT AF_CUR_LON_SER_AGY
	,sum(coalesce(dd,0)) as dsum
	,sum(coalesce(br_count,0)) as bsum 
	,round(SUM(COALESCE(DD,0))/SUM(COALESCE(BR_COUNT,0)),.01) AS DDX
	,round(SUM(COALESCE(CP,0))/SUM(COALESCE(BR_COUNT,0)),.01) AS CPX
FROM SERV_DAT
GROUP BY AF_CUR_LON_SER_AGY
;
QUIT;

PROC SORT DATA=SERV_DAT;BY AF_CUR_LON_SER_AGY;RUN;
PROC SORT DATA=PCAL;BY AF_CUR_LON_SER_AGY;RUN;

DATA SERV_DAT;
MERGE SERV_DAT PCAL;
BY AF_CUR_LON_SER_AGY;
IF FIRST.AF_CUR_LON_SER_AGY THEN DO;
	DDX = DDX;
	CPX = CPX;
	END;
ELSE DO;
	DDX = 0;
	CPX = 0;
	END;
RUN;

/*******************************************
* CREATE SUMMARY DATASET FOR TOTALS REPORT
********************************************/
PROC SQL;
CREATE TABLE SUMS AS
SELECT SUM(BR_TOT) AS BR_TOT
	,SUM(LN_TOT) AS LN_TOT
	,SUM(BOR_RES_TOT) AS BOR_RES_TOT
	,SUM(TOT_PD_2_LDR_TOT) AS TOT_PD_2_LDR_TOT
	,SUM(DD_COUNT)/SUM(SER_BR_COUNT) AS DD_COUNT
	,SUM(CP_COUNT)/SUM(SER_BR_COUNT) AS CP_COUNT
FROM (
	SELECT DISTINCT B.BR_TOT
			,B.LN_TOT
			,B.BOR_RES_TOT
			,B.TOT_PD_2_LDR_TOT
			,C.DD_COUNT
			,C.CP_COUNT
			,C.SER_BR_COUNT
	FROM LNDR_DAT A
	INNER JOIN (
		SELECT DISTINCT AF_CUR_LON_SER_AGY
			,SUM(BR_COUNT) AS BR_TOT
			,SUM(LOAN_COUNT) AS LN_TOT
			,SUM(BOR_RES) AS BOR_RES_TOT
			,SUM(TOT_PD_2_LDR) AS TOT_PD_2_LDR_TOT
		FROM LNDR_DAT
		GROUP BY AF_CUR_LON_SER_AGY
		) B
		ON B.AF_CUR_LON_SER_AGY = A.AF_CUR_LON_SER_AGY
	INNER JOIN (
		SELECT DISTINCT AF_CUR_LON_SER_AGY
			,DD_COUNT
			,CP_COUNT
			,SER_BR_COUNT
		FROM LNDR_DAT
		) C 
		ON A.AF_CUR_LON_SER_AGY = C.AF_CUR_LON_SER_AGY
	)
;
QUIT;
/*GET UNIQUE BORROWER COUNT*/
PROC SQL NOPRINT ;
SELECT COUNT(DISTINCT BF_SSN) FORMAT=COMMA6. AS UBC
INTO : UNQBRCT
FROM MCPTBLID
;
QUIT;

PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 DATE CENTER NOBYLINE;
TITLE 'MONTHLY CLAIM PAID TOTALS BY LENDER';
TITLE2 "&EFFDATE";
FOOTNOTE 'JOB = UTLWQ22  	 REPORT = ULWQ22.LWQ22R2';
PROC CONTENTS DATA=LNDR_DAT OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 127*'-';
	PUT      ////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWQ22  	 REPORT = ULWQ22.LWQ22R2";
	END;
RETURN;
RUN;
PROC REPORT DATA=LNDR_DAT NOWD SPLIT='/' HEADSKIP SPACING=2;
COLUMN AF_CUR_LON_SER_AGY SERV_NM AF_CUR_LON_OPS_LDR  LC_PCL_REA BR_COUNT LOAN_COUNT BOR_RES
	TOT_PD_2_LDR ;
DEFINE AF_CUR_LON_SER_AGY / GROUP "SERVICER CODE" FORMAT=$8. ;
DEFINE SERV_NM / GROUP 'SERVICER NAME' WIDTH=10;
DEFINE AF_CUR_LON_OPS_LDR / GROUP "LENDER CODE" FORMAT=$8.;
DEFINE LC_PCL_REA / GROUP "CLAIM TYPE" FORMAT=$19.;
DEFINE BR_COUNT / ANALYSIS "TOTAL # OF BORROWERS" FORMAT=COMMA6. WIDTH=12;
DEFINE LOAN_COUNT / ANALYSIS "TOTAL # OF LOANS" FORMAT=COMMA6. WIDTH=9;
DEFINE BOR_RES / ANALYSIS "BORROWER RESPONSIBILITY" FORMAT=DOLLAR16.2 WIDTH=16;
DEFINE TOT_PD_2_LDR / ANALYSIS "TOTAL PAID TO LENDER" FORMAT=DOLLAR16.2 WIDTH=16;
BREAK AFTER AF_CUR_LON_SER_AGY / SUPPRESS SUMMARIZE OL SKIP PAGE;
RUN;
/*CLAIM TYPE BY SERVICER SECTION OF THE REPORT*/
TITLE3 'CLAIM TYPE BY SERVICER';
PROC REPORT DATA=SERV_DAT NOWD SPLIT='/' HEADSKIP SPACING=2;
COLUMN AF_CUR_LON_SER_AGY SERV_NM LC_PCL_REA BR_COUNT LOAN_COUNT CP_COUNT DD_COUNT BOR_RES 
TOT_PD_2_LDR DDX CPX;
DEFINE AF_CUR_LON_SER_AGY / GROUP "SERVICER CODE" FORMAT=$8. ;
DEFINE SERV_NM / GROUP 'SERVICER NAME' WIDTH=10;
DEFINE LC_PCL_REA / GROUP "CLAIM TYPE" WIDTH=10 ;
DEFINE BR_COUNT / ANALYSIS "TOTAL # OF BORROWERS" FORMAT=COMMA6. WIDTH=12;
DEFINE LOAN_COUNT / ANALYSIS "TOTAL # OF LOANS" FORMAT=COMMA6. WIDTH=9;
DEFINE CP_COUNT / ANALYSIS "% SKIP AT/CLAIM PAID" WIDTH=10 FORMAT=PERCENT10.;
DEFINE DD_COUNT/ ANALYSIS "% SKIP DURING/DELINQUENCY" WIDTH=13 FORMAT=PERCENT10. ;
DEFINE BOR_RES / ANALYSIS "BORROWER RESPONSIBILITY" FORMAT=DOLLAR16.2 WIDTH=16;
DEFINE TOT_PD_2_LDR / ANALYSIS "TOTAL PAID TO LENDER" FORMAT=DOLLAR16.2 WIDTH=16;
DEFINE DDX / ANALYSIS NOPRINT;
DEFINE CPX / ANALYSIS NOPRINT;
BREAK AFTER AF_CUR_LON_SER_AGY / SUPPRESS /*SUMMARIZE*/ OL SKIP /*PAGE*/;
COMPUTE AFTER AF_CUR_LON_SER_AGY;
/*	LINE @38 12*'-' @52 9*'-' @62 11*'-' @75 13*'-' @90 16*'-' @108 16*'-';*/
LINE @44 BR_COUNT.SUM COMMA6. @55 LOAN_COUNT.SUM COMMA6. @63 CPX.SUM PERCENT10.
		 @78 DDX.SUM PERCENT10. @92 BOR_RES.SUM DOLLAR14.2 @110 TOT_PD_2_LDR.SUM DOLLAR14.2;
ENDCOMP;
RUN;

/*CREATE SUMMARY REPORT*/
PROC PRINTTO PRINT=REPORT2;
RUN;
TITLE3;
DATA _NULL_;
SET SUMS;
FILE PRINT;
IF _N_ =1 THEN DO;
	PUT / @58 'GRAND TOTALS';
	PUT //
		/ @ 45 'TOTAL NUMBER OF BORROWERS:                         ' BR_TOT COMMA6. 
		/ @ 45 'UNDUPLICATED NUMBER OF BORROWERS:                  ' "&UNQBRCT"
		/ @ 45 'TOTAL NUMBER OF LOANS:                             ' LN_TOT COMMA6. 
		/ @ 45 'TOTAL BORROWER RESPONSABILITY:           ' BOR_RES_TOT DOLLAR16.2
		/ @ 45 'TOTAL AMOUNT PAID TO LENDER:             ' TOT_PD_2_LDR_TOT DOLLAR16.2
		/ @ 45 'TOTAL % OF BORROWERS IN SKIP AT CLAIM PAYMENT:  ' CP_COUNT PERCENT10.
		/ @ 45 'TOTAL % OF BORROWERS IN SKIP DURING DELINQUENCY:' DD_COUNT PERCENT10.;
	PUT ////////////////////////
		@46 "JOB = UTLWQ22  	 REPORT = ULWQ22.LWQ22R2";
	END;
RUN;

PROC PRINTTO;
RUN;

/*DETAIL FILE*/
PROC EXPORT DATA=MCPTBLID2X
            OUTFILE= "T:\SAS\UTLWQ22_DETAIL.xls" 
            DBMS=EXCEL2000 REPLACE;
RUN;

/*IDENTIFY POTENTIAL DUPLICATE SSNS - USE FOR TESTING ONLY*/
/*PROC SQL;*/
/*CREATE TABLE DUPS AS */
/*SELECT DISTINCT A.**/
/*FROM MCPTBLID2X A*/
/*INNER JOIN MCPTBLID2X B*/
/*	ON A.BF_SSN = B.BF_SSN*/
/*WHERE A.AF_CUR_LON_SER_AGY <> B.AF_CUR_LON_SER_AGY*/
/*OR */
/*A.AF_CUR_LON_OPS_LDR <> B.AF_CUR_LON_OPS_LDR*/
/*OR */
/*A.LC_PCL_REA <> B.LC_PCL_REA*/
/*ORDER BY A.BF_SSN, A.AF_CUR_LON_OPS_LDR*/
/*;*/
/*QUIT;*/
