/*CORNERSTONE PORTION*/

SELECT
	WQ20.BF_SSN +
	'F' + --'F' for cornerstone
	WQ20.WF_QUE + WQ20.WF_SUB_QUE + --Queue/subqueue
	LEFT(RTRIM(PD10.DM_PRS_1) + ' ' + RTRIM(PD10.DM_PRS_LST) + SPACE(34),35) + --Name 35 characters max
	CASE WHEN DATEDIFF(DAY,AY10.LD_ATY_REQ_RCV,'1900-01-01') != 0 THEN CONVERT(VARCHAR,AY10.LD_ATY_REQ_RCV,112) ELSE '00000000' END + --Requested
	CASE WHEN DATEDIFF(DAY,AY10.LD_REQ_RSP_ATY_PRF,'1900-01-01') != 0 THEN CONVERT(VARCHAR,AY10.LD_REQ_RSP_ATY_PRF,112) ELSE '00000000' END + --Required
	CASE WHEN DATEDIFF(DAY,DDPHN.LD_ATY_REQ_RCV,'1900-01-01') != 0 THEN CONVERT(VARCHAR,DDPHN.LD_ATY_REQ_RCV,112) ELSE '00000000' END + --Last attempt DDPHN most recent
	CASE WHEN DATEDIFF(DAY,DDPHN.LD_ATY_REQ_RCV_CNTCT,'1900-01-01') != 0 THEN CONVERT(VARCHAR,DDPHN.LD_ATY_REQ_RCV_CNTCT,112) ELSE '00000000' END + --Last contact DDPHN CNTCT most recent
	RIGHT('000' + CAST(CASE WHEN DATEDIFF(DAY, GETDATE(), AY10.LD_REQ_RSP_ATY_PRF) < 0 THEN '000' ELSE DATEDIFF(DAY, GETDATE(), AY10.LD_REQ_RSP_ATY_PRF) END AS VARCHAR(3)),3) + --Activity Complete Days
	CASE WHEN PD40H.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PD40H.DN_DOM_PHN_ARA + PD40H.DN_DOM_PHN_XCH + PD40H.DN_DOM_PHN_LCL AS VARCHAR(10)),'0000000000') ELSE '0000000000' END + --Home phone
	CASE WHEN PD40H.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40H.DC_PHN_SRC,'  ') ELSE '  ' END + --H Source
	CASE WHEN PD40H.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40H.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + --H consent
	SPACE(3) + --Filler
	CASE WHEN PD40A.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PD40A.DN_DOM_PHN_ARA + PD40A.DN_DOM_PHN_XCH + PD40A.DN_DOM_PHN_LCL AS VARCHAR(10)),'0000000000') ELSE '0000000000' END + --Alt phone
	CASE WHEN PD40A.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40A.DC_PHN_SRC,'  ') ELSE '  ' END + --A Source
	CASE WHEN PD40A.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40A.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + --A consent
	SPACE(3) + --Filler
	CASE WHEN PD40W.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PD40W.DN_DOM_PHN_ARA + PD40W.DN_DOM_PHN_XCH + PD40W.DN_DOM_PHN_LCL AS VARCHAR(10)),'0000000000') ELSE '0000000000' END + --Work phone
	CASE WHEN PD40W.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40W.DC_PHN_SRC,'  ') ELSE '  ' END + --W Source
	CASE WHEN PD40W.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40W.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + --W consent
	SPACE(19) + --Filler
	AY10.LF_ATY_RCP + --Recip SSN
	LEFT(RTRIM(PD10Recipient.DM_PRS_1) + ' ' + RTRIM(PD10Recipient.DM_PRS_LST) + SPACE(34),35) + --Recip Name
	CASE WHEN AY10.LC_ATY_RCP = 'B' THEN 'BORROWER  '
		 WHEN AY10.LC_ATY_RCP = 'E' THEN 'ENDORSER  '
		 WHEN AY10.LC_ATY_RCP = 'R' THEN 'REFERENCE '
		 ELSE '          ' END + --Recip Relation
	AY10.LC_ATY_RCP + ' ' + --Recip Relation Code
	CASE WHEN AY10.LC_ATY_RGD_TO = 'B' THEN 'BORROWER  '
		 WHEN AY10.LC_ATY_RGD_TO = 'E' THEN 'ENDORSER  '
		 WHEN AY10.LC_ATY_RGD_TO = 'R' THEN 'REFERENCE '
		 ELSE '          ' END + --Regards to
	AY10.LC_ATY_RGD_TO + ' ' + --Regards to type
	WQ20.BF_SSN + --Regards SSN
	LEFT(RTRIM(PD10.DM_PRS_1) + ' ' + RTRIM(PD10.DM_PRS_LST) + SPACE(34),35) + -- Regards Name
	LEFT(RTRIM(PD30.DX_STR_ADR_1) + SPACE(30),30) + --Addr1
	LEFT(RTRIM(PD30.DX_STR_ADR_2) + SPACE(30),30) + --Addr2
	LEFT(RTRIM(PD30.DM_CT) + SPACE(20),20) + --city
	LEFT(RTRIM(PD30.DC_DOM_ST) + SPACE(2),2) + --state
	LEFT(REPLACE(RTRIM(PD30.DF_ZIP_CDE), '-','') + SPACE(9),9) + --zip
	PD30.DI_VLD_ADR + --Addr Indicator
	RIGHT('00' + CAST(LN85.CountLoans AS VARCHAR(2)),2) + --num loans
	RIGHT('0000' + CAST(LN16.LN_DLQ_MAX AS VARCHAR(4)),4) + --Days Delq
	RIGHT('0000000' + CAST(REPLACE(CAST(CurrentBill.TOT_DUE AS VARCHAR),'.','') AS VARCHAR(7)),7) + --Total due 0010050 = 100.50
	RIGHT('0000000000' + CAST(REPLACE(CAST(LN10_Agg.OutstandingBal AS VARCHAR),'.','') AS VARCHAR(10)),10) + --Outstanding Bal
	CASE WHEN LN90.BF_SSN IS NOT NULL THEN CONVERT(VARCHAR,LN90.LD_FAT_EFF,112) ELSE '00000000' END + --Last paid 
	'00000000' + --Promise Date
	MaxDisburseLoan.IF_DOE_LDR + --Lender Code 
	MaxDisburseLoan.IC_TYP_SCL + --Orig School Type 
	MaxDisburseLoan.IF_DOE_SCL + --Orig School Code 
	LEFT(RTRIM(MaxDisburseLoan.IM_SCL_SHO) + SPACE(20),20) + --Current school name
	MaxDisburseLoan.IF_GTR + --Gurantor Code 
	CASE WHEN DATEDIFF(DAY,PD10.DD_BRT,'1900-01-01') != 0 THEN CONVERT(VARCHAR,PD10.DD_BRT,112) ELSE '00000000' END + --DOB
	'N' + --Third party indicator
	LEFT(PD10.DM_PRS_LST,2) + --Last Name Sort 
	' ' + --Previous Claim submission
	PD10.DF_SPE_ACC_ID +--Pheaa account ID
	'R' + --Call required or optional
	' ' + --Rolling Delq code
	'  ' + --Phone call request number
	' ' + --Requested Call Type Code
	SD10.LC_REA_SCL_SPR + --Sep reason
	CASE WHEN RecentForbDefer.BF_SSN IS NOT NULL THEN CONVERT(VARCHAR,RecentForbDefer.EndDate,112) ELSE '00000000' END +--most recent Forb/Defer End Date 
	CASE WHEN HardForb.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N' END + -- hardship forb indicator
	CASE WHEN PD32.DF_PRS_ID IS NOT NULL THEN 'Y' ELSE 'N' END + --Valid Email
	CASE WHEN LN83.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N' END + --Direct Debit Indicator
	SPACE(125) --Filler
FROM
	NobleCalls..NobleCallHistory NCH
	INNER JOIN CDW..PD10_PRS_NME PD10Call
		ON PD10Call.DF_SPE_ACC_ID = NCH.AccountIdentifier
	INNER JOIN
	(
		SELECT DISTINCT
			COALESCE(LN20.BF_SSN,'') AS EndorserBorrowerSSN,
			COALESCE(LN20.LF_EDS,'') AS EndorserSSN,
			COALESCE(LN10.BF_SSN,'') AS BorrowerSSN,
			PD10.DF_SPE_ACC_ID
		FROM
			CDW..PD10_PRS_NME PD10
			LEFT JOIN CDW..LN10_LON LN10
				ON PD10.DF_PRS_ID = LN10.BF_SSN
				AND LN10.LC_STA_LON10 = 'R'
				AND LN10.LA_CUR_PRI > 0.00
			LEFT JOIN CDW..LN20_EDS LN20
				ON PD10.DF_PRS_ID = LN20.LF_EDS
				AND LN20.LC_STA_LON20 = 'A'
	) BorrowerEndorser
		ON PD10Call.DF_SPE_ACC_ID = BorrowerEndorser.DF_SPE_ACC_ID 
	INNER JOIN CDW..WQ20_TSK_QUE WQ20
		ON 
		(
			WQ20.BF_SSN = BorrowerEndorser.BorrowerSSN 
			OR WQ20.BF_SSN = BorrowerEndorser.EndorserSSN 
			OR WQ20.BF_SSN = BorrowerEndorser.EndorserBorrowerSSN 
		)
		AND WQ20.WF_QUE IN('C0','C1','C2','C3','C4','C5','C6','C7','C8','C9')
		AND WQ20.WC_STA_WQUE20 NOT IN ('X','C') --Open only
	INNER JOIN CDW..PD10_PRS_NME PD10
		ON PD10.DF_PRS_ID = WQ20.BF_SSN
	--TODO: if we need date for the earliest task only, need to get that from Min ay10 where arc = csv30 and response is null
	INNER JOIN CDW..AY10_BR_LON_ATY AY10 
		ON AY10.BF_SSN = WQ20.BF_SSN
		AND AY10.LN_ATY_SEQ = WQ20.LN_ATY_SEQ
	INNER JOIN 
	(
		SELECT DISTINCT
			BF_SSN,
			LN_ATY_SEQ,
			COUNT(DISTINCT LN_SEQ) AS CountLoans
		FROM
			CDW..LN85_LON_ATY
		GROUP BY
			BF_SSN,
			LN_ATY_SEQ
	) LN85
		ON LN85.BF_SSN = AY10.BF_SSN
		AND LN85.LN_ATY_SEQ = AY10.LN_ATY_SEQ
	INNER JOIN
	(
		SELECT DISTINCT
			LN10.BF_SSN,
			SUM(COALESCE(LN10.LA_CUR_PRI,0.00) + COALESCE(DW01.WA_TOT_BRI_OTS,0.00)) AS OutstandingBal
		FROM
			CDW..LN10_LON LN10
			INNER JOIN CDW..DW01_DW_CLC_CLU DW01
				ON DW01.BF_SSN = LN10.BF_SSN
				AND DW01.LN_SEQ = LN10.LN_SEQ
		WHERE
			LC_STA_LON10 IN('R','L')
			AND LA_CUR_PRI > 0.00
		GROUP BY
			LN10.BF_SSN
	) LN10_Agg
		ON LN10_Agg.BF_SSN = WQ20.BF_SSN
	INNER JOIN
	(
		SELECT
			LN10.BF_SSN,
			LN10.IF_DOE_LDR,
			MaxSC10.IF_DOE_SCL,
			MaxSC10.IC_TYP_SCL,
			MaxSC10.IM_SCL_SHO,
			LN10.IF_GTR 
		FROM
			CDW..LN10_LON LN10
			INNER JOIN
			(
				SELECT
					LN10.BF_SSN,
					MAX(LN10.LD_LON_1_DSB) AS MaxDisburse
				FROM
					CDW..LN10_LON LN10
				WHERE
					LN10.LC_STA_LON10 = 'R'
					AND LN10.LA_CUR_PRI > 0
					AND LN10.LD_LON_1_DSB <= CAST(GETDATE() AS DATE) 
				GROUP BY
					LN10.BF_SSN
			) MaxDate
				ON MaxDate.BF_SSN = LN10.BF_SSN
				AND MaxDate.MaxDisburse = LN10.LD_LON_1_DSB
			INNER JOIN
			(
				SELECT
					SC10.IF_DOE_SCL,
					SC10.IC_TYP_SCL,
					SC10.IM_SCL_SHO
				FROM
					CDW..SC10_SCH_DMO SC10
			) MaxSC10
				ON MaxSC10.IF_DOE_SCL = LN10.LF_DOE_SCL_ORG
	) MaxDisburseLoan
		ON MaxDisburseLoan.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			SD10.LF_STU_SSN,
			SD10.LC_REA_SCL_SPR
		FROM
			CDW..SD10_STU_SPR SD10
			INNER JOIN
			(
				SELECT
					SD10.LF_STU_SSN,
					MAX(SD10.LD_SCL_SPR) AS LD_SCL_SPR
				FROM
					CDW..SD10_STU_SPR SD10
				GROUP BY
					SD10.LF_STU_SSN
			) SD10Max
				ON SD10Max.LF_STU_SSN = SD10.LF_STU_SSN
				AND SD10Max.LD_SCL_SPR = SD10.LD_SCL_SPR
	) SD10
		ON SD10.LF_STU_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT
			LN90.BF_SSN,
			MAX(LN90.LD_FAT_EFF) AS LD_FAT_EFF
		FROM
			CDW..LN90_FIN_ATY LN90
		WHERE
			LN90.PC_FAT_TYP = '10'
			AND LN90.PC_FAT_SUB_TYP = '10'
			AND LN90.LC_STA_LON90 = 'A'
			AND COALESCE(LN90.LC_FAT_REV_REA,'') = '' 
		GROUP BY
			LN90.BF_SSN
	) LN90 
		ON LN90.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			LN10.BF_SSN,
			SUM(COALESCE(
				CASE WHEN CUR.CUR_DUE < 0 THEN 0 
					 ELSE CUR.CUR_DUE
				END,0) 
				+ COALESCE(
				CASE WHEN PST.PAST_DUE < 0 THEN 0 
					 ELSE PST.PAST_DUE
				END,0)
			) AS TOT_DUE
		FROM 
			UDW..LN10_LON LN10
			INNER JOIN UDW..PD10_PRS_NME PD10
				ON PD10.DF_PRS_ID = LN10.BF_SSN
			LEFT JOIN 
			(
				SELECT
					LN80.BF_SSN,
					LN80.LN_SEQ,
					CASE WHEN SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) < 0 THEN 0 
						 ELSE SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) 
					END AS CUR_DUE
				FROM 
					UDW..LN80_LON_BIL_CRF LN80
					INNER JOIN 
					(
						SELECT
							LN80.BF_SSN,
							LN80.LN_SEQ,
							MIN(LN80.LD_BIL_DU_LON) AS LD_BIL_DU_LON
						FROM 
							UDW..LN80_LON_BIL_CRF LN80
							INNER JOIN UDW..PD10_PRS_NME PD10
								ON PD10.DF_PRS_ID = LN80.BF_SSN
							INNER JOIN UDW..LN10_LON LN10
								ON LN10.BF_SSN = LN80.BF_SSN
								AND LN10.LN_SEQ = LN80.LN_SEQ
						WHERE 
							LN80.LC_STA_LON80 = 'A'
							AND LN80.LC_LON_STA_BIL = '1'
							AND CAST(LN80.LD_BIL_DU_LON AS DATE) >= CAST(GETDATE() AS DATE)
							AND LN10.LC_STA_LON10 IN ('R','L')
							AND LN10.LA_CUR_PRI > 0
						GROUP BY 
							LN80.BF_SSN,
							LN80.LN_SEQ
					) MIN_DTE
						ON LN80.BF_SSN = MIN_DTE.BF_SSN
							AND LN80.LN_SEQ = MIN_DTE.LN_SEQ
							AND LN80.LD_BIL_DU_LON = MIN_DTE.LD_BIL_DU_LON
				WHERE 
					LN80.LC_STA_LON80 = 'A'
					AND LN80.LC_LON_STA_BIL = '1'
				GROUP BY 
					LN80.BF_SSN,
					LN80.LN_SEQ
			) CUR
				ON LN10.BF_SSN = CUR.BF_SSN
				AND LN10.LN_SEQ = CUR.LN_SEQ
			LEFT JOIN /*GETS THE CURRENT BILL INFORMATION*/
			(
				SELECT
					LN80.BF_SSN,
					LN80.LN_SEQ,
					SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) AS PAST_DUE,
					SUM(COALESCE(LN80.LA_BIL_CUR_DU,0)) AS LA_BIL_CUR_DU,
					SUM(COALESCE(LN80.LA_TOT_BIL_STS,0)) AS LA_TOT_BIL_STS
				FROM 
					UDW..LN80_LON_BIL_CRF LN80
					INNER JOIN UDW..LN10_LON LN10
						ON LN10.BF_SSN = LN80.BF_SSN
						AND LN10.LN_SEQ = LN80.LN_SEQ
				WHERE 
					LN80.LC_STA_LON80 = 'A'
					AND LN80.LC_LON_STA_BIL = '1'
					AND CAST(LN80.LD_BIL_DU_LON AS DATE) < CAST(GETDATE() AS DATE)
					AND LN10.LC_STA_LON10 IN ('R','L')
					AND LN10.LA_CUR_PRI > 0
				GROUP BY 
					LN80.BF_SSN,
					LN80.LN_SEQ
			) PST
				ON LN10.BF_SSN = PST.BF_SSN
				AND LN10.LN_SEQ = PST.LN_SEQ
		WHERE
			LN10.LC_STA_LON10 IN ('R','L')
			AND LN10.LA_CUR_PRI > 0
		GROUP BY 
			LN10.BF_SSN
	) CurrentBill
		ON CurrentBill.BF_SSN = WQ20.BF_SSN
	LEFT JOIN 
	(
		SELECT
			BF_SSN,
			MAX(LD_ATY_REQ_RCV) OVER(PARTITION BY BF_SSN) AS LD_ATY_REQ_RCV,
			MAX(CASE WHEN PF_RSP_ACT = 'CNTCT' THEN LD_ATY_REQ_RCV ELSE NULL END) OVER(PARTITION BY BF_SSN) AS LD_ATY_REQ_RCV_CNTCT
		FROM
			CDW..AY10_BR_LON_ATY
		WHERE
			PF_REQ_ACT = 'DDPHN'
	) DDPHN 
		ON DDPHN.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT 
			LN16.BF_SSN,
			MAX(LN_DLQ_MAX+1) AS LN_DLQ_MAX
		FROM
			CDW..LN16_LON_DLQ_HST LN16
		WHERE
			LC_STA_LON16 = '1'
			AND DATEADD(DAY,-5,CAST(GETDATE() AS DATE)) <= LN16.LD_DLQ_MAX --Account for AES holidays that we dont honor
		GROUP BY
			LN16.BF_SSN
	) LN16
		ON LN16.BF_SSN = WQ20.BF_SSN
	LEFT JOIN CDW..PD40_PRS_PHN PD40H 
		ON PD40H.DF_PRS_ID = WQ20.BF_SSN
		AND PD40H.DC_PHN = 'H'
	LEFT JOIN CDW..PD40_PRS_PHN PD40A 
		ON PD40A.DF_PRS_ID = WQ20.BF_SSN
		AND PD40A.DC_PHN = 'A'
	LEFT JOIN CDW..PD40_PRS_PHN PD40W 
		ON PD40W.DF_PRS_ID = WQ20.BF_SSN
		AND PD40W.DC_PHN = 'W'
	LEFT JOIN CDW..PD30_PRS_ADR PD30
		ON PD30.DF_PRS_ID = WQ20.BF_SSN
		AND PD30.DC_ADR = 'L'
	LEFT JOIN
	(
		SELECT
			EMAIL.DF_PRS_ID,
			EMAIL.DX_ADR_EML,
			ROW_NUMBER() OVER (PARTITION BY Email.DF_PRS_ID ORDER BY Email.PriorityNumber) AS EmailPriority -- number in order of Email.PriorityNumber
		FROM
		(
			SELECT
				PD32.DF_PRS_ID,
				PD32.DX_ADR_EML,
				CASE 
					WHEN DC_ADR_EML = 'H' THEN 1 -- home
					WHEN DC_ADR_EML = 'A' THEN 2 -- alternate
					WHEN DC_ADR_EML = 'W' THEN 3 -- work
				END AS PriorityNumber
			FROM
				CDW..PD32_PRS_ADR_EML PD32
				INNER JOIN CDW..LN10_LON LN10
					ON LN10.BF_SSN = PD32.DF_PRS_ID
			WHERE
				PD32.DI_VLD_ADR_EML = 'Y' -- valid email address
				AND PD32.DC_STA_PD32 = 'A'-- active email address record
		) Email
	) PD32 
		ON PD32.DF_PRS_ID = WQ20.BF_SSN
		AND PD32.EmailPriority = 1 --highest priority email only
	LEFT JOIN
	(
		SELECT DISTINCT
			BF_SSN
		FROM
			CDW..LN83_EFT_TO_LON
		WHERE
			LC_STA_LN83 = 'A'
			AND CAST(GETDATE() AS DATE) BETWEEN LD_EFT_EFF_BEG AND LD_EFT_EFF_END
	) LN83
		ON LN83.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			LN60.BF_SSN
		FROM
			CDW..FB10_BR_FOR_REQ FB10
			INNER JOIN CDW..LN60_BR_FOR_APV LN60
				ON LN60.BF_SSN = FB10.BF_SSN
				AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
		WHERE
			FB10.LC_STA_FOR10 = 'A'
			AND FB10.LC_FOR_STA = 'A'
			AND FB10.LC_FOR_TYP IN ('05','22')
			AND LN60.LC_FOR_RSP != '003' --denied
			AND LN60.LC_STA_LON60 = 'A'
	) HardForb
		ON HardForb.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT
			Data.BF_SSN,
			MAX(EndDate) AS EndDate
		FROM
		(
			SELECT
				LN60.BF_SSN,
				MAX(LN60.LD_FOR_END) AS EndDate
			FROM
				CDW..FB10_BR_FOR_REQ FB10
				INNER JOIN CDW..LN60_BR_FOR_APV LN60
					ON LN60.BF_SSN = FB10.BF_SSN
					AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
			WHERE
				FB10.LC_STA_FOR10 = 'A'
				AND FB10.LC_FOR_STA = 'A'
				AND LN60.LC_FOR_RSP != '003' --denied
				AND LN60.LC_STA_LON60 = 'A'
				AND CAST(LN60.LD_FOR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in forb
			GROUP BY
				LN60.BF_SSN

			UNION ALL

			SELECT
				LN50.BF_SSN,
				MAX(LN50.LD_DFR_END) AS EndDate
			FROM
				CDW..DF10_BR_DFR_REQ DF10
				INNER JOIN CDW..LN50_BR_DFR_APV LN50
					ON LN50.BF_SSN = DF10.BF_SSN
					AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
			WHERE
				DF10.LC_STA_DFR10 = 'A'
				AND DF10.LC_DFR_STA = 'A'
				AND LN50.LC_DFR_RSP != '003' --denied
				AND LN50.LC_STA_LON50 = 'A'
				AND CAST(LN50.LD_DFR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in defer
			GROUP BY
				LN50.BF_SSN

			UNION ALL

			SELECT
				LN50.BF_SSN,
				MAX(LN50.LD_DFR_GRC_END) AS EndDate
			FROM
				CDW..DF10_BR_DFR_REQ DF10
				INNER JOIN CDW..LN50_BR_DFR_APV LN50
					ON LN50.BF_SSN = DF10.BF_SSN
					AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
			WHERE
				DF10.LC_STA_DFR10 = 'A'
				AND DF10.LC_DFR_STA = 'A'
				AND LN50.LC_DFR_RSP != '003' --denied
				AND LN50.LC_STA_LON50 = 'A'
				AND CAST(LN50.LD_DFR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in defer
			GROUP BY
				LN50.BF_SSN
		) Data
		GROUP BY
			Data.BF_SSN
	) RecentForbDefer
		ON RecentForbDefer.BF_SSN = WQ20.BF_SSN
	LEFT JOIN CDW..PD10_PRS_NME PD10Regards
		ON PD10Regards.DF_PRS_ID = AY10.LF_ATY_RGD_TO
	LEFT JOIN CDW..PD10_PRS_NME PD10Recipient
		ON PD10Recipient.DF_PRS_ID = AY10.LF_ATY_RCP
WHERE
	NCH.IsInbound = 0 --outbound only
	AND NCH.RegionId = '3' --Cornerstone
ORDER BY
	NobleCallHistoryId
DESC


/*UHEAA PORTION*/
SELECT
	WQ20.BF_SSN +
	'U' + --'U' for uheaa
	WQ20.WF_QUE + WQ20.WF_SUB_QUE + --Queue/subqueue
	LEFT(RTRIM(PD10.DM_PRS_1) + ' ' + RTRIM(PD10.DM_PRS_LST) + SPACE(34),35) + --Name 35 characters max
	CASE WHEN DATEDIFF(DAY,AY10.LD_ATY_REQ_RCV,'1900-01-01') != 0 THEN CONVERT(VARCHAR,AY10.LD_ATY_REQ_RCV,112) ELSE '00000000' END + --Requested
	CASE WHEN DATEDIFF(DAY,AY10.LD_REQ_RSP_ATY_PRF,'1900-01-01') != 0 THEN CONVERT(VARCHAR,AY10.LD_REQ_RSP_ATY_PRF,112) ELSE '00000000' END + --Required
	CASE WHEN DATEDIFF(DAY,DDPHN.LD_ATY_REQ_RCV,'1900-01-01') != 0 THEN CONVERT(VARCHAR,DDPHN.LD_ATY_REQ_RCV,112) ELSE '00000000' END + --Last attempt DDPHN most recent
	CASE WHEN DATEDIFF(DAY,DDPHN.LD_ATY_REQ_RCV_CNTCT,'1900-01-01') != 0 THEN CONVERT(VARCHAR,DDPHN.LD_ATY_REQ_RCV_CNTCT,112) ELSE '00000000' END + --Last contact DDPHN CNTCT most recent
	RIGHT('000' + CAST(CASE WHEN DATEDIFF(DAY, GETDATE(), AY10.LD_REQ_RSP_ATY_PRF) < 0 THEN '000' ELSE DATEDIFF(DAY, GETDATE(), AY10.LD_REQ_RSP_ATY_PRF) END AS VARCHAR(3)),3) + --Activity Complete Days
	CASE WHEN PD40H.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PD40H.DN_DOM_PHN_ARA + PD40H.DN_DOM_PHN_XCH + PD40H.DN_DOM_PHN_LCL AS VARCHAR(10)),'0000000000') ELSE '0000000000' END + --Home phone
	CASE WHEN PD40H.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40H.DC_PHN_SRC,'  ') ELSE '  ' END + --H Source
	CASE WHEN PD40H.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40H.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + --H consent
	SPACE(3) + --Filler
	CASE WHEN PD40A.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PD40A.DN_DOM_PHN_ARA + PD40A.DN_DOM_PHN_XCH + PD40A.DN_DOM_PHN_LCL AS VARCHAR(10)),'0000000000') ELSE '0000000000' END + --Alt phone
	CASE WHEN PD40A.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40A.DC_PHN_SRC,'  ') ELSE '  ' END + --A Source
	CASE WHEN PD40A.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40A.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + --A consent
	SPACE(3) + --Filler
	CASE WHEN PD40W.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PD40W.DN_DOM_PHN_ARA + PD40W.DN_DOM_PHN_XCH + PD40W.DN_DOM_PHN_LCL AS VARCHAR(10)),'0000000000') ELSE '0000000000' END + --Work phone
	CASE WHEN PD40W.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40W.DC_PHN_SRC,'  ') ELSE '  ' END + --W Source
	CASE WHEN PD40W.DF_PRS_ID IS NOT NULL THEN COALESCE(PD40W.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + --W consent
	SPACE(19) + --Filler
	AY10.LF_ATY_RCP + --Recip SSN
	LEFT(RTRIM(PD10Recipient.DM_PRS_1) + ' ' + RTRIM(PD10Recipient.DM_PRS_LST) + SPACE(34),35) + --Recip Name
	CASE WHEN AY10.LC_ATY_RCP = 'B' THEN 'BORROWER  '
		 WHEN AY10.LC_ATY_RCP = 'E' THEN 'ENDORSER  '
		 WHEN AY10.LC_ATY_RCP = 'R' THEN 'REFERENCE '
		 ELSE '          ' END + --Recip Relation
	AY10.LC_ATY_RCP + ' ' + --Recip Relation Code
	CASE WHEN AY10.LC_ATY_RGD_TO = 'B' THEN 'BORROWER  '
		 WHEN AY10.LC_ATY_RGD_TO = 'E' THEN 'ENDORSER  '
		 WHEN AY10.LC_ATY_RGD_TO = 'R' THEN 'REFERENCE '
		 ELSE '          ' END + --Regards to
	AY10.LC_ATY_RGD_TO + ' ' + --Regards to type
	WQ20.BF_SSN + --Regards SSN
	LEFT(RTRIM(PD10.DM_PRS_1) + ' ' + RTRIM(PD10.DM_PRS_LST) + SPACE(34),35) + -- Regards Name
	LEFT(RTRIM(PD30.DX_STR_ADR_1) + SPACE(30),30) + --Addr1
	LEFT(RTRIM(PD30.DX_STR_ADR_2) + SPACE(30),30) + --Addr2
	LEFT(RTRIM(PD30.DM_CT) + SPACE(20),20) + --city
	LEFT(RTRIM(PD30.DC_DOM_ST) + SPACE(2),2) + --state
	LEFT(REPLACE(RTRIM(PD30.DF_ZIP_CDE), '-','') + SPACE(9),9) + --zip
	PD30.DI_VLD_ADR + --Addr Indicator
	RIGHT('00' + CAST(LN85.CountLoans AS VARCHAR(2)),2) + --num loans
	RIGHT('0000' + CAST(LN16.LN_DLQ_MAX AS VARCHAR(4)),4) + --Days Delq
	RIGHT('0000000' + CAST(REPLACE(CAST(CurrentBill.TOT_DUE AS VARCHAR),'.','') AS VARCHAR(7)),7) + --Total due 0010050 = 100.50
	RIGHT('0000000000' + CAST(REPLACE(CAST(LN10_Agg.OutstandingBal AS VARCHAR),'.','') AS VARCHAR(10)),10) + --Outstanding Bal
	CASE WHEN LN90.BF_SSN IS NOT NULL THEN CONVERT(VARCHAR,LN90.LD_FAT_EFF,112) ELSE '00000000' END + --Last paid 
	'00000000' + --Promise Date
	MaxDisburseLoan.IF_DOE_LDR + --Lender Code 
	MaxDisburseLoan.IC_TYP_SCL + --Orig School Type 
	MaxDisburseLoan.IF_DOE_SCL + --Orig School Code 
	LEFT(RTRIM(MaxDisburseLoan.IM_SCL_SHO) + SPACE(20),20) + --Current school name
	MaxDisburseLoan.IF_GTR + --Gurantor Code 
	CASE WHEN DATEDIFF(DAY,PD10.DD_BRT,'1900-01-01') != 0 THEN CONVERT(VARCHAR,PD10.DD_BRT,112) ELSE '00000000' END + --DOB
	'N' + --Third party indicator
	LEFT(PD10.DM_PRS_LST,2) + --Last Name Sort 
	' ' + --Previous Claim submission
	PD10.DF_SPE_ACC_ID +--Pheaa account ID
	'R' + --Call required or optional
	' ' + --Rolling Delq code
	'  ' + --Phone call request number
	' ' + --Requested Call Type Code
	SD10.LC_REA_SCL_SPR + --Sep reason
	CASE WHEN RecentForbDefer.BF_SSN IS NOT NULL THEN CONVERT(VARCHAR,RecentForbDefer.EndDate,112) ELSE '00000000' END +--most recent Forb/Defer End Date 
	CASE WHEN HardForb.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N' END + -- hardship forb indicator
	CASE WHEN PD32.DF_PRS_ID IS NOT NULL THEN 'Y' ELSE 'N' END + --Valid Email
	CASE WHEN LN83.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N' END + --Direct Debit Indicator
	SPACE(125) --Filler
FROM
	NobleCalls..NobleCallHistory NCH
	INNER JOIN UDW..PD10_PRS_NME PD10Call
		ON PD10Call.DF_SPE_ACC_ID = NCH.AccountIdentifier
	INNER JOIN
	(
		SELECT DISTINCT
			COALESCE(LN20.BF_SSN,'') AS EndorserBorrowerSSN,
			COALESCE(LN20.LF_EDS,'') AS EndorserSSN,
			COALESCE(LN10.BF_SSN,'') AS BorrowerSSN,
			PD10.DF_SPE_ACC_ID
		FROM
			UDW..PD10_PRS_NME PD10
			LEFT JOIN UDW..LN10_LON LN10
				ON PD10.DF_PRS_ID = LN10.BF_SSN
				AND LN10.LC_STA_LON10 = 'R'
				AND LN10.LA_CUR_PRI > 0.00
			LEFT JOIN UDW..LN20_EDS LN20
				ON PD10.DF_PRS_ID = LN20.LF_EDS
				AND LN20.LC_STA_LON20 = 'A'
	) BorrowerEndorser
		ON PD10Call.DF_SPE_ACC_ID = BorrowerEndorser.DF_SPE_ACC_ID 
	INNER JOIN UDW..WQ20_TSK_QUE WQ20
		ON 
		(
			WQ20.BF_SSN = BorrowerEndorser.BorrowerSSN 
			OR WQ20.BF_SSN = BorrowerEndorser.EndorserSSN 
			OR WQ20.BF_SSN = BorrowerEndorser.EndorserBorrowerSSN 
		)
		AND WQ20.WF_QUE IN('C0','C1','C2','C3','C4','C5','C6','C7','C8','C9')
		AND WQ20.WC_STA_WQUE20 NOT IN ('X','C') --Open only
	INNER JOIN UDW..PD10_PRS_NME PD10
		ON PD10.DF_PRS_ID = WQ20.BF_SSN
	--TODO: if we need date for the earliest task only, need to get that from Min ay10 where arc = csv30 and response is null
	INNER JOIN UDW..AY10_BR_LON_ATY AY10 
		ON AY10.BF_SSN = WQ20.BF_SSN
		AND AY10.LN_ATY_SEQ = WQ20.LN_ATY_SEQ
	INNER JOIN 
	(
		SELECT DISTINCT
			BF_SSN,
			LN_ATY_SEQ,
			COUNT(DISTINCT LN_SEQ) AS CountLoans
		FROM
			UDW..LN85_LON_ATY
		GROUP BY
			BF_SSN,
			LN_ATY_SEQ
	) LN85
		ON LN85.BF_SSN = AY10.BF_SSN
		AND LN85.LN_ATY_SEQ = AY10.LN_ATY_SEQ
	INNER JOIN
	(
		SELECT DISTINCT
			LN10.BF_SSN,
			SUM(COALESCE(LN10.LA_CUR_PRI,0.00) + COALESCE(DW01.WA_TOT_BRI_OTS,0.00)) AS OutstandingBal
		FROM
			UDW..LN10_LON LN10
			INNER JOIN UDW..DW01_DW_CLC_CLU DW01
				ON DW01.BF_SSN = LN10.BF_SSN
				AND DW01.LN_SEQ = LN10.LN_SEQ
		WHERE
			LC_STA_LON10 IN('R','L')
			AND LA_CUR_PRI > 0.00
		GROUP BY
			LN10.BF_SSN
	) LN10_Agg
		ON LN10_Agg.BF_SSN = WQ20.BF_SSN
	INNER JOIN
	(
		SELECT
			LN10.BF_SSN,
			LN10.IF_DOE_LDR,
			MaxSC10.IF_DOE_SCL,
			MaxSC10.IC_TYP_SCL,
			MaxSC10.IM_SCL_SHO,
			LN10.IF_GTR 
		FROM
			UDW..LN10_LON LN10
			INNER JOIN
			(
				SELECT
					LN10.BF_SSN,
					MAX(LN10.LD_LON_1_DSB) AS MaxDisburse
				FROM
					UDW..LN10_LON LN10
				WHERE
					LN10.LC_STA_LON10 = 'R'
					AND LN10.LA_CUR_PRI > 0
					AND LN10.LD_LON_1_DSB <= CAST(GETDATE() AS DATE) 
				GROUP BY
					LN10.BF_SSN
			) MaxDate
				ON MaxDate.BF_SSN = LN10.BF_SSN
				AND MaxDate.MaxDisburse = LN10.LD_LON_1_DSB
			INNER JOIN
			(
				SELECT
					SC10.IF_DOE_SCL,
					SC10.IC_TYP_SCL,
					SC10.IM_SCL_SHO
				FROM
					UDW..SC10_SCH_DMO SC10
			) MaxSC10
				ON MaxSC10.IF_DOE_SCL = LN10.LF_DOE_SCL_ORG
	) MaxDisburseLoan
		ON MaxDisburseLoan.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			SD10.LF_STU_SSN,
			SD10.LC_REA_SCL_SPR
		FROM
			UDW..SD10_STU_SPR SD10
			INNER JOIN
			(
				SELECT
					SD10.LF_STU_SSN,
					MAX(SD10.LD_SCL_SPR) AS LD_SCL_SPR
				FROM
					UDW..SD10_STU_SPR SD10
				GROUP BY
					SD10.LF_STU_SSN
			) SD10Max
				ON SD10Max.LF_STU_SSN = SD10.LF_STU_SSN
				AND SD10Max.LD_SCL_SPR = SD10.LD_SCL_SPR
	) SD10
		ON SD10.LF_STU_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT
			LN90.BF_SSN,
			MAX(LN90.LD_FAT_EFF) AS LD_FAT_EFF
		FROM
			UDW..LN90_FIN_ATY LN90
		WHERE
			LN90.PC_FAT_TYP = '10'
			AND LN90.PC_FAT_SUB_TYP = '10'
			AND LN90.LC_STA_LON90 = 'A'
			AND COALESCE(LN90.LC_FAT_REV_REA,'') = '' 
		GROUP BY
			LN90.BF_SSN
	) LN90 
		ON LN90.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			LN10.BF_SSN,
			SUM(COALESCE(
				CASE WHEN CUR.CUR_DUE < 0 THEN 0 
					 ELSE CUR.CUR_DUE
				END,0) 
				+ COALESCE(
				CASE WHEN PST.PAST_DUE < 0 THEN 0 
					 ELSE PST.PAST_DUE
				END,0)
			) AS TOT_DUE
		FROM 
			UDW..LN10_LON LN10
			INNER JOIN UDW..PD10_PRS_NME PD10
				ON PD10.DF_PRS_ID = LN10.BF_SSN
			LEFT JOIN 
			(
				SELECT
					LN80.BF_SSN,
					LN80.LN_SEQ,
					CASE WHEN SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) < 0 THEN 0 
						 ELSE SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) 
					END AS CUR_DUE
				FROM 
					UDW..LN80_LON_BIL_CRF LN80
					INNER JOIN 
					(
						SELECT
							LN80.BF_SSN,
							LN80.LN_SEQ,
							MIN(LN80.LD_BIL_DU_LON) AS LD_BIL_DU_LON
						FROM 
							UDW..LN80_LON_BIL_CRF LN80
							INNER JOIN UDW..PD10_PRS_NME PD10
								ON PD10.DF_PRS_ID = LN80.BF_SSN
							INNER JOIN UDW..LN10_LON LN10
								ON LN10.BF_SSN = LN80.BF_SSN
								AND LN10.LN_SEQ = LN80.LN_SEQ
						WHERE 
							LN80.LC_STA_LON80 = 'A'
							AND LN80.LC_LON_STA_BIL = '1'
							AND CAST(LN80.LD_BIL_DU_LON AS DATE) >= CAST(GETDATE() AS DATE)
							AND LN10.LC_STA_LON10 IN ('R','L')
							AND LN10.LA_CUR_PRI > 0
						GROUP BY 
							LN80.BF_SSN,
							LN80.LN_SEQ
					) MIN_DTE
						ON LN80.BF_SSN = MIN_DTE.BF_SSN
							AND LN80.LN_SEQ = MIN_DTE.LN_SEQ
							AND LN80.LD_BIL_DU_LON = MIN_DTE.LD_BIL_DU_LON
				WHERE 
					LN80.LC_STA_LON80 = 'A'
					AND LN80.LC_LON_STA_BIL = '1'
				GROUP BY 
					LN80.BF_SSN,
					LN80.LN_SEQ
			) CUR
				ON LN10.BF_SSN = CUR.BF_SSN
				AND LN10.LN_SEQ = CUR.LN_SEQ
			LEFT JOIN /*GETS THE CURRENT BILL INFORMATION*/
			(
				SELECT
					LN80.BF_SSN,
					LN80.LN_SEQ,
					SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) AS PAST_DUE,
					SUM(COALESCE(LN80.LA_BIL_CUR_DU,0)) AS LA_BIL_CUR_DU,
					SUM(COALESCE(LN80.LA_TOT_BIL_STS,0)) AS LA_TOT_BIL_STS
				FROM 
					UDW..LN80_LON_BIL_CRF LN80
					INNER JOIN UDW..LN10_LON LN10
						ON LN10.BF_SSN = LN80.BF_SSN
						AND LN10.LN_SEQ = LN80.LN_SEQ
				WHERE 
					LN80.LC_STA_LON80 = 'A'
					AND LN80.LC_LON_STA_BIL = '1'
					AND CAST(LN80.LD_BIL_DU_LON AS DATE) < CAST(GETDATE() AS DATE)
					AND LN10.LC_STA_LON10 IN ('R','L')
					AND LN10.LA_CUR_PRI > 0
				GROUP BY 
					LN80.BF_SSN,
					LN80.LN_SEQ
			) PST
				ON LN10.BF_SSN = PST.BF_SSN
				AND LN10.LN_SEQ = PST.LN_SEQ
		WHERE
			LN10.LC_STA_LON10 IN ('R','L')
			AND LN10.LA_CUR_PRI > 0
		GROUP BY 
			LN10.BF_SSN
	) CurrentBill
		ON CurrentBill.BF_SSN = WQ20.BF_SSN
	LEFT JOIN 
	(
		SELECT
			BF_SSN,
			MAX(LD_ATY_REQ_RCV) OVER(PARTITION BY BF_SSN) AS LD_ATY_REQ_RCV,
			MAX(CASE WHEN PF_RSP_ACT = 'CNTCT' THEN LD_ATY_REQ_RCV ELSE NULL END) OVER(PARTITION BY BF_SSN) AS LD_ATY_REQ_RCV_CNTCT
		FROM
			UDW..AY10_BR_LON_ATY
		WHERE
			PF_REQ_ACT = 'DDPHN'
	) DDPHN 
		ON DDPHN.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT 
			LN16.BF_SSN,
			MAX(LN_DLQ_MAX+1) AS LN_DLQ_MAX
		FROM
			UDW..LN16_LON_DLQ_HST LN16
		WHERE
			LC_STA_LON16 = '1'
			AND DATEADD(DAY,-5,CAST(GETDATE() AS DATE)) <= LN16.LD_DLQ_MAX --Account for AES holidays that we dont honor
		GROUP BY
			LN16.BF_SSN
	) LN16
		ON LN16.BF_SSN = WQ20.BF_SSN
	LEFT JOIN UDW..PD42_PRS_PHN PD40H 
		ON PD40H.DF_PRS_ID = WQ20.BF_SSN
		AND PD40H.DC_PHN = 'H'
	LEFT JOIN UDW..PD42_PRS_PHN PD40A 
		ON PD40A.DF_PRS_ID = WQ20.BF_SSN
		AND PD40A.DC_PHN = 'A'
	LEFT JOIN UDW..PD42_PRS_PHN PD40W 
		ON PD40W.DF_PRS_ID = WQ20.BF_SSN
		AND PD40W.DC_PHN = 'W'
	LEFT JOIN UDW..PD30_PRS_ADR PD30
		ON PD30.DF_PRS_ID = WQ20.BF_SSN
		AND PD30.DC_ADR = 'L'
	LEFT JOIN
	(
		SELECT
			EMAIL.DF_PRS_ID,
			EMAIL.DX_ADR_EML,
			ROW_NUMBER() OVER (PARTITION BY Email.DF_PRS_ID ORDER BY Email.PriorityNumber) AS EmailPriority -- number in order of Email.PriorityNumber
		FROM
		(
			SELECT
				PD32.DF_PRS_ID,
				PD32.DX_ADR_EML,
				CASE 
					WHEN DC_ADR_EML = 'H' THEN 1 -- home
					WHEN DC_ADR_EML = 'A' THEN 2 -- alternate
					WHEN DC_ADR_EML = 'W' THEN 3 -- work
				END AS PriorityNumber
			FROM
				UDW..PD32_PRS_ADR_EML PD32
				INNER JOIN UDW..LN10_LON LN10
					ON LN10.BF_SSN = PD32.DF_PRS_ID
			WHERE
				PD32.DI_VLD_ADR_EML = 'Y' -- valid email address
				AND PD32.DC_STA_PD32 = 'A'-- active email address record
		) Email
	) PD32 
		ON PD32.DF_PRS_ID = WQ20.BF_SSN
		AND PD32.EmailPriority = 1 --highest priority email only
	LEFT JOIN
	(
		SELECT DISTINCT
			BF_SSN
		FROM
			UDW..LN83_EFT_TO_LON
		WHERE
			LC_STA_LN83 = 'A'
			AND CAST(GETDATE() AS DATE) BETWEEN LD_EFT_EFF_BEG AND LD_EFT_EFF_END
	) LN83
		ON LN83.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			LN60.BF_SSN
		FROM
			UDW..FB10_BR_FOR_REQ FB10
			INNER JOIN UDW..LN60_BR_FOR_APV LN60
				ON LN60.BF_SSN = FB10.BF_SSN
				AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
		WHERE
			FB10.LC_STA_FOR10 = 'A'
			AND FB10.LC_FOR_STA = 'A'
			AND FB10.LC_FOR_TYP IN ('05','22')
			AND LN60.LC_FOR_RSP != '003' --denied
			AND LN60.LC_STA_LON60 = 'A'
	) HardForb
		ON HardForb.BF_SSN = WQ20.BF_SSN
	LEFT JOIN
	(
		SELECT
			Data.BF_SSN,
			MAX(EndDate) AS EndDate
		FROM
		(
			SELECT
				LN60.BF_SSN,
				MAX(LN60.LD_FOR_END) AS EndDate
			FROM
				UDW..FB10_BR_FOR_REQ FB10
				INNER JOIN UDW..LN60_BR_FOR_APV LN60
					ON LN60.BF_SSN = FB10.BF_SSN
					AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
			WHERE
				FB10.LC_STA_FOR10 = 'A'
				AND FB10.LC_FOR_STA = 'A'
				AND LN60.LC_FOR_RSP != '003' --denied
				AND LN60.LC_STA_LON60 = 'A'
				AND CAST(LN60.LD_FOR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in forb
			GROUP BY
				LN60.BF_SSN

			UNION ALL

			SELECT
				LN50.BF_SSN,
				MAX(LN50.LD_DFR_END) AS EndDate
			FROM
				UDW..DF10_BR_DFR_REQ DF10
				INNER JOIN UDW..LN50_BR_DFR_APV LN50
					ON LN50.BF_SSN = DF10.BF_SSN
					AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
			WHERE
				DF10.LC_STA_DFR10 = 'A'
				AND DF10.LC_DFR_STA = 'A'
				AND LN50.LC_DFR_RSP != '003' --denied
				AND LN50.LC_STA_LON50 = 'A'
				AND CAST(LN50.LD_DFR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in defer
			GROUP BY
				LN50.BF_SSN

			UNION ALL

			SELECT
				LN50.BF_SSN,
				MAX(LN50.LD_DFR_GRC_END) AS EndDate
			FROM
				UDW..DF10_BR_DFR_REQ DF10
				INNER JOIN UDW..LN50_BR_DFR_APV LN50
					ON LN50.BF_SSN = DF10.BF_SSN
					AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
			WHERE
				DF10.LC_STA_DFR10 = 'A'
				AND DF10.LC_DFR_STA = 'A'
				AND LN50.LC_DFR_RSP != '003' --denied
				AND LN50.LC_STA_LON50 = 'A'
				AND CAST(LN50.LD_DFR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in defer
			GROUP BY
				LN50.BF_SSN
		) Data
		GROUP BY
			Data.BF_SSN
	) RecentForbDefer
		ON RecentForbDefer.BF_SSN = WQ20.BF_SSN
	LEFT JOIN UDW..PD10_PRS_NME PD10Regards
		ON PD10Regards.DF_PRS_ID = AY10.LF_ATY_RGD_TO
	LEFT JOIN UDW..PD10_PRS_NME PD10Recipient
		ON PD10Recipient.DF_PRS_ID = AY10.LF_ATY_RCP
WHERE
	NCH.IsInbound = 0 --outbound only
	AND NCH.RegionId = '2' --Uheaa
ORDER BY
	NobleCallHistoryId
DESC

