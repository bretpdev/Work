<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FocusText.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEACADgDwAAFgAAACgAAAAyAAAAZAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACgsMAAsLDAANDQ0ADg4OAA4PDwARERIAEhISACsrKgArKysALy4uADMyMgAzMzIANDMzADU0
        NABBQUAAWVlXAFlZWABdXFsAYWBfAGRjYgBnZmUAc3JxAIKBfwCDgoAAlJSRAJWUkgCWlJIAlpSTAJiW
        lACamZcAm5mXAKSjoQClpKIApqWjAKimpACpqKYAqqimAK2rqQCvrqwAsK6sALCvrACwr60AsrCuALOx
        rwCzsrAAtLKwALW0sQC1tLIAtrSyALa1swC3tbMAt7azALi2tAC5uLUAubi2ALq5tgC8u7gAvLu5AL27
        uQC+vLoAv726AL+9uwDAvrwAw8K/AMbEwgDHxcMAycfEAMnHxQDKyMYAycrHAMrKxwDLyscAzMrHAM3L
        yQDNzMkAzszJAM7MygDPzcoAz83LAM/OywDR0M0A0tHOANPRzgDT0c8A1NLQANXU0QDW1NEA1tTSANbV
        0gDX1dIA2dfUANnX1QDZ2NUA2tjWANvZ1wDc29gA3tzZAN7c2gDf3doA393bAN/e2wDg3tsA4d/cAOLg
        3QDi4N4A4uHeAOPh3gDj4t8A5OLfAObk4QDm5eIA6ObjAOnn5ADp5+UA6ujlAOvp5gDr6ecA7OrnAO3r
        6ADu7OkA7+3qAPLw7QDz8e4A9PLvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAe3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3sAAHt7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7AAB7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7ewAAe3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3sAAHt7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7AAB7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7ewAAe3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3sAAHt7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        AAB7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7ewAAe3t7e3tA
        FxcXFxche3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7ezMXFxcXFy57e3t7e3sAAHt7e3t7KhYkJCQkPHt7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3tEJCQkJBgde3t7e3t7AAB7e3t7eyoie3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3s6HXt7e3t7ewAAe3t7e3sqInt7fHt8fHt8e3x7fHt8e3x7dnt8e3x7
        fHt7fHx7fHx7fHt7Oh17e3t7e3sAAHt7e3t7KiJ7ezFmDgt6Dz0mSh5eNU8NbhNVDmMyQyg2PiMUbQwK
        ezB7ezode3t7e3t7AAB7e3t7eyoie3stZAcCegk5JUkbXC9LBW4SUwdhLkImMzsgEWsDAHsse3s6HXt7
        e3t7ewAAe3t7e3sqInt7LWQHAnoJOSVIGlwvSwVuElMHYS5CJjM7IBFrAwB7LHt7Oh17e3t7e3sAAHt7
        e3t7QT97ey1kBwJ6CTklRhlbL0sFbhJTB2EuQiYzOyARawMAeyx7e000e3t7e3t7AAB7e3t7e3t7e3st
        ZAcCegk5JUYZWy9LBW4SUwdhLkImMzsgEWsDAHsse3t7e3t7e3t7ewAAe3t7e3t7e3t7LWQHAnoJOSVG
        GVsvSwVuElMHYS5CJjM7IBFrAwB7LHt7e3t7e3t7e3sAAHt7e3t7e3t7ey1kBwJ6CTklSRxcL0sFbhJT
        B2EuQiYzOyARawMAeyx7e3t7e3t7e3t7AAB7e3t7e3t7e3tXcikpeytcUWZFbllnKHY4bClxWGFTWl1Q
        N3QoJ3tWe3t7e3t7e3t7ewAAe3t7e3t7e2A4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODht
        e3t7e3t7e3sAAHt7e3t7e3tNHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8eXXt7e3t7e3t7
        AAB7e3t7e3t7e3tod01Ne05tZXBfdWlwTXlUc013aG9mam1iUnhMS3toe3t7e3t7e3t7ewAAe3t7e3t7
        e3t7LWQHAXoIOSVJG1wvSwRuElMGYS5CJjM7IBBrAwB7LHt7e3t7e3t7e3sAAHt7e3t7e3t7ey1kBwJ6
        CTklRxpcL0sFbhJTB2EuQiYzOyARawMAeyx7e3t7e3t7e3t7AAB7e3t7e3t7e3stZAcCegk5JUYZWy9L
        BW4SUwdhLkImMzsgEWsDAHsse3t7e3t7e3t7ewAAe3t7e3t7e3t7LWQHAnoJOSVGGVsvSwVuElMHYS5C
        JjM7IBFrAwB7LHt7e3t7e3t7e3sAAHt7e3t7e3t7ey1kBwJ6CTklRhlbL0sFbhJTB2EuQiYzOyARawMA
        eyx7e3t7e3t7e3t7AAB7e3t7e3t7e3stZAcCegk5JUYZWy9LBW4SUwdhLkImMzsgEWsDAHsse3t7e3t7
        e3t7ewAAe3t7e3t7e3t7LWQHAnoJOSVGGVsvSwVuElMHYS5CJjM7IBFrAwB7LHt7e3t7e3t7e3sAAHt7
        e3t7e3t7ey1kBwJ6CTklRhlbL0sFbhJTB2EuQiYzOyARawMAeyx7e3t7e3t7e3t7AAB7e3t7e3t7e3st
        ZAcCegk5JUYZWy9LBW4SUwdhLkImMzsgEWsDAHsse3t7e3t7e3t7ewAAe3t7e3tBP3t7LWQHAnoJOSVG
        GVsvSwVuElMHYS5CJjM7IBFrAwB7LHt7TTR7e3t7e3sAAHt7e3t7KiJ7ey1kBwJ6CTklRhlbL0sFbhJT
        B2EuQiYzOyARawMAeyx7ezode3t7e3t7AAB7e3t7eyoie3stZAcCegk5JUgaXC9LBW4SUwdhLkImMzsg
        EWsDAHsse3s6HXt7e3t7ewAAe3t7e3sqInt7MWYOC3oPPSZKHl41Tw1uFVUOYzJDKDY+IxRtDAp7MHt7
        Oh17e3t7e3sAAHt7e3t7KiJ7e3x7fHx7fHt8e3x7fHt8e3x7fHt8e3x7e3x8e3x8e3x7ezode3t7e3t7
        AAB7e3t7eyoie3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3s6HXt7e3t7ewAAe3t7e3sq
        FiQkJCQ8e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e0QkJCQkGB17e3t7e3sAAHt7e3t7QBcXFxcXIXt7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3szFxcXFxcue3t7e3t7AAB7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7ewAAe3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3sAAHt7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7AAB7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7ewAAe3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3sAAHt7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7AAB7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7ewAAe3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3sAAHt7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>