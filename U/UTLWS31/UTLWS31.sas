*-------------------------------------------------------------*
| UTLWS31 CSV - SPECIAL CAMPAIGN REPORTING INITIAL POPULATION |
*-------------------------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
/*LIBNAME SAS_TAB V8 '/sas/whse/progrevw'; */
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWS31.LWS31R2";
FILENAME REPORT3 "&RPTLIB/ULWS31.LWS31R3";
FILENAME REPORTZ "&RPTLIB/ULWS31.LWS31RZ";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
LIBNAME SAS_TAB V8 'Q:\Process Automation\TabSAS';
DATA BOR_BASE;
	SET SAS_TAB.UTLWS30_SDS;
RUN;
/*COMMENT FOR PRODUCTION*/
DATA WORKLOCL.BOR_BASE;
	SET BOR_BASE;
RUN;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE LDATA AS
SELECT DISTINCT B.*
FROM BOR_BASE A
INNER JOIN CONNECTION TO DB2 (
	SELECT A.BF_SSN  
		,A.LN_SEQ 
		,COALESCE(A.LA_CUR_PRI,0) AS LA_CUR_PRI
		,COALESCE(A.LA_NSI_OTS,0) AS LA_NSI_OTS
		,COALESCE(A.LA_CUR_PRI,0) +
		 COALESCE(A.LA_NSI_OTS,0) AS PIBAL
		,C.DF_SPE_ACC_ID
		,D.DC_ADR
		,D.DI_VLD_ADR
		,E.DC_PHN
		,E.DI_PHN_VLD
		,INT(F.WC_DW_LON_STA) AS WC_DW_LON_STA
	FROM OLWHRM1.LN10_LON A
	INNER JOIN OLWHRM1.LN16_LON_DLQ_HST B
		ON A.BF_SSN = B.BF_SSN
		AND A.LN_SEQ = B.LN_SEQ
	INNER JOIN OLWHRM1.PD10_PRS_NME C
		ON A.BF_SSN = C.DF_PRS_ID
	INNER JOIN OLWHRM1.PD30_PRS_ADR D
		ON C.DF_PRS_ID = D.DF_PRS_ID
	INNER JOIN OLWHRM1.PD42_PRS_PHN E
		ON D.DF_PRS_ID = E.DF_PRS_ID
	INNER JOIN OLWHRM1.DW01_DW_CLC_CLU F
		ON A.BF_SSN = F.BF_SSN
		AND A.LN_SEQ = F.LN_SEQ
	FOR READ ONLY WITH UR
	) B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
;
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWS31.LWS31RZ);*/
/*QUIT;*/
PROC SORT DATA=LDATA OUT=ADR (KEEP=BF_SSN DC_ADR DI_VLD_ADR WHERE=(DC_ADR='L')) NODUPKEY;
	BY BF_SSN;
RUN; 
PROC SORT DATA=LDATA OUT=PHN (KEEP=BF_SSN DC_PHN DI_PHN_VLD ) NODUPKEY;
	BY BF_SSN DC_PHN;
RUN; 
PROC SORT DATA=LDATA OUT=STA (KEEP=BF_SSN WC_DW_LON_STA) NODUPKEY;
	BY BF_SSN WC_DW_LON_STA;
RUN; 
PROC SORT DATA=LDATA (KEEP=BF_SSN LN_SEQ LA_CUR_PRI LA_NSI_OTS PIBAL DF_SPE_ACC_ID) NODUPKEY;
	BY BF_SSN LN_SEQ;
RUN; 
PROC SQL;
CREATE TABLE BORI AS
	SELECT DISTINCT A.DF_SPE_ACC_ID
		,SUM(A.PIBAL) AS PIBAL
		,SUM(A.LA_CUR_PRI) AS LA_CUR_PRI
		,SUM(A.LA_NSI_OTS) AS LA_NSI_OTS
		,MIN(STA.WC_DW_LON_STA) AS WC_DW_LON_STA
		,CASE 
			WHEN B.BF_SSN IS NULL THEN ' '
			ELSE B.DI_VLD_ADR
		 END AS DI_VLD_ADR
		,CASE 
			WHEN HMP.BF_SSN IS NULL THEN ' '
			ELSE HMP.DI_PHN_VLD
		 END AS PHOME
		,CASE 
			WHEN WKP.BF_SSN IS NULL THEN ' '
			ELSE WKP.DI_PHN_VLD
		 END AS PWORK
		,CASE 
			WHEN ALP.BF_SSN IS NULL THEN ' '
			ELSE ALP.DI_PHN_VLD
		 END AS PALT
	FROM LDATA A
	LEFT OUTER JOIN ADR B
		ON A.BF_SSN = B.BF_SSN
	LEFT OUTER JOIN PHN HMP
		ON A.BF_SSN = HMP.BF_SSN
		AND HMP.DC_PHN = 'H'
	LEFT OUTER JOIN PHN WKP
		ON A.BF_SSN = WKP.BF_SSN
		AND WKP.DC_PHN = 'W'
	LEFT OUTER JOIN PHN ALP
		ON A.BF_SSN = ALP.BF_SSN
		AND ALP.DC_PHN = 'A'
	INNER JOIN STA 
		ON A.BF_SSN = STA.BF_SSN
	GROUP BY A.DF_SPE_ACC_ID
	;
CREATE TABLE BORSM AS
		SELECT 0 AS WC_DW_LON_STA
			,COUNT(DF_SPE_ACC_ID) AS TNB
		FROM BORI
	UNION
		SELECT WC_DW_LON_STA
			,COUNT(DF_SPE_ACC_ID) AS TNB
		FROM BORI
		GROUP BY WC_DW_LON_STA
;
QUIT;
ENDRSUBMIT;
DATA BORI;
	SET WORKLOCL.BORI;
RUN;
DATA BORSM;
	SET WORKLOCL.BORSM;
RUN;
DATA BORSM (DROP=DNM);
	SET BORSM;
	RETAIN DNM;
	IF _N_ = 1 THEN DO;
		DNM = TNB;
	END;
	PERC = TNB/DNM;
RUN;
PROC SORT DATA=BORI;
	BY DF_SPE_ACC_ID;
RUN; 
PROC SORT DATA=BORSM;
	BY WC_DW_LON_STA;
RUN; 
PROC FORMAT;
VALUE LNSTA 
	0 =  'TOTAL BORROWERS'
	1 = 'IN GRACE'
	2 = 'IN SCHOOL' 
	3 = 'IN REPAYMENT'
	4 = 'IN DEFERMENT' 
	5 = 'IN FORBEARANCE' 
	6 = 'IN CURE' 
	7 = 'CLAIM PENDING' 
	8 = 'CLAIM SUBMITTED' 
	9 = 'CLAIM CANCLED'
	10 = 'CLAIM REJECT' 
	11 = 'CLAIM RETURNED' 
	12 = 'CLAIM PAID' 
	13 = 'PRE-CLAIM PENDING' 
	14 = 'PRE-CLAIM SUBMITTED' 
	15 = 'PRE-CLAIM CANCELLED' 
	16 = 'DEATH ALLEGED' 
	17 = 'DEATH VERIFIED' 
	18 = 'DISABILITY ALLEGED' 
	19 = 'DISABILITY VERIFIED' 
	20 = 'BANKRUPTCY ALLEGED' 
	21 = 'BANKRUPTCY VERIFIED' 
	22 = 'PAID IN FULL' 
	23 = 'NOT FULLY ORIGINATED' 
	88 = 'PROCESSING ERROR';
QUIT;
PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 CENTER PAGENO=1 DATE;
TITLE 'DELINQUENCY MANAGEMENT WEEKLY MANAGEMENT';
FOOTNOTE   'JOB = UTLWS31  	 REPORT = ULWS31.LWS31R2';
PROC CONTENTS DATA=BORI OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWS31  	 REPORT = ULWS31.LWS31R2";
	END;
RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=BORI WIDTH=UNIFORM WIDTH=MIN LABEL;
FORMAT PIBAL LA_CUR_PRI LA_NSI_OTS 14.2 WC_DW_LON_STA LNSTA. ;
VAR DF_SPE_ACC_ID PIBAL LA_CUR_PRI LA_NSI_OTS DI_VLD_ADR PHOME PWORK PALT WC_DW_LON_STA;
LABEL DF_SPE_ACC_ID = 'ACCOUNT/NUMBER'
	PIBAL = 'TOTAL/OUTSTANDING/BALANCE'
	LA_CUR_PRI = 'OUTSTANDING/PRINCIPAL'
	LA_NSI_OTS = 'OUTSTANDING/INTEREST'
	DI_VLD_ADR = 'ADDRESS/VALIDITY'
	PHOME = 'HOME PHONE/VALIDITY'
	PWORK = 'WORK PHONE/VALIDITY'
	PALT = 'ALTERNATE PHONE/VALIDITY'
	WC_DW_LON_STA = 'CURRENT STATUS'
	;
RUN;
PROC PRINTTO;
RUN;
PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 CENTER PAGENO=1 DATE;
TITLE 'DELINQUENCY MANAGEMENT WEEKLY SUMMARY';
FOOTNOTE   'JOB = UTLWS31  	 REPORT = ULWS31.LWS31R3';
PROC CONTENTS DATA=BORSM OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWS31  	 REPORT = ULWS31.LWS31R3";
	END;
RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=BORSM WIDTH=UNIFORM WIDTH=MIN LABEL;
FORMAT WC_DW_LON_STA LNSTA. TNB COMMA8. PERC PERCENT10.2;
VAR WC_DW_LON_STA TNB PERC;
LABEL WC_DW_LON_STA = '/'
	TNB = 'TOTAL BORROWERS/IN STATUS'
	PERC = 'PERENTAGE IN/EACH STATUS';
RUN;
PROC PRINTTO;
RUN;
