/*UTLWD22 DEFAULTED LOANS*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWD22.LWD22R2";
FILENAME REPORT3 "&RPTLIB/ULWD22.LWD22R3";
FILENAME REPORT4 "&RPTLIB/ULWD22.LWD22R4";
FILENAME REPORT5 "&RPTLIB/ULWD22.LWD22R5";
DATA _NULL_;
	CALL SYMPUT('BEGIN',"'"||PUT(INTNX('MONTH',TODAY(),-1,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('END',"'"||PUT(INTNX('MONTH',TODAY(),-1,'END'), MMDDYYD10.)||"'");
RUN;
%SYSLPUT BEGIN = &BEGIN;
%SYSLPUT END = &END;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE BOR_INF AS
SELECT BF_SSN
	,CLUID
	,LD_LDR_POF
	,LD_LST_PAY				LENGTH=4
	,LD_DFL_LST_CNC 		LENGTH=4
	,LD_DFL_LST_ATT_CNC		LENGTH=4
	,ADD_STAT
	,PHN_STAT
	,LC_AUX_STA
	,LC_TYP_DFR
	,LF_DFL_CLR
	,DF_SPE_ACC_ID
	,BN_RHB_PAY_CTR
	,LI_DIR_PAY
	,DC_DOM_ST
FROM CONNECTION TO DB2 (
SELECT A.DF_PRS_ID_BR AS BF_SSN
	,RTRIM(B.AF_APL_ID)||B.AF_APL_ID_SFX AS CLUID
	,C.LD_LDR_POF
	,C.LD_LST_PAY
	,C.LD_DFL_LST_CNC 
	,C.LD_DFL_LST_ATT_CNC
	,D.DI_VLD_ADR AS ADD_STAT
	,D.DI_PHN_VLD AS PHN_STAT
	,C.LC_AUX_STA
	,C.LC_TYP_DFR
	,C.LF_DFL_CLR
	,D.DF_SPE_ACC_ID
	,E.BN_RHB_PAY_CTR
	,C.LI_DIR_PAY
	,D.DC_DOM_ST
FROM OLWHRM1.GA01_APP A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.DC01_LON_CLM_INF C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
INNER JOIN OLWHRM1.PD01_PDM_INF D
	ON A.DF_PRS_ID_BR = D.DF_PRS_ID
LEFT OUTER JOIN OLWHRM1.BR01_BR_CRF E
	ON A.DF_PRS_ID_BR = E.BF_SSN
WHERE C.LD_CLM_ASN_DOE IS NULL
AND C.LC_PCL_REA NOT IN ('BC','BH','BO','DI','DE','CS','FC')
AND C.LC_STA_DC10 = '03'
);

CREATE TABLE FIRST_TRX AS
SELECT B.BF_SSN
	,B.F_TRX_TYP
	,MIN(B.BD_TRX_PST_HST) AS BD_TRX_PST_HST
FROM BOR_INF A
INNER JOIN CONNECTION TO DB2 (
SELECT BF_SSN
	,BD_TRX_PST_HST
	,LC_TRX_TYP AS F_TRX_TYP
FROM OLWHRM1.DC11_LON_FAT
WHERE LC_REV_IND_TYP = ''
) B
ON A.BF_SSN = B.BF_SSN
WHERE A.LD_LDR_POF < B.BD_TRX_PST_HST
GROUP BY B.BF_SSN
	,B.F_TRX_TYP
;

/*MOST RECENT TRX TYP*/
CREATE TABLE RTRXTYP AS
SELECT BF_SSN
	,LC_TRX_TYP
	,MDATE 		LENGTH=4
FROM CONNECTION TO DB2 (
SELECT DISTINCT C.BF_SSN
	,D.LC_TRX_TYP
	,MAX(D.LD_TRX_EFF) AS MDATE
FROM OLWHRM1.DC01_LON_CLM_INF C
INNER JOIN OLWHRM1.DC11_LON_FAT D
	ON C.BF_SSN = D.BF_SSN
WHERE C.LD_CLM_ASN_DOE IS NULL
AND C.LC_PCL_REA NOT IN ('BC','BH','BO','DI','DE','CS','FC')
AND C.LC_STA_DC10 = '03'
GROUP BY C.BF_SSN, D.LC_TRX_TYP
);

CREATE TABLE ACBAL AS
SELECT BF_SSN
	,TOT
FROM CONNECTION TO DB2 (
SELECT	A.BF_SSN
		,SUM(A.LA_CLM_PRI 
		+ A.LA_CLM_INT
		- A.LA_PRI_COL
		+A.LA_INT_ACR
		+COALESCE(C.LA_CLM_INT_ACR,0)
		-A.LA_INT_COL)					
		+
		SUM(A.LA_LEG_CST_ACR
		-A.LA_LEG_CST_COL
		+A.LA_OTH_CHR_ACR
		-A.LA_OTH_CHR_COL
		+A.LA_COL_CST_ACR
		-A.LA_COL_CST_COL
		+ COALESCE(C.LA_CLM_PRJ_COL_CST,0)) AS TOT
FROM OLWHRM1.DC01_LON_CLM_INF A	
LEFT OUTER JOIN OLWHRM1.DC02_BAL_INT C
	ON A.AF_APL_ID = C.AF_APL_ID
	AND A.AF_APL_ID_SFX = C.AF_APL_ID_SFX
	AND A.LF_CRT_DTS_DC10 = C.LF_CRT_DTS_DC10
WHERE A.LD_CLM_ASN_DOE IS NULL
AND A.LC_PCL_REA NOT IN ('BC','BH','BO','DI','DE','CS','FC')
AND A.LC_STA_DC10 = '03'
GROUP BY A.BF_SSN
);

CREATE TABLE LC67REC AS
SELECT BF_SSN
	,LC67_REC
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.DF_PRS_ID_BR AS BF_SSN
	,CASE 
	WHEN BC_LEG_ACT_REC_TYP = '1'
	THEN 'GG'
	WHEN BC_LEG_ACT_REC_TYP = '2'
	THEN 'SC'
	END AS LC67_REC
FROM OLWHRM1.LA10_LEG_ACT A 
WHERE A.BC_LEG_ACT_REC_TYP IN ('1','2') /*GG=1 SC=2 RECORD*/
AND A.BC_WDR_REA = ''  
AND A.BC_INA_REA = ''
);

CREATE TABLE EXREC AS
SELECT BF_SSN
	,EXREC
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.DF_PRS_ID_BR AS BF_SSN
	,'Y' AS EXREC
FROM OLWHRM1.LA11_LEG_ACT_ATY A
WHERE EXISTS
	(SELECT *
	 FROM OLWHRM1.LA11_LEG_ACT_ATY X
	 WHERE X.DF_PRS_ID_BR = A.DF_PRS_ID_BR
	 AND X.BC_LEG_ACT_ATY_TYP = 'EX')
);

CREATE TABLE HLD_DT AS
SELECT BF_SSN
	,BD_HLD 	LENGTH=4
FROM CONNECTION TO DB2 (
SELECT A.DF_PRS_ID_BR AS BF_SSN
	,A.BD_HLD
	,A.BF_CRT_DTS_LA10 
FROM OLWHRM1.LA10_LEG_ACT A
WHERE A.BF_CRT_DTS_LA10 = 
	 	(SELECT MAX(BF_CRT_DTS_LA10)
		 FROM OLWHRM1.LA10_LEG_ACT X
		 WHERE X.DF_PRS_ID_BR = A.DF_PRS_ID_BR)
);


CREATE TABLE VWA AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT BF_SSN
FROM OLWHRM1.DC11_LON_FAT 
WHERE LC_TRX_TYP = 'EP' 
	AND DAYS(LD_TRX_EFF) BETWEEN DAYS(&BEGIN) AND DAYS(&END)
);
DISCONNECT FROM DB2;
ENDRSUBMIT;

DATA BOR_INF;SET WORKLOCL.BOR_INF;RUN;
DATA RTRXTYP;SET WORKLOCL.RTRXTYP;RUN;
DATA LC67REC;SET WORKLOCL.LC67REC;RUN;
DATA EXREC;SET WORKLOCL.EXREC;RUN;
DATA HLD_DT;SET WORKLOCL.HLD_DT;RUN;
DATA ACBAL;SET WORKLOCL.ACBAL;RUN;
DATA FIRST_TRX;SET WORKLOCL.FIRST_TRX;RUN;
DATA VWA;SET WORKLOCL.VWA;RUN;

/*DISTINCT LIST OF APPLICABLE SSNs*/
DATA BLIST (KEEP = BF_SSN);
SET BOR_INF;
RUN;
PROC SORT DATA = BLIST NODUPKEY;
BY BF_SSN;
RUN;
%MACRO SIT(DS);
PROC SORT DATA=&DS;
	BY BF_SSN;
RUN;
%MEND SIT;
%SIT(BOR_INF);
%SIT(LC67REC);
%SIT(EXREC);
%SIT(HLD_DT);
%SIT(ACBAL);
%SIT(RTRXTYP);
%MACRO MIT(DS);
DATA &DS;
MERGE BLIST (IN=A) &DS (IN=B); 
BY BF_SSN;
IF A AND B THEN OUTPUT &DS;
ELSE DELETE;
RUN;
%MEND MIT;
%MIT(LC67REC);
%MIT(EXREC);
%MIT(HLD_DT);
%MIT(RTRXTYP);
%MIT(ACBAL);

DATA BLIST;
MERGE BLIST HLD_DT LC67REC EXREC ACBAL; 
BY BF_SSN;
RUN;

DATA BOR_INF;
MERGE BOR_INF BLIST;
BY BF_SSN;
RUN;

PROC SORT DATA=BOR_INF;
BY BF_SSN CLUID;
RUN;

DATA BOR_INF;
SET BOR_INF;
TODAY = TODAY();
RUN;

PROC SQL;
CREATE TABLE STAT AS 
SELECT A.BF_SSN
	,B.BSTAT
	,C.CSTAT
	,D.DSTAT
	,E.ESTAT
	,F.FSTAT
	,G.GSTAT
	,L.LSTAT
	,H.HSTAT
	,I.ISTAT
	,J.JSTAT
	,K.KSTAT
FROM BOR_INF A
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'01' AS BSTAT
	 FROM BOR_INF
	 WHERE LC_AUX_STA = '07') B
	ON A.BF_SSN = B.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'02' AS CSTAT
	 FROM BOR_INF
	 WHERE LC_AUX_STA = '05' AND LC_TYP_DFR = '06') C
	ON A.BF_SSN = C.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'03' AS DSTAT
	 FROM BOR_INF
	 WHERE LF_DFL_CLR = 'WG000001' AND LC67_REC = 'SC' AND EXREC <> 'Y') D
	ON A.BF_SSN = D.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'04' AS ESTAT
	 FROM BOR_INF
	 WHERE LF_DFL_CLR = 'WG000001' AND LC67_REC <> 'SC') E
	ON A.BF_SSN = E.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'05' AS FSTAT
	 FROM BOR_INF
	 WHERE LD_LST_PAY < TODAY - 60 AND LC67_REC = 'SC' AND EXREC <> 'Y') F
	ON A.BF_SSN = F.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'06' AS GSTAT
	 FROM BOR_INF
	 WHERE LD_LST_PAY < TODAY - 60 AND LC67_REC <> 'SC' AND EXREC <> 'Y') G
	ON A.BF_SSN = G.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'07' AS LSTAT
	 FROM BOR_INF
	 WHERE LC67_REC = 'SC' AND BD_HLD > TODAY) L
	ON A.BF_SSN = L.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'08' AS HSTAT
	 FROM BOR_INF
	 WHERE LC67_REC = 'GG' AND BD_HLD > TODAY) H
	ON A.BF_SSN = H.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'09' AS ISTAT
	 FROM BOR_INF
	 WHERE LC67_REC = 'GG' AND (BD_HLD IS NULL OR BD_HLD < TODAY)) I
	ON A.BF_SSN = I.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'10' AS JSTAT
	 FROM BOR_INF
	 WHERE LC67_REC = 'SC' AND EXREC = 'Y') J
	ON A.BF_SSN = J.BF_SSN
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,'11' AS KSTAT
	 FROM BOR_INF
	 WHERE LC_AUX_STA = '05' AND LC_TYP_DFR <> '06') K
	ON A.BF_SSN = K.BF_SSN
;
QUIT;
RUN;

PROC SORT DATA=STAT NODUPREC;
BY BF_SSN ;
RUN;

/*DETERMINE BORROWER STATUS*/
DATA STAT (KEEP = BF_SSN STAT);
LENGTH STAT $ 33;
SET STAT;
IF BSTAT = '01'
	THEN STAT = 'BANKRUPTCY';
ELSE IF BSTAT = ' ' AND CSTAT = '02' 
	THEN STAT = 'PRISON';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = '03'
	THEN STAT = 'IN REPAYMENT (LEGAL ACCOUNT)';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = '04'
	THEN STAT = 'IN REPAYMENT (NON LEGAL)';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = ' ' AND FSTAT = '05'
	THEN STAT = 'LEGAL (NO PAY FOR 60+ DAYS)';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = ' ' AND FSTAT = ' ' AND
		GSTAT = '06'
	THEN STAT = 'NON LEGAL (NO PAY FOR 60+ DAYS)';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = ' ' AND FSTAT = ' ' AND
		GSTAT = ' ' AND LSTAT = '07'
	THEN STAT = 'LEGAL ON HOLD';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = ' ' AND FSTAT = ' ' AND
		GSTAT = ' ' AND LSTAT = ' 'AND HSTAT = '08'
	THEN STAT = 'AWG ON HOLD';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = ' ' AND FSTAT = ' ' AND
		GSTAT = ' ' AND LSTAT = ' ' AND HSTAT = ' ' AND ISTAT = '09'
	THEN STAT = 'AWG';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = ' ' AND FSTAT = ' ' AND
		GSTAT = ' ' AND LSTAT = ' ' AND HSTAT = ' ' AND ISTAT = ' ' AND JSTAT = '10'
	THEN STAT = 'ACTIVE LEGAL GARN';
ELSE IF BSTAT = ' ' AND CSTAT = ' ' AND DSTAT = ' ' AND ESTAT = ' ' AND FSTAT = ' ' AND
		GSTAT = ' ' AND LSTAT = ' ' AND HSTAT = ' ' AND ISTAT = ' ' AND JSTAT = ' ' AND 
		KSTAT = '11' 
	THEN STAT = 'ADMINISTRATIVE HOLD';
ELSE STAT = 'OTHER';
RUN;

PROC SORT DATA=STAT;
BY BF_SSN ;
RUN;

DATA BOR_INF;
MERGE BOR_INF STAT; 
BY BF_SSN;
RUN;

/*DETERMINE SKIP STATUS*/
DATA BOR_INF;
SET BOR_INF;
IF ADD_STAT = 'N' AND PHN_STAT = 'N' THEN SKIP_STATUS = 'B';
	ELSE IF ADD_STAT = 'Y' AND PHN_STAT = 'N' THEN SKIP_STATUS = 'P' ;
	ELSE IF ADD_STAT = 'N' AND PHN_STAT = 'Y' THEN SKIP_STATUS = 'A' ;
	ELSE SKIP_STATUS = ' ' ;
RUN;

/*SORT BY SSN AND DESCENDING TRANS EFF DATE*/
PROC SORT DATA=RTRXTYP;
	BY BF_SSN DESCENDING MDATE ;
RUN;
/*SORT FOR FIRST TRANSACTION*/
PROC SORT DATA=FIRST_TRX;
	BY BF_SSN BD_TRX_PST_HST;
RUN;

/*GET MOST RECENT TRANSACTION TYPE*/
%MACRO FIT(DS);
DATA &DS;
	SET &DS;
	BY BF_SSN;
	IF FIRST.BF_SSN THEN OUTPUT;
RUN;
%MEND FIT;
%FIT(RTRXTYP);
%FIT(FIRST_TRX);
/*GET BORROWER LEVEL INFO*/
PROC SQL;
CREATE TABLE DBR AS 
SELECT DISTINCT BF_SSN
	,DF_SPE_ACC_ID
	,STAT
	,SKIP_STATUS
	,MIN(LD_LDR_POF) AS ACC_OPEN
	,MAX(LD_LST_PAY) AS DT_LST_PAY
	,MAX(LD_DFL_LST_ATT_CNC) AS DT_LST_ATT
	,MAX(LD_DFL_LST_CNC) AS  DT_LST_CNTC
	,TOT
	,BN_RHB_PAY_CTR
	,LI_DIR_PAY
	,DC_DOM_ST
FROM BOR_INF
GROUP BY BF_SSN
		,STAT
		,SKIP_STATUS
		,TOT
		,BN_RHB_PAY_CTR
		,LI_DIR_PAY
		,DC_DOM_ST;
QUIT;

/*COMBINE DATA SETS*/
DATA DBR;
FORMAT ACC_OPEN MMDDYY10. DT_LST_PAY MMDDYY10. DT_LST_CNTC MMDDYY10. DT_LST_ATT MMDDYY10. TOT DOLLAR10.2;
MERGE DBR RTRXTYP FIRST_TRX; 
BY BF_SSN;
RUN;

PROC SORT DATA = DBR;
BY BF_SSN;
RUN;

/*GET SKIP INFO*/
PROC SQL;
CREATE TABLE SKP AS 
SELECT SKIP_STATUS
	,COUNT(*) AS SKIP_COUNT
	,SUM(TOT ) AS SKIP_TOT
FROM DBR
WHERE SKIP_STATUS <> ' '
GROUP BY SKIP_STATUS;
QUIT;
PROC SQL;
CREATE TABLE SKPTOTAL AS 
SELECT SUM(SKIP_TOT) AS SKIP_TOT
	,SUM(SKIP_COUNT) AS SKIP_COUNT
	,'TOTAL' AS SKIP_STATUS
FROM SKP;
QUIT;
DATA SKP;
SET SKP SKPTOTAL;
RUN;
PROC SORT DATA = SKP;
BY SKIP_STATUS;
RUN;
DATA SKP (DROP = SKIP_STATUS);
SET SKP;
IF SKIP_STATUS = 'T'
THEN SKP_STAT = 'TOTAL';
ELSE SKP_STAT = SKIP_STATUS;
RUN;

/*GET STATUS INFO*/
PROC SQL;
CREATE TABLE TOTALS AS 
SELECT COUNT(DISTINCT BF_SSN) AS TOTAL_IN_STATUS
	,SUM(TOT) AS STATUS_TOT
	,STAT AS BORROWER_STATUS
FROM DBR
GROUP BY STAT;
QUIT;
RUN;
PROC SQL;
CREATE TABLE GTOTALS AS 
SELECT SUM(TOTAL_IN_STATUS) AS TOTAL_IN_STATUS
	,SUM(STATUS_TOT) AS STATUS_TOT
	,'TOTAL                          ' AS BORROWER_STATUS
FROM TOTALS;
QUIT;
RUN;
DATA TOTALS;
SET GTOTALS TOTALS;
RUN;
PROC SORT DATA = TOTALS;
BY BORROWER_STATUS;
RUN;
PROC SQL;
CREATE TABLE VWA_SUMMARY AS
SELECT COUNT(DISTINCT A.BF_SSN) AS STA_TOT
	,SUM(A.TOT) AS STA_BAL
FROM DBR A
INNER JOIN VWA B
	ON A.BF_SSN = B.BF_SSN
;
QUIT;
DATA _NULL_;
	SET  WORK.DBR;                                     
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DF_SPE_ACC_ID $10. ;
	FORMAT STAT $31. ;
	FORMAT SKIP_STATUS $1. ;
	FORMAT ACC_OPEN MMDDYY10. ;
	FORMAT DT_LST_PAY MMDDYY10. ;
	FORMAT DT_LST_CNTC MMDDYY10. ;
	FORMAT DT_LST_ATT MMDDYY10.;
	FORMAT TOT DOLLAR20.2 ;
	FORMAT LC_TRX_TYP $2. ;
	FORMAT MDATE MMDDYY10. ;
	FORMAT F_TRX_TYP $2.;
	FORMAT BD_TRX_PST_HST MMDDYY10.;
IF _N_ = 1 THEN DO;
	PUT
		'ACCOUNT NUMBER,'
		'ACCOUNT OPEN,'
		'CURRENT STATUS,'
		'ACCOUNT BALANCE,'
		'DATE OF FIRST PAYMENT,'
		'TYPE OF FIRST PAYMENT,'
		'DATE OF LAST PAYMENT,'
		'TYPE OF LAST PAYMENT,'
		'DATE OF LAST CONTACT,'
		'DATE LAST ATTEMPT,'
		'SKIP STATUS,'
		'REHAB COUNTER,'
		'DIRECT PAYMENT INDICATOR,'
		'STATE';
END;
DO;
	PUT DF_SPE_ACC_ID $ @;
	PUT ACC_OPEN @;
	PUT STAT $ @;
	PUT TOT @;
	PUT BD_TRX_PST_HST @;
	PUT F_TRX_TYP $ @;
	PUT DT_LST_PAY @;
	PUT LC_TRX_TYP $ @;
	PUT DT_LST_CNTC @;
	PUT DT_LST_ATT @;
	PUT SKIP_STATUS @ ;
	PUT BN_RHB_PAY_CTR @;
	PUT LI_DIR_PAY @ ;
	PUT DC_DOM_ST $ ;

END;
RUN;
DATA _NULL_;
	SET  WORK.SKP;
	FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT SKIP_COUNT BEST12. ;
	FORMAT SKIP_TOT DOLLAR20.2 ;
	FORMAT SKP_STAT $5. ;
	IF _N_ = 1 THEN	DO;
	PUT
		'NUMBER OF BORROWERS IN SKIP'
		','
		'TOTAL OUTSTANDING BALANCE'
		','
		'SKIP STATUS';
	END;
	DO;
		PUT SKIP_COUNT @;
		PUT SKIP_TOT @;
		PUT SKP_STAT $ ;
	END;
RUN;
DATA _NULL_;
	SET  WORK.TOTALS;
	FILE REPORT4 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT TOTAL_IN_STATUS BEST12. ;
	FORMAT STATUS_TOT DOLLAR20.2 ;
	FORMAT BORROWER_STATUS $31. ;
IF _N_ = 1 THEN DO;
	PUT
	'STATUS TOTAL'
	','
	'STATUS BALANCE'
	','
	'BORROWER STATUS';
END;
DO;
	PUT TOTAL_IN_STATUS @;
	PUT STATUS_TOT @;
	PUT BORROWER_STATUS $ ;
END;
RUN;

PROC PRINTTO PRINT=REPORT5 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 CENTER DATE;
TITLE 'VWA LOANS';
FOOTNOTE   'JOB = UTLWD22  	 REPORT = ULWD22.LWD22R5';
PROC CONTENTS DATA=VWA_SUMMARY OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWD22  	 REPORT = ULWAB1.LWD22R5";
	END;
RETURN;
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=VWA_SUMMARY WIDTH=UNIFORM WIDTH=MIN LABEL;
FORMAT STA_TOT COMMA8. STA_BAL DOLLAR14.2;
VAR STA_TOT STA_BAL;
LABEL STA_TOT = 'STATUS/TOTAL'
	STA_BAL = 'STATUS/BALANCE';
RUN;
PROC PRINTTO;
RUN;

/*USED FOR DEVELOPMENT TESTING ONLY*/
/*PROC SQL;*/
/*CREATE TABLE X AS */
/*SELECT BF_SSN*/
/*FROM BLIST*/
/*GROUP BY BF_SSN*/
/*HAVING COUNT(*) > 1;*/
/*QUIT;*/
/*RUN;*/

/*R5 DETAIL REPORT*/
/*PROC SQL;*/
/*CREATE TABLE VWA_DETAIL AS*/
/*SELECT DISTINCT A.BF_SSN*/
/*	,A.TOT*/
/*FROM DBR A*/
/*INNER JOIN VWA B*/
/*	ON A.BF_SSN = B.BF_SSN*/
/*;*/
/*QUIT;*/
/*PROC EXPORT DATA=VWA_DETAIL */
/*	OUTFILE= "T:\SAS\D22.R5.Detail.xls" */
/*	DBMS=EXCEL2000 REPLACE;*/
/*RUN;*/
