/*UTLWD17 WRKGP01 CURRENT ACCOUNT LATE PAYMENT*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
/*FILENAME REPORT2 "&RPTLIB/ULWD17.LWD17R2";*/

libname  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=work  ;
RSUBMIT;

PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE CURACLP1 AS
SELECT *
FROM CONNECTION TO DB2 (

SELECT	DISTINCT B.BF_SSN, 
		RTRIM(B.AF_APL_ID)||''||B.AF_APL_ID_SFX AS CLUID,
		B.LD_NXT_PAY_DUE, 
		B.LD_LST_PAY,
		B.LD_NXT_PAY_DUE,
		RTRIM(CHAR(MONTH(CURRENT DATE)))||'/'|| 
		RTRIM(CHAR(DAY(B.LD_NXT_PAY_DUE)))||'/'|| 
		CHAR(YEAR(CURRENT DATE)) AS CYR,
		C.LA_CLM_BAL									AS BAL,
		B.LA_CLM_PRI + B.LA_CLM_INT	- B.LA_PRI_COL +
		B.LA_INT_ACR + C.LA_CLM_INT_ACR -
		B.LA_INT_COL								AS PI,
		B.LA_LEG_CST_ACR - B.LA_LEG_CST_COL +
		B.LA_OTH_CHR_ACR - B.LA_OTH_CHR_COL +
		B.LA_COL_CST_ACR - B.LA_COL_CST_COL + 
		C.LA_CLM_PRJ_COL_CST						AS OTHER
		,B.LD_DFL_LST_CNC AS DLC	
FROM  (SELECT DISTINCT Y.BF_SSN,Y.LD_TRX_EFF,Y.AF_APL_ID,Y.AF_APL_ID_SFX
				,Z.LD_NXT_PAY_DUE, Z.LD_LST_PAY, Z.LA_CLM_PRI
				,Z.LA_CLM_INT, Z.LA_PRI_COL, Z.LA_INT_ACR, Z.LA_INT_COL
				,Z.LA_LEG_CST_ACR, Z.LA_LEG_CST_COL, Z.LA_OTH_CHR_ACR, Z.LA_OTH_CHR_COL
				,Z.LA_COL_CST_ACR, Z.LA_COL_CST_COL, Z.LD_DFL_LST_CNC, Z.LD_CLM_ASN_DOE
 			FROM OLWHRM1.DC11_LON_FAT Y
			INNER JOIN OLWHRM1.DC01_LON_CLM_INF Z
				ON Z.AF_APL_ID = Y.AF_APL_ID
				AND Z.AF_APL_ID_SFX = Y.AF_APL_ID_SFX 
			WHERE Y.LC_TRX_TYP IN ('BR','EP')
			AND Z.LC_AUX_STA = ' '
			AND Z.LC_STA_DC10 = '03'
			AND Z.LF_DFL_CLR = 'WG000001'
			AND (DAYS(Z.LD_DFL_LST_CNC) < DAYS(CURRENT DATE) - 30 
	 			OR
	 			Z.LD_DFL_LST_CNC IS NULL)
			AND MONTH(Z.LD_LST_PAY) <> MONTH(CURRENT DATE)
 			AND Y.LD_TRX_EFF = (SELECT MAX(Z.LD_TRX_EFF)
							    FROM OLWHRM1.DC11_LON_FAT Z
							    WHERE Y.BF_SSN = Z.BF_SSN))B

INNER JOIN OLWHRM1.DC02_BAL_INT C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
WHERE B.LD_CLM_ASN_DOE IS NULL
AND NOT EXISTS
	(SELECT *
	FROM OLWHRM1.CT30_CALL_QUE X
	WHERE X.DF_PRS_ID_BR = B.BF_SSN
	AND X.IF_WRK_GRP = 'WRK GP01')

);
DISCONNECT FROM DB2;
ENDRSUBMIT;

DATA CURACLP1; 
SET WORKLOCL.CURACLP1; 
RUN;

DATA CURACLP1;
SET CURACLP1;
NEWX=INPUT(CYR,MMDDYY10.); /*CONVERT TO SAS DATE*/
NEWA=PUT(NEWX,MMDDYY10.); /*REFORMAT TO NUMERIC DATE*/
CURRENTDATE = TODAY();
RUN;

PROC SORT DATA=CURACLP1; BY BF_SSN;RUN;

PROC SQL;
CREATE TABLE SUMS AS 
SELECT BF_SSN,SUM(BAL) AS BALANCE, 
	   SUM(PI) AS P_I, SUM(OTHER) AS OTH
FROM CURACLP1
GROUP BY BF_SSN;
QUIT;

DATA NTAB (DROP = BAL PI OTHER);
MERGE SUMS CURACLP1;
BY BF_SSN;
RUN;

PROC SQL;
CREATE TABLE YB1 AS
SELECT * 
FROM NTAB
WHERE LD_LST_PAY NOT BETWEEN NEWX - 15 AND NEWX + 15
AND NEWX <= CURRENTDATE - 5
AND (BALANCE > 25 OR
	 P_I > 25 OR
	 OTH > 100);
QUIT;
PROC SORT DATA=YB1 OUT=YB1 NODUPKEY;
BY BF_SSN;
RUN;

DATA _NULL_;
SET  WORK.YB1;
FILE 'T:\SAS\ULWD17.LWD17R2' DELIMITER=',' DSD DROPOVER LRECL=32767;
/*FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;*/
FORMAT BF_SSN $9. ;
PUT BF_SSN $ ;
RUN;

/*PRINTED REPORT USED FOR TESTING*/
/*PROC PRINT DATA=NTAB ;*/
/*FORMAT CURRENTDATE MMDDYY10.;*/
/*VAR BF_SSN*/
/*	LD_LST_PAY*/
/*	NEWA*/
/*	CURRENTDATE;*/
/*LABEL 	BF_SSN = 'SSN'*/
/*		LD_LST_PAY = 'LAST PAY DATE'*/
/*		NEWA = 'CALCULATED DUE DATE'*/
/*		CURRENTDATE = 'TODAY';*/
/*TITLE;*/
/*FOOTNOTE;*/
/*RUN;*/

/*PROC EXPORT DATA=WORK.NTAB*/
/*            OUTFILE= "T:\SAS\DEMO.xls" */
/*            DBMS=EXCEL2000 REPLACE;*/
/*RUN;*/
