*-------------------------------*
| UTLWA12 - NEW GUARANTEE LOANS |
*-------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWA12.LWA12R2";
FILENAME REPORTZ "&RPTLIB/ULWA12.LWA12RZ";
DATA _NULL_;
	CALL SYMPUT('YR_BEG',"'"||PUT(INTNX('MONTH',TODAY(),-12,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('YR_END',"'"||PUT(INTNX('MONTH',TODAY(),-1,'END'), MMDDYYD10.)||"'");
	CALL SYMPUT('PREV_MNTH_BEG',INTNX('MONTH',TODAY(),-1,'BEGINNING'));
	CALL SYMPUT('PREV_MNTH_END',INTNX('MONTH',TODAY(),-1,'END'));
    CALL SYMPUT('EFFDATE',TRIM(LEFT(UPCASE(
		PUT(INTNX('MONTH',TODAY(),0), MONNAME9.)||' '||
		PUT(INTNX('MONTH',TODAY(),0), YEAR4.)))));
RUN;
%SYSLPUT YR_BEG = &YR_BEG;
%SYSLPUT YR_END = &YR_END;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE NGUARLN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.DF_PRS_ID_BR
	,B.AF_APL_ID||B.AF_APL_ID_SFX AS CLUID
	,B.AA_GTE_LON_AMT -
		COALESCE(B.AA_TOT_CAN,0) -
		COALESCE(B.AA_TOT_RFD,0) AS AA_GTE_LON_AMT
	,B.AA_GTE_LON_AMT AS AA_GTE_LON_AMT_DET 
	,COALESCE(B.AA_TOT_CAN,0) AS AA_TOT_CAN
	,COALESCE(B.AA_TOT_RFD,0) AS AA_TOT_RFD
	,B.AD_PRC
	,B.AC_LON_TYP
FROM OLWHRM1.GA01_APP A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
WHERE B.AC_PRC_STA = 'A'
	AND B.AD_PRC BETWEEN &YR_BEG AND &YR_END
	AND B.AC_LON_TYP IN ('SF','SU','PL','CL')
	AND B.AA_GTE_LON_AMT - COALESCE(B.AA_TOT_CAN,0) - COALESCE(B.AA_TOT_RFD,0) > 0
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWA12.LWA12RZ);*/
/*QUIT;*/
ENDRSUBMIT;

DATA NGUARLN;
SET WORKLOCL.NGUARLN;
RUN;

PROC SORT DATA=NGUARLN; BY DF_PRS_ID_BR CLUID; RUN;
/***************************************************
* DETERMINE IF BORROWER IS NEW IN THE PAST MONTH
****************************************************/
PROC SQL;
CREATE TABLE PREV_BR AS 
SELECT DISTINCT 
	DF_PRS_ID_BR 
FROM NGUARLN
WHERE AD_PRC < &PREV_MNTH_BEG; 
QUIT;

PROC SQL;
CREATE TABLE LN_PRC AS 
	SELECT A.*
		,1 AS LN_CT
		,1 AS N2SYS_I
		,0 AS O2SYS_I
	FROM NGUARLN A
	WHERE A.AD_PRC >= &PREV_MNTH_BEG
	AND A.AD_PRC <= &PREV_MNTH_END
	AND A.DF_PRS_ID_BR NOT IN (
		SELECT DF_PRS_ID_BR
		FROM PREV_BR
		)
UNION
	SELECT A.*
		,1 AS LN_CT
		,0 AS N2SYS_I
		,1 AS O2SYS_I
	FROM NGUARLN A
	INNER JOIN PREV_BR B
		ON A.DF_PRS_ID_BR = B.DF_PRS_ID_BR
;
QUIT;

PROC SORT DATA=LN_PRC NODUPKEY; BY DF_PRS_ID_BR CLUID; RUN;

/*DATA LN_PRC;*/
/*SET LN_PRC;*/
/*BY DF_PRS_ID_BR;*/
/*IF FIRST.DF_PRS_ID_BR THEN BR_CT = 1;*/
/*ELSE BR_CT = 0;*/
/*RUN;*/

PROC SQL;
CREATE TABLE LN_SMRY AS 
SELECT DISTINCT A1.AC_LON_TYP
	,A.LOANS
	,A.LN_AMT
	,COALESCE(A.LN_AMT/A.LOANS,0) AS LN_AVRG
	,A.BRWRS
	,COALESCE(A.LN_AMT/A.BRWRS,0) AS BR_AVRG
	,B.N2SYS
	,B.NLN_AMT
	,COALESCE(B.NLN_AMT/B.N2SYS,0) AS NWBR_AVRG
	,C.O2SYS
	,C.OLN_AMT
	,COALESCE(C.OLN_AMT/C.O2SYS,0) AS OLBR_AVRG
FROM LN_PRC A1
LEFT OUTER JOIN (
	SELECT AC_LON_TYP
		,SUM(LN_CT) AS LOANS
		,SUM(COALESCE(AA_GTE_LON_AMT,0)) AS LN_AMT
		,COUNT(DISTINCT DF_PRS_ID_BR) AS BRWRS
	FROM LN_PRC 
	GROUP BY AC_LON_TYP	
	) A
	ON A1.AC_LON_TYP = A.AC_LON_TYP
LEFT OUTER JOIN (
	SELECT AC_LON_TYP
		,COUNT(DISTINCT DF_PRS_ID_BR) AS N2SYS
		,SUM(COALESCE(AA_GTE_LON_AMT,0)) AS NLN_AMT
	FROM LN_PRC 
	WHERE N2SYS_I = 1
	GROUP BY AC_LON_TYP
	) B
	ON A1.AC_LON_TYP = B.AC_LON_TYP
LEFT OUTER JOIN (
	SELECT AC_LON_TYP
		,COUNT(DISTINCT DF_PRS_ID_BR) AS O2SYS
		,SUM(COALESCE(AA_GTE_LON_AMT,0)) AS OLN_AMT
	FROM LN_PRC 
	WHERE O2SYS_I = 1
	GROUP BY AC_LON_TYP
	) C
	ON A1.AC_LON_TYP = C.AC_LON_TYP
;
QUIT;
/***************************************************
* GET UNIQUE BORROWER COUNTS FOR BORROWER TOTALS
****************************************************/
PROC SQL NOPRINT ;
	SELECT COUNT(DISTINCT DF_PRS_ID_BR) FORMAT=COMMA7.
	INTO :ALLBOR
	FROM LN_PRC
;
	SELECT COUNT(DISTINCT DF_PRS_ID_BR) FORMAT=COMMA7.
	INTO :NEWBOR
	FROM LN_PRC A
	WHERE A.AD_PRC >= &PREV_MNTH_BEG
	AND A.AD_PRC <= &PREV_MNTH_END
	AND A.DF_PRS_ID_BR NOT IN (
		SELECT DF_PRS_ID_BR
		FROM PREV_BR
		)
;
	SELECT COUNT(DISTINCT A.DF_PRS_ID_BR) FORMAT=COMMA7.
	INTO :OLDBOR
	FROM LN_PRC A
	INNER JOIN PREV_BR B
		ON A.DF_PRS_ID_BR = B.DF_PRS_ID_BR
;
QUIT;
/***************************************************
* CREATE REPORT
****************************************************/
PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=133 CENTER DATE PAGENO=1;
TITLE 'NEW GUARANTEE LOANS';
TITLE2 "YEAR TO DATE: &EFFDATE" ;
FOOTNOTE 'JOB = UTLWA12  	 REPORT = ULWA12.LWA12R2';
PROC REPORT DATA=LN_SMRY NOWD HEADSKIP HEADLINE SPLIT='~' SPACING=1;
COLUMN AC_LON_TYP LOANS BRWRS LN_AMT LN_AVRG BR_AVRG N2SYS NLN_AMT NWBR_AVRG O2SYS OLN_AMT OLBR_AVRG;
DEFINE AC_LON_TYP / GROUP 'Loan~Type' WIDTH=4 ;
DEFINE LOANS / ANALYSIS 'Number Of~Loans' WIDTH=9 FORMAT=COMMA8.;
DEFINE BRWRS / ANALYSIS 'Number Of~Borrowers' WIDTH=9 FORMAT=COMMA8.;
DEFINE LN_AMT / ANALYSIS 'Loan Amount' WIDTH=15 FORMAT=DOLLAR18.;
DEFINE LN_AVRG / ANALYSIS 'Average Loan Balance' WIDTH=8 FORMAT=DOLLAR10.;
DEFINE BR_AVRG / ANALYSIS 'Average Borrower Balance' WIDTH=8 FORMAT=DOLLAR10.;
DEFINE N2SYS / ANALYSIS 'New Borrowers To System' WIDTH=9 FORMAT=COMMA8.;
DEFINE NLN_AMT / ANALYSIS 'Amount For new Borrowers' WIDTH=14 FORMAT=DOLLAR14.;
DEFINE NWBR_AVRG / ANALYSIS 'Average New Borrower Balance' WIDTH=8 FORMAT=DOLLAR10.;
DEFINE O2SYS / ANALYSIS 'Borrowers W/ Prior Loan History' WIDTH=9 FORMAT=COMMA10.;
DEFINE OLN_AMT / ANALYSIS 'Amount For Borrowers W/ Prior Loan History' WIDTH=20 FORMAT=DOLLAR20.;
DEFINE OLBR_AVRG / ANALYSIS 'Average Existing Borrower Balance' WIDTH=8 FORMAT=DOLLAR10.;
COMPUTE AFTER;
	LINE '';
	LINE '';
	LINE @1 "Number Of Borrowers New To The System: 			&NEWBOR" ;
	LINE @1 "Number Of Borrowers With Prior Loan History:		&OLDBOR" ;
	LINE @1 '----------------------------------------------------------';
	LINE @1 "Total Number Of Borrowers:							&ALLBOR" ;
	LINE '';
ENDCOMP;
RUN;
PROC PRINTTO;
RUN;
/*DETAIL FILE*/
/*PROC SORT DATA=LN_PRC; BY AC_LON_TYP; RUN;*/
/*DATA _NULL_;*/
/*SET  WORK.LN_PRC;*/
/*FILE 'T:\SAS\UTLWA12.Detial.txt' DELIMITER=',' DSD DROPOVER LRECL=32767;*/
/*   FORMAT DF_PRS_ID_BR $9. ;*/
/*   FORMAT CLUID $19. ;*/
/*   FORMAT AA_TOT_CAN 15.2 ;*/
/*   FORMAT AA_GTE_LON_AMT 10.2 ;*/
/*   FORMAT AA_TOT_RFD 15.2 ;*/
/*   FORMAT AD_PRC DATE9. ;*/
/*   FORMAT AC_LON_TYP $2. ;*/
/*   FORMAT LN_CT BEST12. ;*/
/*   FORMAT N2SYS_I BEST12. ;*/
/*   FORMAT O2SYS_I BEST12. ;*/
/*   FORMAT BR_CT BEST12. ;*/
/*IF _N_ = 1 THEN        */
/* DO;*/
/*   PUT*/
/*   'DF_PRS_ID_BR'*/
/*   ','*/
/*   'CLUID'*/
/*   ','*/
/*   'AA_TOT_CAN'*/
/*   ','*/
/*   'AA_GTE_LON_AMT'*/
/*   ','*/
/*   'AA_TOT_RFD'*/
/*   ','*/
/*   'AD_PRC'*/
/*   ','*/
/*   'AC_LON_TYP'*/
/*   ','*/
/*   'LN_CT'*/
/*   ','*/
/*   'N2SYS_I'*/
/*   ','*/
/*   'O2SYS_I'*/
/*   ','*/
/*   'BR_CT'*/
/*   ;*/
/*END;*/
/*DO;*/
/*   PUT DF_PRS_ID_BR $ @;*/
/*   PUT CLUID $ @;*/
/*   PUT AA_TOT_CAN @;*/
/*   PUT AA_GTE_LON_AMT @;*/
/*   PUT AA_TOT_RFD @;*/
/*   PUT AD_PRC @;*/
/*   PUT AC_LON_TYP $ @;*/
/*   PUT LN_CT @;*/
/*   PUT N2SYS_I @;*/
/*   PUT O2SYS_I @;*/
/*   PUT BR_CT ;*/
/*   ;*/
/*END;*/
/*RUN;*/
