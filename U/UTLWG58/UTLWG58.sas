/*-----------------------------------*
| UTLWG58 LEAVE OF ABSENCE BORROWERS |
*-----------------------------------*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWG58.LWG58R2";
FILENAME REPORT3 "&RPTLIB/ULWG58.LWG58R3";
FILENAME REPORTZ "&RPTLIB/ULWG58.LWG58RZ";
OPTIONS SYMBOLGEN;

DATA _NULL_;
     CALL SYMPUT('ACTDT',INTNX('DAY',TODAY(),-180,'BEGINNING'));
     CALL SYMPUT('RUNDT',PUT(INTNX('DAY',TODAY(),0,'BEGINNING'), MMDDYYS10.));
RUN;

LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	FILENAME REPORTZ "&RPTLIB/&SQLRPT";
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE BWMLS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT GA01.DF_PRS_ID_STU
	,PD01.DM_PRS_LST
	,SD02.LC_STU_ENR_TYP
	,SD02.LD_ENR_CER
	,SD02.LD_STU_ENR_STA
	,SD02.LC_STA_SD02
	,AY01.BD_ATY_PRF

FROM OLWHRM1.GA01_APP GA01
INNER JOIN OLWHRM1.SD02_STU_ENR SD02
	ON GA01.DF_PRS_ID_STU = SD02.DF_PRS_ID_STU
INNER JOIN OLWHRM1.PD01_PDM_INF PD01
	ON SD02.DF_PRS_ID_STU = PD01.DF_PRS_ID
LEFT OUTER JOIN ( 
	SELECT DF_PRS_ID
		,MAX(BD_ATY_PRF) AS BD_ATY_PRF
	FROM OLWHRM1.AY01_BR_ATY 
	WHERE PF_ACT = 'ERLOA'
	GROUP BY DF_PRS_ID
	 ) AY01
	ON GA01.DF_PRS_ID_STU = AY01.DF_PRS_ID
	
WHERE EXISTS 
	(SELECT *
	 FROM OLWHRM1.GA14_LON_STA Y
	 INNER JOIN OLWHRM1.GA01_APP Z
	 	ON Y.AF_APL_ID = Z.AF_APL_ID
	 WHERE Z.DF_PRS_ID_STU = GA01.DF_PRS_ID_STU
	 AND Y.AC_STA_GA14 = 'A'
	 AND Y.AC_LON_STA_TYP IN ('IA','IG','RP','DA','FB','CR'))
AND EXISTS	
	(SELECT *
     FROM OLWHRM1.SD02_STU_ENR X
	 WHERE X.DF_PRS_ID_STU = SD02.DF_PRS_ID_STU
	 AND X.LC_STU_ENR_TYP = 'A')

FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;

/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWG58.LWG58RZ);*/
/*QUIT;*/

ENDRSUBMIT;
DATA BWMLS;
SET WORKLOCL.BWMLS;
RUN;

PROC SORT DATA=BWMLS;BY DF_PRS_ID_STU LD_ENR_CER DESCENDING LC_STU_ENR_TYP;RUN;
/*==================================================================================*/
/*BEGIN PROCESSING FOR R2															*/
/*==================================================================================*/
DATA PRC;
SET BWMLS;
RUN;

DATA PRC1A;
SET PRC;
BY DF_PRS_ID_STU;
IF LAST.DF_PRS_ID_STU THEN OUTPUT;
RUN;

DATA PRC1B;
SET PRC1A;
IF LC_STU_ENR_TYP = 'A' THEN OUTPUT;
RUN;

DATA PRC1;
MERGE PRC1B (IN=A) PRC (IN=B);
BY DF_PRS_ID_STU LD_ENR_CER;
IF A;
RUN;

PROC SORT DATA=PRC1; BY DF_PRS_ID_STU LD_ENR_CER LD_STU_ENR_STA; RUN;

DATA PRC1;
SET PRC1;
BY DF_PRS_ID_STU;
IF LAST.DF_PRS_ID_STU THEN OUTPUT;
RUN;

DATA PRC1;
SET PRC1;
IF LC_STU_ENR_TYP = 'A' 
	AND LC_STA_SD02 IN ('A','H')
	AND LD_STU_ENR_STA LT &ACTDT 
	AND LD_STU_ENR_STA GT BD_ATY_PRF THEN OUTPUT;
RUN; 
/*==================================================================================*/
/*END PROCESSING FOR R2																*/
/*==================================================================================*/
/*BEGIN PROCESSING FOR R3															*/
/*==================================================================================*/
DATA PRC2 (DROP=LD_ENR_CER);
SET BWMLS;
RUN;

PROC SORT DATA=PRC2 NODUPKEY;BY DF_PRS_ID_STU LD_STU_ENR_STA;RUN;

PROC SQL;
CREATE TABLE PRC2B AS 
SELECT DF_PRS_ID_STU
	,COUNT(*) AS COUNT
FROM PRC2
WHERE LC_STU_ENR_TYP = 'A'
AND LC_STA_SD02 IN ('A','H')
GROUP BY DF_PRS_ID_STU
HAVING COUNT(*) > 1;
QUIT;
RUN;

PROC SQL;
CREATE TABLE TWLVE AS 
SELECT A.*
FROM PRC2 A
WHERE A.DF_PRS_ID_STU IN 
	(SELECT DISTINCT DF_PRS_ID_STU
 	 FROM PRC2B)
AND LC_STU_ENR_TYP = 'A'
AND LC_STA_SD02 IN ('A','H');
QUIT;
RUN; 

/*============================================================*/
/*NOTE: THE SORT FOR THIS DATA SET IS KEY TO MACRO PROCESSING!*/
/*============================================================*/
PROC SORT DATA=TWLVE; BY DF_PRS_ID_STU DESCENDING LD_STU_ENR_STA;RUN;

/*INITIALIZE DATA SETS TO BE USED IN MARCO PROCESSING*/
DATA NXTDS;
RUN;
DATA RMSTR;
RUN;

/*CREATE DATA SET AT BORROWER LEVEL FOR MACRO PROCESSING*/
PROC SORT DATA=TWLVE OUT=SSN12 (KEEP=DF_PRS_ID_STU) NODUPKEY;
BY DF_PRS_ID_STU;
RUN;

/*GET COUNT OF BORROWERS FOR MACRO PROCESSING*/
DATA _NULL_;
SET SSN12;
	CALL SYMPUT('SSN_COUNT',TRIM(_N_));
RUN;

/*THIS MACRO EVALUTES ENROLLMENT EFFECTIVE DATES AT THE BORROWER LEVEL*/
%MACRO DSQR(I_NUM);
DATA _NULL_;
SET SSN12;
IF _N_ = &I_NUM THEN DO;
	CALL SYMPUT ('CRIT_SSN',TRIM(DF_PRS_ID_STU));
	END;
RUN;

DATA STPA(KEEP=DF_PRS_ID_STU LD_STU_ENR_STA);
SET TWLVE(WHERE = (DF_PRS_ID_STU EQ "&CRIT_SSN"));
RUN;

/*GET COUNT FOR ITERATIVE PROCESSING LOOP*/
DATA _NULL_;
SET STPA;
	CALL SYMPUT('I_COUNT',TRIM(_N_ - 1));
RUN;

PROC TRANSPOSE DATA=STPA OUT=STPA1 (DROP=_NAME_ _LABEL_ ) PREFIX=EDT;
VAR LD_STU_ENR_STA;
BY DF_PRS_ID_STU;
RUN;

/*%MACRO IVAL;*/
%LET C = 1;
%LET C2 = 2;
%DO I=1 %TO &I_COUNT;
	DATA STPB;
		SET STPA1;
		VAL = EDT&C - EDT&C2;
	RUN;
	DATA NXTDS;
		SET NXTDS STPB;
	RUN;
   %LET C = %EVAL(&C+1);
   %LET C2 = %EVAL(&C2+1);
%END;
/*%MEND IVAL;*/
/*%IVAL;*/

/*CREATE MASTER DATA SET WITH APPROPRIATE VALUES FOR DIFFERENCES BETWEEN ENROLLMENT STATUS DATES*/
DATA RMSTR (WHERE=(DF_PRS_ID_STU NE ' ') KEEP=DF_PRS_ID_STU VAL);
SET NXTDS STPB;
RUN;
%MEND DSQR;

/*ENVOKE AND PROCESS MACROS*/
%MACRO DCBD;
%DO X=1 %TO &SSN_COUNT;
	%PUT *************;
	%PUT X = &X;
	%PUT *************;
	%DSQR(&X);
%END;
%MEND DCBD;
%DCBD;

DATA RMSTR (KEEP=DF_PRS_ID_STU);
SET RMSTR;
IF VAL < 365 THEN OUTPUT;
ELSE DELETE;
RUN;

DATA TWLVE;
MERGE TWLVE (IN=A) RMSTR (IN=B);
BY DF_PRS_ID_STU;
IF B;
RUN;

PROC SORT DATA=TWLVE;BY DF_PRS_ID_STU LD_STU_ENR_STA;RUN;

DATA TWLVE;
SET TWLVE;
BY DF_PRS_ID_STU;
IF LAST.DF_PRS_ID_STU THEN OUTPUT;
RUN; 

/*EVALUATE ACTION CODE DATE AND ENROLLMENT STATUS DATE*/
DATA TWLVE;
SET TWLVE;
IF LD_STU_ENR_STA GT BD_ATY_PRF THEN OUTPUT;
ELSE DELETE;
RUN;
/*===================================================================================*/
/*END PROCESSING FOR R3*/
/*===================================================================================*/

/*FINAL SORT*/
PROC SORT DATA=PRC1 NODUPKEY;BY DF_PRS_ID_STU;RUN;
PROC SORT DATA=TWLVE NODUPKEY;BY DF_PRS_ID_STU;RUN;

%MACRO PRNT(DSET,REPNO,TITLE);
PROC PRINTTO PRINT=REPORT&REPNO NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 NODATE CENTER;
TITLE "&TITLE";
TITLE2	"RUNDATE &RUNDT";
FOOTNOTE "JOB = UTLWG58  	 REPORT = ULWG58.LWG58R&REPNO";
PROC CONTENTS DATA=&DSET OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      ////////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWG58  	 REPORT = ULWG58.LWG58R&REPNO";
	END;
RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=&DSET WIDTH=UNIFORM WIDTH=MIN;
VAR DF_PRS_ID_STU DM_PRS_LST;
LABEL DF_PRS_ID_STU = 'STUDENT SSN'
	DM_PRS_LST = 'STUDENT LAST NAME';
RUN;
PROC PRINTTO;
RUN;
%MEND PRNT;
%PRNT(PRC1,2,STUDENTS IN A LEAVE OF ABSENCE STATUS MORE THAN 180 DAYS);
%PRNT(TWLVE,3,STUDENTS WITH A MULTIPLE LEAVE OF ABSENCE RECORDS WITHIN A TWELVE MONTH PERIOD);
