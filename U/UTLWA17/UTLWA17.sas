/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWA17.LWA17R2";
FILENAME REPORT3 "&RPTLIB/ULWA17.LWA17R3";
FILENAME REPORT4 "&RPTLIB/ULWA17.LWA17R4";
FILENAME REPORTZ "&RPTLIB/ULWA17.LWA17RZ";


OPTIONS SYMBOLGEN NOCENTER NODATE NONUMBER LS=132;

LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;

%macro sqlcheck ;
  %if  &sqlxrc ne 0  %then  %do  ;
    data _null_  ;
            file reportz notitles  ;
            put @01 " ********************************************************************* "
              / @01 " ****  The SQL code above has experienced an error.               **** "
              / @01 " ****  The SAS should be reviewed.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  The SQL error code is  &sqlxrc  and the SQL error message  **** "
              / @01 " ****  &sqlxmsg   **** "
              / @01 " ********************************************************************* "
            ;
         run  ;
  %end  ;
%mend  ;


PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE DEMO AS
SELECT *
FROM CONNECTION TO DB2 (

SELECT LN10.BF_SSN
	,LN10.LN_SEQ
	,LN35.IF_BND_ISS
	,PD10.DM_PRS_LST
	,PD10.DF_SPE_ACC_ID
	,LN10.LA_CUR_PRI
	,LN10.LA_LTE_FEE_OTS
	,LN10.LA_NSI_OTS

	,LN15.LC_STA_LON15
	,LN15.LC_DSB_TYP
	,COALESCE(LN10.LA_CUR_PRI,0) + COALESCE(LN10.LA_LTE_FEE_OTS,0) + COALESCE(LN10.LA_NSI_OTS,0) AS BAL
	,DW01.WC_DW_LON_STA
	,LN15.LA_DSB
	,LN15.LA_DSB_CAN

FROM OLWHRM1.LN10_LON LN10
INNER JOIN OLWHRM1.LN15_DSB LN15
	ON LN10.BF_SSN = LN15.BF_SSN
	AND LN10.LN_SEQ = LN15.LN_SEQ
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
	ON LN10.BF_SSN = DW01.BF_SSN
	AND LN10.LN_SEQ = DW01.LN_SEQ
INNER JOIN OLWHRM1.LN35_LON_OWN LN35
	ON LN10.BF_SSN = LN35.BF_SSN
	AND LN10.LN_SEQ = LN35.LN_SEQ
	AND LN35.IF_OWN = LN10.LF_LON_CUR_OWN
INNER JOIN OLWHRM1.PD10_PRS_NME PD10
	ON PD10.DF_PRS_ID = LN10.BF_SSN

WHERE LN10.LF_LON_CUR_OWN = '828476'


FOR READ ONLY WITH UR

);
DISCONNECT FROM DB2;

/*%put  sqlxrc= >>> &sqlxrc <<< ||| sqlxmsg= >>> &sqlxmsg >>> ;  ** includes error messages to SAS log  ;*/
/*%sqlcheck;*/
/*quit;*/
PROC SORT DATA=DEMO;BY BF_SSN;RUN;

DATA EXCL1 (KEEP=BF_SSN);
SET DEMO;
WHERE LC_STA_LON15 <> '1' 
AND LC_STA_LON15 <> '3'
AND LC_DSB_TYP <> '2';
RUN;

DATA EXCL2 (KEEP=BF_SSN);
SET DEMO;
WHERE WC_DW_LON_STA IN ('01','02');
RUN;

PROC SQL;
CREATE TABLE INCL3 AS
SELECT BF_SSN
FROM DEMO
GROUP BY BF_SSN
HAVING SUM(BAL) < 600 and SUM(BAL) > 0
;
QUIT;

PROC SORT DATA=EXCL1;
BY BF_SSN;
RUN;
PROC SORT DATA=EXCL2;
BY BF_SSN;
RUN;
PROC SORT DATA=INCL3;
BY BF_SSN;
RUN;

/*REMOVE EXCLUSIONS*/
DATA FINAL;
MERGE DEMO (IN=A) EXCL1 (IN=B) EXCL2 (IN=C) INCL3 (IN=E); 
BY BF_SSN;
IF (A AND NOT B) AND (A AND NOT C) AND (A AND E) THEN OUTPUT FINAL;
ELSE DELETE;
RUN;
PROC SORT DATA=FINAL;
BY BF_SSN;
RUN;

ENDRSUBMIT;

DATA FINAL; SET WORKLOCL.FINAL; RUN;


/*R2*/
DATA R2XA (KEEP=BF_SSN);
SET FINAL;
WHERE LA_DSB = LA_DSB_CAN
AND BAL > 0
;
RUN;
DATA R2XB (KEEP=BF_SSN);
SET FINAL;
WHERE LA_CUR_PRI <= 0
;
RUN;
DATA R2;
MERGE FINAL (IN=A) R2XA (IN=B) R2XB (IN=C); 
BY BF_SSN;
IF (A AND NOT B) AND (A AND NOT C) THEN OUTPUT R2;
ELSE DELETE;
RUN;
PROC SQL;
CREATE TABLE R2BOR AS
SELECT IF_BND_ISS
	,COUNT(*) AS TOTBOR
FROM (SELECT DISTINCT IF_BND_ISS, BF_SSN FROM R2)
GROUP BY IF_BND_ISS
;
QUIT;
PROC SQL;
CREATE TABLE R2LOAN AS
SELECT DISTINCT IF_BND_ISS
	,COUNT(*) AS TOTLOAN
FROM (SELECT DISTINCT IF_BND_ISS, BF_SSN, LN_SEQ FROM R2)
GROUP BY IF_BND_ISS
;
QUIT;
PROC SQL;
CREATE TABLE R2PRIN AS
SELECT IF_BND_ISS
	,SUM(LA_CUR_PRI) AS TOTPRIN
	,SUM(LA_NSI_OTS) AS TOTINT
	,SUM(LA_LTE_FEE_OTS) AS TOTFEE
FROM (SELECT DISTINCT IF_BND_ISS, BF_SSN, LN_SEQ, LA_CUR_PRI, LA_NSI_OTS, LA_LTE_FEE_OTS FROM R2)
GROUP BY IF_BND_ISS
;
QUIT;
DATA R2;
MERGE R2BOR R2LOAN R2PRIN;
BY IF_BND_ISS;
RUN;
PROC SORT DATA=R2;
BY IF_BND_ISS;
RUN;
PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
/*For portrait reports;*/
OPTIONS ORIENTATION = PORTRAIT;
OPTIONS CENTER NODATE NUMBER PAGENO=1 PS=52 LS=96;
PROC CONTENTS DATA=R2 OUT=EMPTYSET NOPRINT;
/*PORTRAIT*/
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 96*'-';
	PUT      ////////
		@35 '**** NO RECORDS FOUND ****';
	PUT ////////
		@38 '-- END OF REPORT --';
	PUT ////////////////
		@27 "JOB = UTLWA17     REPORT = ULWA17.LWA17R2";
	END;
RETURN;
TITLE "Special Write off Program";
TITLE2 "Estimate  - Summary";
RUN;

/*PROC PRINT NOOBS SPLIT='/' DATA=R2;*/
/*VAR IF_BND_ISS TOTBOR TOTLOAN TOTPRIN TOTINT TOTFEE;*/
/*LABEL	IF_BND_ISS = 'BOND ID'*/
/*		TOTBOR = 'BORROWERS'*/
/*		TOTLOAN = 'LOANS'*/
/*		TOTPRIN = 'PRINCIPAL'*/
/*		TOTINT = 'INTEREST'*/
/*		TOTFEE = 'LATE FEES'*/
/*		;*/
/**/
/*TITLE "Special Write off Program";*/
/*TITLE2 "Estimate  - Summary";*/
/*FOOTNOTE  'JOB = UTLWA17     REPORT = UTLWA17.LWA17R2';*/
/*RUN;*/

PROC REPORT DATA=R2 NOWD HEADSKIP SPLIT='/' SPACING=3;
TITLE "Special Write off Program";
TITLE2 "Estimate  - Summary";
FOOTNOTE  'JOB = UTLWA17     REPORT = UTLWA17.LWA17R2';

COLUMN IF_BND_ISS TOTBOR TOTLOAN TOTPRIN TOTINT TOTFEE;
DEFINE IF_BND_ISS / DISPLAY "BOND ID" FORMAT=$8. WIDTH=11;
DEFINE TOTBOR / ANALYSIS "BORROWERS" FORMAT=BEST12. WIDTH=11;
DEFINE TOTLOAN / ANALYSIS "LOANS" FORMAT=BEST12. WIDTH=11;
DEFINE TOTPRIN / ANALYSIS "PRINCIPAL" FORMAT=DOLLAR12.2 WIDTH=11;
DEFINE TOTINT / ANALYSIS "INTEREST" FORMAT=DOLLAR12.2 WIDTH=11;
DEFINE TOTFEE / ANALYSIS "LATE FEES" FORMAT=DOLLAR12.2 WIDTH=12;

COMPUTE AFTER;
LINE ' ';
LINE @20 'TOTAL BORROWERS:' @53 TOTBOR.SUM BEST12.;
LINE @20 'TOTAL LOANS:' @53 TOTLOAN.SUM BEST12.;
LINE @20 'TOTAL PRINCIPAL:' @56 TOTPRIN.SUM DOLLAR11.2;
LINE @20 'TOTAL INTEREST:' @53 TOTINT.SUM DOLLAR14.2;
LINE @20 'TOTAL LATE FEES:' @53 TOTFEE.SUM DOLLAR14.2;
ENDCOMP;
RUN;


/*R3*/
DATA R3X (KEEP=BF_SSN LN_SEQ);
SET FINAL;
WHERE LA_DSB <> LA_DSB_CAN
OR BAL <= 0;
RUN;
PROC SORT DATA=R3X;
BY BF_SSN LN_SEQ;
RUN;
PROC SORT DATA=FINAL;
BY BF_SSN LN_SEQ;
RUN;
DATA R3F (KEEP=DF_SPE_ACC_ID DM_PRS_LST LN_SEQ BAL);
MERGE FINAL (IN=A) R3X (IN=B) ; 
BY BF_SSN LN_SEQ;
IF (A AND NOT B) THEN OUTPUT R3F;
ELSE DELETE;
RUN;
PROC SQL;
CREATE TABLE R3 AS
SELECT DISTINCT *
FROM R3F
;
QUIT;
PROC SORT DATA=R3;
BY DF_SPE_ACC_ID;
RUN;
PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
/*For portrait reports;*/
OPTIONS ORIENTATION = PORTRAIT;
OPTIONS CENTER NODATE NUMBER PAGENO=1 PS=52 LS=96;
PROC CONTENTS DATA=R3 OUT=EMPTYSET NOPRINT;
/*PORTRAIT*/
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 96*'-';
	PUT      ////////
		@35 '**** NO RECORDS FOUND ****';
	PUT ////////
		@38 '-- END OF REPORT --';
	PUT ////////////////
		@27 "JOB = UTLWA17     REPORT = ULWA17.LWA17R3";
	END;
RETURN;
TITLE "Special Write off Program";
TITLE2 "Late Cancellations";
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=R3;
VAR DF_SPE_ACC_ID DM_PRS_LST LN_SEQ BAL;
LABEL	DF_SPE_ACC_ID = 'ACCOUNT'
		DM_PRS_LST = 'LAST NAME'
		LN_SEQ = 'LOAN SEQ#'
		BAL = 'BALANCE'
		;

TITLE "Special Write off Program";
TITLE2 "Late Cancellations";
FOOTNOTE  'JOB = UTLWA17     REPORT = UTLWA17.LWA17R3';
RUN;

/*R4*/
DATA R4X (KEEP=BF_SSN);
SET FINAL;
WHERE LA_CUR_PRI >= 0;
RUN;
DATA R4F (KEEP=DF_SPE_ACC_ID DM_PRS_LST);
MERGE FINAL (IN=A) R4X (IN=B) ; 
BY BF_SSN;
IF (A AND NOT B) THEN OUTPUT R4F;
ELSE DELETE;
RUN;
PROC SQL;
CREATE TABLE R4 AS
SELECT DISTINCT *
FROM R4F
;
QUIT;
PROC SORT DATA=R4;
BY DF_SPE_ACC_ID;
RUN;
PROC PRINTTO PRINT=REPORT4 NEW;
RUN;
/*For portrait reports;*/
OPTIONS ORIENTATION = PORTRAIT;
OPTIONS CENTER NODATE NUMBER PAGENO=1 PS=52 LS=96;
PROC CONTENTS DATA=R4 OUT=EMPTYSET NOPRINT;
/*PORTRAIT*/
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 96*'-';
	PUT      ////////
		@35 '**** NO RECORDS FOUND ****';
	PUT ////////
		@38 '-- END OF REPORT --';
	PUT ////////////////
		@27 "JOB = UTLWA17     REPORT = ULWA17.LWA17R4";
	END;
RETURN;
TITLE "Special Write off Program";
TITLE2 "Accounts with Credit Balance Loans";
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=R4;
VAR DF_SPE_ACC_ID DM_PRS_LST;
LABEL	DF_SPE_ACC_ID = 'ACCOUNT'
		DM_PRS_LST = 'LAST NAME';

TITLE "Special Write off Program";
TITLE2 "Accounts with Credit Balance Loans";
FOOTNOTE  'JOB = UTLWA17     REPORT = UTLWA17.LWA17R4';
RUN;


PROC PRINTTO;
RUN;

