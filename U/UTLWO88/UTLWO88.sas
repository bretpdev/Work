*----------------------------------------------------*
| UTLWO88 - MULTIPLE ACCOUNTS WITH SAME DEMOGRAPHICS |
*----------------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWO88.LWO88R2";
FILENAME REPORT3 "&RPTLIB/ULWO88.LWO88R3";
FILENAME REPORTZ "&RPTLIB/ULWO88.LWO88RZ";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
/*LOAN LEVEL INFORMATION*/
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE GA AS
SELECT *
FROM CONNECTION TO DB2 (
	SELECT DISTINCT A.DF_PRS_ID_BR
		,A.DF_PRS_ID_EDS
		,A.AC_EDS_TYP
		,B.AF_APL_ID||B.AF_APL_ID_SFX AS CLUID
		,C.AC_LON_STA_TYP
		,D.PDISB
	FROM OLWHRM1.GA01_APP A
	INNER JOIN OLWHRM1.GA10_LON_APP B
		ON A.AF_APL_ID = B.AF_APL_ID
	INNER JOIN OLWHRM1.GA14_LON_STA C
		ON B.AF_APL_ID = C.AF_APL_ID
		AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
	LEFT OUTER JOIN (
		SELECT DISTINCT B.BF_SSN
			,'X' AS PDISB
		FROM OLWHRM1.AP03_MASTER_APL A
		INNER JOIN OLWHRM1.LN15_DSB B
			ON A.AF_APL_ID = B.AF_APL_ID
		WHERE A.AF_CNL NOT LIKE ('%REALLO%')
			AND B.LC_DSB_TYP = '1'
			AND B.LC_STA_LON15 IN ('1','3')
			AND B.LA_DSB <> COALESCE(LA_DSB_CAN,0) 
			AND B.LD_DSB_ROS_PRT IS NULL
			AND B.LC_LDR_DSB_MDM = ' '
		) D
		ON A.DF_PRS_ID_BR = D.BF_SSN
	WHERE C.AC_STA_GA14 = 'A'
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
PROC SQL;
/*PRECLAIM INFORMATION*/
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE DC AS
SELECT *
FROM CONNECTION TO DB2 (
	SELECT B.AF_APL_ID||B.AF_APL_ID_SFX AS CLUID
		,B.LF_CRT_DTS_DC10
		,B.LC_STA_DC10 
		,B.LD_CLM_ASN_DOE 
	FROM OLWHRM1.DC01_LON_CLM_INF B
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
PROC SQL;
/*DEMOGRAPHIC INFORMATION*/
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE PD AS
SELECT *
FROM CONNECTION TO DB2 (
	SELECT A.DF_PRS_ID
		,A.DC_ADR
		,A.DX_STR_ADR_1 
		,A.DX_STR_ADR_2
		,A.DM_CT 
		,A.DC_DOM_ST 
		,A.DF_ZIP
		,A.DI_VLD_ADR
		,A.DN_PHN
		,A.DN_ALT_PHN
		,A.DI_PHN_VLD
		,A.DI_ALT_PHN_VLD
		,B.DM_PRS_1
		,B.DM_PRS_LST
		,B.DF_SPE_ACC_ID
		,B.DC_PRS_HLD_REA_1 
		,B.DC_PRS_HLD_REA_2 
		,B.DC_PRS_HLD_REA_3 
		,B.DC_PRS_HLD_REA_4 
		,B.DC_PRS_HLD_REA_5
	FROM OLWHRM1.PD03_PRS_ADR_PHN A
	INNER JOIN OLWHRM1.PD01_PDM_INF B
		ON A.DF_PRS_ID = B.DF_PRS_ID
FOR READ ONLY WITH UR
);



DISCONNECT FROM DB2;
/*COMBINE LOAN AND PRECLAIM INFO*/
PROC SQL;
CREATE TABLE GADC AS
SELECT GA.DF_PRS_ID_BR
	,GA.CLUID
	,GA.AC_LON_STA_TYP
	,GA.DF_PRS_ID_EDS
	,GA.AC_EDS_TYP
	,GA.PDISB
	,DC.LF_CRT_DTS_DC10
	,DC.LC_STA_DC10 
	,DC.LD_CLM_ASN_DOE
FROM GA
LEFT OUTER JOIN DC
	ON GA.CLUID = DC.CLUID
;
QUIT;
/*CLEAN UP LARGE LOAN AND PRECLAIM DATA SETS*/
PROC DATASETS;
	DELETE GA DC;
QUIT;
/*REMOVE CLOSED ACCOUNTS*/
PROC SORT DATA=GADC;
	BY CLUID LF_CRT_DTS_DC10;
RUN;
DATA GADC;
	SET GADC;
	BY CLUID LF_CRT_DTS_DC10;
	IF LAST.CLUID THEN 
		OUTPUT;
RUN;
DATA GADC (DROP=AC_LON_STA_TYP LF_CRT_DTS_DC10 LC_STA_DC10 LD_CLM_ASN_DOE);
	SET GADC;
	IF AC_LON_STA_TYP = 'CP' AND ((LC_STA_DC10 = '03' AND LD_CLM_ASN_DOE = .) OR LC_STA_DC10 = '04') THEN
		DELETE;
	ELSE IF AC_LON_STA_TYP IN ('CA','PN','DN','UI','UC','UD','PF','PC','AE') THEN 
		DELETE;
	ELSE DO;
		DF_PRS_ID = DF_PRS_ID_BR;
		PTYP = 'B';	
		OUTPUT;
	END;
RUN;
/*ADD SPECIFIC ROWS FOR ENDORSERS*/
DATA EDR;
	SET GADC;
	WHERE DF_PRS_ID_EDS ^= '' AND AC_EDS_TYP IN ('E','C','S');
	DF_PRS_ID = DF_PRS_ID_EDS;
	PTYP = 'E';
RUN;
/*THIS WILL NOW BE EVALUATED AT A PERSON (BORROWER AND ENDORSERS) LEVEL*/
DATA GADC (DROP=DF_PRS_ID_BR DF_PRS_ID_EDS AC_EDS_TYP);
	SET GADC EDR;	
RUN;
/*COMBINE DEMOGRAPHIC INFO WITH LOAN INFO*/
PROC SQL;
CREATE TABLE PDEM AS
SELECT DISTINCT GADC.DF_PRS_ID
	,GADC.PTYP
	,GADC.PDISB
	,PD.DC_ADR
	,PD.DX_STR_ADR_1 
	,PD.DX_STR_ADR_2
	,PD.DM_CT 
	,PD.DC_DOM_ST 
	,PD.DF_ZIP
	,PD.DI_VLD_ADR
	,PD.DN_PHN
	,PD.DN_ALT_PHN
	,PD.DI_PHN_VLD
	,PD.DI_ALT_PHN_VLD
	,PD.DF_SPE_ACC_ID
	,PD.DM_PRS_1
	,PD.DM_PRS_LST
	,PD.DC_PRS_HLD_REA_1 
	,PD.DC_PRS_HLD_REA_2 
	,PD.DC_PRS_HLD_REA_3 
	,PD.DC_PRS_HLD_REA_4 
	,PD.DC_PRS_HLD_REA_5
FROM GADC
INNER JOIN PD
	ON GADC.DF_PRS_ID = PD.DF_PRS_ID
;
QUIT;
/*CLEAN UP LARGE DATA SET*/
PROC DATASETS;
	DELETE GADC;
QUIT;
PROC SORT DATA=PDEM OUT=PEND_DSB (KEEP=DF_PRS_ID PDISB WHERE=(PDISB='X')) NODUPKEY;
	BY DF_PRS_ID;
RUN;
/*ADDRESSES WITH AT LEAST 10 OCCURANCES*/
PROC SQL;
CREATE TABLE ADD10 AS
SELECT DISTINCT A.*
	,'AGT10' AS TYP
FROM PDEM A
INNER JOIN (
	SELECT DX_STR_ADR_1 
		,DX_STR_ADR_2
		,DM_CT 
		,DC_DOM_ST 
		,DF_ZIP
		,DI_VLD_ADR
		,COUNT(*) AS ICT
	FROM PDEM 
	WHERE DI_VLD_ADR = 'Y'
	GROUP BY DX_STR_ADR_1 
		,DX_STR_ADR_2
		,DM_CT 
		,DC_DOM_ST 
		,DF_ZIP
	HAVING COUNT(*) >= 10
	) B
	ON A.DX_STR_ADR_1 = B.DX_STR_ADR_1 
	AND A.DX_STR_ADR_2 = B.DX_STR_ADR_2
	AND A.DM_CT = B.DM_CT 
	AND A.DC_DOM_ST = B.DC_DOM_ST
	AND A.DF_ZIP = B.DF_ZIP 
	AND A.DI_VLD_ADR = B.DI_VLD_ADR
INNER JOIN (
	SELECT BB.DX_STR_ADR_1 
		,BB.DX_STR_ADR_2
		,BB.DM_CT 
		,BB.DC_DOM_ST
		,BB.DF_ZIP 
		,BB.DI_VLD_ADR
	FROM PEND_DSB AA
	INNER JOIN PDEM BB
		ON AA.DF_PRS_ID = BB.DF_PRS_ID
	) C
	ON A.DX_STR_ADR_1 = C.DX_STR_ADR_1 
	AND A.DX_STR_ADR_2 = C.DX_STR_ADR_2
	AND A.DM_CT = C.DM_CT 
	AND A.DC_DOM_ST = C.DC_DOM_ST
	AND A.DF_ZIP = C.DF_ZIP 
	AND A.DI_VLD_ADR = C.DI_VLD_ADR
;
QUIT;
/*PHONE NUMBERS WITH AT LEAST 10 OCCURANCES - INCLUDING ALTERNATE NUMBERS*/
DATA PHN (KEEP=DF_PRS_ID DC_ADR DN_PHN DI_PHN_VLD DI_ALT_PHN_VLD DN_ALT_PHN);
	SET PDEM;
RUN;
DATA PHN;
	SET PHN;
	IF DN_PHN = DN_ALT_PHN THEN DO;
		DN_ALT_PHN = ''; 
		DI_ALT_PHN_VLD = 'N';
	END;
RUN;
/*SPLIT THE PHONE NUMBERS FOR PROCESSING*/
DATA HPN(KEEP=DF_PRS_ID DN_PHN DI_PHN_VLD DC_ADR WHERE=(DI_PHN_VLD = 'Y')) 
	APN(KEEP=DF_PRS_ID DI_ALT_PHN_VLD DN_ALT_PHN DC_ADR WHERE=(DI_ALT_PHN_VLD = 'Y'));
	SET PHN;
RUN;
DATA APN (DROP=DN_ALT_PHN DI_ALT_PHN_VLD);
	SET APN;
	DN_PHN = DN_ALT_PHN;
	DI_PHN_VLD = DI_ALT_PHN_VLD;
RUN;
DATA PHN;
	SET HPN APN;
RUN;
PROC SORT DATA=PHN NODUPKEY;
	BY DF_PRS_ID DC_ADR DN_PHN;
RUN;
PROC SQL;
CREATE TABLE PHN10A AS
	SELECT DN_PHN
		,COUNT(*) AS ICT
	FROM PHN 
	GROUP BY DN_PHN
	HAVING COUNT(*) >= 10
;
CREATE TABLE PHN10 AS
	SELECT DISTINCT P.*
	FROM (
		SELECT A.*
			,B.DN_PHN AS RPHN
			,'PGT10' AS TYP
		FROM PDEM A
		INNER JOIN PHN10A B
			ON A.DN_PHN = B.DN_PHN
		WHERE A.DI_PHN_VLD = 'Y'
	UNION 
		SELECT Y.*
			,Z.DN_PHN AS RPHN
			,'PGT10' AS TYP
		FROM PDEM Y
		INNER JOIN PHN10A Z
			ON Y.DN_ALT_PHN = Z.DN_PHN
		WHERE Y.DI_ALT_PHN_VLD = 'Y'
	) P
	INNER JOIN (
			SELECT BB.DN_PHN AS RPHN
			FROM PEND_DSB AA
			INNER JOIN PDEM BB
				ON AA.DF_PRS_ID = BB.DF_PRS_ID
		UNION 
			SELECT BB.DN_ALT_PHN AS RPHN
			FROM PEND_DSB AA
			INNER JOIN PDEM BB
				ON AA.DF_PRS_ID = BB.DF_PRS_ID
	) C
		ON P.RPHN = C.RPHN
	;
QUIT;
PROC SORT DATA=ADD10;
	BY DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DC_DOM_ST DF_ZIP DI_VLD_ADR DF_SPE_ACC_ID;
RUN;
PROC SORT DATA=PHN10;
	BY RPHN DF_SPE_ACC_ID;
RUN;
DATA BWSD;
	SET ADD10 PHN10;
RUN;
/*ACCOUNTS MATCHING A FRAUD ADDRESS*/
PROC SQL;
CREATE TABLE HOAX AS
	SELECT A.*
		,'B' AS FI
	FROM PDEM A
	WHERE DC_PRS_HLD_REA_1 = 'B' OR 
		DC_PRS_HLD_REA_2 = 'B' OR 
		DC_PRS_HLD_REA_3 = 'B' OR 
		DC_PRS_HLD_REA_4 = 'B' OR 
		DC_PRS_HLD_REA_5 = 'B'
;
CREATE TABLE HX1 AS
	SELECT DISTINCT A.*
		,B.FI
	FROM PDEM A
	INNER JOIN HOAX B
		ON A.DX_STR_ADR_1 = B.DX_STR_ADR_1 
		AND A.DX_STR_ADR_2 = B.DX_STR_ADR_2
		AND A.DM_CT = B.DM_CT 
		AND A.DC_DOM_ST = B.DC_DOM_ST
		AND A.DF_ZIP = B.DF_ZIP 
		AND A.DI_VLD_ADR = B.DI_VLD_ADR
	WHERE A.DI_VLD_ADR = 'Y'
;
CREATE TABLE HX2 AS 
	SELECT DISTINCT X.*
	FROM (
			SELECT A.*
				,B.FI
				,B.DN_PHN AS TYP
			FROM PDEM A
			INNER JOIN HOAX B
				ON A.DN_PHN = B.DN_PHN
			WHERE A.DI_PHN_VLD = 'Y'
				AND B.DI_PHN_VLD = 'Y'
		UNION 
			SELECT A.*
				,B.FI
				,B.DN_PHN AS TYP
			FROM PDEM A
			INNER JOIN HOAX B
				ON A.DN_ALT_PHN = B.DN_PHN
			WHERE A.DI_ALT_PHN_VLD = 'Y'
				AND B.DI_PHN_VLD = 'Y'
		UNION
			SELECT A.*
				,B.FI
				,B.DN_ALT_PHN AS TYP
			FROM PDEM A
			INNER JOIN HOAX B
				ON A.DN_PHN = B.DN_ALT_PHN
			WHERE A.DI_PHN_VLD = 'Y'
				AND B.DI_ALT_PHN_VLD = 'Y'
		UNION
			SELECT A.*
				,B.FI
				,B.DN_ALT_PHN AS TYP
			FROM PDEM A
			INNER JOIN HOAX B
				ON A.DN_ALT_PHN = B.DN_ALT_PHN
			WHERE A.DI_ALT_PHN_VLD = 'Y'
				AND B.DI_ALT_PHN_VLD = 'Y'
		) X
		WHERE NOT EXISTS 
		(
			SELECT 1
			FROM HX1 Y
			WHERE Y.DF_SPE_ACC_ID = X.DF_SPE_ACC_ID
		)
;
QUIT;
PROC SORT DATA=HX1;
	BY DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DC_DOM_ST DF_ZIP DF_SPE_ACC_ID;
RUN;
PROC SORT DATA=HX2;
	BY TYP DF_SPE_ACC_ID;
RUN;
DATA DMAKFA;
	SET HX1 HX2;
RUN;
ENDRSUBMIT;
DATA BWSD;
	SET WORKLOCL.BWSD;
RUN;
DATA DMAKFA;
	SET WORKLOCL.DMAKFA;
RUN;
PROC FORMAT;
	VALUE $PSTA	
		'B' = 'BORROWER'
		'E' = 'ENDORSER';
QUIT;
PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127;
TITLE 'DEMOGRAPHICS MATCHING 10 OTHER ACCOUNTS';
FOOTNOTE   'JOB = UTLWO88  	 REPORT = ULWO88.LWO88R2';
PROC CONTENTS DATA=BWSD OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 127*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWO88  	 REPORT = ULWO88.LWO88R2";
	END;
RETURN;
RUN;
PROC REPORT NOWD DATA=BWSD SPLIT='~' SPACING=2 HEADSKIP;
COLUMN DF_SPE_ACC_ID DM_PRS_1 DM_PRS_LST DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DF_ZIP ADBLOCK DN_PHN 
	DN_ALT_PHN PTYP ;
DEFINE DF_SPE_ACC_ID / DISPLAY 'ACCOUNT~NUMBER' WIDTH=10;
DEFINE DM_PRS_1 / DISPLAY 'FIRST~NAME' WIDTH=10;
DEFINE DM_PRS_LST/ DISPLAY 'LAST~NAME' WIDTH=15;
DEFINE DX_STR_ADR_1 / DISPLAY NOPRINT;
DEFINE DX_STR_ADR_2 / DISPLAY NOPRINT;
DEFINE DM_CT / DISPLAY NOPRINT;
DEFINE DF_ZIP / DISPLAY NOPRINT;
DEFINE ADBLOCK / COMPUTED FLOW WIDTH=30 'BORROWER\ADDRESS';
DEFINE DN_PHN / DISPLAY 'PHONE' WIDTH=10;
DEFINE DN_ALT_PHN / DISPLAY 'ALT~PHONE' WIDTH=10;
DEFINE PTYP/ DISPLAY 'PERSON~TYPE' WIDTH=8 FORMAT=$PSTA.;
COMPUTE ADBLOCK / CHAR LENGTH=200 ;
	ADBLOCK= CATX(': ','ADDR 1',DX_STR_ADR_1)
	||'~'||CATX(': ','ADDR 2',DX_STR_ADR_2)
	||'~'||CATX(': ','CITY',DM_CT)
	||'~'||CATX(': ','ZIP',DF_ZIP)
	||'~~';
ENDCOMP;
RUN;
PROC PRINTTO;
RUN;
PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127;
TITLE 'DEMOGRAPHICS MATCH A KNOWN FRAUD ACCOUNT';
FOOTNOTE   'JOB = UTLWO88  	 REPORT = ULWO88.LWO88R3';
PROC CONTENTS DATA=DMAKFA OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 127*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWO88  	 REPORT = ULWO88.LWO88R3";
	END;
RETURN;
RUN;
PROC REPORT NOWD DATA=DMAKFA SPLIT='~' SPACING=2 HEADSKIP;
COLUMN DF_SPE_ACC_ID DM_PRS_1 DM_PRS_LST DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DF_ZIP ADBLOCK DN_PHN 
	DN_ALT_PHN PTYP FI;
DEFINE DF_SPE_ACC_ID / DISPLAY 'ACCOUNT~NUMBER' WIDTH=10;
DEFINE DM_PRS_1 / DISPLAY 'FIRST~NAME' WIDTH=10;
DEFINE DM_PRS_LST/ DISPLAY 'LAST~NAME' WIDTH=15;
DEFINE DX_STR_ADR_1 / DISPLAY NOPRINT;
DEFINE DX_STR_ADR_2 / DISPLAY NOPRINT;
DEFINE DM_CT / DISPLAY NOPRINT;
DEFINE DF_ZIP / DISPLAY NOPRINT;
DEFINE ADBLOCK / COMPUTED FLOW WIDTH=30 'BORROWER\ADDRESS';
DEFINE DN_PHN / DISPLAY 'PHONE' WIDTH=10;
DEFINE DN_ALT_PHN / DISPLAY 'ALT~PHONE' WIDTH=10;
DEFINE PTYP/ DISPLAY 'PERSON~TYPE' WIDTH=8 FORMAT=$PSTA.;
DEFINE FI / DISPLAY 'FRAUD~INDICATOR' WIDTH=9;
COMPUTE ADBLOCK / CHAR LENGTH=200 ;
	ADBLOCK= CATX(': ','ADDR 1',DX_STR_ADR_1)
	||'~'||CATX(': ','ADDR 2',DX_STR_ADR_2)
	||'~'||CATX(': ','CITY',DM_CT)
	||'~'||CATX(': ','ZIP',DF_ZIP)
	||'~~';
ENDCOMP;
RUN;
PROC PRINTTO;
RUN;
