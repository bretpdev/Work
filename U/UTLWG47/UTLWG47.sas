/*UTLWG47 LENDER DIALY DISBURSEMENT FILE*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
/*%LET TABLIB = /sas/whse/progrevw;*/
%LET RPTLIB = T:\SAS;
%LET TABLIB = Q:\Process Automation\TabSAS;
FILENAME REPORT2 "&RPTLIB/ULWG47.LWG47R2";
FILENAME REPORT3 "&RPTLIB/ULWG47.LWG47R3";
FILENAME REPORT4 "&RPTLIB/ULWG47.LWG47R4";
FILENAME REPORT5 "&RPTLIB/ULWG47.LWG47R5";
FILENAME REPORT6 "&RPTLIB/ULWG47.LWG47R6";
FILENAME REPORT7 "&RPTLIB/ULWG47.LWG47R7";
FILENAME REPORT8 "&RPTLIB/ULWG47.LWG47R8";
FILENAME REPORT9 "&RPTLIB/ULWG47.LWG47R9";
FILENAME REPORT10 "&RPTLIB/ULWG47.LWG47R10";
FILENAME REPORT11 "&RPTLIB/ULWG47.LWG47R11";
FILENAME REPORT12 "&RPTLIB/ULWG47.LWG47R12";
FILENAME REPORTZ "&RPTLIB/ULWG47.LWG47RZ";
DATA _NULL_;
	CALL SYMPUT('ROSTDT',"'"||PUT(INTNX('DAY',TODAY(),-1,'beginning'), MMDDYY10.)||"'");
RUN;
/************************************************************************
* GET ROOT SCHOOL ID FOR BRANCHES
*************************************************************************/
DATA _NULL_ /*SCHL_BRANCHES*/;
	INFILE "&TABLIB/UTLWG47.BR.txt" MISSOVER FIRSTOBS=2;
	INFORMAT HOME_SCHOOLS $200.;
	INPUT HOME_SCHOOLS ;
	PUT HOME_SCHOOLS=;
	DO;
		CALL SYMPUT('BLIST',TRIM(HOME_SCHOOLS));
	END;
RUN;
/************************************************************************
* INPUT LOAN TYPES FOR FFEL AND NON FFEL LOANS
*************************************************************************/
DATA LOAN_TYPES;
	FORMAT LN_TYP LN_PGM $50.;
	INFILE "&TABLIB/GENR_REF_LoanTypes.txt" DLM=',' MISSOVER DSD;
	INFORMAT LN_TYP LN_PGM $50.;
	INPUT LN_TYP LN_PGM ;
	LN_PGM = UPCASE(LN_PGM);
RUN;
/************************************************************************
* CREATE MACRO VARIALBE LISTS OF LOAN PROGRAMS(FFEL AND PRIVATE LOANS)
*************************************************************************/
PROC SQL NOPRINT;
	SELECT "'"||TRIM(LN_TYP)||"'" 
		INTO :FFEL_LIST SEPARATED BY "," /*FFEL LOAN LIST*/
	FROM LOAN_TYPES
	WHERE LN_PGM = 'FFEL';

	SELECT "'"||TRIM(LN_TYP)||"'" 
		INTO :NON_FFEL_LIST SEPARATED BY "," /*NON FFEL LOAN LIST*/
	FROM LOAN_TYPES
	WHERE LN_PGM ^= 'FFEL';
QUIT;
/************************************************************************
* GET BOND ID DATA
*************************************************************************/
DATA DISB_TAB;
	INFILE "&TABLIB/UTLWG47.BID.txt" DLM=',' MISSOVER FIRSTOBS=2;
	INFORMAT AF_LDR_BND_ISS $8. REP_BOND_ID $10. REP_ACCT_NUM $10.;
	INPUT AF_LDR_BND_ISS $ REP_BOND_ID $ REP_ACCT_NUM $;
RUN;
/************************************************************************
* GET RIGHT FAX DATA
*************************************************************************/
DATA RIGHT_FAX;
	INFILE "&TABLIB/UTLWG47.RF.txt" DLM=',' MISSOVER;
	INFORMAT RF_SCHL $8.;
	INPUT RF_SCHL $;
RUN;
%SYSLPUT ROSTDT = &ROSTDT;
%SYSLPUT BLIST = &BLIST;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
/************************************************************************
* GET LIST OF UHEAA LENDER IDs
*************************************************************************/
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	FILENAME REPORTZ "&RPTLIB/&SQLRPT";
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE DDREC AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.BF_SSN
	,A.LN_BR_DSB_SEQ
	,A.LN_LON_DSB_SEQ
	,A.IC_LON_PGM
	,A.LA_DSB_ORG_CHK_EFT AS DISB_AMT
	,A.LD_DSB
	,A.LA_DSB
	,A.LA_DSB - COALESCE(A.LA_DSB_CAN,0) AS GROSS_DSB
	,A.LC_LDR_DSB_MDM
	,B.AF_APL_ID
	,B.AF_RGL_CAT_LP20  
	,B.AF_LDR_BND_ISS
	,B.AD_SCL_LON_TRM_BEG
	,B.AD_SCL_LON_TRM_END
	,B.AF_CNL||B.AF_CNL_SFX AS CLUID
	,C.IF_DOE_LDR
	,C.IM_LDR_FUL	
	,D.IF_DOE_SCL
	,D.IM_SCL_FUL
	,BRNCH.ROOT_SCHL
	,BRNCH.ROOT_SCL_NM
	,BOR.DM_PRS_1 	AS BOR_1ST
	,BOR.DM_PRS_LST AS BOR_LST
	,STU.DM_PRS_1 	AS STU_1ST
	,STU.DM_PRS_LST AS STU_LST
	,B.LF_STU_SSN
	,COALESCE(OFEE.LA_DSB_FEE,0) AS OFEE
	,COALESCE(GFEE.LA_DSB_FEE,0) AS GFEE
FROM OLWHRM1.LN15_DSB A
INNER JOIN OLWHRM1.AP03_MASTER_APL B 
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.LR10_LDR_DMO C
	ON C.IF_DOE_LDR = B.AF_DOE_LDR
INNER JOIN OLWHRM1.SC10_SCH_DMO D
	ON B.AF_DOE_SCL = D.IF_DOE_SCL
INNER JOIN OLWHRM1.PD10_PRS_NME BOR
	ON BOR.DF_PRS_ID = B.BF_SSN
LEFT OUTER JOIN OLWHRM1.PD10_PRS_NME STU
	ON STU.DF_PRS_ID = B.LF_STU_SSN
LEFT OUTER JOIN OLWHRM1.LN18_DSB_FEE OFEE
	ON OFEE.BF_SSN = A.BF_SSN
	AND OFEE.LN_BR_DSB_SEQ = A.LN_BR_DSB_SEQ
	AND OFEE.LC_DSB_FEE = '02'
LEFT OUTER JOIN OLWHRM1.LN18_DSB_FEE GFEE
	ON GFEE.BF_SSN = A.BF_SSN
	AND GFEE.LN_BR_DSB_SEQ = A.LN_BR_DSB_SEQ
	AND GFEE.LC_DSB_FEE = '21'
LEFT OUTER JOIN (
	SELECT DISTINCT IF_DOE_SCL AS ROOT_SCHL
		,IM_SCL_SHO AS ROOT_SCL_NM	
	FROM OLWHRM1.SC10_SCH_DMO 
	WHERE SUBSTR(IF_DOE_SCL,1,6) IN (&BLIST)
		AND SUBSTR(IF_DOE_SCL,7,2) = '00'
	) BRNCH
	ON SUBSTR(B.AF_DOE_SCL,1,6) = SUBSTR(BRNCH.ROOT_SCHL,1,6)
WHERE A.LC_DSB_TYP = '1'
	AND A.LC_STA_LON15 IN ('1','3')
	AND A.LD_DSB_ROS_PRT = &ROSTDT
	AND A.LA_DSB != COALESCE(A.LA_DSB_CAN,0)  
	AND A.LC_LDR_DSB_MDM NOT IN ('M','E','F')
FOR READ ONLY WITH UR
);

CREATE TABLE DSB_MDM AS
SELECT DISTINCT B.*
FROM DDREC A
INNER JOIN CONNECTION TO DB2 (
	SELECT A.IF_DOE_SCL
		,B.IC_SCL_DPT
		,B.IX_SCL_STR_ADR_1
		,B.IX_SCL_STR_ADR_2
		,B.IM_SCL_CT
		,B.IC_SCL_DOM_ST
		,B.IF_SCL_ZIP_CDE
		,B.IM_SCL_FGN_ST
		,B.IM_SCL_FGN_CNY  
		,C.DPT5
	FROM OLWHRM1.SC26_DSB_SCH A
	LEFT OUTER JOIN OLWHRM1.SC25_SCH_DPT B
		ON A.IF_DOE_SCL = B.IF_DOE_SCL
		AND B.IC_SCL_DPT IN ('005','000')
	LEFT OUTER JOIN (
		SELECT IF_DOE_SCL
			,'X' AS DPT5
		FROM OLWHRM1.SC25_SCH_DPT 
		WHERE IC_SCL_DPT = '005'
		) C
		ON A.IF_DOE_SCL = C.IF_DOE_SCL
	FOR READ ONLY WITH UR
	) B
	ON A.IF_DOE_SCL = B.IF_DOE_SCL
	;
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWG47.LWG47RZ);*/
/*QUIT;*/
ENDRSUBMIT;
DATA DDREC;
	SET WORKLOCL.DDREC; 
RUN;
DATA DSB_MDM;
	SET WORKLOCL.DSB_MDM;
RUN;

*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! FOR TESTING ONLY DELTE FOR PRODUCTION <BEGIN> 
*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!;
/*DATA DDREC;*/
/*SET DDREC;*/
/*	IF IC_LON_PGM = 'PLUS' THEN */
/*		IC_LON_PGM = 'GOMD';*/
/*	ELSE */
/*		IC_LON_PGM = IC_LON_PGM;*/
/**/
/*	IF INDEX(AF_LDR_BND_ISS,'0000STNF') > 0 THEN */
/*		AF_LDR_BND_ISS = '00000UBS';*/
/*	ELSE */
/*		AF_LDR_BND_ISS = AF_LDR_BND_ISS;*/
/*RUN;*/
/*DATA DSB_MDM;*/
/*	SET DSB_MDM;*/
/*	IF IF_DOE_SCL = '00140201' THEN IX_SCL_STR_ADR_1 = 'FINANCIAL AID OFFICE';*/
/*RUN;*/
*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! FOR TESTING ONLY DELTE FOR PRODUCTION <END> 
*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!;
DATA DSB_MDM (DROP=KEY_STRING DPT5);
	SET DSB_MDM;
	LENGTH FINA_TXT $20.;
	KEY_STRING = 'FINANCIAL AID OFFICE';
	IF DPT5 = 'X' AND IC_SCL_DPT = '000' THEN 
		DELETE;
	IF IC_SCL_DPT = '000' THEN DO;
		IF INDEXW(IX_SCL_STR_ADR_1,KEY_STRING) + INDEXW(IX_SCL_STR_ADR_2,KEY_STRING) > 0 THEN
			FINA_TXT = '';
		ELSE 
			FINA_TXT = KEY_STRING;
	END;		
RUN;
DATA DDREC (DROP=FUND_MULTIPLIER ROOT_SCL_NM);
	SET DDREC;
	LENGTH DISB_DESC $10. LOAN_CAT $10. BLNDR $10. LOAN_DISPLAY $10. ROOT_SCHL_NM $40.;
	FUND_MULTIPLIER = .99;
	/*DISB DESCRIPTION AND SORT VARIABLE*/
	IF LC_LDR_DSB_MDM IN ('1','8') THEN DO; 
		DISB_DESC = 'CHECK';
		DISB_SRT = 3;
	END;
	ELSE IF LC_LDR_DSB_MDM = '3' THEN DO;
		DISB_DESC = 'EFT';
		DISB_SRT = 1;
	END;
	ELSE IF LC_LDR_DSB_MDM = '7' THEN DO;
		DISB_DESC = 'ELM';
		DISB_SRT = 2;
	END;
	/*LOAN CATEGORY*/
	IF IC_LON_PGM IN (&FFEL_LIST) THEN DO;
		LOAN_CAT = 'FFELP';
	END;
	ELSE DO; 
		LOAN_CAT = 'NON FFELP';
	END;
	/*BOND LENDER - FOR UBS AND CALCULATE FUNDING AMOUNT*/
	IF INDEX(AF_LDR_BND_ISS,'UBS') > 0 THEN DO;
		BLNDR = 'UBS';
		FUND_AMT = GROSS_DSB;
		IM_LDR_FUL = 'UBS';
	END;
	ELSE DO; 
		BLNDR = IF_DOE_LDR;
		IM_LDR_FUL = IM_LDR_FUL ;
		IF (IF_DOE_LDR = '828476' OR AF_RGL_CAT_LP20 ^= '2008020') THEN
			FUND_AMT = DISB_AMT;
		ELSE  
			FUND_AMT = ROUND(DISB_AMT * FUND_MULTIPLIER,.01);
	END;
	/*BLANK STUDENT INFO IF NOT A PLUS LOAN*/
	IF IC_LON_PGM ^= 'PLUS' THEN DO;
		LF_STU_SSN = '';
		STU_1ST = '';
		STU_LST = '';
	END;	
	/*ACCOUNT FOR SCHOOLS WITH BRANCHES*/
	IF ROOT_SCL_NM ^= '' THEN DO;
		SUBSTR(ROOT_SCHL,7,2) = 'XX';
		ROOT_SCHL_NM = ROOT_SCL_NM;
	END;
	ELSE DO;
	  	ROOT_SCHL = IF_DOE_SCL;
		ROOT_SCHL_NM = IM_SCL_FUL;
	END;
	/*R7 ROLL UP LOAN TYPE FOR WESTMINSTER*/
	IF IF_DOE_SCL = '00368100' THEN DO;
		IF IC_LON_PGM = 'UNSTFD' THEN
			LOAN_DISPLAY = 'STFFRD';
		ELSE IF IC_LON_PGM = 'PLUSGB' THEN
			LOAN_DISPLAY = 'PLUS';
		ELSE 
			LOAN_DISPLAY = IC_LON_PGM;
	END;
	ELSE 	
		LOAN_DISPLAY = 'ALL';	
RUN;
PROC SORT DATA=DDREC OUT=LENDERS (KEEP=IF_DOE_LDR BLNDR IM_LDR_FUL) NODUPKEY;
	BY IF_DOE_LDR BLNDR;
RUN;
PROC SORT DATA=DDREC OUT=SCHOOLS (KEEP=IF_DOE_SCL IM_SCL_FUL ) NODUPKEY;
	BY IF_DOE_SCL IM_SCL_FUL;
RUN;
/************************************************************************
* CREATE DATA SETS FOR REPORTS AND DATA FILES
*************************************************************************
* R2 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R2 AS 
SELECT DISTINCT A.BLNDR 
	,COALESCE(B.TOT_NET_DISB,0) AS TOT_NET_DISB
	,COALESCE(B.TOT_FND_AMNT,0) AS TOT_FND_AMNT
	,COALESCE(FFELP.TOT_FFELP_DISB,0) AS TOT_FFELP_DISB
	,COALESCE(FFELP.TOT_FFELP_AMNT,0) AS TOT_FFELP_AMNT
	,COALESCE(NONFFELP.TOT_NON_FFELP_DISB,0) AS TOT_NON_FFELP_DISB
	,COALESCE(NONFFELP.TOT_NON_FFELP_AMNT,0) AS TOT_NON_FFELP_AMNT
	,ALL.ALL_TOT_NET_DISB
	,ALL.ALL_TOT_FND_AMNT
FROM LENDERS A
LEFT OUTER JOIN (
	SELECT BLNDR 
		,SUM(DISB_AMT) AS TOT_NET_DISB
		,SUM(FUND_AMT) AS TOT_FND_AMNT
	FROM DDREC 
	GROUP BY BLNDR
	) B
	ON A.BLNDR = B.BLNDR
LEFT OUTER JOIN (
	SELECT BLNDR 
		,LOAN_CAT
		,SUM(DISB_AMT) AS TOT_FFELP_DISB
		,SUM(FUND_AMT) AS TOT_FFELP_AMNT
	FROM DDREC 
	WHERE LOAN_CAT = 'FFELP'
	GROUP BY BLNDR
	) FFELP
	ON A.BLNDR = FFELP.BLNDR
LEFT OUTER JOIN (
	SELECT BLNDR 
		,LOAN_CAT
		,SUM(DISB_AMT) AS TOT_NON_FFELP_DISB
		,SUM(FUND_AMT) AS TOT_NON_FFELP_AMNT
	FROM DDREC 
	WHERE LOAN_CAT = 'NON FFELP'
	GROUP BY BLNDR
	) NONFFELP
	ON A.BLNDR =  NONFFELP.BLNDR
LEFT OUTER JOIN (
	SELECT BLNDR 
		,SUM(DISB_AMT) AS ALL_TOT_NET_DISB
		,SUM(FUND_AMT) AS ALL_TOT_FND_AMNT
	FROM DDREC 
	) ALL
	ON A.BLNDR = ALL.BLNDR
ORDER BY BLNDR;
;
QUIT;
/************************************************************************
* R3 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R3 AS 
SELECT DISTINCT A.IF_DOE_SCL
	,A.IM_SCL_SHO
	,A.BRNCH
	,COALESCE(FFELP.FFELP_BORS,0) 	AS FFELP_BORS
	,COALESCE(FFELP.FFELP_DISB,0) 	AS FFELP_DISB
	,COALESCE(FFELP.FFELP_AMNT,0) 	AS FFELP_AMNT
	,COALESCE(NONFFELP.NON_FFELP_BORS,0) 	AS NON_FFELP_BORS
	,COALESCE(NONFFELP.NON_FFELP_DISB,0) 	AS NON_FFELP_DISB
	,COALESCE(NONFFELP.NON_FFELP_AMNT,0) 	AS NON_FFELP_AMNT
FROM (
	SELECT DISTINCT ROOT_SCHL AS IF_DOE_SCL
		,IM_SCL_FUL AS IM_SCL_SHO
		,IF_DOE_SCL AS BRNCH
	FROM DDREC
	WHERE SUBSTR(ROOT_SCHL,7,2) = 'XX'
	) A
LEFT OUTER JOIN (
	SELECT ROOT_SCHL 
		,IF_DOE_SCL AS BRNCH
		,COUNT(DISTINCT BF_SSN) AS FFELP_BORS
		,COUNT(*) 				AS FFELP_DISB
		,SUM(DISB_AMT) 			AS FFELP_AMNT
	FROM DDREC 
	WHERE LOAN_CAT = 'FFELP'
	GROUP BY ROOT_SCHL
		,IF_DOE_SCL
	) FFELP
	ON A.BRNCH = FFELP.BRNCH
LEFT OUTER JOIN (
	SELECT ROOT_SCHL
		,IF_DOE_SCL AS BRNCH
		,COUNT(DISTINCT BF_SSN) AS NON_FFELP_BORS
		,COUNT(*) 				AS NON_FFELP_DISB
		,SUM(DISB_AMT) 			AS NON_FFELP_AMNT
	FROM DDREC 
	WHERE LOAN_CAT = 'NON FFELP'
	GROUP BY ROOT_SCHL
		,IF_DOE_SCL
	) NONFFELP
	ON A.BRNCH =  NONFFELP.BRNCH
;
QUIT;
/************************************************************************
* R4 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R4 AS 
SELECT DISTINCT CATX(' ',B.IM_SCL_FUL,A.FINA_TXT) AS IM_SCL_FUL 
	,A.IF_DOE_SCL
	,A.IX_SCL_STR_ADR_1
	,A.IX_SCL_STR_ADR_2
	,A.IM_SCL_CT
	,A.IC_SCL_DOM_ST
	,A.IF_SCL_ZIP_CDE
	,A.IM_SCL_FGN_ST
	,A.IM_SCL_FGN_CNY  
FROM DSB_MDM A
INNER JOIN DDREC B
	ON A.IF_DOE_SCL = B.IF_DOE_SCL
WHERE B.DISB_DESC = 'CHECK'
;
QUIT;
/************************************************************************
* R5 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R5 AS 
SELECT A.REP_BOND_ID
	,A.REP_ACCT_NUM
	,SUM(B.FUND_AMT) AS FUND_SUM
FROM DISB_TAB A
INNER JOIN DDREC B
	ON A.AF_LDR_BND_ISS = B.AF_LDR_BND_ISS
WHERE B.IF_DOE_LDR = '828476'
	AND B.AF_LDR_BND_ISS NOT LIKE '%UBS%'
GROUP BY A.REP_BOND_ID
	,A.REP_ACCT_NUM
;
QUIT;
/************************************************************************
* R6 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R6 AS 
SELECT DISTINCT B.IF_DOE_SCL
	,B.IM_SCL_FUL
	,B.IF_DOE_LDR
	,B.IM_LDR_FUL
	,B.BF_SSN
	,B.BOR_1ST
	,B.BOR_LST
	,B.LF_STU_SSN
	,B.STU_1ST
	,B.STU_LST
	,B.IC_LON_PGM
	,B.AD_SCL_LON_TRM_BEG
	,B.AD_SCL_LON_TRM_END
	,B.CLUID
	,B.LN_LON_DSB_SEQ
	,B.LD_DSB
	,B.GROSS_DSB
	,B.OFEE
	,B.GFEE
	,B.DISB_AMT
FROM RIGHT_FAX A
INNER JOIN DDREC B
	ON A.RF_SCHL =B.IF_DOE_SCL
ORDER  B.IF_DOE_SCL
	,B.BF_SSN
;
QUIT;
/************************************************************************
* R7 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R7 AS
SELECT DISB_SRT 
	,DISB_DESC 
	,ROOT_SCHL AS IF_DOE_SCL 
	,ROOT_SCHL_NM AS IM_SCL_FUL
	,LOAN_DISPLAY 
	,COUNT(DISTINCT BF_SSN) AS BOR_COUNT
	,COUNT(*) 				AS DISB_COUNT
	,SUM(GROSS_DSB) 		AS GROSS_DSB
	,SUM(DISB_AMT) 			AS NET_AMT
FROM DDREC
WHERE LOAN_DISPLAY ^= ''
GROUP BY DISB_SRT 
	,DISB_DESC 
	,ROOT_SCHL 
	,ROOT_SCHL_NM 
	,LOAN_DISPLAY 
ORDER BY DISB_SRT 
	,DISB_DESC 
	,ROOT_SCHL_NM
	,ROOT_SCHL 
	,LOAN_DISPLAY 
;
QUIT;
DATA G47_R7;
	SET G47_R7;
	PVAR = _N_;
RUN;

/************************************************************************
* R8 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R8 AS 
SELECT DISTINCT A.ROOT_SCHL	AS IF_DOE_SCL
	,B.DISB_COUNT
	,B.TOT_NET_DISB
	,B.LOAN_DISPLAY 
	,COALESCE(C.CHECK_COUNT,0) 			AS CHECK_COUNT
	,COALESCE(C.CHECK_NET_DISB,0) 		AS CHECK_NET_DISB
	,COALESCE(D.EFT_COUNT,0) 			AS EFT_COUNT
	,COALESCE(D.EFT_NET_DISB,0) 		AS EFT_NET_DISB
	,COALESCE(E.ELM_COUNT,0) 			AS ELM_COUNT
	,COALESCE(E.ELM_NET_DISB,0) 		AS ELM_NET_DISB	
	,COALESCE(F.FFELP_COUNT,0) 			AS FFELP_COUNT
	,COALESCE(F.FFELP_NET_DISB,0) 		AS FFELP_NET_DISB
	,COALESCE(G.NON_FFELP_COUNT,0) 		AS NON_FFELP_COUNT
	,COALESCE(G.NON_FFELP_NET_DISB,0) 	AS NON_FFELP_NET_DISB
	,H.ALL_EFT_DISB
FROM (
	SELECT DISTINCT ROOT_SCHL 
		,LOAN_DISPLAY
	FROM DDREC
	) A
INNER JOIN (
	SELECT ROOT_SCHL
		,LOAN_DISPLAY 
		,COUNT(*) AS DISB_COUNT
		,SUM(DISB_AMT) AS TOT_NET_DISB
	FROM DDREC 
	GROUP BY ROOT_SCHL
		,LOAN_DISPLAY 
	) B
	ON A.ROOT_SCHL = B.ROOT_SCHL
	AND A.LOAN_DISPLAY = B.LOAN_DISPLAY
LEFT OUTER JOIN (
	SELECT ROOT_SCHL
		,LOAN_DISPLAY 
		,COUNT(*) AS CHECK_COUNT
		,SUM(DISB_AMT) AS CHECK_NET_DISB
	FROM DDREC 
	WHERE DISB_DESC = 'CHECK'
	GROUP BY ROOT_SCHL
		,LOAN_DISPLAY 
	) C
	ON A.ROOT_SCHL = C.ROOT_SCHL
	AND A.LOAN_DISPLAY = C.LOAN_DISPLAY
LEFT OUTER JOIN (
	SELECT ROOT_SCHL
		,LOAN_DISPLAY 
		,COUNT(*) AS EFT_COUNT
		,SUM(DISB_AMT) AS EFT_NET_DISB
	FROM DDREC 
	WHERE DISB_DESC = 'EFT'
	GROUP BY ROOT_SCHL
		,LOAN_DISPLAY 
	) D
	ON A.ROOT_SCHL = D.ROOT_SCHL
	AND A.LOAN_DISPLAY = D.LOAN_DISPLAY
LEFT OUTER JOIN (
	SELECT ROOT_SCHL
		,LOAN_DISPLAY 
		,COUNT(*) AS ELM_COUNT
		,SUM(DISB_AMT) AS ELM_NET_DISB
	FROM DDREC 
	WHERE DISB_DESC = 'ELM'
	GROUP BY ROOT_SCHL
		,LOAN_DISPLAY 
	) E
	ON A.ROOT_SCHL = E.ROOT_SCHL
	AND A.LOAN_DISPLAY = E.LOAN_DISPLAY
LEFT OUTER JOIN (
	SELECT ROOT_SCHL
		,LOAN_DISPLAY 
		,COUNT(*) AS FFELP_COUNT
		,SUM(DISB_AMT) AS FFELP_NET_DISB
	FROM DDREC 
	WHERE LOAN_CAT = 'FFELP'
	GROUP BY ROOT_SCHL
		,LOAN_DISPLAY 	
	) F
	ON A.ROOT_SCHL = F.ROOT_SCHL
	AND A.LOAN_DISPLAY = F.LOAN_DISPLAY
LEFT OUTER JOIN (
	SELECT ROOT_SCHL
		,LOAN_DISPLAY 
		,COUNT(*) AS NON_FFELP_COUNT
		,SUM(DISB_AMT) AS NON_FFELP_NET_DISB
	FROM DDREC 
	WHERE LOAN_CAT = 'NON FFELP'
	GROUP BY ROOT_SCHL
		,LOAN_DISPLAY 
	) G
	ON A.ROOT_SCHL = G.ROOT_SCHL
	AND A.LOAN_DISPLAY = G.LOAN_DISPLAY
INNER JOIN (
	SELECT ROOT_SCHL
		,SUM(DISB_AMT) AS ALL_EFT_DISB
	FROM DDREC 
	WHERE DISB_DESC = 'EFT'
	) H
	ON A.ROOT_SCHL = F.ROOT_SCHL
;
QUIT;
DATA G47_R8;
SET G47_R8;
IF LOAN_DISPLAY ^= 'ALL' THEN 
	TIF_DOE_SCL = IF_DOE_SCL||SUBSTR(LOAN_DISPLAY,1,1);
ELSE 
	TIF_DOE_SCL = IF_DOE_SCL;
RUN;

/************************************************************************
* R9 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R9 AS
SELECT BLNDR
	,IC_LON_PGM
	,DISB_DESC
	,COUNT(DISTINCT BF_SSN) AS BOR_COUNT
	,COUNT(AF_APL_ID) 		AS LOAN_COUNT
	,SUM(GROSS_DSB) 		AS GROSS_DSB
	,SUM(DISB_AMT) 			AS NET_AMT
	,SUM(FUND_AMT) 			AS FUND_AMT
	,SUM(OFEE) 				AS OFEE
	,SUM(GFEE) 				AS GFEE
FROM DDREC
GROUP BY BLNDR
	,IC_LON_PGM
	,DISB_DESC
;
QUIT;
/************************************************************************
* R10 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R10 AS
SELECT IF_DOE_SCL
	,IC_LON_PGM
	,DISB_DESC
	,COUNT(DISTINCT BF_SSN) AS BOR_COUNT
	,COUNT(AF_APL_ID) 		AS LOAN_COUNT
	,SUM(GROSS_DSB) 		AS GROSS_DSB
	,SUM(DISB_AMT) 			AS NET_AMT
FROM DDREC
GROUP BY IF_DOE_SCL
	,IC_LON_PGM
	,DISB_DESC
;
QUIT;
/************************************************************************
* R11 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R11 AS
SELECT DISTINCT A.*
FROM (
	SELECT BLNDR 	AS INST_ID
		,IM_LDR_FUL AS INST_NM
		,'L' 		AS INST_TYP
	FROM LENDERS
UNION 
	SELECT CASE
				WHEN LENGTH(Y.TIF_DOE_SCL) > 8 THEN Y.TIF_DOE_SCL
				ELSE X.IF_DOE_SCL
		   END AS INST_ID
		,IM_SCL_FUL   AS INST_NM
		,'S' 		  AS INST_TYP
	FROM SCHOOLS X
	LEFT OUTER JOIN G47_R8 Y
		ON X.IF_DOE_SCL = Y.IF_DOE_SCL
UNION 
	SELECT ROOT_SCHL AS INST_ID
		,ROOT_SCHL_NM   AS INST_NM
		,'S' 		  AS INST_TYP
	FROM DDREC
	WHERE SUBSTR(ROOT_SCHL,7,2) = 'XX'
	) A
ORDER BY A.INST_TYP
	,A.INST_ID
;
QUIT;
/************************************************************************
* R12 DATA SET
*************************************************************************/
PROC SQL;
CREATE TABLE G47_R12 AS
SELECT BLNDR
	,IF_DOE_SCL
	,IC_LON_PGM
	,DISB_DESC
	,COUNT(DISTINCT BF_SSN) AS BOR_CT
	,COUNT(DISTINCT CLUID) 	AS LON_CT
	,SUM(GROSS_DSB) 		AS GRS_AMT
	,SUM(DISB_AMT)			AS NET_AMT
FROM DDREC 
GROUP BY BLNDR
	,IF_DOE_SCL
	,IC_LON_PGM
	,DISB_DESC
;
QUIT;
/************************************************************************
* CREATE REPORTS
*************************************************************************

**************************         R2         ***************************/

DATA _NULL_;
	SET  WORK.G47_R2;
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT BLNDR $10. ;
	   FORMAT TOT_NET_DISB BEST12. ;
	   FORMAT TOT_FND_AMNT BEST12. ;
	   FORMAT TOT_FFELP_DISB BEST12. ;
	   FORMAT TOT_FFELP_AMNT BEST12. ;
	   FORMAT TOT_NON_FFELP_DISB BEST12. ;
	   FORMAT TOT_NON_FFELP_AMNT BEST12. ;
	   FORMAT ALL_TOT_NET_DISB BEST12. ;
	   FORMAT ALL_TOT_FND_AMNT BEST12. ;
	IF _N_ = 1 THEN DO;
		PUT
			"BLNDR"
			','
			"TOT_NET_DISB"
			','
			"TOT_FND_AMNT"
			','
			"TOT_FFELP_DISB"
			','
			"TOT_FFELP_AMNT"
			','
			"TOT_NON_FFELP_DISB"
			','
			"TOT_NON_FFELP_AMNT"
			','
			"ALL_TOT_NET_DISB"
			','
			"ALL_TOT_FND_AMNT";
	 	END;
	DO;
	   PUT BLNDR $ @;
	   PUT TOT_NET_DISB @;
	   PUT TOT_FND_AMNT @;
	   PUT TOT_FFELP_DISB @;
	   PUT TOT_FFELP_AMNT @;
	   PUT TOT_NON_FFELP_DISB @;
	   PUT TOT_NON_FFELP_AMNT @;
	   PUT ALL_TOT_NET_DISB @;
	   PUT ALL_TOT_FND_AMNT ;
	END;
RUN;
/**************************         R3         ***************************/
DATA _NULL_;
	SET  WORK.G47_R3;
	FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT IF_DOE_SCL $8. ;
	   FORMAT IM_SCL_SHO $40. ;
	   FORMAT FFELP_BORS BEST12. ;
	   FORMAT FFELP_DISB BEST12. ;
	   FORMAT FFELP_AMNT BEST12. ;
	   FORMAT NON_FFELP_BORS BEST12. ;
	   FORMAT NON_FFELP_DISB BEST12. ;
	   FORMAT NON_FFELP_AMNT BEST12. ;
	IF _N_ = 1 THEN DO;
		PUT
			"IF_DOE_SCL"
			','
			"IM_SCL_SHO"
			','
			"FFELP_BORS"
			','
			"FFELP_LOANS"
			','
			"FFELP_AMNT"
			','
			"NON_FFELP_BORS"
			','
			"NON_FFELP_LOANS"
			','
			"NON_FFELP_AMNT";
		END;
	DO;
	   PUT IF_DOE_SCL $ @;
	   PUT IM_SCL_SHO $ @;
	   PUT FFELP_BORS @;
	   PUT FFELP_DISB @;
	   PUT FFELP_AMNT @;
	   PUT NON_FFELP_BORS @;
	   PUT NON_FFELP_DISB @;
	   PUT NON_FFELP_AMNT ;
	END;
RUN;
/*******     R4     ********/
DATA _NULL_;
SET  G47_R4;
FILE REPORT4 DELIMITER=',' DSD DROPOVER LRECL=32767;
   FORMAT IM_SCL_FUL $100. ;
   FORMAT IF_DOE_SCL $9. ;
   FORMAT IX_SCL_STR_ADR_1 $30. ;
   FORMAT IX_SCL_STR_ADR_2 $30. ;
   FORMAT IM_SCL_CT $20. ;
   FORMAT IC_SCL_DOM_ST $2. ;
   FORMAT IF_SCL_ZIP_CDE $9. ;
   FORMAT IM_SCL_FGN_ST $15. ;
   FORMAT IM_SCL_FGN_CNY $15. ;
IF _N_ = 1 THEN        
DO;
   PUT
   'IM_SCL_FUL'
   ','
   'IF_DOE_SCL'
   ','
   'IX_SCL_STR_ADR_1'
   ','
   'IX_SCL_STR_ADR_2'
   ','
   'IM_SCL_CT'
   ','
   'IC_SCL_DOM_ST'
   ','
   'IF_SCL_ZIP_CDE'
   ','
   'IM_SCL_FGN_ST'
   ','
   'IM_SCL_FGN_CNY'
   ;
END;
DO;
   PUT IM_SCL_FUL $ @;
   PUT IF_DOE_SCL $ @;
   PUT IX_SCL_STR_ADR_1 $ @;
   PUT IX_SCL_STR_ADR_2 $ @;
   PUT IM_SCL_CT $ @;
   PUT IC_SCL_DOM_ST $ @;
   PUT IF_SCL_ZIP_CDE $ @;
   PUT IM_SCL_FGN_ST $ @;
   PUT IM_SCL_FGN_CNY $ ;
END;
RUN;
/*******     R5     ********/
DATA _NULL_;
SET  G47_R5;
FILE REPORT5 DELIMITER=',' DSD DROPOVER LRECL=32767;
   FORMAT REP_BOND_ID $10. ;
   FORMAT REP_ACCT_NUM $10. ;
   FORMAT FUND_SUM BEST12. ;
IF _N_ = 1 THEN DO;
   PUT 'BONDID,TOTAL_FUNDING_AMOUNT,ACCOUT_NUM';
END;
DO;
   PUT REP_BOND_ID $ @;
   PUT FUND_SUM @;
   PUT REP_ACCT_NUM $ ;
END;
RUN;
/*******     R6     ********/
DATA _NULL_;
	SET G47_R6;
	FILE REPORT6 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT IF_DOE_SCL $9. ;
	FORMAT IM_SCL_FUL $50. ;
	FORMAT IF_DOE_LDR $8. ;
	FORMAT IM_LDR_FUL $40. ;
	FORMAT BF_SSN $9. ;
	FORMAT BOR_1ST $13. ;
	FORMAT BOR_LST $23. ;
	FORMAT LF_STU_SSN $9. ;
	FORMAT STU_1ST $13. ;
	FORMAT STU_LST $23. ;
	FORMAT IC_LON_PGM $6. ;
	FORMAT AD_SCL_LON_TRM_BEG MMDDYY10. ;
	FORMAT AD_SCL_LON_TRM_END MMDDYY10. ;
	FORMAT CLUID $19. ;
	FORMAT LN_LON_DSB_SEQ 6. ;
	FORMAT LD_DSB MMDDYY10. ;
	FORMAT GROSS_DSB 16.2 ;
	FORMAT OFEE 9.2 ;
	FORMAT GFEE 9.2 ;
	FORMAT DISB_AMT 10.2 ;
	IF _N_ = 1 THEN DO;
		PUT
		"IF_DOE_SCL"
		','
		   "IM_SCL_FUL"
		','
		   "IF_DOE_LDR"
		','
		   "IM_LDR_FUL"
		','
		   "BF_SSN"
		','
		   "BOR_LST_NM"
		','
		   "BOR_1ST_NM"
		','
		   "LF_STU_SSN"
		','
		   "STU_LST_NM"
		','
		   "STU_1ST_NM"
		','
		   "IC_LON_PGM"
		','
		   "AD_SCL_LON_TRM_BEG"
		','
		   "AD_SCL_LON_TRM_END"
		','
		   "CLUID"
		','
		   "LN_LON_DSB_SEQ"
		','
		   "LD_DSB"
		','
		   "GROSS_DSB"
		','
		   "OFEE"
		','
		   "GFEE"
		','
		   "NET_DSB";
	END;
	DO;
		PUT IF_DOE_SCL $ @;
		PUT IM_SCL_FUL $ @;
		PUT IF_DOE_LDR $ @;
		PUT IM_LDR_FUL $ @;
		PUT BF_SSN $ @;
		PUT BOR_LST $ @;
		PUT BOR_1ST $ @;
		PUT LF_STU_SSN $ @;
		PUT STU_LST $ @;
		PUT STU_1ST $ @;
		PUT IC_LON_PGM $ @;
		PUT AD_SCL_LON_TRM_BEG @;
		PUT AD_SCL_LON_TRM_END @;
		PUT CLUID $ @;
		PUT LN_LON_DSB_SEQ @;
		PUT LD_DSB @;
		PUT GROSS_DSB @;
		PUT OFEE @;
		PUT GFEE @;
		PUT DISB_AMT ;
	END;
RUN;
/*******     R7     ********/ 
PROC PRINTTO PRINT=REPORT7 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 CENTER DATE;
TITLE 'SCHOOL DISBURSEMENT SUMMARY BY DISBURSEMENT TYPE ';
FOOTNOTE   'JOB = UTLWG47  	 REPORT = ULWG47.LWG47R2';
PROC CONTENTS DATA=G47_R7 OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      ////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWG47  	 REPORT = ULWG47.LWG47R2";
	END;
RETURN;
RUN;
PROC REPORT DATA=G47_R7 NOWD HEADSKIP SPLIT='/' SPACING=1;
	COLUMN DISB_SRT DISB_DESC PVAR IF_DOE_SCL IM_SCL_FUL LOAN_DISPLAY BOR_COUNT DISB_COUNT GROSS_DSB NET_AMT;
	DEFINE DISB_SRT / GROUP NOPRINT;
	DEFINE DISB_DESC / GROUP 'DISB/TYPE' WIDTH=5;
	DEFINE PVAR / GROUP NOPRINT;
	DEFINE IF_DOE_SCL / GROUP 'SCHOOL/ID' WIDTH=8;
	DEFINE IM_SCL_FUL /	GROUP 'SCHOOL/NAME' WIDTH=40;
	DEFINE LOAN_DISPLAY / GROUP 'LOAN/TYPE' WIDTH=6;
	DEFINE BOR_COUNT / ANALYSIS 'NUMBER OF/BORROWERS' WIDTH=9 FORMAT=COMMA6.;
	DEFINE DISB_COUNT /	ANALYSIS 'NUMBER OF/DISB' WIDTH=9 FORMAT=COMMA6.;
	DEFINE GROSS_DSB / ANALYSIS 'GROSS DISB' WIDTH=14 FORMAT=DOLLAR14.2;
	DEFINE NET_AMT / ANALYSIS 'NET DISB' WIDTH=14 FORMAT=DOLLAR14.2;
	BREAK AFTER DISB_SRT / SUMMARIZE SUPPRESS SKIP OL;
QUIT;
PROC PRINTTO;
RUN;
/*******     R8     ********/ 
DATA _NULL_;
	SET  WORK.G47_R8;
	FILE REPORT8 DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT TIF_DOE_SCL $18. ;
	   FORMAT DISB_COUNT BEST12. ;
	   FORMAT TOT_NET_DISB BEST12. ;
	   FORMAT CHECK_COUNT BEST12. ;
	   FORMAT CHECK_NET_DISB BEST12. ;
	   FORMAT EFT_COUNT BEST12. ;
	   FORMAT EFT_NET_DISB BEST12. ;
	   FORMAT ELM_COUNT BEST12. ;
	   FORMAT ELM_NET_DISB BEST12. ;
	   FORMAT ALL_EFT_DISB BEST12. ;
       FORMAT FFELP_COUNT BEST12. ;
       FORMAT FFELP_NET_DISB BEST12. ;
       FORMAT NON_FFELP_COUNT BEST12. ;
       FORMAT NON_FFELP_NET_DISB BEST12. ;
	IF _N_ = 1 THEN DO;
	   PUT
	      "IF_DOE_SCL"
	   ','
	      "DISB_COUNT"
	   ','
	      "TOT_NET_DISB"
	   ','
	      "CHECK_COUNT"
	   ','
	      "CHECK_NET_DISB"
	   ','
	      "EFT_COUNT"
	   ','
	      "EFT_NET_DISB"
	   ','
	      "ELM_COUNT"
	   ','
	      "ELM_NET_DISB"
	   ','
	   	  "FFELP_COUNT"
	   ','
          "FFELP_NET_DISB"
	   ','
          "NON_FFELP_COUNT"
	   ','
          "NON_FFELP_NET_DISB"
	   ','
		  "ALL_EFT_DISB"
	   ;
	END;
	DO;
	   PUT TIF_DOE_SCL $ @;
	   PUT DISB_COUNT @;
	   PUT TOT_NET_DISB @;
	   PUT CHECK_COUNT @;
	   PUT CHECK_NET_DISB @;
	   PUT EFT_COUNT @;
	   PUT EFT_NET_DISB @;
	   PUT ELM_COUNT @;
	   PUT ELM_NET_DISB @;
	   PUT FFELP_COUNT @;
	   PUT FFELP_NET_DISB @ ;
	   PUT NON_FFELP_COUNT @ ;
	   PUT NON_FFELP_NET_DISB @ ;
   	   PUT ALL_EFT_DISB ;
	END;
RUN;
/*******     R9     ********/
DATA _NULL_;
	SET  WORK.G47_R9   ;
	FILE REPORT9 DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT BLNDR $10. ;
	   FORMAT IC_LON_PGM $6. ;
	   FORMAT DISB_DESC $10. ;
	   FORMAT BOR_COUNT BEST12. ;
	   FORMAT LOAN_COUNT BEST12. ;
	   FORMAT GROSS_DSB BEST12. ;
	   FORMAT NET_AMT BEST12. ;
	   FORMAT FUND_AMT BEST12. ;
	   FORMAT OFEE BEST12. ;
	   FORMAT GFEE BEST12. ;
	IF _N_ = 1 THEN DO;
		PUT
		"BLNDR"
	   ','
	      "IC_LON_PGM"
	   ','
	      "DISB_DESC"
	   ','
	      "BOR_COUNT"
	   ','
	      "LOAN_COUNT"
	   ','
	      "GROSS_DSB"
	   ','
	      "NET_AMT"
	   ','
	      "FUND_AMT"
	   ','
	      "OFEE"
	   ','
	      "GFEE";
	END;
	DO;
	   PUT BLNDR $ @;
	   PUT IC_LON_PGM $ @;
	   PUT DISB_DESC $ @;
	   PUT BOR_COUNT @;
	   PUT LOAN_COUNT @;
	   PUT GROSS_DSB @;
	   PUT NET_AMT @;
	   PUT FUND_AMT @;
	   PUT OFEE @;
	   PUT GFEE ;
	END;
RUN;
/*******     R10     ********/
DATA _NULL_;
	SET  WORK.G47_R10;
	FILE REPORT10 DELIMITER=',' DSD DROPOVER LRECL=32767;
		FORMAT IF_DOE_SCL $8. ;
		FORMAT IC_LON_PGM $6. ;
		FORMAT DISB_DESC $10. ;
		FORMAT BOR_COUNT BEST12. ;
		FORMAT LOAN_COUNT BEST12. ;
		FORMAT GROSS_DSB BEST12. ;
		FORMAT NET_AMT BEST12. ;
	IF _N_ = 1 THEN DO;
	   PUT
	      "IF_DOE_SCL"
	   ','
	      "IC_LON_PGM"
	   ','
	      "DISB_DESC"
	   ','
	      "BOR_COUNT"
	   ','
	      "LOAN_COUNT"
	   ','
	      "GROSS_DSB"
	   ','
	      "NET_AMT"
	   ;
	END;
	DO;
	   PUT IF_DOE_SCL $ @;
	   PUT IC_LON_PGM $ @;
	   PUT DISB_DESC $ @;
	   PUT BOR_COUNT @;
	   PUT LOAN_COUNT @;
	   PUT GROSS_DSB @;
	   PUT NET_AMT ;
	END;
RUN;
/*******     R11     ********/
DATA _NULL_;
	SET  WORK.G47_R11  ;
	FILE REPORT11 DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT INST_ID $18. ;
	   FORMAT INST_NM $40. ;
	   FORMAT INST_TYP $1. ;
	IF _N_ = 1 THEN DO;
	   PUT
	      "INST_ID"
	   ','
	      "INST_NM"
	   ','
	      "INST_TYP" ;
	 END;
	DO;
	   PUT INST_ID $ @;
	   PUT INST_NM $ @;
	   PUT INST_TYP $ ;
	END;
RUN;
/*******     R12     ********/
DATA _NULL_;
SET  G47_R12;
FILE REPORT12 DELIMITER=',' DSD DROPOVER LRECL=32767;
   FORMAT BLNDR $10. ;
   FORMAT IF_DOE_SCL $8. ;
   FORMAT IC_LON_PGM $6. ;
   FORMAT DISB_DESC $10. ;
   FORMAT BOR_CT BEST12. ;
   FORMAT LON_CT BEST12. ;
   FORMAT GRS_AMT 18.2 ;
   FORMAT NET_AMT 18.2 ;
IF _N_ = 1 THEN DO;
   PUT
      "LENDER ID"
   ','
      "SCHOOL ID"
   ','
      "LOAN TYPE"
   ','
      "DISB TYPE"
   ','
      "BORROWER COUNT"
   ','
      "LOAN COUNT"
   ','
      "GROSS AMOUNT"
   ','
      "NET AMOUNT";
END;
DO;
   PUT BLNDR $ @;
   PUT IF_DOE_SCL $ @;
   PUT IC_LON_PGM $ @;
   PUT DISB_DESC $ @;
   PUT BOR_CT @;
   PUT LON_CT @;
   PUT GRS_AMT @;
   PUT NET_AMT ;
   ;
END;
RUN;
/*DETAIL FILE*/
PROC EXPORT DATA=DDREC
	OUTFILE= "T:\SAS\ULWG47Detail.xls" 
	DBMS=EXCEL2000 REPLACE;
RUN;
