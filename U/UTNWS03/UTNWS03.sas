/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWS03.NWS03RZ";
FILENAME REPORT2 "&RPTLIB/UNWS03.NWS03R2";
FILENAME DETAIL "&RPTLIB/UNWS03.NWS03R2_detail";

DATA _NULL_;
	CALL SYMPUT('QTR_BEG',INTNX('QTR',TODAY()-5,0,'B'));
	CALL SYMPUT('QTR_END',INTNX('QTR',TODAY()-5,0,'E'));
RUN;

%SYSLPUT QTR_BEG = &QTR_BEG;
%SYSLPUT QTR_END = &QTR_END;

LIBNAME LEGEND REMOTE SERVER=LEGEND SLIBREF=WORK;
RSUBMIT;
LIBNAME PKUB DB2 DATABASE=DNFPUTDL OWNER=PKUB;


PROC SQL;
	CREATE TABLE DEFAULT_LNS AS
		SELECT DISTINCT
			LN10.BF_SSN,
			LN10.LN_SEQ,
			COALESCE(LN90.LA_FAT_CUR_PRI,0) + COALESCE(LN90.LA_FAT_NSI,0) AS BAL,
			SC10.IC_SCL_OWN_CTL_TYP,
			LN10.LD_LON_1_DSB,
			LN16.LN_DLQ_MAX - (LN16.LD_STA_LON16 - &QTR_END) AS DELQ,
			LN16.LD_STA_LON16,
			LN10.LA_CUR_PRI,
			LN90.LD_FAT_EFF
		FROM
			PKUB.LN10_LON LN10
			JOIN PKUB.SC10_SCH_DMO SC10
				ON LN10.LF_DOE_SCL_ORG = SC10.IF_DOE_SCL
				AND LN10.LA_CUR_PRI = 0
			LEFT JOIN PKUB.LN90_FIN_ATY LN90
				ON LN10.BF_SSN = LN90.BF_SSN
				AND LN10.LN_SEQ = LN90.LN_SEQ
				AND LN90.PC_FAT_TYP = '04'
				AND LN90.PC_FAT_SUB_TYP = '98'
				AND LN90.LI_FAT_RAP = ''
				AND LN90.LC_FAT_REV_REA = ''
				AND LN90.LD_FAT_EFF BETWEEN &QTR_BEG AND &QTR_END
			LEFT JOIN PKUB.LN16_LON_DLQ_HST LN16
				ON LN10.BF_SSN = LN16.BF_SSN
				AND LN10.LN_SEQ = LN16.LN_SEQ
				AND LN16.LC_STA_LON16 = '1'
				AND LN16.LN_DLQ_MAX - (LN16.LD_STA_LON16 - &QTR_END) >= 360
		WHERE
			LN90.BF_SSN IS NOT NULL
			OR (LN16.BF_SSN IS NOT NULL AND LN10.LA_CUR_PRI > 0)
	;

	CREATE TABLE DEFAULT_DISB AS
		SELECT DISTINCT
			BF_SSN,
			MAX(LD_LON_1_DSB) AS LD_LON_1_DSB
		FROM
			DEFAULT_LNS
		GROUP BY
			BF_SSN
	;

	CREATE TABLE DEFAULT_SCH AS
		SELECT DISTINCT
			LNS.BF_SSN,
			CASE
				WHEN LNS.IC_SCL_OWN_CTL_TYP IN ('1','4','5') THEN 'Public'
				WHEN LNS.IC_SCL_OWN_CTL_TYP IN ('2','6') THEN 'Private'
				WHEN LNS.IC_SCL_OWN_CTL_TYP IN ('3','7') THEN 'Proprietary'
				ELSE LNS.IC_SCL_OWN_CTL_TYP
			END AS SCH_TYP
		FROM
			DEFAULT_LNS LNS
			JOIN DEFAULT_DISB DISB
				ON LNS.BF_SSN = DISB.BF_SSN
				AND LNS.LD_LON_1_DSB = DISB.LD_LON_1_DSB
	;

	CREATE TABLE DEFAULT AS
		SELECT DISTINCT
			LNS.BF_SSN,
			SUM(LNS.BAL)*-1 AS BAL,
			SCH.SCH_TYP
		FROM
			DEFAULT_LNS LNS
			JOIN DEFAULT_SCH SCH
				ON LNS.BF_SSN = SCH.BF_SSN
		GROUP BY
			LNS.BF_SSN,
			SCH.SCH_TYP
	;

	CREATE TABLE REPAY_LNS AS
		SELECT DISTINCT
			LN10.BF_SSN,
			LN10.LN_SEQ,
			LN10.LA_CUR_PRI + DW01.LA_NSI_OTS AS BAL,
			SC10.IC_SCL_OWN_CTL_TYP,
			LN10.LD_LON_1_DSB
		FROM
			PKUB.LN10_LON LN10
			JOIN PKUB.DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
				AND DW01.WC_DW_LON_STA NOT IN ('04','05','16','17','18','19','20','21') 
			JOIN PKUB.SC10_SCH_DMO SC10
				ON LN10.LF_DOE_SCL_ORG = SC10.IF_DOE_SCL
			LEFT JOIN DEFAULT_LNS DFLT
				ON LN10.BF_SSN = DFLT.BF_SSN
				AND LN10.LN_SEQ = DFLT.LN_SEQ
		WHERE
			LN10.LC_STA_LON10 = 'R'
			AND LN10.LA_CUR_PRI + DW01.WA_TOT_BRI_OTS > 0
			AND DFLT.BF_SSN IS NULL
	;

	CREATE TABLE REPAY_DISB AS
		SELECT
			BF_SSN,
			MAX(LD_LON_1_DSB) AS LD_LON_1_DSB
		FROM
			REPAY_LNS
		GROUP BY
			BF_SSN
	;

	CREATE TABLE REPAY_SCH AS
		SELECT DISTINCT
			LNS.BF_SSN,
			CASE
				WHEN LNS.IC_SCL_OWN_CTL_TYP IN ('1','4','5') THEN 'Public'
				WHEN LNS.IC_SCL_OWN_CTL_TYP IN ('2','6') THEN 'Private'
				WHEN LNS.IC_SCL_OWN_CTL_TYP IN ('3','7') THEN 'Proprietary'
				ELSE LNS.IC_SCL_OWN_CTL_TYP
			END AS SCH_TYP
		FROM
			REPAY_LNS LNS
			JOIN REPAY_DISB DISB
				ON LNS.BF_SSN = DISB.BF_SSN
				AND LNS.LD_LON_1_DSB = DISB.LD_LON_1_DSB
	;

	CREATE TABLE REPAY AS
		SELECT DISTINCT
			LNS.BF_SSN,
			SUM(LNS.BAL) AS BAL,
			SCH.SCH_TYP
		FROM
			REPAY_LNS LNS
			JOIN REPAY_SCH SCH
				ON LNS.BF_SSN = SCH.BF_SSN
		GROUP BY
			LNS.BF_SSN,
			SCH.SCH_TYP
	;

QUIT;

ENDRSUBMIT;

DATA DEFAULT; SET LEGEND.DEFAULT; RUN;
DATA REPAY; SET LEGEND.REPAY; RUN;

PROC SQL;
	CREATE TABLE DEFAULT_TTLS AS
		SELECT 
			SUM(BAL) AS DEFAULT_BAL,
			COUNT(DISTINCT BF_SSN) AS DEFAULT_BRWS,
			SCH_TYP
		FROM
			DEFAULT
		GROUP BY
			SCH_TYP
	;

	CREATE TABLE REPAY_TTLS AS
		SELECT 
			SUM(BAL) AS REPAY_BAL,
			COUNT(DISTINCT BF_SSN) AS REPAY_BRWS,
			SCH_TYP
		FROM
			REPAY
		GROUP BY
			SCH_TYP
	;

	CREATE TABLE METRICS AS
		SELECT
			DFLT.SCH_TYP,
			DFLT.DEFAULT_BAL,
			REPAY.REPAY_BAL,
			COALESCE(DFLT.DEFAULT_BAL,0)/REPAY.REPAY_BAL/100 AS METRIC1,
			DFLT.DEFAULT_BRWS,
			REPAY.REPAY_BRWS,
			COALESCE(DFLT.DEFAULT_BRWS,0)/REPAY.REPAY_BRWS/100 AS METRIC2
		FROM
			DEFAULT_TTLS DFLT
			LEFT JOIN REPAY_TTLS REPAY
				ON DFLT.SCH_TYP = REPAY.SCH_TYP
	;

QUIT;

PROC PRINTTO PRINT=REPORT2 NEW; RUN;

OPTIONS ORIENTATION=LANDSCAPE PS=39 LS=127;
TITLE 		'Default Rate - FED';
FOOTNOTE1  	"THIS DOCUMENT MAY CONTAIN BORROWERS' SENSITIVE INFORMATION THAT UHEAA HAS PLEDGED TO PROTECT.";
FOOTNOTE2	'PLEASE TAKE APPROPRIATE PRECAUTIONS TO SAFEGUARD THIS INFORMATION.';
FOOTNOTE3	;
FOOTNOTE4   'JOB = UTNWS03  	 REPORT = UNWS03.NWS03R2';

PROC PRINT 
		NOOBS SPLIT = '/' 
		DATA = METRICS 
		WIDTH = UNIFORM 
		WIDTH = MIN 
		LABEL;

	SUM
		DEFAULT_BAL
		REPAY_BAL
		METRIC1
		DEFAULT_BRWS
		REPAY_BRWS
		METRIC2
	;

	FORMAT
		DEFAULT_BAL DOLLAR18.2
		REPAY_BAL DOLLAR18.2
		METRIC1	PERCENT8.2
		DEFAULT_BRWS COMMA18.
		REPAY_BRWS COMMA18.
		METRIC2 PERCENT8.2
	;

	VAR 
		SCH_TYP	
		DEFAULT_BAL
		REPAY_BAL
		METRIC1
		DEFAULT_BRWS
		REPAY_BRWS
		METRIC2
	;

	LABEL
		SCH_TYP = 'School Type'
		DEFAULT_BAL = 'Total balance of defaulted borrowers'
		REPAY_BAL = 'Total balance of borrowers in repayment' 
		METRIC1 = 'Metric calculation #1'
		DEFAULT_BRWS = 'Total number of defaulted borrowers'
		REPAY_BRWS = 'Total number of borrowers in repayment'
		METRIC2 = 'Metric calculation #2'
	;
RUN;

PROC PRINTTO; RUN;


/*PROC EXPORT*/
/*		DATA=LEGEND.DEFAULT_LNS*/
/*		OUTFILE='T:\SAS\UTNWS03_DETAIL.XLSX'*/
/*		REPLACE;*/
/*RUN;*/
/**/
/*PROC EXPORT*/
/*		DATA=LEGEND.REPAY_LNS*/
/*		OUTFILE='T:\SAS\UTNWS03_DETAIL.XLSX'*/
/*		REPLACE;*/
/*RUN;*/
