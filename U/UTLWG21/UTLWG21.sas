/*UTLWG21 ENROLLMENT REPORT CORRECTIONS */
/*================CYPRUS RUN================*/
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
FILENAME REPORT2 "&RPTLIB/ULWG21.LWG21R2";
FILENAME REPORT3 "&RPTLIB/ULWG21.LWG21R3";
FILENAME REPORT4 "&RPTLIB/ULWG21.LWG21R4";
FILENAME REPORT5 "&RPTLIB/ULWG21.LWG21R5";
FILENAME REPORT6 "&RPTLIB/ULWG21.LWG21R6";
FILENAME REPORT7 "&RPTLIB/ULWG21.LWG21R7";
/*SET MONTH VARIABLE FOR QUARTER CRITERIA PROCESSING*/
DATA _NULL_;
CALL SYMPUT('MNTH',MONTH(INTNX('MONTH',TODAY(),0,'BEGINNING')));
RUN;
/*================LOCAL RUN================*/
/*%LET RPTLIB = T:\SAS;*/
/*FILENAME REPORT2 "&RPTLIB\ULWG21.LWG21R2";*/
/*FILENAME REPORT3 "&RPTLIB\ULWG21.LWG21R3";*/
/*FILENAME REPORT4 "&RPTLIB\ULWG21.LWG21R4";*/
/*FILENAME REPORT5 "&RPTLIB\ULWG21.LWG21R5";*/
/*FILENAME REPORT6 "&RPTLIB\ULWG21.LWG21R6";*/
/*FILENAME REPORT7 "&RPTLIB\ULWG21.LWG21R7";*/
/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;*/
/*RSUBMIT;*/
/*=========================================*/
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE ERFCS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT PD01.DF_PRS_ID
	,RTRIM(PD01.DM_PRS_1)||' '||PD01.DM_PRS_LST AS NAME
	,SD02.LF_STU_ENR_RPT_SEQ
	,SD02.LF_CRT_DTS_SD02
	,SD02.LC_STU_ENR_TYP
	,SD02.LC_STA_SD02
	,SD02.LD_XPC_GRD
	,SD02.LD_ENR_CER

	,SC01.IF_IST
	,SC01.IM_IST_FUL
	,SC01.IX_GEN_STR_ADR_1
	,SC01.IX_GEN_STR_ADR_2
	,SC01.IM_GEN_CT
	,SC01.IC_GEN_ST
	,SC01.IF_GEN_ZIP
	,SC01.IM_GEN_FGN_CNY
	,SC01.IC_SSR_PTC
	,SC01.II_GEN_VAL_ADR
	,SC01.IC_IST_DPT

	,GAXX.*

FROM OLWHRM1.SD02_STU_ENR SD02
INNER JOIN OLWHRM1.SC01_LGS_SCL_INF SC01
	ON SC01.IF_IST = SD02.IF_OPS_SCL_RPT
INNER JOIN OLWHRM1.PD01_PDM_INF PD01
	ON SD02.DF_PRS_ID_STU = PD01.DF_PRS_ID
LEFT OUTER JOIN 
	(SELECT A.DF_PRS_ID_STU
		,B.AF_APL_ID
		,B.AF_APL_ID_SFX
		,C.LF_STU_ENR_RPT_SEQ
		,C.LF_CRT_DTS_SD02
	 FROM OLWHRM1.GA01_APP A
	 INNER JOIN OLWHRM1.GA10_LON_APP B
	 	ON A.AF_APL_ID = B.AF_APL_ID
	 INNER JOIN OLWHRM1.GA16_ENR_RPT_CRF C
		ON B.AF_APL_ID = C.AF_APL_ID
		AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
	INNER JOIN OLWHRM1.GA14_LON_STA D
		ON B.AF_APL_ID = D.AF_APL_ID
		AND B.AF_APL_ID_SFX = D.AF_APL_ID_SFX
	 WHERE B.AA_CUR_PRI > 0
	 	AND D.AC_STA_GA14 = 'A'
		AND D.AC_LON_STA_TYP NOT IN ('AE','AL','CP','PM','UA','UB','UC','UD','UI','CA','PF','PN')
		AND B.AC_GTE_TRF <> 'O'
	 ) GAXX
	ON SD02.DF_PRS_ID_STU = GAXX.DF_PRS_ID_STU
	AND SD02.LF_STU_ENR_RPT_SEQ = GAXX.LF_STU_ENR_RPT_SEQ
	AND SD02.LF_CRT_DTS_SD02 = GAXX.LF_CRT_DTS_SD02

WHERE SC01.IC_SSR_PTC = ' '
AND SD02.LC_STU_ENR_TYP IN ('F','H','A')

FOR READ ONLY WITH UR
);
/*====================================================*/
/*DISCONNECT FROM DB2;*/
/*ENDRSUBMIT;*/
/*====================================================*/
/******************************************************/
/*====================================================*/
/*RSUBMIT;*/
/*PROC SQL;*/
/*CONNECT TO DB2 (DATABASE=DLGSUTWH);*/
/*====================================================*/
CREATE TABLE ERFCS2 AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT SC01.IF_IST
	,MAX(GRDRC.ID_ATY_PRF) AS GRDRC_MXDT
	,QUARTER(MAX(GRDRC.ID_ATY_PRF)) AS GRDRC_QRTR
	,MAX(GRBEV.ID_ATY_PRF) AS GRBEV_MXDT
	,QUARTER(MAX(GRBEV.ID_ATY_PRF)) AS GRBEV_QRTR
FROM OLWHRM1.SC01_LGS_SCL_INF SC01
LEFT OUTER JOIN OLWHRM1.AY05_IST_ATY GRDRC
	ON SC01.IF_IST = GRDRC.IF_IST
	AND GRDRC.PF_ACT ='GRDRC'
LEFT OUTER JOIN OLWHRM1.AY05_IST_ATY GRBEV
	ON SC01.IF_IST = GRBEV.IF_IST
	AND GRBEV.PF_ACT ='GRBEV'
WHERE SC01.IC_SSR_PTC = ' '
GROUP BY SC01.IF_IST
FOR READ ONLY WITH UR
);
/*DISCONNECT FROM DB2;*/
/*ENDRSUBMIT;*/
/*DATA ERFCS;SET WORKLOCL.ERFCS;RUN;*/
/*DATA ERFCS2;SET WORKLOCL.ERFCS2;RUN;*/

DATA ERFCS;
SET ERFCS;
IF AF_APL_ID = '' THEN DELETE;
ELSE OUTPUT;
RUN;

/*==============================================*/
/*GET SCHOOL LEVEL INFORMATION					*/
/*==============================================*/
%MACRO SCHL_SPLIT(DS,CRT);
DATA &DS (KEEP=IF_IST IM_IST_FUL IX_GEN_STR_ADR_1 IX_GEN_STR_ADR_2 
		  IM_GEN_CT IC_GEN_ST IF_GEN_ZIP IM_GEN_FGN_CNY IC_SSR_PTC 
		  II_GEN_VAL_ADR IC_IST_DPT);
SET ERFCS;
WHERE IC_IST_DPT = &CRT;
RUN;
PROC SORT DATA=&DS NODUPKEY;BY IF_IST;RUN;
%MEND SCHL_SPLIT;
%SCHL_SPLIT(_112,'112');
%SCHL_SPLIT(_110,'110');
%SCHL_SPLIT(_BLANK,' ');
%MACRO SCL_DPT(DSNEW,DS1,DS2,CRIT);
DATA &DSNEW;
MERGE &DS1 (IN=A) &DS2 (IN=B);
BY IF_IST;
&CRIT ;
RUN;
%MEND SCL_DPT;
%SCL_DPT(_112,_112,_112,IF A = B);
%SCL_DPT(_110,_112,_110,IF B AND NOT A);
%SCL_DPT(_BLANK,_112,_BLANK,IF B AND NOT A);
%SCL_DPT(_BLANK,_110,_BLANK,IF B AND NOT A);
DATA SCHL_INFO;
SET _112 _110 _BLANK;
RUN;

PROC SORT DATA=SCHL_INFO;BY IF_IST;RUN;
PROC SORT DATA=ERFCS2;BY IF_IST;RUN;

DATA SCHL_INFO;
MERGE SCHL_INFO (IN=A) ERFCS2 (IN=B);
BY IF_IST;
IF A;
RUN;

/*==================================================*/
/*GET STUDENT INFO*/
/*==================================================*/
DATA STU_INFO(DROP=IM_IST_FUL IX_GEN_STR_ADR_1 IX_GEN_STR_ADR_2 IM_GEN_CT IC_GEN_ST
			  IF_GEN_ZIP IM_GEN_FGN_CNY IC_SSR_PTC II_GEN_VAL_ADR IC_IST_DPT);
SET ERFCS ;
RUN;

PROC SORT DATA = STU_INFO;
BY DF_PRS_ID LD_ENR_CER;
RUN;

DATA STU_INFO (DROP=AF_APL_ID AF_APL_ID_SFX);
SET STU_INFO;
BY DF_PRS_ID LD_ENR_CER;
IF LAST.DF_PRS_ID THEN OUTPUT;
RUN;

/*==================================================*/
/*COMBINE SCHOOL AND STUDENT INFO*/
/*==================================================*/

PROC SORT DATA=SCHL_INFO;BY IF_IST;RUN;
PROC SORT DATA=STU_INFO;BY IF_IST;RUN;

DATA SCHL_INFO;
MERGE SCHL_INFO (IN=A) STU_INFO (IN=B);
BY IF_IST;
IF A = B;
RUN;

/*DETERMINE QUARTER CRITERIA*/
%MACRO NOQRTR(DT);
%PUT &DT;
%IF &DT EQ 1 OR &DT EQ 4 OR &DT EQ 7 OR &DT EQ 10 
	%THEN %DO;
		DATA SCHL_INFO;
			SET SCHL_INFO;
		RUN;
	%END;
%ELSE %DO;
	DATA SCHL_INFO;
		SET SCHL_INFO;
		IF YEAR(DATE()) = YEAR(GRBEV_MXDT) AND QTR(DATE()) = GRBEV_QRTR THEN OUTPUT;
	RUN;

	DATA SCHL_INFO;
		SET SCHL_INFO;
		IF YEAR(GRBEV_MXDT) = YEAR(GRDRC_MXDT) AND QTR(GRBEV_MXDT) = QTR(GRDRC_MXDT) THEN DELETE;
		ELSE OUTPUT;
	RUN;
	%END;
%MEND NOQRTR;
%NOQRTR(&MNTH);

DATA SCHL_INFO;
SET SCHL_INFO;
COST_CENTER_CODE = 'MA2330';
RUN;

DATA SCHL_INFO;
SET SCHL_INFO;
IF IC_GEN_ST IN ('FC','') THEN SVAR = 1;
ELSE SVAR = 2;
RUN;




/*FINAL SORT*/
PROC SORT DATA=SCHL_INFO NODUPKEY;
BY SVAR IF_IST IC_GEN_ST DF_PRS_ID;
RUN;

/*==================================================*/
/*CREATE OUTPUT FILES*/
/*==================================================*/

%MACRO VADT(ADD_IND,REPNO);
%IF &ADD_IND = 'Y' %THEN %DO;
		DATA _NULL_;
		SET WORK.SCHL_INFO;
		WHERE II_GEN_VAL_ADR = &ADD_IND;
		FILE REPORT&REPNO DELIMITER=',' DSD DROPOVER LRECL=32767;
			FORMAT DF_PRS_ID $9. ;
			FORMAT NAME $47. ;
			FORMAT IF_IST $8. ;
			FORMAT IM_IST_FUL $40. ;
			FORMAT IX_GEN_STR_ADR_1 $40. ;
			FORMAT IX_GEN_STR_ADR_2 $40. ;
			FORMAT IM_GEN_CT $30. ;
			FORMAT IC_GEN_ST $2. ;
			FORMAT IF_GEN_ZIP $14. ;
			FORMAT IM_GEN_FGN_CNY $25. ;
			FORMAT LC_STU_ENR_TYP $1. ;
			FORMAT LD_XPC_GRD MMDDYY10. ;
/*			FORMAT LD_ENR_CER MMDDYY10. ;*/
			FORMAT COST_CENTER_CODE $6.;
		DO;
			PUT NAME $ @;
			PUT DF_PRS_ID $ @;
			PUT LC_STU_ENR_TYP $ @;
			PUT LD_XPC_GRD @;
			PUT IF_IST $ @;
			PUT IM_IST_FUL $ @;
			PUT IX_GEN_STR_ADR_1 $ @;
			PUT IX_GEN_STR_ADR_2 $ @;
			PUT IM_GEN_CT $ @;
			PUT IC_GEN_ST $ @;
			PUT IF_GEN_ZIP $ @;
			PUT IM_GEN_FGN_CNY $ @;
/*			PUT LD_ENR_CER $ @;*/
			PUT IC_GEN_ST $ @;
			PUT COST_CENTER_CODE $ ;
		END;
		RUN;
	%END ;
	%ELSE %DO;
		DATA _NULL_;
		SET WORK.SCHL_INFO;
		WHERE II_GEN_VAL_ADR = &ADD_IND;
		FILE REPORT&REPNO DELIMITER=',' DSD DROPOVER LRECL=32767;
			FORMAT IF_IST $8. ;
			FORMAT IM_IST_FUL $40. ;
		DO;
			PUT IF_IST $ @;
			PUT IM_IST_FUL $ ;
		END;
		RUN;
	%END;
%MEND VADT;
%VADT('Y',2);
%VADT('N',3);
%VADT('Y',4);
%VADT('N',5);
%VADT('Y',6);
%VADT('N',7);
