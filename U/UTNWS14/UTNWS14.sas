/*LIBNAME DNFPUTDL DB2 DATABASE=DNFPUTDL OWNER=PKUB;*uncomment for prod;*/
/*%LET RPTLIB = %SYSGET(reportdir);*uncomment for prod;*/
%LET RPTLIB = T:\SAS;*comment for prod;

FILENAME REPORTZ "&RPTLIB/UNWS14.NWS14RZ";
FILENAME REPORT2 "&RPTLIB/UNWS14.NWS14R2";
FILENAME REPORT3 "&RPTLIB/UNWS14.NWS14R3";
FILENAME REPORT4 "&RPTLIB/UNWS14.NWS14R4";
FILENAME REPORT6 "&RPTLIB/UNWS14.NWS14R6";
FILENAME REPORT7 "&RPTLIB/UNWS14.NWS14R7";
FILENAME REPORT8 "&RPTLIB/UNWS14.NWS14R8";
FILENAME REPORT9 "&RPTLIB/UNWS14.NWS14R9";
FILENAME REPORT10 "&RPTLIB/UNWS14.NWS14R10";
FILENAME REPORT11 "&RPTLIB/UNWS14.NWS14R11";
FILENAME REPORT12 "&RPTLIB/UNWS14.NWS14R12";
FILENAME REPORT13 "&RPTLIB/UNWS14.NWS14R13";
FILENAME REPORT14 "&RPTLIB/UNWS14.NWS14R14";
FILENAME REPORT16 "&RPTLIB/UNWS14.NWS14R16";
FILENAME REPORT17 "&RPTLIB/UNWS14.NWS14R17";
FILENAME REPORT18 "&RPTLIB/UNWS14.NWS14R18";
FILENAME REPORT19 "&RPTLIB/UNWS14.NWS14R19";
FILENAME REPORT21 "&RPTLIB/UNWS14.NWS14R21";
FILENAME REPORT22 "&RPTLIB/UNWS14.NWS14R22";
FILENAME REPORT23 "&RPTLIB/UNWS14.NWS14R23";
FILENAME REPORT24 "&RPTLIB/UNWS14.NWS14R24";
FILENAME REPORT25 "&RPTLIB/UNWS14.NWS14R25";

OPTIONS REMOTE=LEGEND;*comment for prod;
LIBNAME LEGEND REMOTE SERVER=LEGEND SLIBREF=WORK;*comment for prod;
RSUBMIT LEGEND;*comment for prod;
/*%let DB = DNFPRQUT;  *This is test;*/
%LET DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DB2 DATABASE=&DB OWNER=PKUB;
LIBNAME SAS_TAB V8 '/sas/whse/progrevw';

DATA _NULL_; 
	SET SAS_TAB.LASTRUN_JOBS;
	/*If the job must be run manually set this macro to the last day it successfully ran(last business day).*/
	LAST_RUN = TODAY()-1; *COMMENT FOR PROD, IT WILL READ THE DATE FROM A TABLE;
	IF JOB = 'UTNWS14' THEN DO;
		CALL SYMPUT('LAST_RUN',"'"||TRIM(LEFT(PUT(LAST_RUN,DATE10.)))|| "'D");
		CALL SYMPUT('LAST_RUNPASS',"'"|| PUT(LAST_RUN,MMDDYY10.) || "'");
	END;
RUN;
%PUT &LAST_RUN &LAST_RUNPASS;

*used in coalesced tax year for R17 & R18;
DATA _NULL_;
	CALL SYMPUT('LASTYEAR',"'"||TRIM(LEFT(PUT(YEAR(TODAY())-1,4.)))||"'");
RUN;
%PUT &LASTYEAR;

PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE HAD_ARC AS
		SELECT 
			*
		FROM
			CONNECTION TO DB2 
			(
				SELECT 
					 AY10.BF_SSN
					,AY10.LN_ATY_SEQ
					,AY10.PF_REQ_ACT
					,PD10.DF_SPE_ACC_ID
					,PD10.DM_PRS_1
					,PD10.DM_PRS_MID
					,PD10.DM_PRS_LST
					,PD30.DX_STR_ADR_1
					,PD30.DX_STR_ADR_2
					,PD30.DM_CT
					,PD30.DC_DOM_ST
					,PD30.DF_ZIP_CDE
					,PD30.DM_FGN_CNY
					,PD30.DM_FGN_ST
					,AY10.LD_ATY_REQ_RCV
				FROM 
					PKUB.AY10_BR_LON_ATY AY10
					INNER JOIN PKUB.PD10_PRS_NME PD10
						ON AY10.BF_SSN = PD10.DF_PRS_ID
					INNER JOIN PKUB.PD30_PRS_ADR PD30
						ON PD10.DF_PRS_ID = PD30.DF_PRS_ID
				WHERE 
					AY10.PF_REQ_ACT IN 
					(
						'PSLFF','CDCOR','DRNDP','DMISH','PHNPL','THFSC'
						,'IDTFB','DFCFS','DFCTB','DFCTU','SCHAP','DFREF'
						,'SDWRF','SDWCF','TXPDF','TXWOF','TLFAF','ISRRF'
					)
					AND AY10.LC_STA_ACTY10 = 'A'
					AND AY10.LD_ATY_REQ_RCV >= &LAST_RUNPASS
					AND PD30.DC_ADR = 'L'
			)
	;
	CREATE TABLE IDTFE AS
		SELECT 
			*
		FROM 
			CONNECTION TO DB2 
			(
				SELECT 
					 AY10.BF_SSN
					,AY10.LN_ATY_SEQ
					,AY10.PF_REQ_ACT
					,PD10.DF_SPE_ACC_ID
					,PD10.DM_PRS_1
					,PD10.DM_PRS_MID
					,PD10.DM_PRS_LST
					,PD30.DX_STR_ADR_1
					,PD30.DX_STR_ADR_2
					,PD30.DM_CT
					,PD30.DC_DOM_ST
					,PD30.DF_ZIP_CDE
					,PD30.DM_FGN_CNY
					,PD30.DM_FGN_ST
					,AY10.LD_ATY_REQ_RCV
				FROM 
					PKUB.AY10_BR_LON_ATY AY10
					LEFT JOIN PKUB.LN20_EDS LN20
						ON AY10.BF_SSN = LN20.BF_SSN
					LEFT JOIN PKUB.PD10_PRS_NME PD10
						ON LN20.LF_EDS = PD10.DF_PRS_ID
					LEFT JOIN PKUB.PD30_PRS_ADR PD30
						ON PD10.DF_PRS_ID = PD30.DF_PRS_ID
				WHERE 
					AY10.PF_REQ_ACT IN ('IDTFE')
					AND AY10.LC_STA_ACTY10 = 'A'
					AND AY10.LD_ATY_REQ_RCV >= &LAST_RUNPASS
					AND PD30.DC_ADR = 'L'
			)
	;
DISCONNECT FROM DB2;
QUIT;

PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE HAD_NOTIFIED_ARC AS
		SELECT 
			*
		FROM
			CONNECTION TO DB2 
			(
				SELECT DISTINCT
					 AY10.BF_SSN
					,AY10.LN_ATY_SEQ
					,AY10.PF_REQ_ACT
					,PD10.DF_SPE_ACC_ID
					,PD10.DM_PRS_1
					,PD10.DM_PRS_MID
					,PD10.DM_PRS_LST
					,PD30.DX_STR_ADR_1
					,PD30.DX_STR_ADR_2
					,PD30.DM_CT
					,PD30.DC_DOM_ST
					,PD30.DF_ZIP_CDE
					,PD30.DM_FGN_CNY
					,PD30.DM_FGN_ST
					,AY10.LD_ATY_REQ_RCV
				FROM 
					PKUB.AY10_BR_LON_ATY AY10
					INNER JOIN PKUB.PD10_PRS_NME PD10
						ON AY10.BF_SSN = PD10.DF_PRS_ID
					INNER JOIN PKUB.PD30_PRS_ADR PD30
						ON PD10.DF_PRS_ID = PD30.DF_PRS_ID
					LEFT JOIN PKUB.PD32_PRS_ADR_EML PD32 /*J* changed join to LEFT OUTER from INNER in include borrower without an e-mail address record*/
						ON PD10.DF_PRS_ID = PD32.DF_PRS_ID
				WHERE 
					AY10.PF_REQ_ACT IN ('CODCS','CODPA','DIFRB','DIDFR','DITLF','DICSK','DIFCR','DIUPR','DIS11')
					AND AY10.LC_STA_ACTY10 = 'A'
					AND AY10.LD_ATY_REQ_RCV >= &LAST_RUNPASS
					AND PD30.DC_ADR = 'L'
					AND (
							(
								PD32.DI_VLD_ADR_EML <> 'Y' 
								AND PD32.DC_STA_PD32 = 'A'
							)
							OR PD32.DF_PRS_ID IS NULL
						)
			)
	;
DISCONNECT FROM DB2;
QUIT;

PROC SQL;
	CREATE TABLE R3 AS
		SELECT 
			 HA.BF_SSN
			,HA.PF_REQ_ACT
			,HA.LN_ATY_SEQ
			,LN10.LN_SEQ
			,LN10.IC_LON_PGM
			,LN10.LD_LON_1_DSB
			,LN10.LA_CUR_PRI
			,LN72.LR_ITR
		FROM
			HAD_ARC HA
			INNER JOIN PKUB.LN85_LON_ATY LN85
				ON HA.BF_SSN = LN85.BF_SSN
				AND HA.LN_ATY_SEQ = LN85.LN_ATY_SEQ
			INNER JOIN PKUB.LN10_LON LN10
				ON LN85.BF_SSN = LN10.BF_SSN
				AND LN85.LN_SEQ = LN10.LN_SEQ
			INNER JOIN PKUB.LN72_INT_RTE_HST LN72
				ON LN85.BF_SSN = LN72.BF_SSN
				AND LN85.LN_SEQ = LN72.LN_SEQ
				AND HA.LD_ATY_REQ_RCV BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END
				AND LN72.LC_STA_LON72 = 'A'
		WHERE 
			HA.PF_REQ_ACT = 'CDCOR'
	;
QUIT;

PROC SQL;
	CREATE TABLE R6 AS
		SELECT 
			 HA.BF_SSN
			,HA.PF_REQ_ACT
			,HA.LN_ATY_SEQ
			,AY20.LN_ATY_CMT_SEQ
			,AY20.LN_ATY_TXT_SEQ
			,AY20.LX_ATY
		FROM
			HAD_ARC HA
			INNER JOIN PKUB.AY20_ATY_TXT AY20
				ON HA.BF_SSN = AY20.BF_SSN
				AND HA.LN_ATY_SEQ = AY20.LN_ATY_SEQ
		WHERE 
			HA.PF_REQ_ACT = 'PHNPL';
QUIT;
DATA R6 (KEEP=BF_SSN PF_REQ_ACT LN_ATY_SEQ PMT_AMT);
	SET R6;
	A = INDEX(LX_ATY,'CBP $') ;
	IF A > 0 
		THEN 
			DO;
				LX_ATY = LEFT(SUBSTR(LX_ATY,A+3));
				PMT_AMT = INPUT(SCAN(LX_ATY,1, ' '),DOLLAR18.2);
				OUTPUT;
			END;
RUN;

PROC SQL;
	CREATE TABLE R17 AS
		SELECT 
			 HA.BF_SSN
			,HA.PF_REQ_ACT
			,HA.LN_ATY_SEQ
			,MR64.LN_SEQ
			,COALESCE(MR64.LF_TAX_YR,&LASTYEAR) AS LF_TAX_YR
			,MR64.LA_BR_INT_PD_YR
		FROM
			HAD_ARC HA
			INNER JOIN PKUB.MR64_BR_TAX MR64
				ON HA.BF_SSN = MR64.BF_SSN
		WHERE 
			PF_REQ_ACT = 'TXPDF'
			AND MR64.LC_STA_MR64 = 'A'
	;
QUIT;

PROC SORT 
	DATA=R17; 
	BY BF_SSN LF_TAX_YR; 
RUN;
DATA R17(DROP=LA_BR_INT_PD_YR LN_SEQ); 
	SET R17; 
	BY BF_SSN LF_TAX_YR;
	RETAIN INT_PD 0;
	IF FIRST.LF_TAX_YR THEN INT_PD = 0;
	INT_PD + COALESCE(LA_BR_INT_PD_YR,0);
	IF LAST.BF_SSN THEN OUTPUT;
RUN;

PROC SQL;
	CREATE TABLE R18 AS
		SELECT 
			 HA.BF_SSN
			,HA.PF_REQ_ACT
			,HA.LN_ATY_SEQ
			,MR65.LN_SEQ
			,COALESCE(MR65.LF_TAX_YR,&LASTYEAR) AS LF_TAX_YR
			,MR65.WA_PRI_INC_CRD
			,MR65.WA_INT_INC_CRD
		FROM
			HAD_ARC HA
			INNER JOIN PKUB.MR65_MSC_TAX_RPT MR65
				ON HA.BF_SSN = MR65.BF_SSN
		WHERE 
			PF_REQ_ACT = 'TXWOF'
			AND MR65.WC_STA_MR65 = 'A';
QUIT;

PROC SORT DATA=R18; 
	BY BF_SSN LF_TAX_YR;
RUN;
DATA R18(DROP=LN_SEQ WA_PRI_INC_CRD WA_INT_INC_CRD); 
	SET R18; 
	BY BF_SSN LF_TAX_YR;
	RETAIN INT_CAN TOT_CAN 0;
	IF FIRST.LF_TAX_YR 
		THEN 
			DO;
				INT_CAN = 0;
				TOT_CAN = 0;
			END;
	INT_CAN + COALESCE(WA_INT_INC_CRD,0);
	TOT_CAN + COALESCE(WA_PRI_INC_CRD,0) + COALESCE(WA_INT_INC_CRD,0);
	IF LAST.BF_SSN THEN OUTPUT;
RUN;

DATA SAS_TAB.LASTRUN_JOBS;
	SET SAS_TAB.LASTRUN_JOBS;
	IF JOB = 'UTNWS14' THEN LAST_RUN = TODAY();
RUN;

*comment out next eight lines for prod;
ENDRSUBMIT;
DATA HAD_ARC; SET LEGEND.HAD_ARC; RUN;
DATA HAD_NOTIFIED_ARC; SET LEGEND.HAD_NOTIFIED_ARC; RUN;
DATA IDTFE; SET LEGEND.IDTFE; RUN;
DATA R3; SET LEGEND.R3; RUN;
DATA R6; SET LEGEND.R6; RUN;
DATA R17; SET LEGEND.R17; RUN;
DATA R18; SET LEGEND.R18; RUN;


DATA HAD_ARC (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
	SET HAD_ARC;
	KEYSSN = TRANSLATE(bf_ssn,'MYLAUGHTER','0987654321');
	MODAY = PUT(DATE(),MMDDYYN4.);
	KEYLINE = "P"||KEYSSN||MODAY||"L";
	CHKDIG = 0;
	LENGTH DIG $2.;
	DO I = 1 TO LENGTH(KEYLINE);
		IF I/2 NE ROUND(I/2,1) 
			THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
		ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
		IF SUBSTR(DIG,1,1) = " " 
			THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
			ELSE DO;
				CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
				CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
				IF CHK1 + CHK2 >= 10
					THEN DO;
						CHK3 = PUT(CHK1 + CHK2,2.);
						CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
						CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
					END;
				CHKDIG = CHKDIG + CHK1 + CHK2;
			END;
	END;
	CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
	IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
	CHECK = PUT(CHKDIGIT,1.);
	ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;

DATA HAD_NOTIFIED_ARC (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
	SET HAD_NOTIFIED_ARC;
	KEYSSN = TRANSLATE(bf_ssn,'MYLAUGHTER','0987654321');
	MODAY = PUT(DATE(),MMDDYYN4.);
	KEYLINE = "P"||KEYSSN||MODAY||"L";
	CHKDIG = 0;
	LENGTH DIG $2.;
	DO I = 1 TO LENGTH(KEYLINE);
		IF I/2 NE ROUND(I/2,1) 
			THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
		ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
		IF SUBSTR(DIG,1,1) = " " 
			THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
			ELSE DO;
				CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
				CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
				IF CHK1 + CHK2 >= 10
					THEN DO;
						CHK3 = PUT(CHK1 + CHK2,2.);
						CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
						CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
					END;
				CHKDIG = CHKDIG + CHK1 + CHK2;
			END;
	END;
	CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
	IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
	CHECK = PUT(CHKDIGIT,1.);
	ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;

DATA IDTFE (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
	SET IDTFE;
	KEYSSN = TRANSLATE(bf_ssn,'MYLAUGHTER','0987654321');
	MODAY = PUT(DATE(),MMDDYYN4.);
	KEYLINE = "P"||KEYSSN||MODAY||"L";
	CHKDIG = 0;
	LENGTH DIG $2.;
	DO I = 1 TO LENGTH(KEYLINE);
		IF I/2 NE ROUND(I/2,1) 
			THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
		ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
		IF SUBSTR(DIG,1,1) = " " 
			THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
			ELSE DO;
				CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
				CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
				IF CHK1 + CHK2 >= 10
					THEN DO;
						CHK3 = PUT(CHK1 + CHK2,2.);
						CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
						CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
					END;
				CHKDIG = CHKDIG + CHK1 + CHK2;
			END;
	END;
	CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
	IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
	CHECK = PUT(CHKDIGIT,1.);
	ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;

PROC SORT DATA=HAD_ARC; BY BF_SSN PF_REQ_ACT LN_ATY_SEQ; RUN;
PROC SORT DATA=HAD_NOTIFIED_ARC; BY BF_SSN PF_REQ_ACT LN_ATY_SEQ; RUN;
PROC SORT DATA=IDTFE; BY BF_SSN PF_REQ_ACT LN_ATY_SEQ; RUN;
PROC SORT DATA=R3; BY BF_SSN PF_REQ_ACT LN_ATY_SEQ LD_LON_1_DSB; RUN;
PROC SORT DATA=R6; BY BF_SSN PF_REQ_ACT LN_ATY_SEQ; RUN;
PROC SORT DATA=R17; BY BF_SSN PF_REQ_ACT LN_ATY_SEQ; RUN;
PROC SORT DATA=R18; BY BF_SSN PF_REQ_ACT LN_ATY_SEQ; RUN;

DATA HAD_ARC_ALL;
	MERGE HAD_ARC R3 R6 R17 R18 HAD_NOTIFIED_ARC IDTFE;
	BY BF_SSN PF_REQ_ACT;
RUN;

PROC SORT DATA=HAD_ARC_ALL; BY DC_DOM_ST BF_SSN; RUN;
%MACRO RPT(R,ARC);
	DATA _NULL_;
		FILE REPORT&R DELIMITER=',' DSD DROPOVER LRECL=32767;
		retain a b 0;
		if a = 0 then do;
			a + 1;
			PUT "ARC,ACCT NO,FIRST NAME,MIDDLE INITIAL,LAST NAME,STREET 1,STREET 2,CITY,STATE,ZIP"
				",FOREIGN COUNTRY,FOREIGN STATE,ACS KEYLINE,ARC DATE" 
			%IF &R = 6 %THEN %DO; ",PAYMENT AMOUNT" %END;
			%ELSE %IF &R =17 %THEN %DO; ",TAX YEAR,INTEREST PAID" %END;
			%ELSE %IF &R =18 %THEN %DO; ",TAX YEAR,CANCELLED BALANCE,INTEREST INCLUDED IN CANCELLATION" %END;
			%else %if &R = 3 %THEN %DO I = 1 %TO 28; ",LOAN PROGRAM&i,DISBURSEMENT DATE&i,CURRENT PRINCIPAL BALANCE&i,INTEREST RATE&i" %END;
		;	
		END;
		SET HAD_ARC_ALL ;
		by DC_DOM_ST bf_ssn;
		WHERE PF_REQ_ACT IN (&ARC);
			FORMAT LD_ATY_REQ_RCV LD_LON_1_DSB MMDDYY10.;
			FORMAT PMT_AMT LA_CUR_PRI INT_PD TOT_CAN INT_CAN 10.2;
		IF FIRST.BF_SSN OR &R ^= 3 THEN DO;
			b = 1;
			PUT PF_REQ_ACT DF_SPE_ACC_ID DM_PRS_1 DM_PRS_MID DM_PRS_LST DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DC_DOM_ST DF_ZIP_CDE
				DM_FGN_CNY DM_FGN_ST ACSKEY LD_ATY_REQ_RCV 
			%IF &R = 6 %THEN %DO;
				PMT_AMT 
			%END;
			%ELSE %IF &R =17 %THEN %DO;
				LF_TAX_YR INT_PD
			%END;
			%ELSE %IF &R =18 %THEN %DO;
				LF_TAX_YR TOT_CAN INT_CAN
			%END;
			%ELSE %IF &R = 3 %THEN %DO;
				@;
			IF LAST.BF_SSN THEN do;
				PUT IC_LON_PGM LD_LON_1_DSB LA_CUR_PRI LR_ITR @;
				do until (b = 27);
					put 4*',' @;
					b + 1;
				end;
				put 3*',';
			end;
			ELSE PUT IC_LON_PGM LD_LON_1_DSB LA_CUR_PRI LR_ITR @;
			%END;
		 ;
		END;
		ELSE IF &R = 3 THEN DO;
			b + 1;
			IF LAST.BF_SSN THEN do;
				PUT IC_LON_PGM LD_LON_1_DSB LA_CUR_PRI LR_ITR @;
				do until (b = 27);
					put 4*',' @;
					b + 1;
				end;
				put 3*',';
			end;
			ELSE PUT IC_LON_PGM LD_LON_1_DSB LA_CUR_PRI LR_ITR @;
		END;
	RUN;
%mend;

%RPT(2,'PSLFF');
%RPT(3,'CDCOR');
%RPT(4,'DRNDP');
%RPT(6,'PHNPL');
%RPT(7,'THFSC');
%RPT(8,'IDTFB');
%RPT(9,'IDTFE');
%RPT(10,'DFCFS');
%RPT(11,'DFCTB');
%RPT(12,'DFCTU');
%RPT(13,'SCHAP');
%RPT(14,'DFREF');
%RPT(16,'SDWCF');
%RPT(17,'TXPDF');
%RPT(18,'TXWOF');
%RPT(19,'TLFAF');
%RPT(21,'ISRRF');
%RPT(22,%str('CODCS','CODPA'));
%RPT(23,'DIFRB');
%RPT(24,'DIDFR');
%RPT(25,%str('DITLF','DICSK','DIFCR','DIUPR','DIS11'));
