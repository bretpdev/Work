/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/ULWK39.LWK39RZ";
FILENAME REPORT2 "&RPTLIB/ULWK39.LWK39R2";
DATA _NULL_;
	CALL SYMPUT('CHAR_DAYS_2',"'"||PUT(INTNX('DAY',TODAY(),-2,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('CHAR_TODAY',"'"||PUT(INTNX('DAY',TODAY(),-0,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'BEGINNING'), MMDDYY10.));
DATA _NULL_;
	CALL SYMPUT('INT_DAYS_2',INPUT(&CHAR_DAYS_2, MMDDYY10.));
	CALL SYMPUT('INT_TODAY',INPUT(&CHAR_TODAY, MMDDYY10.));
RUN;
%SYSLPUT CHAR_DAYS_2 = &CHAR_DAYS_2;
%SYSLPUT CHAR_TODAY = &CHAR_TODAY;
%SYSLPUT INT_DAYS_2 = &INT_DAYS_2;
%SYSLPUT INT_TODAY = &INT_TODAY;
LIBNAME WORKLOCL REMOTE SERVER=DUSTER SLIBREF=WORK;
RSUBMIT; 
%MACRO SQLCHECK ;
  %IF  &SQLXRC NE 0  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @01 " ********************************************************************* "
              / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @01 " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @01 " ****  &SQLXMSG   **** "
              / @01 " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;
%LET TBLLIB = /sas/whse/progrevw;

*INPUT LOAN TYPES FOR PRIVATE AND FFEL LOANS;
DATA LOAN_TYPES;
	FORMAT LN_TYP LN_PGM $50.;
	INFILE "&TBLLIB/GENR_REF_LoanTypes.txt" DLM=',' MISSOVER DSD;
	INFORMAT LN_TYP LN_PGM $50.;
	INPUT LN_TYP LN_PGM ;
	LN_PGM = UPCASE(LN_PGM);
RUN;
*CREATE MACRO VARIALBE LISTS OF LOAN PROGRAMS(FFEL AND PRIVATE LOANS);
PROC SQL NOPRINT;
	SELECT
		"'"||TRIM(LN_TYP)||"'" 
	INTO 
		:FFELP_LIST SEPARATED BY "," /*FFEL LOAN LIST*/
	FROM
		LOAN_TYPES
	WHERE
		LN_PGM = 'FFEL';
QUIT;
PROC SQL;
	CONNECT TO DB2 (DATABASE=DLGSUTWH);
	CREATE TABLE SKP_RPS AS
		SELECT 
			*
		FROM
			CONNECTION TO DB2 
			(
				SELECT DISTINCT 
					 LN10.BF_SSN
					,PD30.DD_VER_ADR
					,LN65.LD_CRT_LON65
					,ARC.LX_ATY
					,RS10.ACTIVE
					,CASE
						WHEN DAYS(LN65.LD_CRT_LON65)< DAYS(PD30.DD_VER_ADR) THEN 'A'
						WHEN DAYS(LN65.LD_CRT_LON65) >= DAYS(PD30.DD_VER_ADR) THEN 'B'
						ELSE ''
					END AS FST
				FROM 
					OLWHRM1.PD30_PRS_ADR PD30 
					INNER JOIN OLWHRM1.LN10_LON LN10
						ON PD30.DF_PRS_ID = LN10.BF_SSN
					INNER JOIN OLWHRM1.LN65_LON_RPS LN65
						ON LN10.BF_SSN = LN65.BF_SSN
						AND LN10.LN_SEQ = LN65.LN_SEQ
					LEFT JOIN
					(
						(
							SELECT
								RS10.BF_SSN
								,MIN(LD_STA_RPST10) AS ACTIVE
							FROM
								OLWHRM1.RS10_BR_RPD RS10
							WHERE
								LC_STA_RPST10 = 'A'
							GROUP BY
								RS10.BF_SSN
						)
						UNION
						(
							SELECT 
								RS10.BF_SSN
								,MAX(LD_STA_RPST10) AS ACTIVE
							FROM
								OLWHRM1.RS10_BR_RPD RS10
							WHERE
								LC_STA_RPST10 = 'I'
								AND BF_SSN NOT IN 
									(
										SELECT
											BF_SSN
										FROM
											OLWHRM1.RS10_BR_RPD
										WHERE
											LC_STA_RPST10 = 'A'
									)
							GROUP BY 
								RS10.BF_SSN
						)
					) RS10
						ON LN65.BF_SSN = RS10.BF_SSN
						AND DAYS(ACTIVE) >= DAYS(PD30.DD_VER_ADR) - 30
						AND DAYS(ACTIVE) <= DAYS(PD30.DD_VER_ADR) + 30
					LEFT JOIN 
					(
						SELECT
							AY10.BF_SSN
							,AY10.LD_ATY_REQ_RCV
							,'1' AS ARC_TRUE
							,AY20.LX_ATY
						FROM
							OLWHRM1.AY10_BR_LON_ATY AY10
							INNER JOIN OLWHRM1.AY15_ATY_CMT AY15
								ON AY10.BF_SSN = AY15.BF_SSN
								AND AY10.LN_ATY_SEQ = AY15.LN_ATY_SEQ
							INNER JOIN OLWHRM1.AY20_ATY_TXT AY20
								ON AY15.BF_SSN = AY20.BF_SSN
								AND AY15.LN_ATY_SEQ = AY20.LN_ATY_SEQ
								AND AY15.LN_ATY_CMT_SEQ = AY20.LN_ATY_CMT_SEQ
						WHERE
							PF_REQ_ACT = 'S4LRM'
					) ARC
						ON LN10.BF_SSN = ARC.BF_SSN
						AND ARC.LD_ATY_REQ_RCV >= PD30.DD_VER_ADR
				WHERE 
					LN10.LA_CUR_PRI > 0.00
					AND LN10.LC_STA_LON10 = 'R'
					AND PD30.DI_VLD_ADR = 'N'
					AND PD30.DC_ADR = 'L'
					AND DAYS(LN65.LD_CRT_LON65) >= DAYS(CURRENT DATE) - 241
					AND DAYS(LN65.LD_CRT_LON65) >= DAYS(PD30.DD_VER_ADR) - 30
					AND LN10.BF_SSN IN 
						(
							SELECT
								BF_SSN
							FROM
								OLWHRM1.LN10_LON LN10
							WHERE
								IC_LON_PGM IN (&FFELP_LIST)
								AND LA_CUR_PRI > 0
						)
					AND LN10.BF_SSN NOT IN 
						(
							SELECT
								BF_SSN
							FROM
								OLWHRM1.AY10_BR_LON_ATY AY10
							WHERE
								PF_REQ_ACT = 'INVRO'
								AND LD_ATY_REQ_RCV > PD30.DD_VER_ADR
						)
			);
	DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK;*/
QUIT;
LIBNAME SAS_TAB V8 '/sas/whse/progrevw';
DATA RPINV;
	SET SAS_TAB.RPINV;
	SOURCE = 'C';
RUN;
DATA IVAD;
	SET SAS_TAB.IVAD;
	SOURCE = 'D';
	BF_SSN = SSN;
	FORMAT BF_SSN $9.;
	INFORMAT BF_SSN $9.;
	DROP SSN;
RUN;
DATA SKP_RPS (DROP=FST LX_ATY);
	SET SKP_RPS;
		IF INDEX(LX_ATY,'RPDISCUH') + INDEX(LX_ATY,'DISCGLR') > 0 THEN SOURCE = '11';
		IF ACTIVE ^= . THEN SOURCE = '22';
		IF INDEX(LX_ATY,'RPDISCUH') + INDEX(LX_ATY,'DISCGLR') > 0 AND ACTIVE ^= . THEN SOURCE = '33';
	IF FST = 'A' THEN 
		DO;
			IF SOURCE = '33' THEN
				DO;
					SOURCE = 'A1';
					OUTPUT;
					SOURCE = 'A2';
					OUTPUT;
				END;
		ELSE 
			DO;
				IF SOURCE = '11' THEN
					DO;
						SOURCE = 'A1';
						OUTPUT;
					END;
				IF SOURCE = '22' THEN 
					DO;
						SOURCE = 'A2';
						OUTPUT;
					END;
			END;
		END;
	IF FST = 'B' THEN 
		DO;
			IF SOURCE = '33' THEN 
				DO;
					SOURCE = 'B1';
					OUTPUT;
					SOURCE = 'B2';
					OUTPUT;
				END;
		ELSE 
			DO;
				IF SOURCE = '11' THEN SOURCE = 'B1';
				IF SOURCE = '22' THEN SOURCE = 'B2';
				OUTPUT;
			END;
		END;
RUN;
DATA FINAL;
	SET SKP_RPS RPINV IVAD ;
RUN;
PROC SORT DATA=FINAL NODUPKEY;
	WHERE SOURCE ^= '';
	BY BF_SSN ;
RUN;
ENDRSUBMIT  ;
DATA FINAL;
	SET WORKLOCL.FINAL;
RUN;
DATA _NULL_;
	SET FINAL ;
	TARGET_ID = BF_SSN;
	ARC = 'INVRO';
	FROM_DATE = '';
	TO_DATE = '';
	NEEDED_BY_DATE = '';
	RECIPIENT_ID = '';
	REGARDS_TO_CODE = '';
	REGARDS_TO_ID = '';
	LOAN_SEQ = 'ALL';
	COMMENTS = 'REQUESTING SYSTEM QUEUE TO REGENERATE RPS ONCE SKIP BORROWER IS FOUND.';
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	DO;
	   PUT TARGET_ID @;
	   PUT ARC @;
	   PUT FROM_DATE @;
	   PUT TO_DATE @;
	   PUT NEEDED_BY_DATE @;
	   PUT RECIPIENT_ID @;
	   PUT REGARDS_TO_CODE @;
	   PUT REGARDS_TO_ID @;
	   PUT LOAN_SEQ @;
	   PUT COMMENTS $;
	END;
RUN;
