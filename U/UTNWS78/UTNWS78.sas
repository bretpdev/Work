/*set effective date of report*/
DATA _NULL_;
	CALL SYMPUT('REPORT_DATE',TODAY() - 2);
RUN;
%PUT &REPORT_DATE;

/*%LET RPTLIB = %SYSGET(reportdir);*/
/*LIBNAME SAS_TAB V8 '/sas/whse/progrevw';*/
%LET RPTLIB = T:\SAS;
LIBNAME SAS_TAB V8 'Y:\Development\SAS Test Files\progrevw';
LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work;

FILENAME REPORTZ "&RPTLIB/UNWS78.NWS78RZ";
FILENAME REPORT2 "&RPTLIB/UNWS78.NWS78R2";
FILENAME REPORT3 "&RPTLIB/UNWS78.NWS78R3";
FILENAME REPORT4 "&RPTLIB/UNWS78.NWS78R4";
FILENAME REPORT5 "&RPTLIB/UNWS78.NWS78R5";

/*assign default values to macro variables so the variables are always resolved even when there are no campaigns for the report date*/
DATA _NULL_;
	CALL SYMPUT('BEG_DATE',&REPORT_DATE);
	CALL SYMPUT('END_DATE',&REPORT_DATE);
RUN;


DATA _NULL_;
	SET SAS_TAB.CAMPAIGNS;
	CALL SYMPUT('BEG_DATE',BEGIN_DATE);
	CALL SYMPUT('END_DATE',END_DATE);
	WHERE 
		&REPORT_DATE BETWEEN BEGIN_DATE AND END_DATE
		AND CAMPAIGN_NAME LIKE ('%CR 2651%')
	;
RUN;

%PUT &REPORT_DATE &BEG_DATE &END_DATE;

PROC SQL;
      CREATE TABLE CURRENT_CAMPAIGN_BORROWERS AS
            SELECT
                  BORR.DF_SPE_ACC_ID,
				  CAMP.CAMPAIGN_NAME
            FROM
                  SAS_TAB.CAMPAIGNS CAMP
                  JOIN SAS_TAB.CAMPAIGN_BORROWERS BORR
                        ON CAMP.CAMPAIGN_ID = BORR.CAMPAIGN_ID
            WHERE
                  &REPORT_DATE BETWEEN CAMP.BEGIN_DATE AND CAMP.END_DATE
				  AND CAMPAIGN_NAME LIKE ('%CR 2651%')
      ;
QUIT;

DATA LEGEND.CURRENT_CAMPAIGN_BORROWERS; SET CURRENT_CAMPAIGN_BORROWERS; RUN;

%SYSLPUT REPORT_DATE = &REPORT_DATE;
%SYSLPUT BEG_DATE = &BEG_DATE;
%SYSLPUT END_DATE = &END_DATE;

RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUK3 test;*/
%LET DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DB2 DATABASE=&DB OWNER=PKUB;

PROC SQL;
	CREATE TABLE TRUMP
		(ORD NUM(2),
		 STA CHAR(2),
		 STA_NAME CHAR(25));
QUIT;

PROC SQL;
	INSERT INTO TRUMP
		(ORD, STA, STA_NAME)
		VALUES(5,'01','IN GRACE')
		VALUES(4,'02','IN SCHOOL')
		VALUES(1,'03','IN REPAYMENT')
		VALUES(3,'04','IN DEFERMENT')
		VALUES(2,'05','IN FORBEARANCE')
		VALUES(6,'06','IN CURE')
		VALUES(7,'07','CLAIM PENDING')
		VALUES(8,'08','CLAIM SUBMITTED')
		VALUES(9,'09','CLAIM CANCELLED')
		VALUES(10,'10','CLAIM REJECT')
		VALUES(11,'11','CLAIM RETURNED')
		VALUES(12,'12','CLAIM PAID')
		VALUES(13,'13','PRE-CLAIM PENDING')
		VALUES(14,'14','PRE-CLAIM SUBMITTED')
		VALUES(15,'15','PRE-CLAIM CANCELLED')
		VALUES(16,'16','DEATH ALLEGED')
		VALUES(17,'17','DEATH VERIFIED')
		VALUES(18,'18','DISABILITY ALLEGED')
		VALUES(19,'19','DISABILITY VERIFIED')
		VALUES(20,'20','BANKRUPTCY ALLEGED')
		VALUES(21,'21','BANKRUPTCY VERIFIED')
		VALUES(22,'22','PAID IN FULL')
		VALUES(23,'23','NOT FULLY ORIGINATED')
		VALUES(24,'88','PROCESSING ERROR')
		VALUES(25,'98','UNKNOWN STATUS')
;
QUIT;


%MACRO SQLCHECK ;
  %IF  &SQLXRC NE 0  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @01 " ********************************************************************* "
              / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @01 " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @01 " ****  &SQLXMSG   **** "
              / @01 " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;

PROC SQL ;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE DEMO AS
		SELECT	
			POP.*,
			CCB.CAMPAIGN_NAME
		FROM CURRENT_CAMPAIGN_BORROWERS CCB
			INNER JOIN	
			CONNECTION TO DB2 
				(
					SELECT DISTINCT
						LN10.BF_SSN
						,PD10.DF_SPE_ACC_ID
						,PD10.DM_PRS_LST
						,PD30.DI_VLD_ADR
						,PD32.DI_VLD_ADR_EML
						,PD40H.DI_PHN_VLD AS DI_PHN_VLD_HOM
						,PD40W.DI_PHN_VLD AS DI_PHN_VLD_WRK
						,PD40A.DI_PHN_VLD AS DI_PHN_VLD_ALT
						,PD40M.DI_PHN_VLD AS DI_PHN_VLD_MOB 
						,LN16.LN_DLQ_MAX + 1 AS LN_DLQ_MAX
					FROM
						PKUB.LN10_LON LN10
						INNER JOIN PKUB.PD10_PRS_NME PD10
							ON LN10.BF_SSN = PD10.DF_PRS_ID
						LEFT JOIN PKUB.PD30_PRS_ADR PD30
							ON LN10.BF_SSN = PD30.DF_PRS_ID
						LEFT JOIN PKUB.PD32_PRS_ADR_EML PD32
							ON LN10.BF_SSN = PD32.DF_PRS_ID
							AND PD32.DC_STA_PD32 = 'A'
						LEFT JOIN (
								SELECT A.DF_PRS_ID
										,A.DI_PHN_VLD
								FROM PKUB.PD40_PRS_PHN A
								WHERE A.DC_PHN = 'H'
									) PD40H
							ON LN10.BF_SSN = PD40H.DF_PRS_ID
						LEFT JOIN (
								SELECT A.DF_PRS_ID
										,A.DI_PHN_VLD
								FROM PKUB.PD40_PRS_PHN A
								WHERE A.DC_PHN = 'W'
									) PD40W
							ON LN10.BF_SSN = PD40W.DF_PRS_ID
						LEFT JOIN (
								SELECT A.DF_PRS_ID
										,A.DI_PHN_VLD
								FROM PKUB.PD40_PRS_PHN A
								WHERE A.DC_PHN = 'A'
									) PD40A
							ON LN10.BF_SSN = PD40A.DF_PRS_ID
						LEFT JOIN (
								SELECT A.DF_PRS_ID
										,A.DI_PHN_VLD
								FROM PKUB.PD40_PRS_PHN A
								WHERE A.DC_PHN = 'M'
									) PD40M
							ON LN10.BF_SSN = PD40M.DF_PRS_ID
						INNER JOIN PKUB.DW01_DW_CLC_CLU DW01
							ON LN10.BF_SSN = DW01.BF_SSN
							AND LN10.LN_SEQ = DW01.LN_SEQ
						INNER JOIN PKUB.AY10_BR_LON_ATY AY10
							ON LN10.BF_SSN = AY10.BF_SSN
						LEFT JOIN (
								SELECT DISTINCT
									A.BF_SSN
									,MAX(A.LN_DLQ_MAX) AS LN_DLQ_MAX
								FROM PKUB.LN16_LON_DLQ_HST A
								WHERE A.LC_STA_LON16 = '1'
									AND A.LC_DLQ_TYP = 'P'
								GROUP BY A.BF_SSN
									) LN16
							ON LN10.BF_SSN = LN16.BF_SSN
				) POP
			ON CCB.DF_SPE_ACC_ID = POP.DF_SPE_ACC_ID
	;
	DISCONNECT FROM DB2;

PROC SQL;
CREATE TABLE POP1 AS
	SELECT *
	FROM TRUMP T
		INNER JOIN (
				SELECT
					CCB.DF_SPE_ACC_ID
					,CCB.CAMPAIGN_NAME
					,DW01.BF_SSN
					,MIN(T.ORD) AS ORD_STA
				FROM CURRENT_CAMPAIGN_BORROWERS CCB
					INNER JOIN PKUB.PD10_PRS_NME PD10
						ON CCB.DF_SPE_ACC_ID = PD10.DF_SPE_ACC_ID
					INNER JOIN PKUB.DW01_DW_CLC_CLU DW01
						ON PD10.DF_PRS_ID = DW01.BF_SSN
					INNER JOIN TRUMP T
						ON DW01.WC_DW_LON_STA = T.STA
				GROUP BY CCB.DF_SPE_ACC_ID
						,DW01.BF_SSN
						) PPOP
				ON T.ORD = PPOP.ORD_STA
;
QUIT;

PROC SQL;
CREATE TABLE FIN_POP AS
	SELECT DEMO.*
			,POP1.STA
			,POP1.STA_NAME
	FROM DEMO
		INNER JOIN POP1
			ON DEMO.BF_SSN = POP1.BF_SSN
;
QUIT;

PROC SQL;
	CREATE TABLE RESOLVED_POP AS
		SELECT DISTINCT
			FP.*
		FROM 
			FIN_POP FP
			LEFT JOIN PKUB.LN60_BR_FOR_APV LN60
				ON FP.BF_SSN = LN60.BF_SSN
				AND LN60.LC_STA_LON60 = 'A'
				AND LN60.LD_FOR_END < &END_DATE - 1
			LEFT JOIN PKUB.LN50_BR_DFR_APV LN50
				ON FP.BF_SSN = LN50.BF_SSN		
				AND LN50.LC_STA_LON50 = 'A'
				AND LN50.LD_DFR_END < &END_DATE - 1
	WHERE
		(FP.STA = '03' AND (FP.LN_DLQ_MAX IS NULL OR FP.LN_DLQ_MAX < 30)) /*FP.LN_DLQ_MAX is NULL if LN16.LC_STA_LON16 <> '1'*/
		OR 
		(FP.LN_DLQ_MAX IS NULL AND (LN60.BF_SSN IS NOT NULL OR LN50.BF_SSN IS NOT NULL))
		OR 
		(FP.LN_DLQ_MAX IS NOT NULL AND (LN60.BF_SSN IS NOT NULL OR LN50.BF_SSN IS NOT NULL) AND FP.LN_DLQ_MAX < 30)
	;
QUIT;

/* 1 - retrieve last rep payment*/
PROC SQL;
CREATE TABLE REP_PAY AS
      SELECT 
            A.BF_SSN
            ,A.LF_USR_REQ_ATY AS LF_USR_REQ_ATY_RP
            ,'Payment' AS RES_TYP_1
      FROM PKUB.AY10_BR_LON_ATY A
            INNER JOIN (
                              SELECT      AY10.BF_SSN
                                          ,MIN(AY10.LF_LST_DTS_AY10) AS LF_LST_DTS_AY10                                       
                              FROM PKUB.AY10_BR_LON_ATY AY10                  
                                    INNER JOIN (
                                                SELECT A.BF_SSN
                                                      ,MAX(A.LD_FAT_EFF) AS LD_FAT_EFF
                                                FROM PKUB.LN90_FIN_ATY A                              
                                                      INNER JOIN RESOLVED_POP P
                                                            ON A.BF_SSN = P.BF_SSN
                                                WHERE A.LC_STA_LON90 = 'A'
                                                      AND A.PC_FAT_TYP = '10'
                                                      AND A.PC_FAT_SUB_TYP = '10'
                                                      AND A.LC_FAT_REV_REA = ''
                                                      AND A.LD_FAT_EFF >= &BEG_DATE             
                                                GROUP BY A.BF_SSN
                                                ) LN90
                                          ON AY10.LD_ATY_REQ_RCV = LN90.LD_FAT_EFF
                                          AND AY10.BF_SSN = LN90.BF_SSN
                                          AND AY10.LF_USR_REQ_ATY LIKE 'UT%'
                              WHERE AY10.PF_REQ_ACT IN ('MXADD','P199A')
                              GROUP BY AY10.BF_SSN
                             ) BASE
                  ON A.BF_SSN = BASE.BF_SSN
                  AND A.LF_LST_DTS_AY10 = BASE.LF_LST_DTS_AY10
;
QUIT;

/*2 - retrieve last rep verb*/
PROC SQL; 
CREATE TABLE REP_VRB AS
	SELECT 
		MS.BF_SSN
		,MAX(MS.LF_USR_REQ_ATY) AS LF_USR_REQ_ATY_VRB /*max in case more than one verb request on a given day*/
		,'Verbal Forbearance' AS RES_TYP_2
	FROM
		(
			SELECT 
				A.BF_SSN 
				,A.LD_ATY_REQ_RCV
				,A.LF_USR_REQ_ATY
			FROM 
				PKUB.AY10_BR_LON_ATY A
				INNER JOIN 
					(
						SELECT
							P.BF_SSN,
							MAX(AY10.LN_ATY_SEQ) AS LN_ATY_SEQ_MAX
						FROM
							PKUB.AY10_BR_LON_ATY AY10
							INNER JOIN RESOLVED_POP P
								ON AY10.BF_SSN = P.BF_SSN
						WHERE 
							AY10.PF_REQ_ACT = 'XFORB'
							AND AY10.LD_ATY_REQ_RCV BETWEEN &BEG_DATE AND &END_DATE
						GROUP BY
							P.BF_SSN
					) MAX
						ON A.BF_SSN = MAX.BF_SSN
						AND A.LN_ATY_SEQ = MAX.LN_ATY_SEQ_MAX
		) MS
		INNER JOIN 
		(
			SELECT 
				LN60.BF_SSN
				,MAX(LN60.LD_FOR_APL) AS LD_FOR_APL_MAX
			FROM 
				PKUB.LN60_BR_FOR_APV LN60
				INNER JOIN RESOLVED_POP P
					ON LN60.BF_SSN = P.BF_SSN
				INNER JOIN PKUB.FB10_BR_FOR_REQ FB10
					ON LN60.BF_SSN = FB10.BF_SSN
					AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
			WHERE
				FB10.LC_FOR_TYP = '05'
				AND FB10.LC_FOR_STA = 'A'
				AND FB10.LC_STA_FOR10 = 'A'
				AND LN60.LC_STA_LON60 = 'A'
				AND LN60.LD_FOR_APL >= &BEG_DATE
				AND LN60.LD_FOR_END < &END_DATE - 1
			GROUP BY 
				LN60.BF_SSN
		) FORB
			ON FORB.BF_SSN = MS.BF_SSN
			AND DATDIF(FORB.LD_FOR_APL_MAX, MS.LD_ATY_REQ_RCV, 'ACT/ACT') < 10
	GROUP BY
		MS.BF_SSN
;
QUIT;

/*3 - retrieve last rep contact*/
PROC SQL; 
CREATE TABLE REP_CONTACT AS

	SELECT DISTINCT
		A.BF_SSN 
		,A.LF_USR_REQ_ATY AS LF_USR_REQ_ATY_CTC
	FROM 
		PKUB.AY10_BR_LON_ATY A
		INNER JOIN 
			(
				SELECT
					P.BF_SSN,
					MAX(AY10.LN_ATY_SEQ) AS LN_ATY_SEQ_MAX
				FROM
					PKUB.AY10_BR_LON_ATY AY10
					INNER JOIN RESOLVED_POP P
						ON AY10.BF_SSN = P.BF_SSN
				WHERE 
					AY10.PF_RSP_ACT = 'CNTCT'
					AND AY10.LD_ATY_REQ_RCV BETWEEN &BEG_DATE AND &END_DATE
					AND AY10.LF_USR_REQ_ATY LIKE 'UT%'
					AND
					(
						AY10.PF_REQ_ACT LIKE 'P199%'
						OR
						AY10.PF_REQ_ACT LIKE 'P200%'
					)
				GROUP BY
					P.BF_SSN
			) MAX
				ON A.BF_SSN = MAX.BF_SSN
				AND A.LN_ATY_SEQ = MAX.LN_ATY_SEQ_MAX
;
QUIT;

/*4 - retrieve last rep process*/
PROC SQL; 
CREATE TABLE REP_PROCESSED AS
SELECT  DISTINCT
	P.BF_SSN
	,BASE.LF_USR_CRT_REQ
	,'Deferment/Forbearance' AS RES_TYP_4
FROM 
	RESOLVED_POP P
	INNER JOIN(
			SELECT DISTINCT
				P2.BF_SSN
				,CASE
					WHEN FOR.LF_LST_DTS_LN60 >= DFR.LF_LST_DTS_LN50 THEN FB10.LF_USR_CRT_REQ_FOR
					WHEN DFR.LF_LST_DTS_LN50 > FOR.LF_LST_DTS_LN60 THEN DF10.LF_USR_CRT_REQ_DFR
					ELSE ''
				END AS LF_USR_CRT_REQ
				,LN60.LF_LST_DTS_LN60
				,LN50.LF_LST_DTS_LN50
			FROM
				RESOLVED_POP P2
				LEFT JOIN
				(
					SELECT
						P.BF_SSN,
						MAX(LN60.LF_LST_DTS_LN60) AS LF_LST_DTS_LN60
					FROM
						RESOLVED_POP P
						LEFT JOIN PKUB.FB10_BR_FOR_REQ FB10 ON FB10.BF_SSN = P.BF_SSN	
						INNER JOIN PKUB.LN60_BR_FOR_APV LN60 ON LN60.BF_SSN = FB10.BF_SSN AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
						INNER JOIN
						(
							SELECT
								FB10.BF_SSN,
								MAX(LN60.LD_FOR_END) AS LD_FOR_END_MAX
							FROM
								RESOLVED_POP P
								INNER JOIN PKUB.LN60_BR_FOR_APV LN60 ON LN60.BF_SSN = P.BF_SSN
								INNER JOIN PKUB.FB10_BR_FOR_REQ FB10 
									ON FB10.BF_SSN = LN60.BF_SSN
									AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM
									AND FB10.LC_FOR_TYP NOT IN ('04', '10', '13', '14', '16', '21', '28', '33', '37', '38', '44')
									AND FB10.LC_FOR_STA = 'A'
									AND FB10.LC_STA_FOR10 = 'A'
							WHERE
								LN60.LC_STA_LON60 = 'A'
							GROUP BY
								FB10.BF_SSN
						) LN60M ON LN60M.BF_SSN = FB10.BF_SSN AND LN60M.LD_FOR_END_MAX = LN60.LD_FOR_END	
					WHERE
						FB10.LC_FOR_TYP NOT IN ('04', '10', '13', '14', '16', '21', '28', '33', '37', '38', '44')
						AND FB10.LC_FOR_STA = 'A'
						AND FB10.LC_STA_FOR10 = 'A'
						AND FB10.LF_USR_CRT_REQ_FOR LIKE 'UT%'
						AND LN60.LD_FOR_END < &END_DATE - 1
						AND	LN60.LC_STA_LON60 = 'A'
						AND LN60.LD_FOR_APL BETWEEN &BEG_DATE AND &END_DATE
					GROUP BY
						P.BF_SSN
				) FOR ON FOR.BF_SSN = P2.BF_SSN
				LEFT JOIN
				(
					SELECT
						P.BF_SSN,
						MAX(LN50.LF_LST_DTS_LN50) AS LF_LST_DTS_LN50
					FROM
						RESOLVED_POP P
						INNER JOIN PKUB.DF10_BR_DFR_REQ DF10 ON DF10.BF_SSN = P.BF_SSN	
						INNER JOIN PKUB.LN50_BR_DFR_APV LN50 ON LN50.BF_SSN = DF10.BF_SSN AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
						INNER JOIN
						(
							SELECT
								DF10.BF_SSN,
								MAX(LN50.LD_DFR_END) AS LD_DFR_END_MAX
							FROM
								RESOLVED_POP P
								INNER JOIN PKUB.LN50_BR_DFR_APV LN50 ON LN50.BF_SSN = P.BF_SSN
								INNER JOIN PKUB.DF10_BR_DFR_REQ DF10 
									ON DF10.BF_SSN = LN50.BF_SSN
									AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
									AND DF10.LC_DFR_STA = 'A'
									AND DF10.LC_STA_DFR10 = 'A'
							WHERE
								LN50.LC_STA_LON50 = 'A'
							GROUP BY
								DF10.BF_SSN
						) LN50M ON LN50M.BF_SSN = DF10.BF_SSN AND LN50M.LD_DFR_END_MAX = LN50.LD_DFR_END

					WHERE
						DF10.LC_DFR_STA = 'A'
						AND DF10.LC_STA_DFR10 = 'A'
						AND LN50.LC_STA_LON50 = 'A'
						AND DF10.LF_USR_CRT_REQ_DFR LIKE 'UT%'
						AND LN50.LD_DFR_END < &END_DATE - 1
						AND LN50.LD_DFR_APL BETWEEN &BEG_DATE AND &END_DATE
					GROUP BY
						P.BF_SSN
				) DFR ON DFR.BF_SSN = P2.BF_SSN
			LEFT JOIN PKUB.LN60_BR_FOR_APV LN60
				ON P2.BF_SSN = LN60.BF_SSN
				AND FOR.LF_LST_DTS_LN60 = LN60.LF_LST_DTS_LN60
			LEFT JOIN PKUB.FB10_BR_FOR_REQ FB10
				ON P2.BF_SSN = FB10.BF_SSN
				AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
			LEFT JOIN PKUB.LN50_BR_DFR_APV LN50
				ON P2.BF_SSN = LN50.BF_SSN
				AND DFR.LF_LST_DTS_LN50 = LN50.LF_LST_DTS_LN50
			LEFT JOIN PKUB.DF10_BR_DFR_REQ DF10 
				ON P2.BF_SSN = DF10.BF_SSN
				AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
			) BASE
		ON P.BF_SSN = BASE.BF_SSN
WHERE BASE.LF_USR_CRT_REQ IS NOT NULL
;
QUIT;

/*5 - retrieve transfer */
PROC SQL; 
CREATE TABLE TRANSFER AS
	SELECT DISTINCT
		LN90.BF_SSN
		,LN90.LD_FAT_EFF
	FROM PKUB.LN90_FIN_ATY LN90
		INNER JOIN (
					SELECT DISTINCT
						LN90.BF_SSN 
						,MAX(LN90.LD_FAT_PST) AS LD_FAT_PST
					FROM 
						FIN_POP FP
						INNER JOIN PKUB.LN90_FIN_ATY LN90 
							ON FP.BF_SSN = LN90.BF_SSN
					WHERE 
						LN90.PC_FAT_TYP = '04'
						AND LN90.PC_FAT_SUB_TYP = '98'
						AND LN90.LD_FAT_APL BETWEEN &BEG_DATE AND &END_DATE
					GROUP BY LN90.BF_SSN
						) FILTER 
			ON LN90.BF_SSN = FILTER.BF_SSN
			AND LN90.LD_FAT_PST = FILTER.LD_FAT_PST
		INNER JOIN (
					SELECT 
						FP.BF_SSN
						,SUM(A.LA_CUR_PRI) AS LA_CUR_PRI
					FROM 
						FIN_POP FP
						INNER JOIN PKUB.LN10_LON A
							ON FP.BF_SSN = A.BF_SSN
					GROUP BY 
						FP.BF_SSN
					) LN10
			ON LN90.BF_SSN = LN10.BF_SSN
	WHERE LN10.LA_CUR_PRI = 0		
;
QUIT;

PROC SQL;
CREATE TABLE FINAL AS
	SELECT  DISTINCT
			FP.*
			,RP.LF_USR_REQ_ATY_RP
			,RV.LF_USR_REQ_ATY_VRB
			,RC.LF_USR_REQ_ATY_CTC
			,RPR.LF_USR_CRT_REQ
			,T.LD_FAT_EFF
			,COALESCE(RP.RES_TYP_1, RV.RES_TYP_2, RPR.RES_TYP_4) AS RESOLUTION_TYPE
	FROM FIN_POP FP
		LEFT JOIN REP_PAY RP
			ON FP.BF_SSN = RP.BF_SSN
		LEFT JOIN REP_VRB RV
			ON FP.BF_SSN = RV.BF_SSN
		LEFT JOIN REP_CONTACT RC
			ON FP.BF_SSN = RC.BF_SSN
		LEFT JOIN REP_PROCESSED RPR
			ON FP.BF_SSN = RPR.BF_SSN
		LEFT JOIN TRANSFER T
			ON FP.BF_SSN = T.BF_SSN
;
QUIT;

/*R3*/
/*Break out people in 03 STA and see which bucket they belong in by what was last done on their account*/
PROC SQL;
CREATE TABLE BASE3 AS
	SELECT DISTINCT
		F.BF_SSN
	FROM 
		FINAL F
	WHERE 
		F.STA = '03'
		AND
		(F.LN_DLQ_MAX IS NULL
		OR F.LN_DLQ_MAX < 30)
;

CREATE TABLE PAY AS
	SELECT DISTINCT
			A.BF_SSN
			,'PAY' AS RES_TYP
			,MAX(B.LF_LST_DTS_LN90) AS TIM_STP	
	FROM 
		BASE3 A
		INNER JOIN PKUB.LN90_FIN_ATY B
			ON A.BF_SSN = B.BF_SSN
	WHERE B.PC_FAT_TYP = '10'
		AND B.PC_FAT_SUB_TYP = '10'
		AND B.LC_FAT_REV_REA = ' '
		AND B.LD_FAT_EFF >= &BEG_DATE
	GROUP BY 
		A.BF_SSN
;

CREATE TABLE FRB AS
	SELECT DISTINCT
			A.BF_SSN
			,'FBR' AS RES_TYP
			,MAX(LN60.LF_LST_DTS_LN60) AS TIM_STP
		FROM
			BASE3 A
			INNER JOIN PKUB.LN60_BR_FOR_APV LN60 
				ON A.BF_SSN = LN60.BF_SSN
			INNER JOIN PKUB.FB10_BR_FOR_REQ FB10 
				ON FB10.BF_SSN = LN60.BF_SSN
				AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM
				AND FB10.LC_FOR_STA = 'A'
				AND FB10.LC_STA_FOR10 = 'A'
		WHERE
			LN60.LC_STA_LON60 = 'A'
		GROUP BY
			A.BF_SSN
;

CREATE TABLE DFR AS
	SELECT DISTINCT
		A.BF_SSN
		,'DFR' AS RES_TYP
		,MAX(LN50.LF_LST_DTS_LN50) AS TIM_STP
	FROM
		BASE3 A
		INNER JOIN PKUB.LN50_BR_DFR_APV LN50 
			ON A.BF_SSN = LN50.BF_SSN
		INNER JOIN PKUB.DF10_BR_DFR_REQ DF10 
			ON DF10.BF_SSN = LN50.BF_SSN
			AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
			AND DF10.LC_DFR_STA = 'A'
			AND DF10.LC_STA_DFR10 = 'A'
	WHERE
		LN50.LC_STA_LON50 = 'A'
	GROUP BY
		DF10.BF_SSN
;
QUIT;

DATA DET3;
	SET PAY FRB DFR;
RUN;

PROC SQL;
CREATE TABLE FIN3 AS
	SELECT DISTINCT
		D3.BF_SSN
		,D3.RES_TYP
	FROM DET3 D3
		INNER JOIN (
				SELECT
					A.BF_SSN
					,MAX(A.TIM_STP) AS TIM_STP
				FROM DET3 A
				GROUP BY A.BF_SSN
					) MAX
			ON D3.BF_SSN = MAX.BF_SSN
			AND D3.TIM_STP = MAX.TIM_STP
;
QUIT;

DATA PAY FBR DFR;
	SET FIN3;
	IF RES_TYP = 'PAY' THEN OUTPUT PAY;
	IF RES_TYP = 'FBR' THEN OUTPUT FBR;
	IF RES_TYP = 'DFR' THEN OUTPUT DFR;
RUN;


/*produce final bucket counts*/
PROC SQL;
CREATE TABLE FB AS
	SELECT DISTINCT
		F.BF_SSN
	FROM 
		FINAL F
		INNER JOIN 
			(
				SELECT
					FB10.BF_SSN,
					MAX(LN60.LD_FOR_END) AS LD_FOR_END_MAX
				FROM
					RESOLVED_POP P
					INNER JOIN PKUB.LN60_BR_FOR_APV LN60 
						ON LN60.BF_SSN = P.BF_SSN
					INNER JOIN PKUB.FB10_BR_FOR_REQ FB10 
						ON FB10.BF_SSN = LN60.BF_SSN
						AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM
						AND FB10.LC_FOR_TYP NOT IN ('04', '10', '13', '14', '16', '21', '28', '33', '37', '38', '44')
						AND FB10.LC_FOR_STA = 'A'
						AND FB10.LC_STA_FOR10 = 'A'
				WHERE
					LN60.LC_STA_LON60 = 'A'
					AND LN60.LD_FOR_APL BETWEEN &BEG_DATE AND &END_DATE
				GROUP BY
					FB10.BF_SSN
			) FORB
			ON F.BF_SSN = FORB.BF_SSN
		INNER JOIN PKUB.LN60_BR_FOR_APV LN60
			ON F.BF_SSN = LN60.BF_SSN
			AND FORB.LD_FOR_END_MAX = LN60.LD_FOR_END
			AND LN60.LC_STA_LON60 = 'A'
	WHERE 
		F.STA = '05'
		AND (FORB.LD_FOR_END_MAX < &END_DATE OR LN60.LD_FOR_BEG > &END_DATE)
;

CREATE TABLE DF AS
	SELECT DISTINCT
		F.BF_SSN
	FROM
		FINAL F
		INNER JOIN 
			(
				SELECT
					DF10.BF_SSN,
					MAX(LN50.LD_DFR_END) AS LD_DFR_END_MAX
				FROM
					RESOLVED_POP P
					INNER JOIN PKUB.LN50_BR_DFR_APV LN50 ON LN50.BF_SSN = P.BF_SSN
					INNER JOIN PKUB.DF10_BR_DFR_REQ DF10 
						ON DF10.BF_SSN = LN50.BF_SSN
						AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
						AND DF10.LC_DFR_STA = 'A'
						AND DF10.LC_STA_DFR10 = 'A'
				WHERE
					LN50.LC_STA_LON50 = 'A'
					AND LN50.LD_DFR_APL BETWEEN &BEG_DATE AND &END_DATE
				GROUP BY
					DF10.BF_SSN
			) DEFER
			ON F.BF_SSN = DEFER.BF_SSN
		INNER JOIN PKUB.LN50_BR_DFR_APV LN50
			ON F.BF_SSN = LN50.BF_SSN
			AND DEFER.LD_DFR_END_MAX = LN50.LD_DFR_END
			AND LN50.LC_STA_LON50 = 'A'
	WHERE 
		F.STA = '04'
		AND (DEFER.LD_DFR_END_MAX < &END_DATE OR LN50.LD_DFR_BEG > &END_DATE)
;

CREATE TABLE R3_5 AS
	SELECT DISTINCT 
		F.CAMPAIGN_NAME
		,COUNT(F.BF_SSN) AS TOT_BOR
		,COUNT(P.BF_SSN) AS TOT_PAY
		,SUM(COUNT(FB.BF_SSN),COUNT(FBR.BF_SSN)) AS TOT_FORB
		,SUM(COUNT(DF.BF_SSN),COUNT(DFR.BF_SSN)) AS TOT_DFR
		,COUNT(ADR.BF_SSN) AS INV_ADR
		,COUNT(PHN.BF_SSN) AS INV_PHN
		,COUNT(BTH.BF_SSN) AS INV_BTH
	FROM 
		FINAL F
		LEFT JOIN PAY P
			ON F.BF_SSN = P.BF_SSN
		LEFT JOIN FBR FBR
			ON F.BF_SSN = FBR.BF_SSN
		LEFT JOIN DFR 
			ON F.BF_SSN = DFR.BF_SSN
		LEFT JOIN FB
			ON F.BF_SSN = FB.BF_SSN
		LEFT JOIN DF
			ON F.BF_SSN = DF.BF_SSN
		LEFT JOIN (
				SELECT F.BF_SSN
				FROM FINAL F
				WHERE F.DI_VLD_ADR ^= 'Y'
					) ADR
			ON F.BF_SSN = ADR.BF_SSN
		LEFT JOIN (
				SELECT F.BF_SSN
				FROM FINAL F
				WHERE F.DI_PHN_VLD_HOM ^= 'Y'
					AND F.DI_PHN_VLD_WRK ^= 'Y'
					AND F.DI_PHN_VLD_ALT ^= 'Y'
					AND F.DI_PHN_VLD_MOB ^= 'Y'
					) PHN
			ON F.BF_SSN = PHN.BF_SSN
		LEFT JOIN (
				SELECT F.BF_SSN
				FROM FINAL F
				WHERE F.DI_VLD_ADR ^= 'Y'
					AND F.DI_PHN_VLD_HOM ^= 'Y'
					AND F.DI_PHN_VLD_WRK ^= 'Y'
					AND F.DI_PHN_VLD_ALT ^= 'Y'
					AND F.DI_PHN_VLD_MOB ^= 'Y'
					) BTH
			ON F.BF_SSN = BTH.BF_SSN
	GROUP BY	
		F.CAMPAIGN_NAME
;
QUIT;

ENDRSUBMIT;

DATA FINAL; SET LEGEND.FINAL; DROP BF_SSN STA; RUN;
DATA R3_5; SET LEGEND.R3_5; RUN;


PROC SORT DATA=FINAL; BY DF_SPE_ACC_ID; RUN;

DATA R3;
	SET R3_5;
	WHERE CAMPAIGN_NAME = 'CR 2651';
	FORMAT PERC_RESOLVED PERC_UNRESOLVED PERC_PAY PERC_FORB PERC_DFR PERC_INV_ADR PERC_INV_PHN PERC_INV_BOTH PERCENT10.2;
	RESOLVED = TOT_PAY + TOT_FORB + TOT_DFR;
	PERC_RESOLVED = RESOLVED/TOT_BOR;
	UNRESOLVED = TOT_BOR - RESOLVED;
	PERC_UNRESOLVED = (TOT_BOR - RESOLVED)/TOT_BOR;
	PERC_PAY = TOT_PAY/TOT_BOR;
	PERC_FORB = TOT_FORB/TOT_BOR;
	PERC_DFR = TOT_DFR/TOT_BOR;
	PERC_INV_ADR = INV_ADR/TOT_BOR;
	PERC_INV_PHN = INV_PHN/TOT_BOR;
	PERC_INV_BOTH = INV_BTH/TOT_BOR;
RUN;

DATA R5;
	SET R3_5;
	WHERE CAMPAIGN_NAME = 'CR 2651 Control';
	FORMAT PERC_RESOLVED PERC_UNRESOLVED PERC_PAY PERC_FORB PERC_DFR PERC_INV_ADR PERC_INV_PHN PERC_INV_BOTH PERCENT10.2;
	RESOLVED = TOT_PAY + TOT_FORB + TOT_DFR;
	PERC_RESOLVED = RESOLVED/TOT_BOR;
	UNRESOLVED = TOT_BOR - RESOLVED;
	PERC_UNRESOLVED = (TOT_BOR - RESOLVED)/TOT_BOR;
	PERC_PAY = TOT_PAY/TOT_BOR;
	PERC_FORB = TOT_FORB/TOT_BOR;
	PERC_DFR = TOT_DFR/TOT_BOR;
	PERC_INV_ADR = INV_ADR/TOT_BOR;
	PERC_INV_PHN = INV_PHN/TOT_BOR;
	PERC_INV_BOTH = INV_BTH/TOT_BOR;
RUN;

/*R2*/
/*write to comma delimited file*/
DATA _NULL_;
	SET		WORK.FINAL;
	WHERE CAMPAIGN_NAME = 'CR 2651';
	FILE
		REPORT2
		DELIMITER = ','
		DSD
		DROPOVER
		LRECL = 32767
	;
	/* write column names, remove this to create a file without a header row */
	IF _N_ = 1 THEN
		DO;
			PUT	
				'ACCOUNT_NUMBER'
				','
				'BORRWER_LAST_NAME'
				','
				'VALID_ADDRESS'
				','
				'VALID_EMAIL'
				','
				'VALID_HOME_PHN'
				','
				'VALID_WORK_PHN'
				','
				'VALID_ALT_PHN'
				','
				'VALID_MOB_PHN'
				','
				'LOAN_STATUS'
				','
				'DAYS_DLQ'
				','
				'LAST_REP_PAY'
				','
				'LAST_REP_VRB'
				','
				'LAST_REP_CONTACT'
				','
				'LAST_REP_PROCESS'
				','
				'TRANSFER_DATE'
				','
				'RESOLUTION_TYPE'
			;
		END;
	/* write data*/	
	DO;
		PUT DF_SPE_ACC_ID $ @;
		PUT DM_PRS_LST $ @;
		PUT DI_VLD_ADR $ @;
		PUT DI_VLD_ADR_EML $ @;
		PUT DI_PHN_VLD_HOM $ @;
		PUT DI_PHN_VLD_WRK $ @;
		PUT DI_PHN_VLD_ALT $ @;
		PUT DI_PHN_VLD_MOB $ @;
		PUT STA_NAME $ @;
		PUT LN_DLQ_MAX @;
		PUT LF_USR_REQ_ATY_RP $ @;
		PUT LF_USR_REQ_ATY_VRB $ @;
		PUT LF_USR_REQ_ATY_CTC $ @;
		PUT LF_USR_CRT_REQ $ @;
		PUT LD_FAT_EFF $ @;
		PUT RESOLUTION_TYPE $;
		;
	END;
RUN;

/*R4*/
/*write to comma delimited file*/
DATA _NULL_;
	SET		WORK.FINAL;
	WHERE CAMPAIGN_NAME = 'CR 2651 Control';
	FILE
		REPORT4
		DELIMITER = ','
		DSD
		DROPOVER
		LRECL = 32767
	;
	/* write column names, remove this to create a file without a header row */
	IF _N_ = 1 THEN
		DO;
			PUT	
				'ACCOUNT_NUMBER'
				','
				'BORRWER_LAST_NAME'
				','
				'VALID_ADDRESS'
				','
				'VALID_EMAIL'
				','
				'VALID_HOME_PHN'
				','
				'VALID_WORK_PHN'
				','
				'VALID_ALT_PHN'
				','
				'VALID_MOB_PHN'
				','
				'LOAN_STATUS'
				','
				'DAYS_DLQ'
				','
				'LAST_REP_PAY'
				','
				'LAST_REP_VRB'
				','
				'LAST_REP_CONTACT'
				','
				'LAST_REP_PROCESS'
				','
				'TRANSFER_DATE'
				','
				'RESOLUTION_TYPE'
			;
		END;
	/* write data*/	
	DO;
		PUT DF_SPE_ACC_ID $ @;
		PUT DM_PRS_LST $ @;
		PUT DI_VLD_ADR $ @;
		PUT DI_VLD_ADR_EML $ @;
		PUT DI_PHN_VLD_HOM $ @;
		PUT DI_PHN_VLD_WRK $ @;
		PUT DI_PHN_VLD_ALT $ @;
		PUT DI_PHN_VLD_MOB $ @;
		PUT STA_NAME $ @;
		PUT LN_DLQ_MAX @;
		PUT LF_USR_REQ_ATY_RP $ @;
		PUT LF_USR_REQ_ATY_VRB $ @;
		PUT LF_USR_REQ_ATY_CTC $ @;
		PUT LF_USR_CRT_REQ $ @;
		PUT LD_FAT_EFF $ @;
		PUT RESOLUTION_TYPE $;
		;
	END;
RUN;

ODS LISTING;

/*R3*/
/*create printed report*/
PROC PRINTTO PRINT=REPORT3 NEW; RUN;

OPTIONS ORIENTATION=LANDSCAPE PS=39 LS=127;
TITLE 		'CR 2651 Delinquency - FED';
TITLE2		'Campaign CR 2651';
TITLE3		"RUNDATE &SYSDATE9";
FOOTNOTE1  	"THIS DOCUMENT MAY CONTAIN BORROWERS' SENSITIVE INFORMATION THAT UHEAA HAS PLEDGED TO PROTECT.";
FOOTNOTE2	'PLEASE TAKE APPROPRIATE PRECAUTIONS TO SAFEGUARD THIS INFORMATION.';
FOOTNOTE3	;
FOOTNOTE4   'JOB = UTNWS78  	 REPORT = UNWS78.NWS78R3';

PROC PRINT 
		NOOBS SPLIT = '/' 
		DATA = R3
		WIDTH = UNIFORM 
		WIDTH = MIN 
		LABEL;

	VAR 
		TOT_BOR	
		RESOLVED
		PERC_RESOLVED
		UNRESOLVED
		PERC_UNRESOLVED
		TOT_PAY
		PERC_PAY
		TOT_FORB
		PERC_FORB
		TOT_DFR
		PERC_DFR
		INV_ADR
		PERC_INV_ADR
		INV_PHN
		PERC_INV_PHN
		INV_BTH
		PERC_INV_BOTH
	;

	LABEL
		TOT_BOR = 'Total Borrowers'
		RESOLVED = 'Total Resolved'
		PERC_RESOLVED = 'Percent Resolved'
		UNRESOLVED = 'Unresolved'
		PERC_UNRESOLVED = 'Percent Unresolved'
		TOT_PAY = 'Total Payment'
		PERC_PAY = 'Percent Payment'
		TOT_FORB = 'Total Forbearance'
		PERC_FORB = 'Percent Forbearance'
		TOT_DFR = 'Total Deferment'
		PERC_DFR = 'Percent Deferment'
		INV_ADR = 'Invalid Address'
		PERC_INV_ADR = 'Percent Invalid Address'
		INV_PHN = 'Invalid Phone'
		PERC_INV_PHN = 'Percent Invalid Phone'
		INV_BTH = 'Invalid Both'
		PERC_INV_BOTH = 'Percent Invalid Both'
	;
RUN;

PROC PRINTTO; RUN;

/*R5*/
/*create printed report*/
PROC PRINTTO PRINT=REPORT5 NEW; RUN;

OPTIONS ORIENTATION=LANDSCAPE PS=39 LS=127;
TITLE 		'CR 2651 Delinquency - FED';
TITLE2		'Campaign CR 2651 Control';
TITLE3		"RUNDATE &SYSDATE9";
FOOTNOTE1  	"THIS DOCUMENT MAY CONTAIN BORROWERS' SENSITIVE INFORMATION THAT UHEAA HAS PLEDGED TO PROTECT.";
FOOTNOTE2	'PLEASE TAKE APPROPRIATE PRECAUTIONS TO SAFEGUARD THIS INFORMATION.';
FOOTNOTE3	;
FOOTNOTE4   'JOB = UTNWS78  	 REPORT = UNWS78.NWS78R3';

PROC PRINT 
		NOOBS SPLIT = '/' 
		DATA = R5
		WIDTH = UNIFORM 
		WIDTH = MIN 
		LABEL;

	VAR 
		TOT_BOR	
		RESOLVED
		PERC_RESOLVED
		UNRESOLVED
		PERC_UNRESOLVED
		TOT_PAY
		PERC_PAY
		TOT_FORB
		PERC_FORB
		TOT_DFR
		PERC_DFR
		INV_ADR
		PERC_INV_ADR
		INV_PHN
		PERC_INV_PHN
		INV_BTH
		PERC_INV_BOTH
	;

	LABEL
		TOT_BOR = 'Total Borrowers'
		RESOLVED = 'Total Resolved'
		PERC_RESOLVED = 'Percent Resolved'
		UNRESOLVED = 'Unresolved'
		PERC_UNRESOLVED = 'Percent Unresolved'
		TOT_PAY = 'Total Payment'
		PERC_PAY = 'Percent Payment'
		TOT_FORB = 'Total Forbearance'
		PERC_FORB = 'Percent Forbearance'
		TOT_DFR = 'Total Deferment'
		PERC_DFR = 'Percent Deferment'
		INV_ADR = 'Invalid Address'
		PERC_INV_ADR = 'Percent Invalid Address'
		INV_PHN = 'Invalid Phone'
		PERC_INV_PHN = 'Percent Invalid Phone'
		INV_BTH = 'Invalid Both'
		PERC_INV_BOTH = 'Percent Invalid Both'
	;
RUN;

PROC PRINTTO; RUN;

ODS LISTING CLOSE;

/*LIBNAME T 'T:\SAS\';*/
/*DATA T.FINAL; SET LEGEND.FINAL; RUN;*/
/*DATA T.PAY; SET LEGEND.PAY; RUN;*/
/*DATA T.DFR; SET LEGEND.DFR; RUN;*/
/*DATA T.FB; SET LEGEND.FB; RUN;*/
/*DATA T.FBR; SET LEGEND.FBR; RUN;*/
/*DATA T.DF; SET LEGEND.DF; RUN;*/

