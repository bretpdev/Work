*----------------------------------------------*
| UTLWO09 ORIGINATION FEE CREDIT REVIEW        |
*----------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/ULWO09.LWO09RZ";
FILENAME REPORT2 "&RPTLIB/ULWO09.LWO09R2";
FILENAME REPORT3 "&RPTLIB/ULWO09.LWO09R3";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE OFCCUT AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,INT(A.BF_SSN) AS ISSN
	,I027_C.LN_SEQ
	,A.LA_CUR_PRI
	,B.DF_SPE_ACC_ID
	,B.DM_PRS_LST
	,I027_C.EFF_DT_1027
	,I027_C.AMT_1027
	,I027_C.LA_FAT_CUR_PRI
	,I027_C.I04X_TRX
	,I027_C.LD_FAT_EFF
	,I027_C.LN_FAT_SEQ
	,I401.LA_FAT_CUR_PRI AS I401_LA_FAT_CUR_PRI
	,I401.I401_TRX AS I401_TRX
	,I401.LD_FAT_EFF AS I401_LD_FAT_EFF
	,I401.LN_FAT_SEQ AS I401_LN_FAT_SEQ
	,B001.U_8001_IND

FROM (
	SELECT DISTINCT I027.BF_SSN 
		,I027.LN_SEQ
		,I027.LD_FAT_EFF AS EFF_DT_1027
		,I027.LA_FAT_CUR_PRI AS AMT_1027
	FROM OLWHRM1.LN90_FIN_ATY I027
	INNER JOIN (
		SELECT BF_SSN
			,LN_SEQ
			,LD_FAT_PST
		FROM OLWHRM1.LN90_FIN_ATY 
		WHERE PC_FAT_TYP = '10'
		AND PC_FAT_SUB_TYP IN ('40','41','45')
		AND LC_CSH_ADV = 'C'
		AND LC_STA_LON90 = 'A'
		AND LC_FAT_REV_REA = ''
		) I04X
		ON I027.BF_SSN = I04X.BF_SSN
		AND I027.LN_SEQ = I04X.LN_SEQ
	WHERE I027.PC_FAT_TYP = '10'
	AND I027.PC_FAT_SUB_TYP = '27'
	AND I027.LC_CSH_ADV = 'A'
	AND I027.LC_STA_LON90 = 'A'
	AND I027.LC_FAT_REV_REA = ''
	AND I04X.LD_FAT_PST >= I027.LD_FAT_PST
	AND NOT EXISTS (
		SELECT *
		FROM OLWHRM1.LN90_FIN_ATY X
		WHERE X.BF_SSN = I04X.BF_SSN
		AND X.LN_SEQ = I04X.LN_SEQ
		AND X.PC_FAT_TYP = '10'
		AND X.PC_FAT_SUB_TYP = '27'
		AND X.LC_CSH_ADV = 'A'
		AND X.LC_STA_LON90 = 'A'
		AND X.LC_FAT_REV_REA = ''
		AND X.LD_FAT_PST > I04X.LD_FAT_PST
		) 
	) I027_B
INNER JOIN (
	SELECT DISTINCT IJ1.BF_SSN 
		,IJ1.LN_SEQ
		,IJ1.LD_FAT_EFF AS EFF_DT_1027
		,IJ1.LA_FAT_CUR_PRI AS AMT_1027
		,IJ2.LN_FAT_SEQ
		,IJ2.LD_FAT_EFF
		,IJ2.LA_FAT_CUR_PRI
		,IJ2.I04X_TRX
	FROM OLWHRM1.LN90_FIN_ATY IJ1
	LEFT OUTER JOIN (
		SELECT BF_SSN
			,LN_SEQ
			,LN_FAT_SEQ
			,LD_FAT_EFF
			,LA_FAT_CUR_PRI
			,PC_FAT_TYP||PC_FAT_SUB_TYP AS I04X_TRX
		FROM OLWHRM1.LN90_FIN_ATY 
		WHERE PC_FAT_TYP = '10'
		AND PC_FAT_SUB_TYP IN ('40','41','45')
		AND LC_CSH_ADV = 'C'
		AND LC_STA_LON90 = 'A'
		AND LC_FAT_REV_REA = ''
		) IJ2
		ON IJ1.BF_SSN = IJ2.BF_SSN
		AND IJ1.LN_SEQ = IJ2.LN_SEQ
	WHERE IJ1.PC_FAT_TYP = '10'
	AND IJ1.PC_FAT_SUB_TYP = '27'
	AND IJ1.LC_CSH_ADV = 'A'
	AND IJ1.LC_STA_LON90 = 'A'
	AND IJ1.LC_FAT_REV_REA = ''
	) I027_C
	ON I027_B.BF_SSN = I027_C.BF_SSN
	AND I027_B.EFF_DT_1027 = I027_C.EFF_DT_1027
	AND I027_B.AMT_1027 = I027_C.AMT_1027 
INNER JOIN OLWHRM1.LN10_LON A
	ON I027_C.BF_SSN = A.BF_SSN
	AND I027_C.LN_SEQ = A.LN_SEQ
INNER JOIN OLWHRM1.PD10_PRS_NME B
	ON A.BF_SSN = B.DF_PRS_ID 
LEFT OUTER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,LN_FAT_SEQ
		,LD_FAT_PST
		,LD_FAT_EFF
		,LA_FAT_CUR_PRI
		,PC_FAT_TYP||PC_FAT_SUB_TYP AS I401_TRX
	FROM OLWHRM1.LN90_FIN_ATY 
	WHERE PC_FAT_TYP = '14'
	AND PC_FAT_SUB_TYP = '01'
	AND LC_STA_LON90 = 'A'
	AND LC_FAT_REV_REA = ''
	) I401
	ON A.BF_SSN = I401.BF_SSN
	AND I027_C.LN_SEQ = I401.LN_SEQ
LEFT OUTER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,'X' AS U_8001_IND
	FROM OLWHRM1.LN90_FIN_ATY 
	WHERE PC_FAT_TYP = '80'
	AND PC_FAT_SUB_TYP = '01'
	AND LC_STA_LON90 = 'A'
	AND LC_FAT_REV_REA = ''
	) B001
	ON A.BF_SSN = B001.BF_SSN
	AND I027_C.LN_SEQ = B001.LN_SEQ
WHERE A.LC_STA_LON10 = 'R'
FOR READ ONLY WITH UR
);
/***************************************************************************************
* GET FINANCIAL TRANSACTIONS TO CALCULATE OFEE - THIS CAME FROM THE ORIGINATION FEE JOB
****************************************************************************************/
CREATE TABLE NOPRCTR AS
SELECT DISTINCT A1.*
FROM CONNECTION TO DB2 (
	SELECT DISTINCT A.BF_SSN
		,B.DM_PRS_LST
		,A.LN_SEQ
		,A.IC_LON_PGM
		,A.LD_LON_1_DSB
		,E.AMNT
	    ,E.TRX
		,A.LF_LON_ALT
		,A.LN_LON_ALT_SEQ
		,ERR_TRX.EGT01_IND
		,A.LF_RGL_CAT_LP20
		,CASE
			WHEN A.IC_LON_PGM IN ('PLUS','PLUSGB') AND 
				DAYS(A.LD_LON_1_DSB) BETWEEN DAYS('07/01/2006') AND DAYS('08/07/2006')
			THEN 'X'
			ELSE ''
		 END AS DSBCHK
	FROM OLWHRM1.LN10_LON A 
	INNER JOIN OLWHRM1.PD10_PRS_NME B
		 ON A.BF_SSN = B.DF_PRS_ID 
	INNER JOIN 
		(SELECT BF_SSN, 
		   LN_SEQ,
		   SUM(COALESCE(LA_FAT_CUR_PRI,0)) AS AMNT,
		   PC_FAT_TYP || PC_FAT_SUB_TYP AS TRX
		FROM OLWHRM1.LN90_FIN_ATY 
		WHERE (
				( 
					PC_FAT_TYP = '01'
				    AND PC_FAT_SUB_TYP = '01'
				)
				OR ( 
					PC_FAT_TYP = '06'
					AND PC_FAT_SUB_TYP = '85'
					)
				OR ( 
					PC_FAT_TYP = '14'
					AND PC_FAT_SUB_TYP = '01'
					)
				OR (
					PC_FAT_TYP = '02'
					AND PC_FAT_SUB_TYP = '91'
					)
				OR (
					PC_FAT_TYP = '14'
					AND PC_FAT_SUB_TYP IN ('86','48')
					)
				)
			AND		LC_FAT_REV_REA = ' '
			AND 	LC_STA_LON90 = 'A'
		 GROUP BY BF_SSN, LN_SEQ, PC_FAT_TYP || PC_FAT_SUB_TYP 
		 ) E
		ON A.BF_SSN = E.BF_SSN
		AND A.LN_SEQ = E.LN_SEQ
	LEFT OUTER JOIN 
		(SELECT BF_SSN
			,LN_SEQ
			,'Y' AS EGT01_IND
		 FROM OLWHRM1.LN90_FIN_ATY 
		 WHERE PC_FAT_TYP = '80'
		 AND PC_FAT_SUB_TYP = '01'
		 AND LC_FAT_REV_REA = ' '
		 AND LC_STA_LON90 = 'A'
		 ) ERR_TRX
		ON A.BF_SSN = ERR_TRX.BF_SSN
		AND A.LN_SEQ = ERR_TRX.LN_SEQ
	INNER JOIN (
		SELECT G1.BF_SSN
			,G2.LN_SEQ
			, SUM(G1.LA_DSB_FEE) AS LA_DSB_FEE 
		FROM OLWHRM1.LN18_DSB_FEE G1
		INNER JOIN OLWHRM1.LN15_DSB G2
			ON G1.BF_SSN = G2.BF_SSN
			AND G1.LN_BR_DSB_SEQ = G2.LN_BR_DSB_SEQ
			AND G2.LC_DSB_TYP = '2'
			AND (G2.LC_STA_LON15 = '1' OR G2.LC_STA_LON15 = '3')
			AND (G2.LA_DSB_CAN <> G2.LA_DSB OR G2.LA_DSB_CAN IS NULL)
		GROUP BY G1.BF_SSN, G2.LN_SEQ
		 ) G
		ON A.BF_SSN = G.BF_SSN
		AND A.LN_SEQ = G.LN_SEQ
	WHERE A.IF_TIR_PCE = ''
	FOR READ ONLY WITH UR
	) A1
INNER JOIN OFCCUT B1
	ON A1.BF_SSN = B1.BF_SSN
;

CREATE TABLE PRCTR AS
SELECT DISTINCT A2.*
FROM CONNECTION TO DB2 (
	SELECT DISTINCT A.BF_SSN
		,B.DM_PRS_LST
		,A.LN_SEQ
		,A.IC_LON_PGM
		,A.LD_LON_1_DSB
		,E.AMNT
	    ,E.TRX
		,E.LD_FAT_EFF
		,E.LD_FAT_APL
		,A.IF_TIR_PCE
		,A.LF_RGL_CAT_LP20
		,CASE
			WHEN A.IC_LON_PGM IN ('PLUS','PLUSGB') AND 
				DAYS(A.LD_LON_1_DSB) BETWEEN DAYS('07/01/2006') AND DAYS('08/07/2006')
			THEN 'X'
			ELSE ''
	 	 END AS DSBCHK
	FROM OLWHRM1.LN10_LON A 
	INNER JOIN OLWHRM1.PD10_PRS_NME B
		 ON A.BF_SSN = B.DF_PRS_ID 
	INNER JOIN 
		(SELECT BF_SSN, 
		   LN_SEQ,
		   LD_FAT_EFF,
		   LD_FAT_APL,
		   LA_FAT_CUR_PRI AS AMNT,
		   PC_FAT_TYP || PC_FAT_SUB_TYP AS TRX
		FROM OLWHRM1.LN90_FIN_ATY 
		WHERE (
				  ( PC_FAT_TYP = '03'
				    AND PC_FAT_SUB_TYP = '90')
			OR 	  ( PC_FAT_TYP = '70'
					AND PC_FAT_SUB_TYP = '01')
			OR 	  ( PC_FAT_TYP = '26'
					AND PC_FAT_SUB_TYP = '01')
			OR 	  ( PC_FAT_TYP = '10'
					AND PC_FAT_SUB_TYP IN ('10','11','12'))
			   )
			AND		LC_FAT_REV_REA = ' '
			AND 	LC_STA_LON90 = 'A'
		 ) E
		ON A.BF_SSN = E.BF_SSN
		AND A.LN_SEQ = E.LN_SEQ
	INNER JOIN (
		SELECT G1.BF_SSN
			,G2.LN_SEQ
			,SUM(G1.LA_DSB_FEE) AS LA_DSB_FEE 
		FROM OLWHRM1.LN18_DSB_FEE G1
		INNER JOIN OLWHRM1.LN15_DSB G2
			ON G1.BF_SSN = G2.BF_SSN
			AND G1.LN_BR_DSB_SEQ = G2.LN_BR_DSB_SEQ
			AND G2.LC_DSB_TYP = '2'
			AND (G2.LC_STA_LON15 = '1' OR G2.LC_STA_LON15 = '3')
			AND (G2.LA_DSB_CAN <> G2.LA_DSB OR G2.LA_DSB_CAN IS NULL)
		GROUP BY G1.BF_SSN, G2.LN_SEQ
		 ) G
		ON A.BF_SSN = G.BF_SSN
		AND A.LN_SEQ = G.LN_SEQ
	WHERE A.IF_TIR_PCE <> ''
	FOR READ ONLY WITH UR
	) A2
INNER JOIN OFCCUT B2
	ON A2.BF_SSN = B2.BF_SSN
;

CREATE TABLE ZIONS AS
SELECT DISTINCT A3.*
FROM CONNECTION TO DB2 (
	SELECT DISTINCT A.BF_SSN
		,E.LF_LON_ALT
		,E.LN_LON_ALT_SEQ
		,E.AMNT
		,E.TRX
		,O291.O291_IND
		,O101.O101_IND
		,ERR_TRX.EGT01_IND
		,'Y' AS ZB_IND

	FROM OLWHRM1.LN10_LON A 
	INNER JOIN 
		(SELECT V.BF_SSN, 
		   V.LF_LON_ALT,
		   V.LN_LON_ALT_SEQ,
		   SUM(COALESCE(Q.LA_FAT_CUR_PRI,0)) AS AMNT,
		   Q.PC_FAT_TYP || Q.PC_FAT_SUB_TYP AS TRX
		FROM OLWHRM1.LN90_FIN_ATY_ZB Q
		INNER JOIN OLWHRM1.LN10_LON_ZB V
			ON Q.BF_SSN = V.BF_SSN
			AND Q.LN_SEQ = V.LN_SEQ
		WHERE (
				( 
					Q.PC_FAT_TYP = '01'
				  	AND Q.PC_FAT_SUB_TYP = '01'
				)
				OR ( 
					Q.PC_FAT_TYP = '06'
					AND Q.PC_FAT_SUB_TYP = '85'
					)
				OR ( 
					Q.PC_FAT_TYP = '14'
					AND Q.PC_FAT_SUB_TYP = '01'
					)
				OR ( 
					Q.PC_FAT_TYP = '02'
					AND Q.PC_FAT_SUB_TYP = '91'
					)
				OR (
					Q.PC_FAT_TYP = '14'
					AND Q.PC_FAT_SUB_TYP IN ('86','48')
				   )
				)
			AND	Q.LC_FAT_REV_REA = ' '
			AND Q.LC_STA_LON90 = 'A'
		 GROUP BY V.BF_SSN,V.LF_LON_ALT,V.LN_LON_ALT_SEQ, Q.PC_FAT_TYP || Q.PC_FAT_SUB_TYP 
		 ) E
		ON A.BF_SSN = E.BF_SSN
		AND A.LF_LON_ALT = E.LF_LON_ALT
		AND A.LN_LON_ALT_SEQ = E.LN_LON_ALT_SEQ

	LEFT OUTER JOIN 
		(SELECT V.BF_SSN
			,V.LF_LON_ALT
		   	,V.LN_LON_ALT_SEQ
			,'Y' AS O291_IND
		 FROM OLWHRM1.LN90_FIN_ATY_ZB Q
		 INNER JOIN OLWHRM1.LN10_LON_ZB V
			ON Q.BF_SSN = V.BF_SSN
			AND Q.LN_SEQ = V.LN_SEQ
		 WHERE PC_FAT_TYP = '02'
		 AND PC_FAT_SUB_TYP = '91'
		 AND LC_FAT_REV_REA = ' '
		 AND LC_STA_LON90 = 'A'
		 ) O291
		ON A.BF_SSN = O291.BF_SSN
		AND A.LF_LON_ALT = O291.LF_LON_ALT
		AND A.LN_LON_ALT_SEQ = O291.LN_LON_ALT_SEQ
	LEFT OUTER JOIN 
		(SELECT V.BF_SSN
			,V.LF_LON_ALT
		   	,V.LN_LON_ALT_SEQ
			,'Y' AS O101_IND
		 FROM OLWHRM1.LN90_FIN_ATY_ZB Q
		 INNER JOIN OLWHRM1.LN10_LON_ZB V
			ON Q.BF_SSN = V.BF_SSN
			AND Q.LN_SEQ = V.LN_SEQ
		 WHERE PC_FAT_TYP = '01'
		 AND PC_FAT_SUB_TYP = '01'
		 AND LC_FAT_REV_REA = ' '
		 AND LC_STA_LON90 = 'A'
		 ) O101
		ON A.BF_SSN = O101.BF_SSN
		AND A.LF_LON_ALT = O101.LF_LON_ALT
		AND A.LN_LON_ALT_SEQ = O101.LN_LON_ALT_SEQ
	LEFT OUTER JOIN 
		(SELECT V.BF_SSN
			,V.LF_LON_ALT
		   	,V.LN_LON_ALT_SEQ
			,'Y' AS EGT01_IND
		  FROM OLWHRM1.LN90_FIN_ATY_ZB Q
		  INNER JOIN OLWHRM1.LN10_LON_ZB V
			ON Q.BF_SSN = V.BF_SSN
			AND Q.LN_SEQ = V.LN_SEQ
		 WHERE PC_FAT_TYP = '80'
		 AND PC_FAT_SUB_TYP = '01'
		 AND LC_FAT_REV_REA = ' '
		 AND LC_STA_LON90 = 'A'
		 ) ERR_TRX
		ON A.BF_SSN = ERR_TRX.BF_SSN
		AND A.LF_LON_ALT = ERR_TRX.LF_LON_ALT
		AND A.LN_LON_ALT_SEQ = ERR_TRX.LN_LON_ALT_SEQ
	WHERE EXISTS 
		(SELECT *
		 FROM OLWHRM1.LN90_FIN_ATY X
		 WHERE X.BF_SSN = A.BF_SSN
		 AND X.LN_SEQ = A.LN_SEQ
		 AND X.PC_FAT_TYP = '02'
		 AND X.PC_FAT_SUB_TYP = '91')
	FOR READ ONLY WITH UR
	) A3
INNER JOIN OFCCUT B3
	ON A3.BF_SSN = B3.BF_SSN
;

CREATE TABLE AMT AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.BF_SSN
	,A.LD_REQ_RSP_ATY_PRF
	,C.LX_ATY
FROM OLWHRM1.AY10_BR_LON_ATY A
INNER JOIN OLWHRM1.AY15_ATY_CMT B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_ATY_SEQ = B.LN_ATY_SEQ
INNER JOIN OLWHRM1.AY20_ATY_TXT C
	ON B.BF_SSN = C.BF_SSN
	AND B.LN_ATY_SEQ = C.LN_ATY_SEQ
	AND B.LN_ATY_CMT_SEQ = C.LN_ATY_CMT_SEQ
WHERE A.PF_REQ_ACT IN ('O1038','O1039')
AND A.LC_STA_ACTY10 = 'A'
);

DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWO09.LWO09RZ);*/
/*QUIT;*/
ENDRSUBMIT;
DATA PRCTR;SET WORKLOCL.PRCTR;RUN;
DATA NOPRCTR;SET WORKLOCL.NOPRCTR;RUN;
DATA ZIONS;SET WORKLOCL.ZIONS;RUN;
DATA OFCCUT;SET WORKLOCL.OFCCUT;RUN;
DATA AMT; SET WORKLOCL.AMT;RUN;
/*========================================================================*/
/*MACRO DEFINITIONS*/
/*========================================================================*/
%MACRO STP1(DS);
PROC SORT DATA=&DS;
	BY BF_SSN DM_PRS_LST LN_SEQ AMNT TRX;
RUN;
%MEND STP1;
/*-------------------------------------------------------------------------*/
%MACRO STP2(DS,BYVAL1,BYVAL2);
PROC SORT DATA=&DS NODUPKEY;
	BY &BYVAL1 ;
RUN;
PROC TRANSPOSE DATA=&DS OUT=&DS (DROP=_NAME_ _LABEL_);
	VAR AMNT;
	BY &BYVAL2 ;
	ID TRX;
RUN;
%MEND STP2;
/*------------------------------------------------------------------------*/
%MACRO STP3(DS,TRX_TYP);
DATA &DS;
	SET &DS;
	FORMAT &TRX_TYP 10.2;
	IF &TRX_TYP = . THEN &TRX_TYP = 0;
	ELSE &TRX_TYP = ABS(&TRX_TYP);
RUN;
%MEND STP3;
/*------------------------------------------------------------------------*/
%MACRO STP4(DS,STMNT);
DATA &DS;
	SET &DS;
	&STMNT;
RUN;
%MEND STP4;
/*------------------------------------------------------------------------*/
%MACRO TBLCRT(DS1,DS2);
PROC SQL;
CREATE TABLE &DS1 AS 
SELECT DISTINCT TABLE1.*
FROM NOPRCTR TABLE1
INNER JOIN &DS2 TABLE2
	ON TABLE1.BF_SSN = TABLE2.BF_SSN
	AND TABLE1.LN_SEQ = TABLE2.LN_SEQ;
QUIT;
RUN;
%MEND TBLCRT;
/*------------------------------------------------------------------------*/
%MACRO GETRX(DS,CRIT);
DATA &DS;
	SET &DS;
	WHERE &CRIT ; 
RUN;
%MEND GETRX;
/*------------------------------------------------------------------------*/
%MACRO SCENUM(DS,CALVAR);
DATA &DS ;
	SET &DS;
	FRMNM = &CALVAR;
RUN;
%MEND SCENUM;
/*------------------------------------------------------------------------*/
%MACRO PAYCONSOL(DS);
PROC SORT DATA=&DS; 
	BY BF_SSN LN_SEQ TRX;
RUN;
DATA &DS;
	SET &DS;
	BY BF_SSN LN_SEQ TRX;
	IF FIRST.TRX THEN X=0;
	X+AMNT;
	IF LAST.TRX THEN OUTPUT;
RUN;
DATA &DS (DROP=X);
	SET &DS;
	AMNT = X;
RUN;
%MEND PAYCONSOL;
/*------------------------------------------------------------------------*/
%MACRO OG_FEE(DS);
DATA &DS (DROP=LF_RGL_CAT_LP20 IC_LON_PGM LD_LON_1_DSB);
SET &DS;
IF LF_RGL_CAT_LP20 <= '1999030' OR (IC_LON_PGM IN ('PLUS','PLUSGB') AND LD_LON_1_DSB >= '08AUG2006'D) 
	THEN OFEE = .03;
ELSE IF LF_RGL_CAT_LP20 = '2006020' 
	THEN OFEE = .02 ;
ELSE IF LF_RGL_CAT_LP20 = '2007020' 
	THEN OFEE = .015 ;
RUN;
%MEND OG_FEE;
/*------------------------------------------------------------------------*/
%MACRO PLUS_DISB(DSB,DSN);
DATA &DSB &DSN;
SET &DSB;
IF DSBCHK = 'X' THEN OUTPUT &DSN;
ELSE OUTPUT &DSB;
RUN;
%MEND PLUS_DISB;
/*========================================================================*/
/*PRICE TIER PROCESSING*/
/*========================================================================*/
%PLUS_DISB(PRCTR,DSBSA);
%OG_FEE(PRCTR);
%STP1(PRCTR);

DATA DTCRIT (KEEP=BF_SSN LN_SEQ SALE_DT);
SET PRCTR (RENAME=(LD_FAT_EFF=SALE_DT));
WHERE TRX = '0390';
RUN;

PROC SORT DATA=DTCRIT NODUPKEY;BY BF_SSN LN_SEQ;RUN;

DATA PRCTR (DROP=LD_FAT_EFF);
MERGE PRCTR (IN=A) DTCRIT (IN=B);
BY BF_SSN LN_SEQ;
RUN;

DATA PRCTR;
SET PRCTR;
IF TRX = '0390' THEN OUTPUT;
ELSE IF LD_FAT_APL LT SALE_DT THEN OUTPUT;
ELSE DELETE;
RUN;

PROC SORT DATA=PRCTR; 
BY BF_SSN LN_SEQ TRX;
RUN;

DATA PRCTR;
SET PRCTR;
BY BF_SSN LN_SEQ TRX;
IF FIRST.TRX THEN X=0;
X+AMNT;
IF LAST.TRX THEN OUTPUT;
RUN;

DATA PRCTR (DROP=X);
SET PRCTR;
AMNT = X;
RUN;

%STP2(PRCTR,BF_SSN DM_PRS_LST LN_SEQ AMNT TRX IF_TIR_PCE OFEE,
	BF_SSN DM_PRS_LST LN_SEQ IF_TIR_PCE OFEE);

%STP3(PRCTR,_0390);
%STP3(PRCTR,_7001);
%STP3(PRCTR,_2601);
%STP3(PRCTR,_1010);
%STP3(PRCTR,_1011);
%STP3(PRCTR,_1012);

DATA PRCTR;
SET PRCTR; 
FORMAT CR_AMT 10.2;
CR_AMT = ROUND((_0390 + _1010 + _1011 + _1012 - _7001 - _2601) * OFEE,.01);
RUN;

%STP4(PRCTR,IF BF_SSN = ' ' THEN DELETE);
PROC SORT DATA=PRCTR NODUPKEY;BY BF_SSN LN_SEQ;RUN;

/*========================================================================*/
/*NO PRICE TIER PROCESSING*/
/*========================================================================*/
%PLUS_DISB(NOPRCTR,DSBSB);
%OG_FEE(NOPRCTR);

PROC SORT DATA=ZIONS NODUPRECS;
BY BF_SSN LF_LON_ALT LN_LON_ALT_SEQ;
RUN;

PROC SQL;
CREATE TABLE HKUP AS 
SELECT DISTINCT A.BF_SSN
	,A.DM_PRS_LST
	,A.LN_SEQ
	,A.EGT01_IND 
	,A.OFEE
	,B.AMNT
	,B.TRX
	,B.O291_IND
	,B.O101_IND
	,B.ZB_IND
	,B.EGT01_IND AS ZB_EX
FROM NOPRCTR A
INNER JOIN ZIONS B
	ON A.LF_LON_ALT = B.LF_LON_ALT
	AND A.LN_LON_ALT_SEQ = B.LN_LON_ALT_SEQ
;
QUIT;

DATA NOPRCTR (DROP=LF_LON_ALT LN_LON_ALT_SEQ);
SET NOPRCTR HKUP;
RUN;

%STP1(NOPRCTR);

/*============================================================*/
/*CREATE DATA SET FOR MANUAL REVIEW*/
/*============================================================*/
DATA _8001 ;
SET NOPRCTR;
WHERE EGT01_IND = 'Y' OR ZB_EX = 'Y';
RUN;

PROC SORT DATA=_8001;BY BF_SSN LN_SEQ;RUN;
PROC SORT DATA=NOPRCTR;BY BF_SSN LN_SEQ;RUN;

DATA _8001 (KEEP=BF_SSN LN_SEQ DM_PRS_LST) NOPRCTR;
MERGE _8001 (IN=A) NOPRCTR (IN=B);
BY BF_SSN LN_SEQ;
IF A THEN OUTPUT _8001;
ELSE OUTPUT NOPRCTR;
RUN;

PROC SORT DATA=_8001 NODUPKEY;BY BF_SSN LN_SEQ;RUN;
/*============================================================*/

DATA AX (KEEP=BF_SSN LN_SEQ) BX(KEEP=BF_SSN LN_SEQ) ;
SET NOPRCTR;
IF O291_IND = 'Y' THEN OUTPUT AX;
ELSE IF O101_IND = 'Y' AND O291_IND = '' THEN OUTPUT BX;
RUN;  

PROC SORT DATA=AX NODUPKEY;BY BF_SSN LN_SEQ;RUN;
PROC SORT DATA=BX NODUPKEY;BY BF_SSN LN_SEQ;RUN;

%TBLCRT(SEQ1,AX);
%TBLCRT(SEQ2,BX);

PROC SQL;
CREATE TABLE SEQ3 AS 
SELECT DISTINCT D.*
FROM NOPRCTR D
WHERE NOT EXISTS (
	SELECT *
	FROM AX A
	WHERE A.BF_SSN = D.BF_SSN
	AND A.LN_SEQ = D.LN_SEQ
	)
AND NOT EXISTS (
	SELECT *
	FROM BX B
	WHERE B.BF_SSN = D.BF_SSN
	AND B.LN_SEQ = D.LN_SEQ
	)
;
QUIT;

%GETRX(
	SEQ1,TRX EQ '0101' 
	OR TRX EQ '0685' 
	OR TRX EQ '1401'
	OR TRX EQ '1486'
	OR TRX EQ '1448' 
	OR TRX EQ '0291' AND ZB_IND EQ 'Y'
	);
%GETRX(
	SEQ2,TRX EQ '0101' 
	OR TRX EQ '0685'
	OR TRX EQ '1401'
	OR TRX EQ '1486'
	OR TRX EQ '1448' 
	);
%SCENUM(SEQ1,1);
%SCENUM(SEQ2,2);
%SCENUM(SEQ3,3);
DATA NOPRCTR (DROP=FRMNM) FORMULA(KEEP=BF_SSN LN_SEQ FRMNM);
SET SEQ1 SEQ2 SEQ3;
RUN;
%PAYCONSOL(NOPRCTR);
%STP2(NOPRCTR,
	BF_SSN DM_PRS_LST LN_SEQ AMNT TRX OFEE,
	BF_SSN DM_PRS_LST LN_SEQ OFEE);
%STP3(NOPRCTR,_0101);
%STP3(NOPRCTR,_0685);
%STP3(NOPRCTR,_1401);
%STP3(NOPRCTR,_0291);
%STP3(NOPRCTR,_1486);
%STP3(NOPRCTR,_1448);

PROC SORT DATA=FORMULA NODUPKEY;
BY BF_SSN LN_SEQ FRMNM;
RUN;

DATA NOPRCTR;
MERGE NOPRCTR FORMULA;
BY BF_SSN LN_SEQ;
RUN;

DATA NOPRCTR;
SET NOPRCTR; 
FORMAT CR_AMT 10.2 CR_EFF DATE9.;
IF FRMNM IN (1,3) THEN 
	CR_AMT = ROUND(((_0101 + _0291 + _0685) * OFEE) - _1401 - _1486 - _1448,.01);
ELSE IF FRMNM = 2 THEN 
	CR_AMT = ROUND(((_0101 + _0685) * OFEE) - _1401 - _1486 - _1448,.01);
RUN;

DATA PCAL (KEEP=BF_SSN LN_SEQ CR_AMT);
SET NOPRCTR PRCTR;
RUN;

DATA _104X (DROP=I401_LA_FAT_CUR_PRI I401_TRX I401_LD_FAT_EFF I401_LN_FAT_SEQ)
	_1401 (KEEP=BF_SSN LN_SEQ I401_LA_FAT_CUR_PRI I401_TRX I401_LD_FAT_EFF I401_LN_FAT_SEQ);
SET OFCCUT;
RUN; 

PROC SORT DATA=_104X NODUPKEY;BY BF_SSN LN_SEQ LN_FAT_SEQ; RUN;
PROC SORT DATA=_1401 NODUPKEY;BY BF_SSN LN_SEQ I401_LN_FAT_SEQ; RUN;

PROC SQL;
CREATE TABLE OAMTS AS 
SELECT DISTINCT A.BF_SSN
	,A.LD_REQ_RSP_ATY_PRF
	,A.LN_SEQ
	,A.AMT
FROM ( 
	SELECT BF_SSN
		,LD_REQ_RSP_ATY_PRF
		,INPUT(SUBSTR(LX_ATY,1,1),BEST12.) AS LN_SEQ
		,INPUT(SUBSTR(LX_ATY,INDEX(LX_ATY,'(')+1,INDEX(LX_ATY,')') - INDEX(LX_ATY,'(')-1),BEST12.) AS AMT
	FROM AMT
	) A
INNER JOIN (
	SELECT BF_SSN
		,INPUT(SUBSTR(LX_ATY,1,1),BEST12.) AS LN_SEQ
		,MAX(LD_REQ_RSP_ATY_PRF) AS LD_REQ_RSP_ATY_PRF
	FROM AMT
	GROUP BY BF_SSN
		,INPUT(SUBSTR(LX_ATY,1,1),BEST12.) 
	) B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
;
QUIT;

PROC SQL;
CREATE TABLE OFCCUT2 AS 
SELECT DISTINCT	A.BF_SSN
	,A.LN_SEQ
	,A.DF_SPE_ACC_ID
	,A.DM_PRS_LST
	,A.EFF_DT_1027
	,A.AMT_1027
	,ABS(COALESCE(C.LA_FAT_CUR_PRI,0)) AS LA_FAT_CUR_PRI
	,ABS(COALESCE(D.LA_FAT_CUR_PRI_B,0)) AS LA_FAT_CUR_PRI_B
	,COALESCE(B.CR_AMT,0) AS CR_AMT
	,U_8001_IND
	,COALESCE(E.AMT,0) AS AMT
FROM OFCCUT A
LEFT OUTER JOIN PCAL B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
INNER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,SUM(LA_FAT_CUR_PRI) AS LA_FAT_CUR_PRI
	FROM _104X
	GROUP BY BF_SSN
		,LN_SEQ
	) C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ	
LEFT OUTER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,SUM(I401_LA_FAT_CUR_PRI) AS LA_FAT_CUR_PRI_B
	FROM _1401
	GROUP BY BF_SSN
		,LN_SEQ
	) D
	ON A.BF_SSN = D.BF_SSN
	AND A.LN_SEQ = D.LN_SEQ	
LEFT OUTER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,SUM(AMT) AS AMT
	FROM OAMTS 
	GROUP BY BF_SSN
		,LN_SEQ
	) E
	ON A.BF_SSN = E.BF_SSN 
	AND A.LN_SEQ = E.LN_SEQ
;
QUIT;

DATA OFCCUT2;
SET OFCCUT2;
IF LA_FAT_CUR_PRI_B = 0 THEN DELETE;
ELSE IF SUM(ABS(AMT_1027),AMT) = CR_AMT THEN DELETE;
ELSE OUTPUT;
RUN;

PROC SQL;
CREATE TABLE OFCCUT3 AS 
SELECT DISTINCT 
	A.DF_SPE_ACC_ID 
	,A.DM_PRS_LST 
	,A.LN_SEQ 
	,A.EFF_DT_1027 
	,A.AMT_1027
	,C.CR_AMT 
	,A.U_8001_IND
FROM OFCCUT A
INNER JOIN OFCCUT2 B
	ON A.BF_SSN = B.BF_SSN
	AND A.EFF_DT_1027 = B.EFF_DT_1027
	AND A.AMT_1027 = B.AMT_1027
	AND A.LN_SEQ ^= B.LN_SEQ
INNER JOIN PCAL C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
;
QUIT;

DATA OFCCUT2;
SET OFCCUT2 OFCCUT3;
RUN;

PROC SORT DATA=OFCCUT2;BY DF_SPE_ACC_ID LN_SEQ;RUN;

DATA _NULL_;
SET  WORK.OFCCUT2;
WHERE U_8001_IND ^= 'X';
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DF_SPE_ACC_ID $10. ;
	FORMAT DM_PRS_LST $23. ;
	FORMAT LN_SEQ 6. ;
	FORMAT EFF_DT_1027 MMDDYY10.;
	FORMAT AMT_1027 12.2 ;
	FORMAT CR_AMT 12.2 ;
IF _N_ = 1 THEN DO;
	PUT
		'DF_SPE_ACC_ID'
		','
		'DM_PRS_LST'
		','
		'LN_SEQ'
		','
		'EFF_DT_1027'
		','
		'AMT_1027' 
		','
		'CR_AMT';
	END;
DO;
	PUT DF_SPE_ACC_ID $ @;
	PUT DM_PRS_LST $ @;
	PUT LN_SEQ @;
	PUT EFF_DT_1027 @;
	PUT AMT_1027 @; 
	PUT CR_AMT ;
END;
RUN;

DATA _NULL_;
SET  WORK.OFCCUT2;
WHERE U_8001_IND = 'X';
FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DF_SPE_ACC_ID $10. ;
	FORMAT DM_PRS_LST $23. ;
	FORMAT LN_SEQ 6. ;
	FORMAT EFF_DT_1027 MMDDYY10.;
	FORMAT AMT_1027 12.2 ;
IF _N_ = 1 THEN DO;
	PUT
		'DF_SPE_ACC_ID'
		','
		'DM_PRS_LST'
		','
		'LN_SEQ'
		','
		'EFF_DT_1027'
		','
		'AMT_1027';
	END;
DO;
	PUT DF_SPE_ACC_ID $ @;
	PUT DM_PRS_LST $ @;
	PUT LN_SEQ @;
	PUT EFF_DT_1027 @;
	PUT AMT_1027 ; 
END;
RUN;
