USE ULS
GO

CREATE PROCEDURE [skpbwrdmu].GetSkipBorrowers
AS 

--Borrowers in a skip status
SELECT
	PD10.DF_SPE_ACC_ID AS AccountNumber,
	PD10.DM_PRS_1 AS FirstName,
	PD10.DM_PRS_MID AS MiddleName,
	PD10.DM_PRS_LST AS LastName,
	PD10.DD_BRT AS DateOfBirth,
	CASE 
		WHEN PD42.DI_PHN_VLD = 'N' AND PD30.DI_VLD_ADR = 'N' THEN 'Both'
		WHEN PD42.DI_PHN_VLD = 'N' THEN 'Phone'
		WHEN PD30.DI_VLD_ADR = 'N' THEN 'Address'
	END AS SkipType,
	RTRIM(PD42.DN_DOM_PHN_ARA + PD42.DN_DOM_PHN_XCH + PD42.DN_DOM_PHN_LCL + PD42.DN_PHN_XTN) AS PhoneNumber,
	PD42.DD_PHN_VER AS PhoneVerifiedDate,
	PD30.DX_STR_ADR_1 AS [Address],
	PD30.DM_CT AS City,
	PD30.DC_DOM_ST AS [State],
	PD30.DF_ZIP_CDE AS Zip,
	PD30.DM_FGN_CNY AS Country,
	PD30.DM_FGN_ST AS ForeignState,
	PD30.DD_VER_ADR AS AddressVerifiedDate,
	ISNULL(PH05.DX_CNC_EML_ADR,'') AS Email,
	ISNULL(CONVERT(VARCHAR(10), PH05.DD_CNC_EML_ADR_VER, 101),'') AS EmailVerifiedDate,
	ISNULL(SC10_MIN.IM_SCL_SHO,'') AS OriginalSchool,
	ISNULL(SC10_MAX.IM_SCL_SHO,'') AS LastSchool
FROM
	UDW..PD10_PRS_NME PD10
	INNER JOIN 
	(
		SELECT
			LN10.BF_SSN
		FROM
			UDW..LN10_LON LN10
			INNER JOIN UDW..DW01_DW_CLC_CLU DW01
				ON DW01.BF_SSN = LN10.BF_SSN
				AND DW01.LN_SEQ = LN10.LN_SEQ
				AND DW01.WC_DW_LON_STA NOT IN ('12','16','17','18','19','20','21') -- Not Claim paid, Death, Disability, or Bankruptcy	
		WHERE
			LN10.LC_STA_LON10 = 'R'
			AND LN10.LA_CUR_PRI > 0.00
		GROUP BY
			LN10.BF_SSN
	) LOAN_LEVEL
		ON LOAN_LEVEL.BF_SSN = PD10.DF_PRS_ID
	LEFT JOIN UDW..PD30_PRS_ADR PD30
		ON PD30.DF_PRS_ID = LOAN_LEVEL.BF_SSN
		AND DC_ADR = 'L'
	LEFT JOIN UDW..PD42_PRS_PHN PD42
		ON PD42.DF_PRS_ID = LOAN_LEVEL.BF_SSN
		AND PD42.DC_PHN = 'H'
	LEFT JOIN UDW..PH05_CNC_EML PH05
		ON PH05.DF_SPE_ID = PD10.DF_SPE_ACC_ID
	--Original school
	LEFT JOIN
	( 
		SELECT 
			LF_STU_SSN,
			MIN(LN_STU_SPR_SEQ) AS LN_STU_SPR_SEQ
		FROM
			UDW..SD10_STU_SPR SD10
		GROUP BY
			LF_STU_SSN		
	) MIN_SCHOOL
		ON MIN_SCHOOL.LF_STU_SSN = LOAN_LEVEL.BF_SSN 
	LEFT JOIN UDW..SD10_STU_SPR SD10_MIN
		ON SD10_MIN.LF_STU_SSN = MIN_SCHOOL.LF_STU_SSN
		AND SD10_MIN.LN_STU_SPR_SEQ = MIN_SCHOOL.LN_STU_SPR_SEQ	
	LEFT JOIN UDW..SC10_SCH_DMO SC10_MIN
		ON SC10_MIN.IF_DOE_SCL = SD10_MIN.LF_DOE_SCL_ENR_CUR
	--Last school
	LEFT JOIN
	( 
		SELECT 
			LF_STU_SSN,
			MAX(LN_STU_SPR_SEQ) AS LN_STU_SPR_SEQ
		FROM
			UDW..SD10_STU_SPR SD10
		GROUP BY
			LF_STU_SSN		
	) MAX_SCHOOL
		ON MAX_SCHOOL.LF_STU_SSN = LOAN_LEVEL.BF_SSN 
	LEFT JOIN UDW..SD10_STU_SPR SD10_MAX
		ON SD10_MAX.LF_STU_SSN = MAX_SCHOOL.LF_STU_SSN
		AND SD10_MAX.LN_STU_SPR_SEQ = MAX_SCHOOL.LN_STU_SPR_SEQ
	LEFT JOIN UDW..SC10_SCH_DMO SC10_MAX
		ON SC10_MAX.IF_DOE_SCL = SD10_MAX.LF_DOE_SCL_ENR_CUR
WHERE
	--Borrower is in skip
	(
		PD30.DI_VLD_ADR = 'N'
		OR PD42.DI_PHN_VLD = 'N' 
	)

UNION

--Endorsers in a skip status
SELECT
	PD10.DF_SPE_ACC_ID AS AccountNumber,
	PD10.DM_PRS_1 AS FirstName,
	PD10.DM_PRS_MID AS MiddleName,
	PD10.DM_PRS_LST AS LastName,
	PD10.DD_BRT AS DateOfBirth,
	CASE 
		WHEN PD42.DI_PHN_VLD = 'N' AND PD30.DI_VLD_ADR = 'N' THEN 'Both'
		WHEN PD42.DI_PHN_VLD = 'N' THEN 'Phone'
		WHEN PD30.DI_VLD_ADR = 'N' THEN 'Address'
	END AS SkipType,
	RTRIM(PD42.DN_DOM_PHN_ARA + PD42.DN_DOM_PHN_XCH + PD42.DN_DOM_PHN_LCL + PD42.DN_PHN_XTN) AS PhoneNumber,
	PD42.DD_PHN_VER AS PhoneVerifiedDate,
	PD30.DX_STR_ADR_1 AS [Address],
	PD30.DM_CT AS City,
	PD30.DC_DOM_ST AS [State],
	PD30.DF_ZIP_CDE AS Zip,
	PD30.DM_FGN_CNY AS Country,
	PD30.DM_FGN_ST AS ForeignState,
	PD30.DD_VER_ADR AS AddressVerifiedDate,
	ISNULL(PH05.DX_CNC_EML_ADR,'') AS Email,
	ISNULL(CONVERT(VARCHAR(10), PH05.DD_CNC_EML_ADR_VER, 101),'') AS EmailVerifiedDate,
	ISNULL(SC10_MIN.IM_SCL_SHO,'') AS OriginalSchool,
	ISNULL(SC10_MAX.IM_SCL_SHO,'') AS LastSchool
FROM
	UDW..PD10_PRS_NME PD10
	INNER JOIN 
	(
		SELECT
			LN20.LF_EDS AS BF_SSN
		FROM
			UDW..LN20_EDS LN20
			LEFT JOIN UDW..DW01_DW_CLC_CLU DW01
				ON DW01.BF_SSN = LN20.LF_EDS
				AND DW01.LN_SEQ = LN20.LN_SEQ
				AND DW01.WC_DW_LON_STA NOT IN ('12','16','17','18','19','20','21') -- Not Claim paid, Death, Disability, or Bankruptcy	
		WHERE
			LN20.LC_STA_LON20 = 'A'
			AND LN20.LC_EDS_TYP IN ('M','S')
			AND DW01.BF_SSN IS NULL
		GROUP BY
			LN20.LF_EDS
	) LOAN_LEVEL
		ON LOAN_LEVEL.BF_SSN = PD10.DF_PRS_ID
	LEFT JOIN UDW..PD30_PRS_ADR PD30
		ON PD30.DF_PRS_ID = LOAN_LEVEL.BF_SSN
		AND DC_ADR = 'L'
	LEFT JOIN UDW..PD42_PRS_PHN PD42
		ON PD42.DF_PRS_ID = LOAN_LEVEL.BF_SSN
		AND PD42.DC_PHN = 'H'
	LEFT JOIN UDW..PH05_CNC_EML PH05
		ON PH05.DF_SPE_ID = PD10.DF_SPE_ACC_ID
	--Original school
	LEFT JOIN
	( 
		SELECT 
			LF_STU_SSN,
			MIN(LN_STU_SPR_SEQ) AS LN_STU_SPR_SEQ
		FROM
			UDW..SD10_STU_SPR SD10
		GROUP BY
			LF_STU_SSN		
	) MIN_SCHOOL
		ON MIN_SCHOOL.LF_STU_SSN = LOAN_LEVEL.BF_SSN 
	LEFT JOIN UDW..SD10_STU_SPR SD10_MIN
		ON SD10_MIN.LF_STU_SSN = MIN_SCHOOL.LF_STU_SSN
		AND SD10_MIN.LN_STU_SPR_SEQ = MIN_SCHOOL.LN_STU_SPR_SEQ	
	LEFT JOIN UDW..SC10_SCH_DMO SC10_MIN
		ON SC10_MIN.IF_DOE_SCL = SD10_MIN.LF_DOE_SCL_ENR_CUR
	--Last school
	LEFT JOIN
	( 
		SELECT 
			LF_STU_SSN,
			MAX(LN_STU_SPR_SEQ) AS LN_STU_SPR_SEQ
		FROM
			UDW..SD10_STU_SPR SD10
		GROUP BY
			LF_STU_SSN		
	) MAX_SCHOOL
		ON MAX_SCHOOL.LF_STU_SSN = LOAN_LEVEL.BF_SSN 
	LEFT JOIN UDW..SD10_STU_SPR SD10_MAX
		ON SD10_MAX.LF_STU_SSN = MAX_SCHOOL.LF_STU_SSN
		AND SD10_MAX.LN_STU_SPR_SEQ = MAX_SCHOOL.LN_STU_SPR_SEQ
	LEFT JOIN UDW..SC10_SCH_DMO SC10_MAX
		ON SC10_MAX.IF_DOE_SCL = SD10_MAX.LF_DOE_SCL_ENR_CUR
WHERE
	--endorser is in skip
	(
		PD30.DI_VLD_ADR = 'N'
		OR PD42.DI_PHN_VLD = 'N' 
	);
GO
	