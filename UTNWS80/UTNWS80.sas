/*%LET RPTLIB = %SYSGET(reportdir); *LIVE;*/
%LET RPTLIB = T:\SAS; *TEST;
FILENAME REPORTZ "&RPTLIB/UNWS80.NWS80RZ";
FILENAME REPORT2 "&RPTLIB/UNWS80.NWS80R2";
FILENAME REPORT3 "&RPTLIB/UNWS80.NWS80R3";

%LET CLS = %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\CLS.dsn; update_lock_typ=nolock; bl_keepnulls=no"); *LIVE;
/*%LET CLS = %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\CLS_TEST.dsn; update_lock_typ=nolock; bl_keepnulls=no"); *TEST;*/
/*%LET CLS = %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\CLS_TEST_USQLDB.dsn; update_lock_typ=nolock; bl_keepnulls=no"); *TEST Uheaasqldb;*/

PROC SQL NOPRINT;
CONNECT TO ODBC AS SCRA (&CLS);
CREATE TABLE BorrowerData AS
	SELECT 
		*
	FROM CONNECTION TO SCRA
	(
		SELECT DISTINCT
			ADR.BorrSSN,
			MIN(ADR.TXCXBegin) AS BeginDate,
			MAX(ADR.TXCXEnd) AS EndDate
		FROM 
			scra.ActiveDutyReporting ADR
			INNER JOIN
			(
				SELECT
					BorrSSN,
					MAX(CreatedAt) AS CreatedAt
				FROM
					scra.ActiveDutyReporting
				GROUP BY
					BorrSSN
			) MaxADR
				ON MaxADR.CreatedAt = ADR.CreatedAt
				AND MaxADR.BorrSSN = ADR.BorrSSN
		WHERE
			CAST(DATEADD(D,-(DAY(GETDATE())),GETDATE()) AS DATE) BETWEEN ADR.TXCXBegin AND ADR.TXCXEnd
		GROUP BY
			ADR.BorrSSN
	);
DISCONNECT FROM SCRA;
QUIT;

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=WORK;
DATA LEGEND.BorrowerData;  *Send data to Legend;
	SET BorrowerData;
RUN;

RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUK3 test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DB2 DATABASE=&DB OWNER=PKUB;

DATA _NULL_;
	CALL SYMPUT('EOM',"'"||PUT(INTNX('MONTH',TODAY(),-1,'E'),date9.)||"'");
RUN;
%PUT &EOM;

DATA BorrowerData;
	SET BorrowerData;
	BeginDate1 = BeginDate;
	EndDate1 = EndDate;
	format BeginDate1 EndDate1 yymmdd10.;
RUN;

PROC SQL;
CREATE TABLE MILBEN AS
	SELECT DISTINCT
		LN10.BF_SSN,
		LN10.LN_SEQ,
		COMPRESS(PD10.DM_PRS_1) || ' ' || PD10.DM_PRS_LST AS NAME,
		CASE
			WHEN LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'S' THEN 'Hostile Area 0%'
			WHEN LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'M' AND LN72.LC_INT_RDC_PGM_TYP = 'H' THEN 'Hostile Area 0%'
			ELSE ''
		END AS QUALIFYING_BENEFIT_1,
		CASE
			WHEN LN72.LR_ITR <= 6 AND (LN72.LC_INT_RDC_PGM = 'M' OR (LN10.LD_LON_1_DSB <= COALESCE(BD.BeginDate1, LN10.LD_LON_1_DSB) AND INPUT(&EOM, date9.) <= BD.EndDate1)) THEN 'SCRA'
			ELSE ''
		END AS QUALIFYING_BENEFIT_2,
		CASE
			WHEN MilitaryDeferment.BF_SSN IS NOT NULL THEN 'Military Service Deferment'
			ELSE ''
		 END AS QUALIFYING_BENEFIT_3,
		 CASE
		 	WHEN BD.BeginDate1 IS NOT NULL THEN BD.BeginDate1
			WHEN BD.BeginDate1 IS NULL AND (LN72.LR_ITR <= 6 AND LN72.LR_ITR > 0 AND LN72.LC_INT_RDC_PGM = 'M' AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END) THEN LN72.LD_ITR_EFF_BEG
			WHEN BD.BeginDate1 IS NULL AND MilitaryDeferment.BF_SSN IS NOT NULL THEN MilitaryDeferment.BeginDate
			WHEN BD.BeginDate1 IS NULL AND (LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'M' AND LN72.LC_INT_RDC_PGM_TYP = 'H' AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END) THEN LN72.LD_ITR_EFF_BEG
			WHEN BD.BeginDate1 IS NULL AND (LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'S' AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END) THEN LN72.LD_ITR_EFF_BEG
			ELSE BD.BeginDate1
		 END AS BeginDate,
		 CASE
		 	WHEN BD.EndDate1 IS NOT NULL THEN BD.EndDate1
			WHEN BD.EndDate1 IS NULL AND (LN72.LR_ITR <= 6 AND LN72.LR_ITR > 0 AND LN72.LC_INT_RDC_PGM = 'M' AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END) THEN LN72.LD_ITR_EFF_END
			WHEN BD.EndDate1 IS NULL AND MilitaryDeferment.BF_SSN IS NOT NULL THEN MilitaryDeferment.EndDate
			WHEN BD.EndDate1 IS NULL AND (LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'M' AND LN72.LC_INT_RDC_PGM_TYP = 'H' AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END) THEN LN72.LD_ITR_EFF_END
			WHEN BD.EndDate1 IS NULL AND (LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'S' AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END) THEN LN72.LD_ITR_EFF_END
			ELSE BD.EndDate1
		 END AS EndDate,
		 LN16.LN_DLQ_MAX,
		 LN72.LR_ITR
	FROM
		PKUB.PD10_PRS_NME PD10
		INNER JOIN PKUB.LN10_LON LN10
			ON PD10.DF_PRS_ID = LN10.BF_SSN
		INNER JOIN PKUB.DW01_DW_CLC_CLU DW01
			ON LN10.BF_SSN = DW01.BF_SSN
			AND LN10.LN_SEQ = DW01.LN_SEQ
		LEFT JOIN BorrowerData BD
			ON BD.BorrSSN = LN10.BF_SSN
			AND	INPUT(&EOM, date9.) BETWEEN BD.BeginDate1 AND BD.EndDate1
			AND LN10.LD_LON_1_DSB <= BD.BeginDate1
		LEFT JOIN 
		(
			SELECT DISTINCT
				LN72.BF_SSN,
				LN72.LN_SEQ,
				LN72.LR_ITR,
				LN72.LC_INT_RDC_PGM,
				LN72.LC_INT_RDC_PGM_TYP,
				IntDates.LD_ITR_EFF_BEG,
				IntDates.LD_ITR_EFF_END
			FROM
				PKUB.LN72_INT_RTE_HST LN72
				INNER JOIN
				(
					SELECT
						MinMax.BF_SSN,
						MIN(MinMax.LD_ITR_EFF_BEG) AS LD_ITR_EFF_BEG,
						MAX(MinMax.LD_ITR_EFF_END) AS LD_ITR_EFF_END 
					FROM
						PKUB.LN72_INT_RTE_HST MinMax
					WHERE
						INPUT(&EOM, date9.) BETWEEN MinMax.LD_ITR_EFF_BEG AND MinMax.LD_ITR_EFF_END
						AND TODAY() BETWEEN MinMax.LD_ITR_EFF_BEG AND MinMax.LD_ITR_EFF_END
						AND MinMax.LD_ITR_APL <= INPUT(&EOM, date9.)
						AND MinMax.LC_STA_LON72 = 'A'
					GROUP BY
						MinMax.BF_SSN
				) IntDates
					ON IntDates.BF_SSN = LN72.BF_SSN
			WHERE
				INPUT(&EOM, date9.) BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END
				AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END
				AND LN72.LD_ITR_APL <= INPUT(&EOM, date9.)
				AND LN72.LC_STA_LON72 = 'A'
		) LN72
			ON LN10.BF_SSN = LN72.BF_SSN
			AND LN10.LN_SEQ = LN72.LN_SEQ	
		LEFT JOIN 
		(
			SELECT DISTINCT
				DW01.BF_SSN,
				DW01.LN_SEQ,
				DeferDates.LD_DFR_BEG AS BeginDate,
				DeferDates.LD_DFR_END AS EndDate
			FROM
				PKUB.DW01_DW_CLC_CLU DW01
				INNER JOIN PKUB.LN50_BR_DFR_APV LN50
					ON DW01.BF_SSN = LN50.BF_SSN
					AND DW01.LN_SEQ = LN50.LN_SEQ
					AND LN50.LC_STA_LON50 = 'A'
					AND INPUT(&EOM, date9.) BETWEEN LN50.LD_DFR_BEG AND LN50.LD_DFR_END
					AND LN50.LD_DFR_APL <= INPUT(&EOM, date9.)
				INNER JOIN PKUB.DF10_BR_DFR_REQ DF10
					ON DW01.BF_SSN = DF10.BF_SSN
					AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
					AND DF10.LC_DFR_STA = 'A'
					AND DF10.LC_STA_DFR10 = 'A'
					AND DF10.LC_DFR_TYP IN('38','40')
				INNER JOIN
				(
					SELECT
						LN50.BF_SSN,
						MIN(LN50.LD_DFR_BEG) AS LD_DFR_BEG,
						MAX(LN50.LD_DFR_END) AS LD_DFR_END 
					FROM
						PKUB.DW01_DW_CLC_CLU DW01
						INNER JOIN PKUB.LN50_BR_DFR_APV LN50
							ON DW01.BF_SSN = LN50.BF_SSN
							AND DW01.LN_SEQ = LN50.LN_SEQ
							AND LN50.LC_STA_LON50 = 'A'
							AND INPUT(&EOM, date9.) BETWEEN LN50.LD_DFR_BEG AND LN50.LD_DFR_END
							AND LN50.LD_DFR_APL <= INPUT(&EOM, date9.)
						INNER JOIN PKUB.DF10_BR_DFR_REQ DF10
							ON LN50.BF_SSN = DF10.BF_SSN
							AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
							AND DF10.LC_DFR_STA = 'A'
							AND DF10.LC_STA_DFR10 = 'A'
							AND DF10.LC_DFR_TYP IN('38','40')
					WHERE
						DW01.WC_DW_LON_STA = '04'	
					GROUP BY
						LN50.BF_SSN
				) DeferDates
					ON DeferDates.BF_SSN = LN50.BF_SSN
			WHERE 
				DW01.WC_DW_LON_STA = '04'
		) MilitaryDeferment
			ON LN10.BF_SSN = MilitaryDeferment.BF_SSN
			AND LN10.LN_SEQ = MilitaryDeferment.LN_SEQ
		LEFT JOIN
		(
			SELECT
				LN16.BF_SSN,
				LN16.LN_SEQ,
				MAX(LN16.LN_DLQ_MAX) + 1 AS LN_DLQ_MAX
			FROM 
				PKUB.LN16_LON_DLQ_HST LN16
				INNER JOIN PKUB.LN10_LON LN10
					ON LN10.BF_SSN = LN16.BF_SSN
					AND LN10.LN_SEQ = LN16.LN_SEQ
			WHERE 
				LN16.LC_STA_LON16 = '1'
				AND LN16.LN_DLQ_MAX >= 300
				AND LN10.LC_STA_LON10 = 'R'
				AND LN10.LA_CUR_PRI > 0
			GROUP BY 
				LN16.BF_SSN,
				LN16.LN_SEQ
		) LN16
			ON LN10.BF_SSN = LN16.BF_SSN
			AND LN10.LN_SEQ = LN16.LN_SEQ
	WHERE
		(
			(
				LN10.LA_CUR_PRI + DW01.WA_TOT_BRI_OTS <= 0
				AND LN10.LC_STA_LON10 = 'R'
				AND (LN10.LD_PIF_RPT IS NULL OR LN10.LD_PIF_RPT > INPUT(&EOM, Date9.))
			)
			OR
			(
				LN10.LA_CUR_PRI + DW01.WA_TOT_BRI_OTS > 0
				AND LN10.LC_STA_LON10 = 'R'
			)
		)
		AND
		(
			(LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'S')
			OR (LN72.LR_ITR = 0 AND LN72.LC_INT_RDC_PGM = 'M' AND LN72.LC_INT_RDC_PGM_TYP = 'H')
			OR (LN72.LR_ITR <= 6 AND LN72.LR_ITR > 0 AND LN72.LC_INT_RDC_PGM = 'M')
			OR (LN72.LR_ITR <= 6 AND LN10.LD_LON_1_DSB <= BD.BeginDate1 AND INPUT(&EOM, Date9.) <= BD.EndDate1)
			OR MilitaryDeferment.BF_SSN IS NOT NULL
		)
	ORDER BY
		LN10.BF_SSN
;
QUIT;

ENDRSUBMIT;

DATA MILBEN; SET LEGEND.MILBEN; RUN;

PROC SQL;
CREATE TABLE MILBEN1 AS
	SELECT DISTINCT
		M.BF_SSN AS SSN,
		M.NAME,
		LENGTH(CATX('; ',M.QUALIFYING_BENEFIT_1,M.QUALIFYING_BENEFIT_2,M.QUALIFYING_BENEFIT_3)) AS QUALIFYING_BENEFIT_Length,
		M.QUALIFYING_BENEFIT_1,
		M.QUALIFYING_BENEFIT_2,
		M.QUALIFYING_BENEFIT_3,
		M.BeginDate,
		M.EndDate,
		MI.MaxInterestRate
	FROM 
		MILBEN M
		INNER JOIN
		(
			SELECT DISTINCT
				BF_SSN,
				MAX(LR_ITR) AS MaxInterestRate
			FROM
				MILBEN MI
			GROUP BY
				BF_SSN
		)MI
			ON MI.BF_SSN = M.BF_SSN
			AND MI.MaxInterestRate = M.LR_ITR
;

CREATE TABLE MILBEN2 AS
	SELECT DISTINCT
		M.SSN,
		M.NAME,
		CATX('; ',M.QUALIFYING_BENEFIT_1,M.QUALIFYING_BENEFIT_2,M.QUALIFYING_BENEFIT_3) AS QUALIFYING_BENEFIT,
		M.BeginDate,
		M.EndDate,
		M.MaxInterestRate
	FROM
		MILBEN1 M
		INNER JOIN
		(
			SELECT DISTINCT
				M.SSN,
				M.NAME,
				MAX(QUALIFYING_BENEFIT_Length) AS length,
				M.BeginDate,
				M.EndDate,
				MAX(MaxInterestRate) AS MaxInterestRate
			FROM
				MILBEN1 M
			GROUP BY
				M.SSN,
				M.NAME,
				M.BeginDate,
				M.EndDate
		) Mil
			ON Mil.SSN = M.SSN
			AND Mil.NAME = M.NAME
			AND Mil.BeginDate = M.BeginDate
			AND Mil.EndDate = M.EndDate
			AND Mil.length = M.QUALIFYING_BENEFIT_Length
			AND Mil.MaxInterestRate = M.MaxInterestRate
;
QUIT;

DATA MILBEN2 (drop=BeginDate EndDate);
	SET MILBEN2;
	BeginDate1= put(BeginDate, mmddyy10.);
	EndDate1= put(EndDate, mmddyy10.);
RUN;

PROC SQL;
CREATE TABLE MILBEN3 AS
	SELECT DISTINCT
		M.BF_SSN AS SSN,
		M.NAME,
		M.LN_DLQ_MAX AS DAYS_DELQ
	FROM 
		MILBEN M
	WHERE 
		M.LN_DLQ_MAX IS NOT NULL
;
QUIT;

/*write to comma delimited file*/
DATA _NULL_;
	SET	WORK.MILBEN2;
	FILE
		REPORT2
		DELIMITER = ','
		DSD
		DROPOVER
		LRECL = 32767
	;

	FORMAT
		SSN $9.
		NAME $36.
		QUALIFYING_BENEFIT $45.
	;

	/* write column names, remove this to create a file without a header row */
	IF _N_ = 1 THEN
		DO;
		PUT	
			'SSN'
			','
			'NAME'
			','
			'QUALIFYING_BENEFIT'
			','
			'ELIGIBILITY_START_DATE'
			','
			'ELIGIBILITY_END_DATE'
			','
			'MAX_INTEREST_RATE'
		;
		END;

	/* write data*/	
	DO;
		PUT SSN $ @;
		PUT NAME $ @;
		PUT QUALIFYING_BENEFIT $ @;
		PUT BeginDate1 $ @;
		PUT EndDate1 $ @;
		PUT MaxInterestRate;
		;
	END;
RUN;

DATA _NULL_;
	SET	WORK.MILBEN3;
	FILE
		REPORT3
		DELIMITER = ','
		DSD
		DROPOVER
		LRECL = 32767
	;

	FORMAT
		SSN $9.
		NAME $36.
		DAYS_DELQ BEST12.
	;

	/* write column names, remove this to create a file without a header row */
	IF _N_ = 1 THEN
		DO;
		PUT	
			'SSN'
			','
			'NAME'
			','
			'DAYS_DELQ'
		;
		END;

	/* write data*/	
	DO;
		PUT SSN $ @;
		PUT NAME $ @;
		PUT DAYS_DELQ;
		;
	END;
RUN;

