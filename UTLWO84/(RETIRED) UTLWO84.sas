*-----------------------------------------------------*
| UTLWO84 Interest Statements to those in Forbearance |
*-----------------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWO84.LWO84R2";
FILENAME REPORT3 "&RPTLIB/ULWO84.LWO84R3";
FILENAME REPORT4 "&RPTLIB/ULWO84.LWO84R4";
FILENAME REPORT5 "&RPTLIB/ULWO84.LWO84R5";
FILENAME REPORT6 "&RPTLIB/ULWO84.LWO84R6";
FILENAME REPORT7 "&RPTLIB/ULWO84.LWO84R7";
FILENAME REPORT8 "&RPTLIB/ULWO84.LWO84R8";
FILENAME REPORTZ "&RPTLIB/ULWO84.LWO84RZ";

%LET MAX_LN=25;	*Maximum number of loans to write to the report;
%LET LOAN_CEILING=99;	*Presumably unattainable number of loans used for report 8;

RSUBMIT;
LIBNAME SAS_TAB V8 '/sas/whse/progrevw';
PROC SQL NOPRINT;
	SELECT "'"||TRIM(LENDER_ID)||"'"
		INTO :UHEAA_LIST SEPARATED BY ","
	FROM SAS_TAB.LDR_AFF
	WHERE AFFILIATION = 'UHEAA';
QUIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;

PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE SUBSPLT AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT
	PD10.DF_PRS_ID		AS BR_ID
	,PD10.DF_SPE_ACC_ID
	,PD10.DM_PRS_1 		AS BR_FIRSTNAME
	,PD10.DM_PRS_LST	AS BR_LASTNAME
	,PD30.DX_STR_ADR_1	AS BR_ADR1
	,PD30.DX_STR_ADR_2	AS BR_ADR2
	,PD30.DM_CT			AS BR_CITY
	,PD30.DC_DOM_ST		AS BR_STATE
	,PD30.DF_ZIP_CDE	AS BR_ZIP
	,PD30.DC_FGN_CNY	AS BR_COUNTRY
	,PD30.DI_VLD_ADR	AS BR_VLD_ADR
	,COMAKER.CO_ID
	,COMAKER.CO_FIRSTNAME
	,COMAKER.CO_LASTNAME
	,COMAKER.CO_ADR1
	,COMAKER.CO_ADR2
	,COMAKER.CO_CITY
	,COMAKER.CO_STATE
	,COMAKER.CO_COUNTRY
	,COMAKER.CO_ZIP
	,COMAKER.CO_VLD_ADR
	,ENDORSER.EN_ID
	,ENDORSER.EN_FIRSTNAME
	,ENDORSER.EN_LASTNAME
	,ENDORSER.EN_ADR1
	,ENDORSER.EN_ADR2
	,ENDORSER.EN_CITY
	,ENDORSER.EN_STATE
	,ENDORSER.EN_COUNTRY
	,ENDORSER.EN_ZIP
	,ENDORSER.EN_VLD_ADR
	,LN10.LN_SEQ
	,LN10.IC_LON_PGM
	,LN10.LF_LON_CUR_OWN
	,LN10.LA_CUR_PRI
	,DW01.LA_NSI_ACR
	/*The accrued interest couldn't be multiplied in the query, so
	we'll query the attributes separately and multiply them in the code.*/
	,ITR.LR_ITR / 100 / 365 AS DAILY_INTEREST
	,DAYS(LN60.LD_FOR_END) - DAYS(CURRENT_DATE) AS DAYS_REMAINING

	,DAYS(CURRENT DATE) - DAYS(FOR06_ARC.LD_ATY_REQ_RCV) AS D1
	,DAYS(CURRENT DATE) AS D2
	,DAYS(FOR06_ARC.LD_ATY_REQ_RCV) AS D3
	,FOR06_ARC.LD_ATY_REQ_RCV AS D4
	,LN60.LD_FOR_BEG
	,LN60.LD_FOR_END


FROM OLWHRM1.PD10_PRS_NME PD10
INNER JOIN OLWHRM1.PD30_PRS_ADR PD30
	ON PD10.DF_PRS_ID = PD30.DF_PRS_ID
	AND PD30.DC_ADR = 'L'
INNER JOIN OLWHRM1.LN10_LON LN10
	ON PD30.DF_PRS_ID = LN10.BF_SSN
INNER JOIN OLWHRM1.LN60_BR_FOR_APV LN60
	ON LN10.BF_SSN = LN60.BF_SSN
	AND LN10.LN_SEQ = LN60.LN_SEQ
INNER JOIN OLWHRM1.FB10_BR_FOR_REQ FB10
	ON LN60.BF_SSN = FB10.BF_SSN
	AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
	ON LN10.BF_SSN = DW01.BF_SSN
	AND LN10.LN_SEQ = DW01.LN_SEQ
/*Current interest rate*/
INNER JOIN (
	SELECT GEN.LR_ITR
		,BF_SSN
		,LN_SEQ
	FROM OLWHRM1.LN72_INT_RTE_HST GEN
	WHERE GEN.LN_ITR_SEQ = (
		SELECT MAX(SPEC.LN_ITR_SEQ)
		FROM OLWHRM1.LN72_INT_RTE_HST SPEC
		WHERE	SPEC.BF_SSN = GEN.BF_SSN
			AND SPEC.LN_SEQ = GEN.LN_SEQ
	)
) ITR
	ON ITR.BF_SSN = LN10.BF_SSN
	AND ITR.LN_SEQ = LN10.LN_SEQ
/*Join co-maker/endorser information where applicable for reports 4-7*/
LEFT OUTER JOIN (
	SELECT
		CLN20.LF_EDS		AS CO_ID
		,CPD10.DM_PRS_1		AS CO_FIRSTNAME
		,CPD10.DM_PRS_LST	AS CO_LASTNAME
		,CPD30.DX_STR_ADR_1	AS CO_ADR1
		,CPD30.DX_STR_ADR_2	AS CO_ADR2
		,CPD30.DM_CT		AS CO_CITY
		,CPD30.DC_DOM_ST	AS CO_STATE
		,CPD30.DF_ZIP_CDE	AS CO_ZIP
		,CPD30.DC_FGN_CNY	AS CO_COUNTRY
		,CPD30.DI_VLD_ADR	AS CO_VLD_ADR
		,CLN20.BF_SSN
		,CLN20.LN_SEQ
	FROM OLWHRM1.LN20_EDS CLN20
	INNER JOIN OLWHRM1.PD10_PRS_NME CPD10
		ON CLN20.LF_EDS = CPD10.DF_PRS_ID
	INNER JOIN OLWHRM1.PD30_PRS_ADR CPD30
		ON CPD10.DF_PRS_ID = CPD30.DF_PRS_ID
		AND CPD30.DC_ADR = 'L'
	INNER JOIN OLWHRM1.AP33_LO_APL_DTL CAP33
		ON CAP33.DF_PRS_ID = CLN20.LF_EDS
	WHERE	CAP33.AC_PRS_TYP = 'E'
		AND CLN20.LC_EDS_TYP = 'M'
) COMAKER
	ON COMAKER.BF_SSN = LN10.BF_SSN
	AND COMAKER.LN_SEQ = LN10.LN_SEQ
LEFT OUTER JOIN (
	SELECT
		ELN20.LF_EDS		AS EN_ID
		,EPD10.DM_PRS_1		AS EN_FIRSTNAME
		,EPD10.DM_PRS_LST	AS EN_LASTNAME
		,EPD30.DX_STR_ADR_1	AS EN_ADR1
		,EPD30.DX_STR_ADR_2	AS EN_ADR2
		,EPD30.DM_CT		AS EN_CITY
		,EPD30.DC_DOM_ST	AS EN_STATE
		,EPD30.DF_ZIP_CDE	AS EN_ZIP
		,EPD30.DC_FGN_CNY	AS EN_COUNTRY
		,EPD30.DI_VLD_ADR	AS EN_VLD_ADR
		,ELN20.BF_SSN
		,ELN20.LN_SEQ
	FROM OLWHRM1.LN20_EDS ELN20
	INNER JOIN OLWHRM1.PD10_PRS_NME EPD10
		ON ELN20.LF_EDS = EPD10.DF_PRS_ID
	INNER JOIN OLWHRM1.PD30_PRS_ADR EPD30
		ON EPD10.DF_PRS_ID = EPD30.DF_PRS_ID
		AND EPD30.DC_ADR = 'L'
	INNER JOIN OLWHRM1.AP33_LO_APL_DTL EAP33
		ON EAP33.DF_PRS_ID = ELN20.LF_EDS
	WHERE	EAP33.AC_PRS_TYP = 'E'
		AND ELN20.LC_EDS_TYP = 'S'
) ENDORSER
	ON ENDORSER.BF_SSN = LN10.BF_SSN
	AND ENDORSER.LN_SEQ = LN10.LN_SEQ
	AND PD30.DI_VLD_ADR = 'N'
LEFT OUTER JOIN (
	SELECT Y.BF_SSN
		,Y.LN_SEQ
		,MAX(X.LD_ATY_REQ_RCV) AS LD_ATY_REQ_RCV
	FROM OLWHRM1.AY10_BR_LON_ATY X
	INNER JOIN OLWHRM1.LN85_LON_ATY Y
		ON X.BF_SSN = Y.BF_SSN
		AND X.LN_ATY_SEQ = Y.LN_ATY_SEQ
	WHERE X.PF_REQ_ACT = 'FOR06'
	GROUP BY Y.BF_SSN
		,Y.LN_SEQ
	) FOR06_ARC
	ON LN10.BF_SSN = FOR06_ARC.BF_SSN
	AND LN10.LN_SEQ = FOR06_ARC.LN_SEQ
WHERE LN10.LC_STA_LON10 = 'R'
	AND LN10.LA_CUR_PRI > 0
	AND LN10.LI_CON_PAY_STP_PUR <> 'Y'
	AND LN60.LC_STA_LON60 = 'A'
	AND LN60.LC_FOR_RSP <> '003'
	AND DAYS(LN60.LD_FOR_END) > DAYS(CURRENT DATE)
	AND ((DAYS(FB10.LD_FOR_INF_CER) < DAYS(LN60.LD_FOR_BEG) AND DAYS(CURRENT DATE) - DAYS(LN60.LD_FOR_BEG) > 175)
		OR (DAYS(FB10.LD_FOR_INF_CER) > DAYS(LN60.LD_FOR_BEG) AND DAYS(CURRENT DATE) - DAYS(FB10.LD_FOR_INF_CER) > 175))
	AND (FOR06_ARC.LD_ATY_REQ_RCV IS NULL
		OR DAYS(CURRENT DATE) - DAYS(FOR06_ARC.LD_ATY_REQ_RCV) = 175)
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;

/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWO84.LWO84RZ);*/
/*QUIT;*/

/********************************************************
* FOR TESTING ONLY!
*********************************************************/
DATA ULIST;
ULIST_VAR = "&UHEAA_LIST";
RUN;
/********************************************************/
ENDRSUBMIT;
DATA SUBSPLT; SET WORKLOCL.SUBSPLT; RUN;
DATA ULIST;SET WORKLOCL.ULIST;RUN;
/********************************************************
* FOR TESTING ONLY!
*********************************************************/
DATA _NULL_;
	SET ULIST;
	CALL SYMPUT('UHEAA_LIST',TRIM(ULIST_VAR));
RUN;
/********************************************************/

DATA SUBSPLT; SET SUBSPLT;
FORMAT ACCRUED_INTEREST 10.2;
ACCRUED_INTEREST = LA_CUR_PRI * DAILY_INTEREST * DAYS_REMAINING;
PDOC = LD_FOR_END + 1;
/*INTEREST ACCRUED SINCE LAST STATEMENT*/
IF LD_FOR_END > TODAY() - 175 THEN
	IASPS = (LA_CUR_PRI * DAILY_INTEREST) * (TODAY() - LD_FOR_BEG);
ELSE 
	IASPS = (LA_CUR_PRI * DAILY_INTEREST) * (TODAY() - D4);
RUN;

*CALCULATE KEYLINE;
%MACRO ADD_ACSKEY(DS);
DATA &DS (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I 
	CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
SET &DS;
KEYSSN = TRANSLATE(BR_ID,'MYLAUGHTER','0987654321');
MODAY = PUT(DATE(),MMDDYYN4.);
KEYLINE = "P"||KEYSSN||MODAY||'L';
CHKDIG = 0;
LENGTH DIG $2.;
DO I = 1 TO LENGTH(KEYLINE);
	IF I/2 NE ROUND(I/2,1) 
		THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
	ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
	IF SUBSTR(DIG,1,1) = " " 
		THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
		ELSE DO;
			CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
			CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
			IF CHK1 + CHK2 >= 10
				THEN DO;
					CHK3 = PUT(CHK1 + CHK2,2.);
					CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
					CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
				END;
			CHKDIG = CHKDIG + CHK1 + CHK2;
		END;
END;
CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
CHECK = PUT(CHKDIGIT,1.);
ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;
%MEND ADD_ACSKEY;
%ADD_ACSKEY(SUBSPLT);

/*Extract the appropriate records for each report from the main query.*/
DATA REP2; SET SUBSPLT;
WHERE BR_VLD_ADR = 'Y';
RUN;
DATA REP3; SET SUBSPLT;
WHERE BR_VLD_ADR = 'N';
RUN;
DATA REP4; SET SUBSPLT;
WHERE CO_VLD_ADR = 'Y';
RUN;
DATA REP5; SET SUBSPLT;
WHERE CO_VLD_ADR = 'N';
RUN;
DATA REP6; SET REP3;
WHERE EN_VLD_ADR = 'Y';
RUN;
DATA REP7; SET REP3;
WHERE EN_VLD_ADR = 'N';
RUN;
DATA REP8;
/*REP8 will be built from each of the other data sets at the end of the CCC macro.
This data step is here to keep REP8 from continuously accumulating data during development.*/
RUN;

/*Determine the cost center for each borrower based on whether most loans are owned by UHEAA.*/
%MACRO CCC(REPX);
PROC SQL;
CREATE TABLE CCC_UHEAA AS
SELECT BR_ID, COUNT(*) AS UCOUNT
FROM &REPX
WHERE LF_LON_CUR_OWN IN (&UHEAA_LIST, '829769')
GROUP BY BR_ID
;
CREATE TABLE CCC_NOT_UHEAA AS
SELECT BR_ID, COUNT(*) AS NCOUNT
FROM &REPX
WHERE LF_LON_CUR_OWN NOT IN (&UHEAA_LIST , '829769')
GROUP BY BR_ID
;
CREATE TABLE CCC_FINAL AS
SELECT R.*
	,CASE
		WHEN U.UCOUNT > N.NCOUNT
			THEN 'MA2324'
		ELSE 'MA2327'
	END AS COST_CENTER_CODE
FROM &REPX R
LEFT OUTER JOIN CCC_UHEAA U
	ON R.BR_ID = U.BR_ID
LEFT OUTER JOIN CCC_NOT_UHEAA N
	ON R.BR_ID = N.BR_ID
WHERE U.UCOUNT + N.NCOUNT <= &MAX_LN
;
CREATE TABLE CCC_TOO_MANY_LOANS AS
SELECT R.*
	,CASE
		WHEN U.UCOUNT > N.NCOUNT
			THEN 'MA2324'
		ELSE 'MA2327'
	END AS COST_CENTER_CODE
FROM &REPX R
LEFT OUTER JOIN CCC_UHEAA U
	ON R.BR_ID = U.BR_ID
LEFT OUTER JOIN CCC_NOT_UHEAA N
	ON R.BR_ID = N.BR_ID
WHERE U.UCOUNT + N.NCOUNT > &MAX_LN
;
QUIT;
DATA &REPX; SET CCC_FINAL; RUN;
DATA REP8; SET REP8 CCC_TOO_MANY_LOANS; RUN;
%MEND CCC;
%CCC(REP2);
%CCC(REP3);
%CCC(REP4);
%CCC(REP5);
%CCC(REP6);
%CCC(REP7);

/********************************************************************************
* CREATE ACCOUNT LEVEL DATASET CONTAINING LOAN INFO
*********************************************************************************/
%MACRO ACCT_LVL(REPX);
	PROC SORT DATA = &REPX;
	BY DF_SPE_ACC_ID LN_SEQ;
	RUN;
	%MACRO LN_ACCT(NEWDS,NEWCOL);
		PROC TRANSPOSE DATA=&REPX OUT=ACCT&NEWDS (DROP=_NAME_ /*_LABEL_*/) PREFIX=&NEWCOL;
		VAR &NEWCOL;
		BY DF_SPE_ACC_ID;
		RUN;
	%MEND LN_ACCT;
	%LN_ACCT(1,LN_SEQ);
	%LN_ACCT(2,IC_LON_PGM);
	%LN_ACCT(3,LF_LON_CUR_OWN);
	%LN_ACCT(4,LA_CUR_PRI);
	%LN_ACCT(5,LA_NSI_ACR);
	%LN_ACCT(6,ACCRUED_INTEREST);
	%LN_ACCT(7,IASPS); 
	%LN_ACCT(8,LD_FOR_END);  
	%LN_ACCT(9,PDOC);  
	DATA &REPX (DROP=_LABEL_);
	MERGE &REPX ACCT1 ACCT2 ACCT3 ACCT4 ACCT5 ACCT6 ACCT7 ACCT8 ACCT9;
	BY DF_SPE_ACC_ID;
	IF FIRST.DF_SPE_ACC_ID = 1;
	IF DF_SPE_ACC_ID = '' THEN DELETE;
	RUN;
%MEND ACCT_LVL;
%ACCT_LVL(REP2);
%ACCT_LVL(REP3);
%ACCT_LVL(REP4);
%ACCT_LVL(REP5);
%ACCT_LVL(REP6);
%ACCT_LVL(REP7);
%ACCT_LVL(REP8);
/**********************************************************
* Write text files for reports 2-7.
***********************************************************
* NOTE: THE WRITE_XTRA_COL VARIABLE WILL DETERMINE WETHER 
* OR NOT TO WRITE THE PROJECTED DATE OF CAPITILIZATION
* DATA. IF IT IS 1 THE COLUMN WILL WE WRITTEN TO THE FILE
* IF IT IS 0 THEN IT WILL NOT. 
***********************************************************/
%MACRO WRITEOUT(NUM,PREFIX,WRITE_XTRA_COL);
PROC SORT DATA = REP&NUM;
BY COST_CENTER_CODE DESCENDING &PREFIX._COUNTRY &PREFIX._STATE DF_SPE_ACC_ID;
RUN;

DATA _NULL_;
SET REP&NUM;
FILE REPORT&NUM DELIMITER=',' DSD DROPOVER LRECL=23767;
FORMAT &PREFIX._ID $9.;
FORMAT DF_SPE_ACC_ID $10.;
FORMAT &PREFIX._FIRSTNAME $13.;
FORMAT &PREFIX._LASTNAME $23.;
FORMAT &PREFIX._ADR1 $30.;
FORMAT &PREFIX._ADR2 $30.;
FORMAT &PREFIX._CITY $20.;
FORMAT &PREFIX._STATE $15.;
FORMAT &PREFIX._ZIP $18.;
FORMAT &PREFIX._COUNTRY $15.;

FORMAT LN_SEQ1-LN_SEQ&MAX_LN 6.;
FORMAT IC_LON_PGM1-IC_LON_PGM&MAX_LN $6.;
FORMAT LF_LON_CUR_OWN1-LF_LON_CUR_OWN&MAX_LN $6.;
FORMAT LA_CUR_PRI1-LA_CUR_PRI&MAX_LN 15.2;
FORMAT LA_NSI_ACR1-LA_NSI_ACR&MAX_LN 10.2;
FORMAT ACCRUED_INTEREST1-ACCRUED_INTEREST&MAX_LN 10.2;
FORMAT IASPS1-IASPS&MAX_LN 10.2;
FORMAT LD_FOR_END1-LD_FOR_END&MAX_LN MMDDYY10.; 
FORMAT PDOC1-PDOC&MAX_LN MMDDYY10.; 

FORMAT ACSKEY $18.;
FORMAT COST_CENTER_CODE $6.;

IF _N_ = 1 THEN
DO;
	PUT
	"SSN,"
	"RECIPIENT_ID,"
	"ACCOUNT,"
	"FIRSTNAME,"
	"LASTNAME,"
	"ADDRESS1,"
	"ADDRESS2,"
	"CITY,"
	"STATE,"
	"ZIP,"
	"COUNTRY,"
	@;
	DO I=1 TO &MAX_LN; PUT 'LN_SEQ' I @; END;
	DO I=1 TO &MAX_LN; PUT 'IC_LON_PGM' I @; END;
	DO I=1 TO &MAX_LN; PUT 'LF_LON_CUR_OWN' I @; END;
	DO I=1 TO &MAX_LN; PUT 'LA_CUR_PRI' I @; END;
	DO I=1 TO &MAX_LN; PUT 'LA_NSI_ACR' I @; END;
	DO I=1 TO &MAX_LN; PUT 'ACCRUED_INTEREST' I @; END;
	DO I=1 TO &MAX_LN; PUT 'INTEREST ACCRUED SINCE LAST STATEMENT' I @; END;
	DO I=1 TO &MAX_LN; PUT 'FORBEARANCE END DATE' I @; END;
	%IF &WRITE_XTRA_COL %THEN %DO;
		DO I=1 TO &MAX_LN; PUT 'PROJECTED DATE OF CAPITALIZATION' I @; END;
	%END;
	PUT
	'ACSKEY,'
	'STATE_IND,'
	'COST_CENTER_CODE'
	;
END;
DO;
	PUT BR_ID $ @;
	PUT &PREFIX._ID $ @;
	PUT DF_SPE_ACC_ID $ @;
	PUT &PREFIX._FIRSTNAME $ @;
	PUT &PREFIX._LASTNAME $ @;
	PUT &PREFIX._ADR1 $ @;
	PUT &PREFIX._ADR2 $ @;
	PUT &PREFIX._CITY $ @;
	PUT &PREFIX._STATE $ @;
	PUT &PREFIX._ZIP $ @;
	PUT &PREFIX._COUNTRY $ @;
	PUT LN_SEQ1-LN_SEQ&MAX_LN @;
	PUT IC_LON_PGM1-IC_LON_PGM&MAX_LN $ @;
	PUT LF_LON_CUR_OWN1-LF_LON_CUR_OWN&MAX_LN $ @;
	PUT LA_CUR_PRI1-LA_CUR_PRI&MAX_LN @;
	PUT LA_NSI_ACR1-LA_NSI_ACR&MAX_LN@;
	PUT ACCRUED_INTEREST1-ACCRUED_INTEREST&MAX_LN @;
	PUT IASPS1-IASPS&MAX_LN @;
	PUT LD_FOR_END1-LD_FOR_END&MAX_LN @;
	%IF &WRITE_XTRA_COL %THEN %DO;
		PUT PDOC1-PDOC&MAX_LN @;
	%END;
	PUT ACSKEY $ @;
	PUT &PREFIX._STATE $ @;
	PUT COST_CENTER_CODE $;
END;
RUN;
%MEND WRITEOUT;
%WRITEOUT(2,BR,1);
%WRITEOUT(3,BR,0);
%WRITEOUT(4,CO,1);
%WRITEOUT(5,CO,0);
%WRITEOUT(6,EN,1);
%WRITEOUT(7,EN,0);

/*Handle REP8 separately (different max number of loans, show BR+CO+EN demos).*/
PROC SORT DATA = REP8;
BY COST_CENTER_CODE DESCENDING BR_COUNTRY BR_STATE DF_SPE_ACC_ID;
RUN;

DATA _NULL_;
SET REP8;
FILE REPORT8 DELIMITER=',' DSD DROPOVER LRECL=23767;
FORMAT DF_SPE_ACC_ID $10.;
FORMAT BR_ID $9.;
FORMAT BR_FIRSTNAME $13.;
FORMAT BR_LASTNAME $23.;
FORMAT BR_VLD_ADR $1.;
FORMAT BR_ADR1 $30.;
FORMAT BR_ADR2 $30.;
FORMAT BR_CITY $20.;
FORMAT BR_STATE $15.;
FORMAT BR_ZIP $18.;
FORMAT BR_COUNTRY $15.;
FORMAT CO_ID $9.;
FORMAT CO_FIRSTNAME $13.;
FORMAT CO_LASTNAME $23.;
FORMAT CO_VLD_ADR $1.;
FORMAT CO_ADR1 $30.;
FORMAT CO_ADR2 $30.;
FORMAT CO_CITY $20.;
FORMAT CO_STATE $15.;
FORMAT CO_ZIP $18.;
FORMAT CO_COUNTRY $15.;
FORMAT EN_ID $9.;
FORMAT EN_FIRSTNAME $13.;
FORMAT EN_LASTNAME $23.;
FORMAT EN_VLD_ADR $1.;
FORMAT EN_ADR1 $30.;
FORMAT EN_ADR2 $30.;
FORMAT EN_CITY $20.;
FORMAT EN_STATE $15.;
FORMAT EN_ZIP $18.;
FORMAT EN_COUNTRY $15.;

FORMAT LN_SEQ1-LN_SEQ&LOAN_CEILING 6.;
FORMAT IC_LON_PGM1-IC_LON_PGM&LOAN_CEILING $6.;
FORMAT LF_LON_CUR_OWN1-LF_LON_CUR_OWN&LOAN_CEILING $6.;
FORMAT LA_CUR_PRI1-LA_CUR_PRI&LOAN_CEILING 15.2;
FORMAT LA_NSI_ACR1-LA_NSI_ACR&LOAN_CEILING 10.2;
FORMAT ACCRUED_INTEREST1-ACCRUED_INTEREST&LOAN_CEILING 10.2;

FORMAT ACSKEY $18.;
FORMAT COST_CENTER_CODE $6.;

IF _N_ = 1 THEN
DO;
	PUT
	"ACCOUNT,"
	"BORROWER_ID,"
	"BORROWER_FIRSTNAME,"
	"BORROWER_LASTNAME,"
	"BORROWER_ADDRESS_VALID,"
	"BORROWER_ADDRESS1,"
	"BORROWER_ADDRESS2,"
	"BORROWER_CITY,"
	"BORROWER_STATE,"
	"BORROWER_ZIP,"
	"BORROWER_COUNTRY,"
	"COMAKER_ID,"
	"COMAKER_FIRSTNAME,"
	"COMAKER_LASTNAME,"
	"COMAKER_ADDRESS_VALID,"
	"COMAKER_ADDRESS1,"
	"COMAKER_ADDRESS2,"
	"COMAKER_CITY,"
	"COMAKER_STATE,"
	"COMAKER_ZIP,"
	"COMAKER_COUNTRY,"
	"ENDORSER_ID,"
	"ENDORSER_FIRSTNAME,"
	"ENDORSER_LASTNAME,"
	"ENDORSER_ADDRESS_VALID,"
	"ENDORSER_ADDRESS1,"
	"ENDORSER_ADDRESS2,"
	"ENDORSER_CITY,"
	"ENDORSER_STATE,"
	"ENDORSER_ZIP,"
	"ENDORSER_COUNTRY,"
	@;
	DO I=1 TO &LOAN_CEILING; PUT 'LN_SEQ' I @; END;
	DO I=1 TO &LOAN_CEILING; PUT 'IC_LON_PGM' I @; END;
	DO I=1 TO &LOAN_CEILING; PUT 'LF_LON_CUR_OWN' I @; END;
	DO I=1 TO &LOAN_CEILING; PUT 'LA_CUR_PRI' I @; END;
	DO I=1 TO &LOAN_CEILING; PUT 'LA_NSI_ACR' I @; END;
	DO I=1 TO &LOAN_CEILING; PUT 'ACCRUED_INTEREST' I @; END;
	PUT
	'ACSKEY,'
	'STATE_IND,'
	'COST_CENTER_CODE'
	;
END;
DO;
	PUT DF_SPE_ACC_ID $ @;
	PUT BR_ID $ @;
	PUT BR_FIRSTNAME $ @;
	PUT BR_LASTNAME $ @;
	PUT BR_VLD_ADR $ @;
	PUT BR_ADR1 $ @;
	PUT BR_ADR2 $ @;
	PUT BR_CITY $ @;
	PUT BR_STATE $ @;
	PUT BR_ZIP $ @;
	PUT BR_COUNTRY $ @;
	PUT CO_ID $ @;
	PUT CO_FIRSTNAME $ @;
	PUT CO_LASTNAME $ @;
	PUT CO_VLD_ADR $ @;
	PUT CO_ADR1 $ @;
	PUT CO_ADR2 $ @;
	PUT CO_CITY $ @;
	PUT CO_STATE $ @;
	PUT CO_ZIP $ @;
	PUT CO_COUNTRY $ @;
	PUT EN_ID $ @;
	PUT EN_FIRSTNAME $ @;
	PUT EN_LASTNAME $ @;
	PUT EN_VLD_ADR $ @;
	PUT EN_ADR1 $ @;
	PUT EN_ADR2 $ @;
	PUT EN_CITY $ @;
	PUT EN_STATE $ @;
	PUT EN_ZIP $ @;
	PUT EN_COUNTRY $ @;
	PUT LN_SEQ1-LN_SEQ&LOAN_CEILING @;
	PUT IC_LON_PGM1-IC_LON_PGM&LOAN_CEILING $ @;
	PUT LF_LON_CUR_OWN1-LF_LON_CUR_OWN&LOAN_CEILING $ @;
	PUT LA_CUR_PRI1-LA_CUR_PRI&LOAN_CEILING @;
	PUT LA_NSI_ACR1-LA_NSI_ACR&LOAN_CEILING@;
	PUT ACCRUED_INTEREST1-ACCRUED_INTEREST&LOAN_CEILING @;
	PUT ACSKEY $ @;
	PUT BR_STATE $ @;
	PUT COST_CENTER_CODE $;
END;
RUN;
