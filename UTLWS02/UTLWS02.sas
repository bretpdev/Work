/*UTLWS02 - LOAN SERVICING CENTER DELINQUENCY REPORT*/

/*%LET RPTLIB = %SYSGET(reportdir);*/
/*%LET PROGREV = /sas/whse/progrevw;*/
%LET RPTLIB = T:\SAS;
%LET PROGREV = Q:\Support Services\Test Files\SAS\PROGREVW;

FILENAME REPORT2 "&RPTLIB/ULWS02.LWS02R2";
FILENAME REPORT3 "&RPTLIB/ULWS02.LWS02R3";
FILENAME REPORT4 "&RPTLIB/ULWS02.LWS02R4";

LIBNAME PROGREVW "&PROGREV";

DATA _NULL_;
	CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'BEGINNING'), MMDDYY10.));
RUN;

/*LIBNAME WORKLOCL REMOTE SERVER=QADBD004 SLIBREF=WORK;*test;*/
LIBNAME WORKLOCL REMOTE SERVER=DUSTER SLIBREF=WORK;*live;

RSUBMIT;

/*%LET DB = DLGSWQUT; *test;*/
%LET DB = DLGSUTWH; *live;
LIBNAME OLWHRM1 DB2 DATABASE=&DB OWNER=OLWHRM1;
LIBNAME SESSION DB2 DATABASE=&DB SCHEMA=SESSION CONNECTION=GLOBAL;

PROC SQL;
CONNECT TO DB2 (DATABASE=&DB);
CREATE TABLE DELQ AS
	SELECT 
		*
	FROM CONNECTION TO DB2 
	(
		SELECT
			LN10.LF_LON_CUR_OWN,
			LN10.BF_SSN,
			LN10.LN_SEQ,
			RTRIM(PD10.DM_PRS_LST)||', '||RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_MID) AS NAME,
			RTRIM(PD10.DM_PRS_1)||', '||PD10.DM_PRS_LST AS DIALER_NAME,
			COALESCE(LN10.LA_CUR_PRI,0) AS LA_CUR_PRI,
			COALESCE(DW01.WA_TOT_BRI_OTS,0) AS WA_TOT_BRI_OTS,
			DAYS(CURRENT DATE) - DAYS(LN16.LD_DLQ_OCC) AS DAYS,
			LN16.LN_DLQ_MAX,
			LN16.LC_DLQ_TYP,
			PD30.DC_ADR,
			PD30.DX_STR_ADR_1,
			PD30.DX_STR_ADR_2,
			PD30.DX_STR_ADR_3,
			PD30.DM_CT,
			PD30.DC_DOM_ST,
			SUBSTR(COALESCE(PD30.DF_ZIP_CDE, '00000'),1,5) AS DF_ZIP_CDE,
			PD30.DM_FGN_CNY,
			PD30.DM_FGN_ST,
			PD30.DI_VLD_ADR,
			PD42.DC_PHN,
			PD42.DI_PHN_VLD,
			PD42.DC_ALW_ADL_PHN,
			PD42.DN_DOM_PHN_ARA||PD42.DN_DOM_PHN_XCH||PD42.DN_DOM_PHN_LCL AS PHN,
			DW01.WC_DW_LON_STA,
			PD10.DF_SPE_ACC_ID,
			COALESCE(AmountDue.AMTDU,0) AS AMTDU,
			AmountDue.LA_LTE_FEE_OTS_PRT
		FROM 
			OLWHRM1.LN10_LON LN10
			INNER JOIN OLWHRM1.LN16_LON_DLQ_HST LN16
				ON LN10.BF_SSN = LN16.BF_SSN
				AND LN10.LN_SEQ = LN16.LN_SEQ
				AND LN16.LC_STA_LON16 = '1'
				AND DAYS(CURRENT DATE) - DAYS(LN16.LD_DLQ_MAX) <= 5
			INNER JOIN OLWHRM1.PD10_PRS_NME PD10
				ON LN10.BF_SSN = PD10.DF_PRS_ID
			INNER JOIN OLWHRM1.PD42_PRS_PHN PD42
				ON LN10.BF_SSN = PD42.DF_PRS_ID
				AND PD42.DI_PHN_VLD = 'Y'
				AND PD42.DC_NO_HME_PHN != 'J'
			INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
				AND DW01.WC_DW_LON_STA <> '23'
			LEFT JOIN OLWHRM1.PD30_PRS_ADR PD30
				ON LN10.BF_SSN = PD30.DF_PRS_ID
				AND PD30.DC_ADR = 'L'
			LEFT JOIN OLWHRM1.WQ20_TSK_QUE WQ20
				ON LN10.BF_SSN = WQ20.BF_SSN
				AND WQ20.WF_QUE IN ('2A', '2P', 'GP', '9R', 'SI', 'S4', 'PR', 'VR', 'VB', 'MF', '1P', 'SF', 'DU', 'AT', '87')
				AND WQ20.WC_STA_WQUE20 IN ('A', 'H', 'P', 'U', 'W')
			LEFT JOIN OLWHRM1.CT30_CALL_QUE CT30
				ON CT30.DF_PRS_ID_BR = LN10.BF_SSN
				AND CT30.IF_WRK_GRP IN ('ASBKP', 'ASCON', 'ASMOC')
				AND CT30.IF_WRK_GRP IN ('A', 'W')	
			LEFT JOIN /*GETS THE MOST RECENT INSTANCE OF AUTOPAY DOC ID*/
			(
				SELECT
					BF_SSN,
					MAX(LD_ATY_REQ_RCV) AS LD_ATY_REQ_RCV
				FROM
					OLWHRM1.AY10_BR_LON_ATY
				WHERE
					PF_REQ_ACT = 'DIDDA'
					AND (DAYS(CURRENT DATE) - DAYS(LD_ATY_REQ_RCV)) <= 14
				GROUP BY
					BF_SSN
			)DID 
				ON DID.BF_SSN = LN10.BF_SSN
			LEFT JOIN /*GETS THE MOST RECENT INSTANCE OF AUTOPAY APPROVAL*/
			(
				SELECT
					BF_SSN,
					MAX(LD_ATY_REQ_RCV) AS LD_ATY_REQ_RCV
				FROM
					OLWHRM1.AY10_BR_LON_ATY
				WHERE
					PF_REQ_ACT = 'PAUTO'
				GROUP BY
					BF_SSN
			)AUTO 
				ON AUTO.BF_SSN = LN10.BF_SSN
			LEFT JOIN /*Gets amount due from billing tables*/
			(
				SELECT 
					LN80.BF_SSN,
					SUM(COALESCE(LN80.LA_BIL_PAS_DU,0) + COALESCE(LN80.LA_BIL_DU_PRT,0) + COALESCE(LN80.LA_LTE_FEE_OTS_PRT,0)) AS AMTDU,
					SUM(COALESCE(LN80.LA_LTE_FEE_OTS_PRT,0)) AS LA_LTE_FEE_OTS_PRT
				FROM 
					OLWHRM1.LN80_LON_BIL_CRF LN80
					INNER JOIN 
					(
						SELECT 
							BF_SSN,
							MAX(LD_BIL_CRT) AS LD_BIL_CRT
						FROM 
							OLWHRM1.BL10_BR_BIL
						WHERE 
							LC_STA_BIL10 = 'A'
							AND LC_BIL_TYP = 'P'
						GROUP BY 
							BF_SSN
					) BL10
						ON LN80.BF_SSN = BL10.BF_SSN
				WHERE 
					LN80.LC_STA_LON80 = 'A'
					AND LN80.LD_BIL_CRT = BL10.LD_BIL_CRT
				GROUP BY 
					LN80.BF_SSN
			) AmountDue 
				ON AmountDue.BF_SSN = LN10.BF_SSN
			LEFT JOIN 
			(/*exclude future arc date*/
				SELECT DISTINCT
					BF_SSN
					,LD_ATY_REQ_RCV
					,PARSED_DAYS
					,COALESCE(MIN(PARSED_DAYS,14),14) AS COMMENT_DAYS /*takes lesser of 14 or parsed days*/
					,LD_ATY_REQ_RCV + COALESCE(MIN(PARSED_DAYS,14),14) DAYS AS CALC_DATE
					,CASE
						WHEN DAYS(LD_ATY_REQ_RCV + COALESCE(MIN(PARSED_DAYS,14),14) DAYS) > DAYS(CURRENT DATE)
						THEN 1
						ELSE 0
					END AS FUTURE_DATE
				FROM
				(/*parse out numeric days from any extraneous text*/
					SELECT 
						AY10.BF_SSN
						,AY10.LD_ATY_REQ_RCV
						,AY20.LX_ATY
						,CAST /*inner translate sets all numbers to blanks to identify extraneous text*/
						(/*outer translate strips out extraneous text found by inner translate*/
							CASE
								WHEN LENGTH(TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),'')) = 0 
								THEN NULL 
								WHEN LENGTH(TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),'')) > 5 
								THEN SUBSTR(TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),''),1,5)
								ELSE TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),'')
							END AS INT
						) AS PARSED_DAYS	
					FROM
						OLWHRM1.AY10_BR_LON_ATY AY10
						LEFT JOIN OLWHRM1.AY20_ATY_TXT AY20
							ON AY10.BF_SSN = AY20.BF_SSN
							AND AY10.LN_ATY_SEQ = AY20.LN_ATY_SEQ
					WHERE
						AY10.LC_STA_ACTY10 = 'A'
						AND AY10.PF_REQ_ACT = 'BRPTP' /*borrower promise to repay*/
				)
			) ARC_BRPTP 
				ON LN10.BF_SSN = ARC_BRPTP.BF_SSN
				AND ARC_BRPTP.FUTURE_DATE = 1 /*exclude future arc date*/
		WHERE
			ARC_BRPTP.BF_SSN IS NULL /*exclude future arc date*/
			AND WQ20.BF_SSN IS NULL /*exclude pending queue*/
			AND CT30.DF_PRS_ID_BR IS NULL /*exclude pending one link task*/
			AND LN10.LC_STA_LON10 = 'R'
			AND COALESCE(LN10.LA_CUR_PRI,0) + COALESCE(DW01.WA_TOT_BRI_OTS,0) > 0.00
			AND LN10.LI_CON_PAY_STP_PUR <> 'Y'
			AND 
			(
				DID.BF_SSN IS NULL 
				OR DID.LD_ATY_REQ_RCV > COALESCE(AUTO.LD_ATY_REQ_RCV,'1900-01-01')
			)
			AND TRIM(DW01.WX_OVR_DW_LON_STA) NOT IN
			(
				'PENDING ID THEFT',
				'REALLOCATED',
				'CNSLD-STOP PURSUIT'
			)

		FOR READ ONLY WITH UR
	);
/*end DELQ*/

/*	begin DELQ_EDR*/
PROC SQL;
CONNECT TO DB2 (DATABASE=&DB);
CREATE TABLE DELQ_EDR AS
	SELECT 
		*
	FROM CONNECTION TO DB2 
	(
		SELECT
			LN10.LF_LON_CUR_OWN,
			LN10.BF_SSN,
			LN10.LN_SEQ,
			RTRIM(PD10.DM_PRS_LST)||', '||RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_MID) AS NAME,
			RTRIM(PD10.DM_PRS_1)||', '||PD10.DM_PRS_LST AS DIALER_NAME,
			COALESCE(LN10.LA_CUR_PRI,0) AS LA_CUR_PRI,
			COALESCE(DW01.WA_TOT_BRI_OTS,0) AS WA_TOT_BRI_OTS,
			DAYS(CURRENT DATE) - DAYS(LN16.LD_DLQ_OCC) AS DAYS,
			LN16.LN_DLQ_MAX,
			LN16.LC_DLQ_TYP,
			PD30.DC_ADR,
			PD30.DX_STR_ADR_1,
			PD30.DX_STR_ADR_2,
			PD30.DX_STR_ADR_3,
			PD30.DM_CT,
			PD30.DC_DOM_ST,
			SUBSTR(COALESCE(PD30.DF_ZIP_CDE, '00000'),1,5) AS DF_ZIP_CDE,
			PD30.DM_FGN_CNY,
			PD30.DM_FGN_ST,
			PD30.DI_VLD_ADR,
			PD42.DC_PHN,
			PD42.DI_PHN_VLD,
			PD42.DC_ALW_ADL_PHN,
			PD42.DN_DOM_PHN_ARA||PD42.DN_DOM_PHN_XCH||PD42.DN_DOM_PHN_LCL AS PHN,
			DW01.WC_DW_LON_STA,
			PD10.DF_SPE_ACC_ID,
			COALESCE(AmountDue.AMTDU,0) AS AMTDU,
			AmountDue.LA_LTE_FEE_OTS_PRT,
			LN20.LC_EDS_TYP
		FROM 
			OLWHRM1.LN10_LON LN10
			INNER JOIN OLWHRM1.LN20_EDS LN20
				ON LN10.BF_SSN = LN20.BF_SSN
				AND LN10.LN_SEQ = LN20.LN_SEQ
				AND LN20.LC_STA_LON20 = 'A'								
			INNER JOIN OLWHRM1.LN16_LON_DLQ_HST LN16
				ON LN10.BF_SSN = LN16.BF_SSN
				AND LN10.LN_SEQ = LN16.LN_SEQ
				AND LN16.LC_STA_LON16 = '1'
				AND DAYS(CURRENT DATE) - DAYS(LN16.LD_DLQ_MAX) <= 5
			INNER JOIN OLWHRM1.PD10_PRS_NME PD10
				ON LN20.LF_EDS = PD10.DF_PRS_ID
			INNER JOIN OLWHRM1.PD42_PRS_PHN PD42
				ON LN20.LF_EDS = PD42.DF_PRS_ID
				AND PD42.DI_PHN_VLD = 'Y'
			INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
				AND DW01.WC_DW_LON_STA <> '23'
			LEFT JOIN OLWHRM1.PD30_PRS_ADR PD30
				ON LN20.LF_EDS = PD30.DF_PRS_ID
				AND PD30.DC_ADR = 'L'
			LEFT JOIN OLWHRM1.WQ20_TSK_QUE WQ20
				ON LN10.BF_SSN = WQ20.BF_SSN
				AND WQ20.WF_QUE IN ('2A', '2P', 'GP', '9R', 'SI', 'S4', 'PR', 'VR', 'VB', 'MF', '1P', 'SF', 'DU', 'AT', '87')
				AND WQ20.WC_STA_WQUE20 IN ('A', 'H', 'P', 'U', 'W')
			LEFT JOIN OLWHRM1.CT30_CALL_QUE CT30
				ON CT30.DF_PRS_ID_BR = LN10.BF_SSN
				AND CT30.IF_WRK_GRP IN ('ASBKP', 'ASCON', 'ASMOC')
				AND CT30.IF_WRK_GRP IN ('A', 'W')	
			LEFT JOIN /*GETS THE MOST RECENT INSTANCE OF AUTOPAY DOC ID*/
			(
				SELECT
					BF_SSN,
					MAX(LD_ATY_REQ_RCV) AS LD_ATY_REQ_RCV
				FROM
					OLWHRM1.AY10_BR_LON_ATY
				WHERE
					PF_REQ_ACT = 'DIDDA'
					AND (DAYS(CURRENT DATE) - DAYS(LD_ATY_REQ_RCV)) <= 14
				GROUP BY
					BF_SSN
			)DID 
				ON DID.BF_SSN = LN10.BF_SSN
			LEFT JOIN /*GETS THE MOST RECENT INSTANCE OF AUTOPAY APPROVAL*/
			(
				SELECT
					BF_SSN,
					MAX(LD_ATY_REQ_RCV) AS LD_ATY_REQ_RCV
				FROM
					OLWHRM1.AY10_BR_LON_ATY
				WHERE
					PF_REQ_ACT = 'PAUTO'
				GROUP BY
					BF_SSN
			)AUTO 
				ON AUTO.BF_SSN = LN10.BF_SSN
			LEFT JOIN /*Gets amount due from billing tables*/
			(
				SELECT 
					LN80.BF_SSN,
					SUM(COALESCE(LN80.LA_BIL_PAS_DU,0) + COALESCE(LN80.LA_BIL_DU_PRT,0) + COALESCE(LN80.LA_LTE_FEE_OTS_PRT,0)) AS AMTDU,
					SUM(COALESCE(LN80.LA_LTE_FEE_OTS_PRT,0)) AS LA_LTE_FEE_OTS_PRT
				FROM 
					OLWHRM1.LN80_LON_BIL_CRF LN80
					INNER JOIN 
					(
						SELECT 
							BF_SSN,
							MAX(LD_BIL_CRT) AS LD_BIL_CRT
						FROM 
							OLWHRM1.BL10_BR_BIL
						WHERE 
							LC_STA_BIL10 = 'A'
							AND LC_BIL_TYP = 'P'
						GROUP BY 
							BF_SSN
					) BL10
						ON LN80.BF_SSN = BL10.BF_SSN
				WHERE 
					LN80.LC_STA_LON80 = 'A'
					AND LN80.LD_BIL_CRT = BL10.LD_BIL_CRT
				GROUP BY 
					LN80.BF_SSN
			) AmountDue 
				ON AmountDue.BF_SSN = LN10.BF_SSN
			LEFT JOIN 
			(/*exclude future arc date*/
				SELECT DISTINCT
					BF_SSN
					,LD_ATY_REQ_RCV
					,PARSED_DAYS
					,COALESCE(MIN(PARSED_DAYS,14),14) AS COMMENT_DAYS /*takes lesser of 14 or parsed days*/
					,LD_ATY_REQ_RCV + COALESCE(MIN(PARSED_DAYS,14),14) DAYS AS CALC_DATE
					,CASE
						WHEN DAYS(LD_ATY_REQ_RCV + COALESCE(MIN(PARSED_DAYS,14),14) DAYS) > DAYS(CURRENT DATE)
						THEN 1
						ELSE 0
					END AS FUTURE_DATE
				FROM
				(/*parse out numeric days from any extraneous text*/
					SELECT 
						AY10.BF_SSN
						,AY10.LD_ATY_REQ_RCV
						,AY20.LX_ATY
						,CAST /*inner translate sets all numbers to blanks to identify extraneous text*/
						(/*outer translate strips out extraneous text found by inner translate*/
							CASE
								WHEN LENGTH(TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),'')) = 0 
								THEN NULL 
								WHEN LENGTH(TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),'')) > 5 
								THEN SUBSTR(TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),''),1,5)
								ELSE TRANSLATE(AY20.LX_ATY,'',TRANSLATE(AY20.LX_ATY,'','1234567890',''),'')
							END AS INT
						) AS PARSED_DAYS	
					FROM
						OLWHRM1.AY10_BR_LON_ATY AY10
						LEFT JOIN OLWHRM1.AY20_ATY_TXT AY20
							ON AY10.BF_SSN = AY20.BF_SSN
							AND AY10.LN_ATY_SEQ = AY20.LN_ATY_SEQ
					WHERE
						AY10.LC_STA_ACTY10 = 'A'
						AND AY10.PF_REQ_ACT = 'BRPTP' /*borrower promise to repay*/
				)
			) ARC_BRPTP 
				ON LN10.BF_SSN = ARC_BRPTP.BF_SSN
				AND ARC_BRPTP.FUTURE_DATE = 1 /*exclude future arc date*/
		WHERE
			ARC_BRPTP.BF_SSN IS NULL /*exclude future arc date*/
			AND WQ20.BF_SSN IS NULL /*exclude pending queue*/
			AND CT30.DF_PRS_ID_BR IS NULL /*exclude pending one link task*/
			AND LN10.LC_STA_LON10 = 'R'
			AND COALESCE(LN10.LA_CUR_PRI,0) + COALESCE(DW01.WA_TOT_BRI_OTS,0) > 0.00
			AND LN10.LI_CON_PAY_STP_PUR <> 'Y'
			AND 
			(
				DID.BF_SSN IS NULL 
				OR DID.LD_ATY_REQ_RCV > COALESCE(AUTO.LD_ATY_REQ_RCV,'1900-01-01')
			)
			AND TRIM(DW01.WX_OVR_DW_LON_STA) NOT IN
			(
				'PENDING ID THEFT',
				'REALLOCATED',
				'CNSLD-STOP PURSUIT'
			)

		FOR READ ONLY WITH UR
	);
/*end DELQ_EDR*/


DISCONNECT FROM DB2;
QUIT;


/*begin DELQ phone ranking*/
PROC SQL;
CONNECT TO DB2 (DATABASE=&DB CONNECTION=GLOBAL);

/*Create a temp table with the data from DELQ*/
EXECUTE (DECLARE GLOBAL TEMPORARY TABLE SESSION.DELQ_BASE
			(
				LF_LON_CUR_OWN CHAR(8),
				BF_SSN CHAR(9),
				LN_SEQ SMALLINT,
				NAME VARCHAR(52), /*will need trimmed*/
				DIALER_NAME VARCHAR(38),
				LA_CUR_PRI DECIMAL(14,2),
				WA_TOT_BRI_OTS DECIMAL(14,2),
				DAYS INT,
				LN_DLQ_MAX INT,
				LC_DLQ_TYP CHAR(1),
				DC_ADR CHAR(1),
				DX_STR_ADR_1 CHAR(30),
				DX_STR_ADR_2 CHAR(30),
				DX_STR_ADR_3 CHAR(30),
				DM_CT CHAR(20),
				DC_DOM_ST CHAR(2),
				DF_ZIP_CDE CHAR(5),
				DM_FGN_CNY CHAR(25),
				DM_FGN_ST CHAR(15),
				DI_VLD_ADR CHAR(1),
				DC_PHN CHAR(1),
				DI_PHN_VLD CHAR(1),
				DC_ALW_ADL_PHN CHAR(1),
				PHN CHAR(10),
				WC_DW_LON_STA CHAR(2),
				DF_SPE_ACC_ID CHAR(10),
				AMTDU DECIMAL(14,2),
				LA_LTE_FEE_OTS_PRT DECIMAL(14,2)
			)
			ON COMMIT PRESERVE ROWS
		) BY DB2;

INSERT INTO SESSION.DELQ_BASE
	SELECT
		*
	FROM
		DELQ;

/*Create a temp table with the data from PhoneTypeRank and PhoneConsentRank*/
EXECUTE (DECLARE GLOBAL TEMPORARY TABLE SESSION.PhoneTypeRank
			(
				DC_PHN CHAR(1),
				TypeRank INT
			)
			ON COMMIT PRESERVE ROWS
		) BY DB2;

INSERT INTO SESSION.PhoneTypeRank (DC_PHN, TypeRank)
SELECT DISTINCT 'H', 1 FROM OLWHRM1.PD10_PRS_NME UNION ALL /*table reference was required to get the insert to work*/
SELECT DISTINCT 'A', 2 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'W', 3 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'M', 4 FROM OLWHRM1.PD10_PRS_NME;

EXECUTE (DECLARE GLOBAL TEMPORARY TABLE SESSION.PhoneConsentRank
			(
				Consent CHAR(1),
				ConsentRank INT
			)
			ON COMMIT PRESERVE ROWS
		) BY DB2;

INSERT INTO SESSION.PhoneConsentRank (Consent, ConsentRank)
SELECT DISTINCT 'N', 1 FROM OLWHRM1.PD10_PRS_NME UNION ALL /*table reference was required to get the insert to work*/
SELECT DISTINCT 'P', 2 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'X', 3 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'L', 4 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'Q', 5 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'U', 6 FROM OLWHRM1.PD10_PRS_NME;

CREATE TABLE PHN AS /*get phone numbers for ranking and rank them*/
	SELECT
		*
	FROM
		CONNECTION TO DB2
		(
			SELECT DISTINCT
				D.*,
				DENSE_RANK() OVER (PARTITION BY D.BF_SSN ORDER BY PCR.ConsentRank, PTR.TypeRank) AS OverallRank
			FROM
				SESSION.DELQ_BASE D
				INNER JOIN SESSION.PhoneTypeRank PTR
					ON PTR.DC_PHN = D.DC_PHN
				INNER JOIN SESSION.PhoneConsentRank PCR
					ON PCR.Consent = D.DC_ALW_ADL_PHN

		);

DISCONNECT FROM DB2;
QUIT;
/*end DELQ phone ranking*/


/*begin DELQ_EDR phone ranking*/
PROC SQL;
CONNECT TO DB2 (DATABASE=&DB CONNECTION=GLOBAL);

/*Create a temp table with the data from DELQ_EDR*/
EXECUTE (DECLARE GLOBAL TEMPORARY TABLE SESSION.DELQ_EDR_BASE
			(
				LF_LON_CUR_OWN CHAR(8),
				BF_SSN CHAR(9),
				LN_SEQ SMALLINT,
				NAME VARCHAR(52), /*will need trimmed*/
				DIALER_NAME VARCHAR(38),
				LA_CUR_PRI DECIMAL(14,2),
				WA_TOT_BRI_OTS DECIMAL(14,2),
				DAYS INT,
				LN_DLQ_MAX INT,
				LC_DLQ_TYP CHAR(1),
				DC_ADR CHAR(1),
				DX_STR_ADR_1 CHAR(30),
				DX_STR_ADR_2 CHAR(30),
				DX_STR_ADR_3 CHAR(30),
				DM_CT CHAR(20),
				DC_DOM_ST CHAR(2),
				DF_ZIP_CDE CHAR(5),
				DM_FGN_CNY CHAR(25),
				DM_FGN_ST CHAR(15),
				DI_VLD_ADR CHAR(1),
				DC_PHN CHAR(1),
				DI_PHN_VLD CHAR(1),
				DC_ALW_ADL_PHN CHAR(1),
				PHN CHAR(10),
				WC_DW_LON_STA CHAR(2),
				DF_SPE_ACC_ID CHAR(10),
				AMTDU DECIMAL(14,2),
				LA_LTE_FEE_OTS_PRT DECIMAL(14,2),
				LC_EDS_TYP CHAR(1)
			)
			ON COMMIT PRESERVE ROWS
		) BY DB2;

INSERT INTO SESSION.DELQ_EDR_BASE
	SELECT
		*
	FROM
		DELQ_EDR;

/*Create a temp table with the data from PhoneTypeRank and PhoneConsentRank*/
EXECUTE (DECLARE GLOBAL TEMPORARY TABLE SESSION.PhoneTypeRankEDR
			(
				DC_PHN CHAR(1),
				TypeRank INT
			)
			ON COMMIT PRESERVE ROWS
		) BY DB2;

INSERT INTO SESSION.PhoneTypeRankEDR (DC_PHN, TypeRank)
SELECT DISTINCT 'H', 1 FROM OLWHRM1.PD10_PRS_NME UNION ALL /*table reference was required to get the insert to work*/
SELECT DISTINCT 'A', 2 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'W', 3 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'M', 4 FROM OLWHRM1.PD10_PRS_NME;

EXECUTE (DECLARE GLOBAL TEMPORARY TABLE SESSION.PhoneConsentRankEDR
			(
				Consent CHAR(1),
				ConsentRank INT
			)
			ON COMMIT PRESERVE ROWS
		) BY DB2;

INSERT INTO SESSION.PhoneConsentRankEDR (Consent, ConsentRank)
SELECT DISTINCT 'N', 1 FROM OLWHRM1.PD10_PRS_NME UNION ALL /*table reference was required to get the insert to work*/
SELECT DISTINCT 'P', 2 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'X', 3 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'L', 4 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'Q', 5 FROM OLWHRM1.PD10_PRS_NME UNION ALL
SELECT DISTINCT 'U', 6 FROM OLWHRM1.PD10_PRS_NME;

CREATE TABLE PHN_EDR AS /*get phone numbers for ranking and rank them*/
	SELECT
		*
	FROM
		CONNECTION TO DB2
		(
			SELECT DISTINCT
				D.*,
				DENSE_RANK() OVER (PARTITION BY D.BF_SSN ORDER BY PCR.ConsentRank, PTR.TypeRank) AS OverallRank
			FROM
				SESSION.DELQ_EDR_BASE D
				INNER JOIN SESSION.PhoneTypeRankEDR PTR
					ON PTR.DC_PHN = D.DC_PHN
				INNER JOIN SESSION.PhoneConsentRankEDR PCR
					ON PCR.Consent = D.DC_ALW_ADL_PHN

		);

DISCONNECT FROM DB2;
QUIT;
/*end DELQ_EDR phone ranking*/


/*begin PHN_FINAL*/
PROC SQL;
CREATE TABLE PHN_FINAL AS
	SELECT
		PHN1.BF_SSN,
		TRIM(PHN1.DIALER_NAME) AS DIALER_NAME,
		PHN1.PHN AS PHN_H,
		PHN2.PHN AS PHN_A,
		PHN3.PHN AS PHN_W,
		CASE
			WHEN PHN1.DC_ALW_ADL_PHN IN ('L','Q','P') AND PHN1.PHN IS NOT NULL THEN 'Y'
			WHEN PHN1.DC_ALW_ADL_PHN IN ('N','U','X') AND PHN1.PHN IS NOT NULL THEN 'N'
			ELSE ''
		END AS DC_ALW_ADL_PHN_H,		
		CASE
			WHEN PHN2.DC_ALW_ADL_PHN IN ('L','Q','P') AND PHN2.PHN IS NOT NULL THEN 'Y'
			WHEN PHN2.DC_ALW_ADL_PHN IN ('N','U','X') AND PHN2.PHN IS NOT NULL THEN 'N'
			ELSE ''
		END AS DC_ALW_ADL_PHN_A,
		CASE
			WHEN PHN3.DC_ALW_ADL_PHN IN ('L','Q','P') AND PHN3.PHN IS NOT NULL THEN 'Y'
			WHEN PHN3.DC_ALW_ADL_PHN IN ('N','U','X') AND PHN3.PHN IS NOT NULL THEN 'N'
			ELSE ''
		END AS DC_ALW_ADL_PHN_W,
		PHN1.AMTDU * 100 AS AMTDU, /*NEEDS TO BE REPORTED IN CENTS--DIALER WILL ADD THE DECIMAL*/
		PHN1.LN_DLQ_MAX + 1 AS LN_DLQ_MAX,
		(PHN1.LA_CUR_PRI + PHN1.WA_TOT_BRI_OTS + PHN1.LA_LTE_FEE_OTS_PRT) * 100 AS LA_CUR_PRI, /*NEEDS TO BE REPORTEDIN CENTS--DIALER WILL ADD THE DECIMAL*/
		CASE 
			WHEN PHN1.LF_LON_CUR_OWN = '834529' THEN 'Y'
			ELSE ''
		END AS LF_LON_CUR_OWN,	
		PHN1.DX_STR_ADR_1,
		PHN1.DX_STR_ADR_2,
		PHN1.DX_STR_ADR_3,
		PHN1.DM_CT,
		PHN1.DC_DOM_ST,
		PUT(PHN1.DF_ZIP_CDE, $5.) AS DF_ZIP_CDE,
		PHN1.DM_FGN_CNY,
		PHN1.DM_FGN_ST,
		PHN1.DI_VLD_ADR
	FROM
		PHN PHN1
		LEFT JOIN PHN PHN2
			ON PHN1.BF_SSN = PHN2.BF_SSN
			AND PHN1.LN_SEQ = PHN2.LN_SEQ
			AND PHN2.OverallRank = 2
		LEFT JOIN PHN PHN3
			ON PHN1.BF_SSN = PHN3.BF_SSN
			AND PHN1.LN_SEQ = PHN3.LN_SEQ
			AND PHN3.OverallRank = 3
	WHERE
		PHN1.OverallRank = 1
		AND PHN1.WC_DW_LON_STA IN ('03','08','14','04','05')
		AND PHN1.DAYS > 10
;
QUIT;
/*end PHN_FINAL*/


/*begin PHN_FINAL_EDR*/
PROC SQL;
CREATE TABLE PHN_FINAL_EDR AS
	SELECT
		PHN1.BF_SSN,
		TRIM(PHN1.DIALER_NAME) AS DIALER_NAME,
		PHN1.PHN AS PHN_H,
		PHN2.PHN AS PHN_A,
		PHN3.PHN AS PHN_W,
		CASE
			WHEN PHN1.DC_ALW_ADL_PHN IN ('L','Q','P') AND PHN1.PHN IS NOT NULL THEN 'Y'
			WHEN PHN1.DC_ALW_ADL_PHN IN ('N','U','X') AND PHN1.PHN IS NOT NULL THEN 'N'
			ELSE ''
		END AS DC_ALW_ADL_PHN_H,		
		CASE
			WHEN PHN2.DC_ALW_ADL_PHN IN ('L','Q','P') AND PHN2.PHN IS NOT NULL THEN 'Y'
			WHEN PHN2.DC_ALW_ADL_PHN IN ('N','U','X') AND PHN2.PHN IS NOT NULL THEN 'N'
			ELSE ''
		END AS DC_ALW_ADL_PHN_A,
		CASE
			WHEN PHN3.DC_ALW_ADL_PHN IN ('L','Q','P') AND PHN3.PHN IS NOT NULL THEN 'Y'
			WHEN PHN3.DC_ALW_ADL_PHN IN ('N','U','X') AND PHN3.PHN IS NOT NULL THEN 'N'
			ELSE ''
		END AS DC_ALW_ADL_PHN_W,
		PHN1.AMTDU * 100 AS AMTDU, /*NEEDS TO BE REPORTED IN CENTS--DIALER WILL ADD THE DECIMAL*/
		PHN1.LN_DLQ_MAX + 1 AS LN_DLQ_MAX,
		(PHN1.LA_CUR_PRI + PHN1.WA_TOT_BRI_OTS + PHN1.LA_LTE_FEE_OTS_PRT) * 100 AS LA_CUR_PRI, /*NEEDS TO BE REPORTEDIN CENTS--DIALER WILL ADD THE DECIMAL*/
		CASE 
			WHEN PHN1.LF_LON_CUR_OWN = '834529' THEN 'Y'
			ELSE ''
		END AS LF_LON_CUR_OWN,	
		PHN1.DX_STR_ADR_1,
		PHN1.DX_STR_ADR_2,
		PHN1.DX_STR_ADR_3,
		PHN1.DM_CT,
		PHN1.DC_DOM_ST,
		PUT(PHN1.DF_ZIP_CDE, $5.) AS DF_ZIP_CDE,
		PHN1.DM_FGN_CNY,
		PHN1.DM_FGN_ST,
		PHN1.DI_VLD_ADR,
		PHN1.DF_SPE_ACC_ID,
		PHN1.LC_EDS_TYP
	FROM
		PHN_EDR PHN1
		LEFT JOIN PHN_EDR PHN2
			ON PHN1.BF_SSN = PHN2.BF_SSN
			AND PHN1.LN_SEQ = PHN2.LN_SEQ
			AND PHN2.OverallRank = 2
		LEFT JOIN PHN_EDR PHN3
			ON PHN1.BF_SSN = PHN3.BF_SSN
			AND PHN1.LN_SEQ = PHN3.LN_SEQ
			AND PHN3.OverallRank = 3
	WHERE
		PHN1.OverallRank = 1
		AND PHN1.WC_DW_LON_STA IN ('03','08','14','04','05')
		AND PHN1.DAYS > 10
;
QUIT;
/*end PHN_FINAL_EDR*/

/*create dataset with borrower account numbers so they can be added to the endorser dataset later so as to not tamper with and potentially break existing code*/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB CONNECTION=GLOBAL);

	CREATE TABLE BRW_ACNT_NOS AS
		SELECT
			PNH.BF_SSN,
			PD10.DF_SPE_ACC_ID
	FROM
		PHN_FINAL PNH
		INNER JOIN
			(
				SELECT *
				FROM
					CONNECTION TO DB2
						(
							SELECT
								DF_PRS_ID,
								DF_SPE_ACC_ID
							FROM
								OLWHRM1.PD10_PRS_NME
						)
			) PD10
				ON PNH.BF_SSN = PD10.DF_PRS_ID
	;


	CREATE TABLE EDR_BRW_ACNT_NOS AS
		SELECT
			PNH.BF_SSN,
			PD10.DF_SPE_ACC_ID
	FROM
		PHN_FINAL_EDR PNH
		INNER JOIN
			(
				SELECT *
				FROM
					CONNECTION TO DB2
						(
							SELECT
								DF_PRS_ID,
								DF_SPE_ACC_ID
							FROM
								OLWHRM1.PD10_PRS_NME
						)
			) PD10
				ON PNH.BF_SSN = PD10.DF_PRS_ID
	;

	DISCONNECT FROM DB2;
QUIT;


ENDRSUBMIT;

DATA DELQ; SET WORKLOCL.DELQ; RUN;
DATA PHN_FINAL; SET WORKLOCL.PHN_FINAL; RUN;
DATA DELQ_EDR; SET WORKLOCL.DELQ_EDR; RUN;
DATA PHN_FINAL_EDR; SET WORKLOCL.PHN_FINAL_EDR; RUN;
DATA BRW_ACNT_NOS; SET WORKLOCL.BRW_ACNT_NOS; RUN;
DATA EDR_BRW_ACNT_NOS; SET WORKLOCL.EDR_BRW_ACNT_NOS; RUN;

/***********************************************************
* REPORT 4 PROCESSING
************************************************************/

/*begin borrower R4 file processing*/
PROC SQL;
CREATE TABLE _PHN_LNDR AS
	SELECT
		PHN.BF_SSN,
		PHN.DIALER_NAME,
		PHN.PHN_H,
		PHN.PHN_A,
		PHN.PHN_W,
		PHN.DC_ALW_ADL_PHN_H,
		PHN.DC_ALW_ADL_PHN_A,
		PHN.DC_ALW_ADL_PHN_W,
		PHN.AMTDU,
		MAX(PHN.LN_DLQ_MAX) AS LN_DLQ_MAX,/*gets max dq in case of split delinquencies*/
		SUM(PHN.LA_CUR_PRI) AS LA_CUR_PRI,/*rolls up all amounts*/
		PHN.LF_LON_CUR_OWN,
		PHN.DX_STR_ADR_1,
		PHN.DX_STR_ADR_2,
		PHN.DX_STR_ADR_3,
		PHN.DM_CT,
		PHN.DC_DOM_ST,
		PHN.DF_ZIP_CDE,
		PHN.DM_FGN_CNY,
		PHN.DM_FGN_ST,
		PHN.DI_VLD_ADR,
		LNDRS.LENDER_GROUP_ID
	FROM
		PHN_FINAL PHN
		LEFT JOIN PROGREVW.LENDER_GROUP_LENDERS LNDRS
			ON PHN.LF_LON_CUR_OWN = LNDRS.LENDER_ID
			AND LNDRS.LENDER_GROUP_ID IN(2,3,4,6) /* 2-Align 3-UHEA 4-TILP 6-BANA*/
	GROUP BY
		PHN.BF_SSN,
		PHN.DIALER_NAME,
		PHN.PHN_H,
		PHN.PHN_A,
		PHN.PHN_W,
		PHN.DC_ALW_ADL_PHN_H,
		PHN.DC_ALW_ADL_PHN_A,
		PHN.DC_ALW_ADL_PHN_W,
		PHN.AMTDU,
		PHN.LF_LON_CUR_OWN,
		PHN.DX_STR_ADR_1,
		PHN.DX_STR_ADR_2,
		PHN.DX_STR_ADR_3,
		PHN.DM_CT,
		PHN.DC_DOM_ST,
		PHN.DF_ZIP_CDE,
		PHN.DM_FGN_CNY,
		PHN.DM_FGN_ST,
		PHN.DI_VLD_ADR,
		LNDRS.LENDER_GROUP_ID
;
QUIT;

PROC SORT DATA=_PHN_LNDR; 
	BY BF_SSN LF_LON_CUR_OWN; 
RUN;
DATA PHN_LNDR;
	SET _PHN_LNDR;
	BY BF_SSN;
	IF LAST.BF_SSN;
RUN;

PROC SQL;
	CREATE TABLE R4 AS
		SELECT DISTINCT
			AN.DF_SPE_ACC_ID,
			'' AS REGION,
			'' AS QUEUE,
			'' AS DIALER_NAME,
			'' AS DTC,
			'' AS  LD_ATY_RSP_ATT,
			LN_DLQ_MAX,
			'' AS LD_ATY_RSP_CTC,
			'' AS REL,
			'' AS REL_CODE,
			AN.DF_SPE_ACC_ID AS SSN,
			'' AS REL2,
			'' AS REL_CODE2,
			'' AS NAME,
			DC_ALW_ADL_PHN_H,
			PHN_H,
			DC_ALW_ADL_PHN_A,
			PHN_A,
			DC_ALW_ADL_PHN_W,
			PHN_W,
			AN.DF_SPE_ACC_ID AS BRW_ACNT_NO,
			'' AS NAME2,
			'' AS DX_STR_ADR_1,
			'' AS DX_STR_ADR_2,
			'' AS DX_STR_ADR_3,
			'' AS DM_CT,
			PHN.DC_DOM_ST,
			PHN.DF_ZIP_CDE,
			'' AS DM_FGN_CNY,
			'' AS DM_FGN_ST,
			'' AS DI_VLD_ADR,
			'' AS COUNT,
			LF_LON_CUR_OWN,
			AMTDU,
			LA_CUR_PRI,
			'' AS MX_EFFDT,
			'' AS CUR_SCL_CODE,
			'' AS DD_BRT,
			'' AS BI_ATY_3_PTY,
			'' AS LD_REQ_RSP_ATY_PRF,
			'' AS NAME_SORT,
			'' AS FILLER,
			LENDER_GROUP_ID,
			'' AS FILLER2
		FROM 
			_PHN_LNDR PHN
			INNER JOIN BRW_ACNT_NOS AN
				ON PHN.BF_SSN = AN.BF_SSN		
	;
QUIT;
/*end borrower R4 file processing*/


/*begin endorser/coborrower R4 file processing*/
PROC SQL;
CREATE TABLE _PHN_LNDR_EDR AS
	SELECT
		PHN.DF_SPE_ACC_ID,
		PHN.BF_SSN,
		PHN.DIALER_NAME,
		PHN.PHN_H,
		PHN.PHN_A,
		PHN.PHN_W,
		PHN.DC_ALW_ADL_PHN_H,
		PHN.DC_ALW_ADL_PHN_A,
		PHN.DC_ALW_ADL_PHN_W,
		PHN.AMTDU,
		MAX(PHN.LN_DLQ_MAX) AS LN_DLQ_MAX,/*gets max dq in case of split delinquencies*/
		SUM(PHN.LA_CUR_PRI) AS LA_CUR_PRI,/*rolls up all amounts*/
		PHN.LF_LON_CUR_OWN,
		PHN.DX_STR_ADR_1,
		PHN.DX_STR_ADR_2,
		PHN.DX_STR_ADR_3,
		PHN.DM_CT,
		PHN.DC_DOM_ST,
		PHN.DF_ZIP_CDE,
		PHN.DM_FGN_CNY,
		PHN.DM_FGN_ST,
		PHN.DI_VLD_ADR,
		LNDRS.LENDER_GROUP_ID,
		LC_EDS_TYP
	FROM
		PHN_FINAL_EDR PHN
		LEFT JOIN PROGREVW.LENDER_GROUP_LENDERS LNDRS
			ON PHN.LF_LON_CUR_OWN = LNDRS.LENDER_ID
			AND LNDRS.LENDER_GROUP_ID IN(2,3,4,6) /* 2-Align 3-UHEA 4-TILP 6-BANA*/
	GROUP BY
		PHN.DF_SPE_ACC_ID,
		PHN.BF_SSN,
		PHN.DIALER_NAME,
		PHN.PHN_H,
		PHN.PHN_A,
		PHN.PHN_W,
		PHN.DC_ALW_ADL_PHN_H,
		PHN.DC_ALW_ADL_PHN_A,
		PHN.DC_ALW_ADL_PHN_W,
		PHN.AMTDU,
		PHN.LF_LON_CUR_OWN,
		PHN.DX_STR_ADR_1,
		PHN.DX_STR_ADR_2,
		PHN.DX_STR_ADR_3,
		PHN.DM_CT,
		PHN.DC_DOM_ST,
		PHN.DF_ZIP_CDE,
		PHN.DM_FGN_CNY,
		PHN.DM_FGN_ST,
		PHN.DI_VLD_ADR,
		LNDRS.LENDER_GROUP_ID,
		LC_EDS_TYP
;
QUIT;

PROC SORT DATA=_PHN_LNDR_EDR; 
	BY DF_SPE_ACC_ID LF_LON_CUR_OWN; 
RUN;
DATA PHN_LNDR_EDR;
	SET _PHN_LNDR_EDR;
	BY DF_SPE_ACC_ID;
	IF LAST.DF_SPE_ACC_ID;
RUN;

PROC SQL;
	CREATE TABLE R4_EDR AS
		SELECT DISTINCT
			PHN.DF_SPE_ACC_ID,
			'' AS REGION,
			'' AS QUEUE,
			'' AS DIALER_NAME,
			'' AS DTC,
			'' AS  LD_ATY_RSP_ATT,
			LN_DLQ_MAX,
			'' AS LD_ATY_RSP_CTC,
			CASE
				WHEN LC_EDS_TYP = 'M' THEN 'COBRWR'
				WHEN LC_EDS_TYP = 'S' THEN 'ENDORSER'
				ELSE ''
			END AS REL,
			'' AS REL_CODE,
			AN.DF_SPE_ACC_ID AS BRW_ACNT_NO,
			'' AS REL2,
			'' AS REL_CODE2,
			'' AS NAME,
			DC_ALW_ADL_PHN_H,
			PHN_H,
			DC_ALW_ADL_PHN_A,
			PHN_A,
			DC_ALW_ADL_PHN_W,
			PHN_W,
			AN.DF_SPE_ACC_ID AS SSN,
			'' AS NAME2,
			'' AS DX_STR_ADR_1,
			'' AS DX_STR_ADR_2,
			'' AS DX_STR_ADR_3,
			'' AS DM_CT,
			PHN.DC_DOM_ST,
			PHN.DF_ZIP_CDE,
			'' AS DM_FGN_CNY,
			'' AS DM_FGN_ST,
			'' AS DI_VLD_ADR,
			'' AS COUNT,
			LF_LON_CUR_OWN,
			AMTDU,
			LA_CUR_PRI,
			'' AS MX_EFFDT,
			'' AS CUR_SCL_CODE,
			'' AS DD_BRT,
			'' AS BI_ATY_3_PTY,
			'' AS LD_REQ_RSP_ATY_PRF,
			'' AS NAME_SORT,
			'' AS FILLER,
			LENDER_GROUP_ID,
			'' AS FILLER2
		FROM 
			_PHN_LNDR_EDR PHN
			INNER JOIN EDR_BRW_ACNT_NOS AN
				ON PHN.BF_SSN = AN.BF_SSN		
	;
QUIT;
/*end endorser/coborrower R4 file processing*/

DATA R4_FINAL;
	SET R4_EDR R4;

	/*removes foreign ph#'s since only domestic ph#'s populate in base pop*/
	IF  PHN_H = '' 
		AND PHN_A = '' 
		AND PHN_W = ''	
	THEN DELETE;
RUN;





/***********************************************************
* REPORT 2 PROCESSING
************************************************************
* STATUS TRANSLATION AND DELINQUENCY CATEGORY
************************************************************/
DATA DELQ;
	SET DELQ;
	LENGTH DELCAT $ 14.;
	IF DAYS < 31 AND LC_DLQ_TYP = 'I' 
		THEN DELETE;
	IF DAYS >= 1 AND DAYS <= 14 
		THEN 
			DO;
				DELCAT = '1 - 14 DAYS';
				DC = 1;
			END;
	ELSE IF DAYS >= 15 AND DAYS <= 30 
		THEN 
			DO;
				DELCAT = '15 - 30 DAYS';
				DC = 15;
			END;
	ELSE IF DAYS >= 31 AND DAYS <= 60 
		THEN 
			DO;
				DELCAT = '31 - 60 DAYS';
				DC = 31;
			END;
	ELSE IF DAYS >= 61 AND DAYS <= 90 
		THEN 
			DO;
				DELCAT = '61 - 90 DAYS';
				DC = 61;
			END;
	ELSE IF DAYS >= 91 AND DAYS <= 120 
		THEN 
			DO;
				DELCAT = '91 - 120 DAYS';
				DC = 91;
			END;
	ELSE IF DAYS >= 121 AND DAYS <= 150 
		THEN 
			DO;
				DELCAT = '121 - 150 DAYS';
				DC=121;
			END;
	ELSE IF DAYS >= 151 AND DAYS <= 180 
		THEN 
			DO;
				DELCAT = '151 - 180 DAYS';
				DC = 151;
			END;
	ELSE IF DAYS >= 181 AND DAYS <= 210 
		THEN 
			DO;
				DELCAT = '181 - 210 DAYS';
				DC = 181;
			END;
	ELSE IF DAYS >= 211 AND DAYS <= 240 
		THEN 
			DO;
				DELCAT = '211 - 240 DAYS';
				DC = 211;
			END;
	ELSE IF DAYS >= 241 
		THEN 
			DO;
				DELCAT = '241+ DAYS';
				DC = 241;
			END;
RUN;
	
PROC SORT DATA=DELQ;
	BY LF_LON_CUR_OWN DC BF_SSN LN_SEQ;
RUN;

DATA DELQ;
	SET DELQ;
	BY LF_LON_CUR_OWN DC BF_SSN;
	IF FIRST.BF_SSN THEN BWR_CT = 1;
	ELSE BWR_CT = 0;
RUN;

PROC SQL;
	CREATE TABLE DELQ_TXT AS
	SELECT 
		DF_SPE_ACC_ID,
		SUM(LA_CUR_PRI) AS LA_CUR_PRI,
		SUM(WA_TOT_BRI_OTS) AS WA_TOT_BRI_OTS,
		MAX(DAYS) AS DAYS,
		LC_DLQ_TYP,
		DI_VLD_ADR,
		DI_PHN_VLD
	FROM 
		DELQ
	GROUP BY 
		DF_SPE_ACC_ID,
		LC_DLQ_TYP,
		DI_VLD_ADR,
		DI_PHN_VLD
;
QUIT;
/***********************************************************
* REPORT 3 PROCESSING
************************************************************/
PROC SQL;
	CREATE TABLE BRWS AS
	SELECT	
		COUNT(DISTINCT BF_SSN) AS BRWS,
		COUNT(BF_SSN) AS LNS,
		SUM(LA_CUR_PRI) AS PRINC,
		SUM(WA_TOT_BRI_OTS) AS INT,
		DC,
		DELCAT
	FROM 
		DELQ
	GROUP BY 
		DC, 
		DELCAT
	ORDER BY 
		DC
;
QUIT;

PROC SQL;
	CREATE TABLE SKIP AS
	SELECT	
		COUNT(DISTINCT BF_SSN) AS SKIP,
		DC,
		DELCAT
	FROM 
		DELQ
	WHERE	
		DI_VLD_ADR = 'N' 
		OR DI_PHN_VLD = 'N'
	GROUP BY 
		DC, 
		DELCAT
	ORDER BY 
		DC
;
QUIT;

PROC SQL NOPRINT;
	SELECT	
		PUT(SUM(LA_CUR_PRI),18.2) INTO: TTL
	FROM
		DELQ;
QUIT;

DATA DELQ_SUM;
	MERGE BRWS SKIP;
	BY DC DELCAT;
	PERC = PRINC/&TTL;
RUN;

PROC SORT DATA=DELQ_SUM;
	BY DC;
RUN;

/*CUSTOM FORMATS*/
PROC FORMAT;
	VALUE $LONSTA
		'01'="IN GRACE"
		'02'="IN SCHOOL"
		'03'="IN REPAYMENT"
		'04'="IN DEFERMENT"
		'05'="IN FORBEARANCE"
		'06'="IN CURE"
		'07'="CLAIM PENDING"
		'08'="CLAIM SUBMITTED"
		'09'="CLAIM CANCELED"
		'10'="CLAIM REJECT"
		'11'="CLAIM RETURNED"
		'12'="CLAIM PAID"
		'13'="PRE-CLAIM PENDING"
		'14'="PRE-CLAIM SUBMITTED"
		'15'="PRE-CLAIM CANCELLED"
		'16'="DEATH ALLEGED"
		'17'="DEATH VERIFIED"
		'18'="DISABILITY ALLEGED"
		'19'="DISABILITY VERIFIED"
		'20'="BANKRUPTCY ALLEGED"
		'21'="BANKRUPTCY VERIFIED"
		'22'="PAID IN FULL"
		'23'="NOT FULLY ORIGINATED"
		'88'="PROCESSING ERROR"
		'98'="UNKNOWN STATUS";
QUIT;

/*************************************************************************
* CREATE FILES
**************************************************************************/
*R2;
DATA _NULL_;
	SET  WORK.DELQ_TXT;
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
		FORMAT  DF_SPE_ACC_ID $10.
				LA_CUR_PRI BEST12. 
				WA_TOT_BRI_OTS BEST12.
				DAYS 11.
				LC_DLQ_TYP $1.
				DI_VLD_ADR $1.
				DI_PHN_VLD $1.
		;
	IF _N_ = 1 
		THEN 
			DO;
			   PUT 'DF_SPE_ACC_ID,LA_CUR_PRI,WA_TOT_BRI_OTS,DAYS,LC_DLQ_TYP,DI_VLD_ADR,DI_PHN_VLD';
			END;
	DO;
	   PUT DF_SPE_ACC_ID $ @;
	   PUT LA_CUR_PRI @;
	   PUT WA_TOT_BRI_OTS @;
	   PUT DAYS @;
	   PUT LC_DLQ_TYP $ @;
	   PUT DI_VLD_ADR $ @;
	   PUT DI_PHN_VLD $ ;
	END;
RUN;

*R3;
PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
OPTIONS NONUMBER;
PROC PRINT DATA=DELQ_SUM NOOBS SPLIT='/' WIDTH=UNIFORM WIDTH=MIN ;
	VAR		DELCAT BRWS LNS PRINC INT SKIP PERC;
	LABEL	DELCAT = 'DELINQUENCY/GROUP'
			BRWS = 'BORROWERS'
			LNS = 'LOANS'
			PRINC = 'PRINCIPAL'
			INT = 'INTEREST'
			SKIP = 'SKIPS'
			PERC = 'PERCENT BY PRINCIPAL';
	FORMAT	BRWS LNS SKIP COMMA14.;
	FORMAT	PRINC INT DOLLAR14.2;
	FORMAT	PERC PERCENT10.3;
	SUM		BRWS LNS PRINC INT SKIP PERC;
	TITLE 	"LOAN SERVICING CENTER";
	TITLE2 	"DAILY DELINQUENCY SUMMARY REPORT";
	TITLE3 	"&RUNDATE";
	FOOTNOTE  'JOB = UTLWS02     REPORT = ULWS02.LWS02R3';
RUN;
PROC PRINTTO;
RUN;

*R4;

/*export data in pipe delimited format*/
PROC EXPORT DATA=R4_FINAL
/*   OUTFILE="T:SAS\ULWS02.LWS02R4"*/
   OUTFILE = REPORT4
   DBMS=DLM REPLACE; 

   DELIMITER='|';
   PUTNAMES=NO;
RUN;



/*old layout, delete for production*/
/*DATA _NULL_;*/
/*	SET PHN_LNDR;*/
/**/
/*	*/
/*	IF  PHN_H = '' */
/*		AND PHN_A = '' */
/*		AND PHN_W = ''	*/
/*	THEN DELETE;*/
/**/
/*	V = '';*/
/*	FILE REPORT4 DROPOVER LRECL=32767;*/
/*	DO;*/
/*		PUT @1 BF_SSN   			*/
/*			@15 DIALER_NAME*/
/*			@70 LN_DLQ_MAX*/
/*			@159 DC_ALW_ADL_PHN_H*/
/*			@160 PHN_H*/
/*			@175 DC_ALW_ADL_PHN_A*/
/*			@176 PHN_A*/
/*			@191 DC_ALW_ADL_PHN_W*/
/*			@192 PHN_W*/
/*			@260 DX_STR_ADR_1*/
/*			@290 DX_STR_ADR_2*/
/*			@320 DX_STR_ADR_3*/
/*			@350 DM_CT*/
/*			@370 DC_DOM_ST*/
/*			@372 DF_ZIP_CDE*/
/*			@381 DM_FGN_CNY*/
/*			@396 DM_FGN_ST*/
/*			@411 DI_VLD_ADR*/
/*			@414 LF_LON_CUR_OWN*/
/*			@422 AMTDU*/
/*			@429 LA_CUR_PRI*/
/*			@494 LENDER_GROUP_ID*/
/*			@599 V;	*/
/*	END;*/
/*RUN;*/
