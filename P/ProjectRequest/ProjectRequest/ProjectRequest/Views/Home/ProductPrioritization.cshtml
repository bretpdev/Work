@model PagedList.IPagedList<ProjectRequest.Models.ProductPrioritization>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Product Prioritization";
}

<h2>Product Prioritization</h2>

<p>
    @Html.ActionLink("Create New", "ProjectRequest")
</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-inline" style="">
        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    Search For a Project(By Name or Business Unit): @Html.TextBox("SearchString", null, new { @class = "form-control", pattern = @"^([a-zA-Z0-9_\s]+)$" }) <input type="submit" value="Search" class="btn btn-secondary">
                </div>
            </div>
        </div>
    </div>
    <div style="text-align: right; width: 100%">
        Display Archived Projects: @Html.CheckBox("Archived", false, new { id = "Archived", name = "Archived", onchange = "$('form').submit();" })
    </div>
}
</br>
<table class="table table-bordered table-responsive">
    <!--
    <tr>
        <th colspan="3">
            Enter scores in the chart below based on your project needs. Use whole numbers zero through five (0–5) to calculate the Product Prioritization Score.
        </th>
        <th>
        </th>
        <th colspan="5" class="light-highlight">
            Criteria Weight: Total weight values should be equal to 100.
        </th>
        <th class="dark-highlight">
            Total Weight</br>
            (100)
        </th>
        <th></th>
    </tr>

    <tr>
        <td>

        </td>
        <td>

        </td>
        <td>

        </td>
        <td>

        </td>
        <td>
            20
        </td>
        <td>
            20
        </td>
        <td>
            20
        </td>
        <td>
            20
        </td>
        <td>
            20
        </td>
        <th>
            100
        </th>
        <td></td>
    </tr>
    -->
    <tr>
        <th class="dark-blue-highlight">
            @Html.ActionLink("Project Name", "ProductPrioritization", new { sortOrder = ViewBag.NameSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="dark-blue-highlight">
            @Html.ActionLink("Business Unit", "ProductPrioritization", new { sortOrder = ViewBag.BusinessSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="dark-blue-highlight">
            @Html.ActionLink("Details", "ProductPrioritization", new { sortOrder = ViewBag.DetailsSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="dark-blue-highlight">
            @Html.ActionLink("Status", "ProductPrioritization", new { sortOrder = ViewBag.StatusSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="light-blue-highlight">
            @Html.ActionLink("Finance Score", "ProductPrioritization", new { sortOrder = ViewBag.FinanceSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="light-blue-highlight">
            @Html.ActionLink("Business Value Score", "ProductPrioritization", new { sortOrder = ViewBag.RequestorSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="light-blue-highlight">
            @Html.ActionLink("Urgency Score", "ProductPrioritization", new { sortOrder = ViewBag.UrgencySort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="light-blue-highlight">
            @Html.ActionLink("Resources Score", "ProductPrioritization", new { sortOrder = ViewBag.ResourcesSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="light-blue-highlight">
            @Html.ActionLink("Risk Score", "ProductPrioritization", new { sortOrder = ViewBag.RiskSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th class="dark-blue-highlight">
            @Html.ActionLink("Total Score", "ProductPrioritization", new { sortOrder = ViewBag.TotalSort }, new { @class = "sort-link-colored-invariant" })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BusinessUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Details)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FinanceScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestorScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UrgencyScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ResourcesScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RiskScore)
            </td>
            <td class="light-blue-background">
                @Html.DisplayFor(modelItem => item.TotalScore)
            </td>
            <td>
                @if (ViewBag.EditViewLink != null && (string)ViewBag.EditViewLink != "")
                {
                    @Html.ActionLink((string)ViewBag.EditViewLink, "ProjectRequest", new { id = item.ProjectId })
                }
                @if (ViewBag.ScoringLink != null && (string)ViewBag.ScoringLink != "")
                {
                    @Html.ActionLink((string)ViewBag.ScoringLink, "ScoreOverview", new { id = item.ProjectId })
                }
                @if (ViewBag.ArchiveLink != null && (string)ViewBag.ArchiveLink != "")
                {
                    @Html.ActionLink("Archive", "ArchiveProject", new { id = item.ProjectId }, new { onclick = "return confirm('Are you sure you want to archive this project?')" })
                }
            </td>
        </tr>
    }

</table>
<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ProductPrioritization",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))