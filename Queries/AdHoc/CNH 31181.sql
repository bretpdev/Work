IF OBJECT_ID('tempdb..#RepaymentData', 'U') IS NOT NULL
BEGIN
	DROP TABLE #RepaymentData
END

SELECT
	ROW_NUMBER() OVER (PARTITION BY LNXX.LN_SEQ, COALESCE(ActiveRPS.LN_RPS_SEQ, InactiveRPS.LN_RPS_SEQ), COALESCE(ActiveRPS.LN_GRD_RPS_SEQ, InactiveRPS.LN_GRD_RPS_SEQ) ORDER BY COALESCE(ActiveRPS.LN_RPS_SEQ, InactiveRPS.LN_RPS_SEQ) DESC) [REP_SEQ],
	LNXX.BF_SSN,
	LNXX.LN_SEQ,
	COALESCE(ActiveRPS.LN_RPS_SEQ, InactiveRPS.LN_RPS_SEQ) AS LN_RPS_SEQ,
	COALESCE(ActiveRPS.LN_GRD_RPS_SEQ, InactiveRPS.LN_GRD_RPS_SEQ) AS LN_GRD_RPS_SEQ,
	LNXX.LA_CUR_PRI,
	LNXX.LC_STA_LONXX,
	LNXX.LC_SST_LONXX,
	COALESCE(ActiveRPS.LD_RPS_X_PAY_DU, InactiveRPS.LD_RPS_X_PAY_DU) AS LD_RPS_X_PAY_DU,
	CAST(ISNULL(COALESCE(ActiveRPS.LN_RPS_TRM,InactiveRPS.LN_RPS_TRM), X) AS INT) [LN_RPS_TRM],
	COALESCE(ActiveRPS.LA_RPS_ISL,InactiveRPS.LA_RPS_ISL) AS LA_RPS_ISL,
	COALESCE(ActiveRPS.LC_TYP_SCH_DIS,InactiveRPS.LC_TYP_SCH_DIS) AS LC_TYP_SCH_DIS,
	ISNULL(DEF.TotalDfrMonthsUsed, X) [TotalDfrMonthsUsed],
	ISNULL(FRB.TotalFrbMonthsUsed, X) [TotalFrbMonthsUsed],
	DATEDIFF(MONTH, COALESCE(ActiveRPS.LD_RPS_X_PAY_DU, InactiveRPS.LD_RPS_X_PAY_DU), GETDATE()) - (ISNULL(FRB.TotalFrbMonthsUsed, X) + ISNULL(DEF.TotalDfrMonthsUsed, X)) [GradationMonths],
	CASE WHEN ActiveRPS.BF_SSN IS NULL THEN 'N' ELSE 'Y' END AS HasActiveLNXX
INTO
	#RepaymentData
FROM
	CDW..PDXX_PRS_NME PDXX
	INNER JOIN CDW..LNXX_LON LNXX 
		ON LNXX.BF_SSN = PDXX.DF_PRS_ID
	LEFT JOIN
	(
		SELECT
			LNXX.BF_SSN,
			LNXX.LN_SEQ,
			LNXX.LN_RPS_SEQ,
			LNXX.LN_GRD_RPS_SEQ,
			LNXXM.LN_RPS_TRM,
			LNXX.LC_TYP_SCH_DIS,
			CASE WHEN LNXX_X.LA_RPS_ISL > ISNULL(LNXX_X.LA_RPS_ISL,X)
					THEN LNXX_X.LA_RPS_ISL
					ELSE LNXX_X.LA_RPS_ISL
			END AS LA_RPS_ISL,
			RSXX.LD_RPS_X_PAY_DU
		FROM
			CDW..LNXX_LON_RPS LNXX
			INNER JOIN CDW..LNXX_LON_RPS_SPF LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
			INNER JOIN 
			(
				SELECT
					M.BF_SSN,
					M.LN_SEQ,
					M.LN_RPS_SEQ,
					SUM(LNXX.LN_RPS_TRM) AS LN_RPS_TRM,
					MAX(LNXX.LN_GRD_RPS_SEQ) AS LN_GRD_RPS_SEQ,
					MAX(LNXX.LN_GRD_RPS_SEQ) -X AS LN_GRD_RPS_SEQ_X
				FROM
					CDW..LNXX_LON_RPS_SPF LNXX
					INNER JOIN 
					(
						SELECT
							LNXX.BF_SSN,
							LNXX.LN_SEQ,
							MAX(LNXX.LN_RPS_SEQ) AS LN_RPS_SEQ
						FROM
							CDW..LNXX_LON_RPS_SPF LNXX
							INNER JOIN CDW..LNXX_LON_RPS LNXX
								ON LNXX.BF_SSN = LNXX.BF_SSN
								AND LNXX.LN_SEQ = LNXX.LN_SEQ
								AND LNXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
								AND LNXX.LC_STA_LONXX = 'A'
						GROUP BY
							LNXX.BF_SSN,
							LNXX.LN_SEQ
					) M 
						ON M.BF_SSN = LNXX.BF_SSN
						AND M.LN_SEQ = LNXX.LN_SEQ
						AND M.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
				GROUP BY
					M.BF_SSN,
					M.LN_SEQ,
					M.LN_RPS_SEQ
			) LNXXM 
				ON LNXXM.BF_SSN = LNXX.BF_SSN 
				AND LNXXM.LN_SEQ = LNXX.LN_SEQ
				AND LNXXM.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
				AND LNXX.LN_GRD_RPS_SEQ IN (LNXXM.LN_GRD_RPS_SEQ,LNXXM.LN_GRD_RPS_SEQ_X)
			INNER JOIN CDW..LNXX_LON_RPS_SPF LNXX_X 
				ON LNXX_X.BF_SSN = LNXXM.BF_SSN 
				AND LNXX_X.LN_SEQ = LNXXM.LN_SEQ 
				AND LNXX_X.LN_RPS_SEQ = LNXXM.LN_RPS_SEQ
				AND LNXX_X.LN_GRD_RPS_SEQ = LNXXM.LN_GRD_RPS_SEQ
			LEFT JOIN CDW..LNXX_LON_RPS_SPF LNXX_X 
				ON LNXX_X.BF_SSN = LNXXM.BF_SSN 
				AND LNXX_X.LN_SEQ = LNXXM.LN_SEQ 
				AND LNXX_X.LN_RPS_SEQ = LNXXM.LN_RPS_SEQ
				AND LNXX_X.LN_GRD_RPS_SEQ = LNXXM.LN_GRD_RPS_SEQ_X
			INNER JOIN 
			(
				SELECT
					RSXX.BF_SSN,
					LNXXM.LN_SEQ,
					RSXX.LN_RPS_SEQ,
					RSXX.LD_RPS_X_PAY_DU
				FROM	
					CDW..RSXX_BR_RPD RSXX
					INNER JOIN
					(
						SELECT
							BF_SSN,
							LN_SEQ,
							MAX(LN_RPS_SEQ) AS LN_RPS_SEQ
						FROM
							CDW..LNXX_LON_RPS
						WHERE
							LC_STA_LONXX = 'A'
						GROUP BY
							BF_SSN,
							LN_SEQ
					) LNXXM
						ON LNXXM.BF_SSN = RSXX.BF_SSN
						AND LNXXM.LN_RPS_SEQ = RSXX.LN_RPS_SEQ
				WHERE
					RSXX.LC_STA_RPSTXX = 'A'
			) RSXX
				ON RSXX.BF_SSN = LNXX.BF_SSN
				AND RSXX.LN_SEQ = LNXX.LN_SEQ
				AND RSXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ			
		WHERE
			LNXX.LC_STA_LONXX = 'A'
	)  ActiveRPS 
		ON ActiveRPS.BF_SSN = LNXX.BF_SSN 
		AND ActiveRPS.LN_SEQ = LNXX.LN_SEQ 
	LEFT JOIN
	(
		SELECT
			LNXX.BF_SSN,
			LNXX.LN_SEQ,
			LNXX.LN_RPS_SEQ,
			LNXX.LN_GRD_RPS_SEQ,
			LNXX.LN_RPS_TRM,
			LNXX.LC_TYP_SCH_DIS,
			CASE WHEN LNXX_X.LA_RPS_ISL > ISNULL(LNXX_X.LA_RPS_ISL,X)
					THEN LNXX_X.LA_RPS_ISL
					ELSE LNXX_X.LA_RPS_ISL
			END AS LA_RPS_ISL,
			RSXX.LD_RPS_X_PAY_DU
		FROM
			CDW..LNXX_LON_RPS LNXX
			INNER JOIN CDW..LNXX_LON_RPS_SPF LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
			INNER JOIN 
			(
				SELECT
					M.BF_SSN,
					M.LN_SEQ,
					M.LN_RPS_SEQ,
					MAX(LNXX.LN_GRD_RPS_SEQ) AS LN_GRD_RPS_SEQ,
					MAX(LNXX.LN_GRD_RPS_SEQ) -X AS LN_GRD_RPS_SEQ_X
				FROM
					CDW..LNXX_LON_RPS_SPF LNXX
					INNER JOIN 
					(
						SELECT
							LNXX.BF_SSN,
							LNXX.LN_SEQ,
							MAX(LNXX.LN_RPS_SEQ) AS LN_RPS_SEQ
						FROM
							CDW..LNXX_LON_RPS_SPF LNXX
							INNER JOIN CDW..LNXX_LON_RPS LNXX
								ON LNXX.BF_SSN = LNXX.BF_SSN
								AND LNXX.LN_SEQ = LNXX.LN_SEQ
								AND LNXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
								AND LNXX.LC_STA_LONXX != 'A'
						GROUP BY
							LNXX.BF_SSN,
							LNXX.LN_SEQ
					) M 
						ON M.BF_SSN = LNXX.BF_SSN
						AND M.LN_SEQ = LNXX.LN_SEQ
						AND M.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
				GROUP BY
					M.BF_SSN,
					M.LN_SEQ,
					M.LN_RPS_SEQ
			) LNXXM 
				ON LNXXM.BF_SSN = LNXX.BF_SSN 
				AND LNXXM.LN_SEQ = LNXX.LN_SEQ
				AND LNXXM.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
				AND LNXX.LN_GRD_RPS_SEQ IN (LNXXM.LN_GRD_RPS_SEQ,LNXXM.LN_GRD_RPS_SEQ_X)
			INNER JOIN CDW..LNXX_LON_RPS_SPF LNXX_X 
				ON LNXX_X.BF_SSN = LNXXM.BF_SSN 
				AND LNXX_X.LN_SEQ = LNXXM.LN_SEQ 
				AND LNXX_X.LN_RPS_SEQ = LNXXM.LN_RPS_SEQ
				AND LNXX_X.LN_GRD_RPS_SEQ = LNXXM.LN_GRD_RPS_SEQ
			LEFT JOIN CDW..LNXX_LON_RPS_SPF LNXX_X 
				ON LNXX_X.BF_SSN = LNXXM.BF_SSN 
				AND LNXX_X.LN_SEQ = LNXXM.LN_SEQ 
				AND LNXX_X.LN_RPS_SEQ = LNXXM.LN_RPS_SEQ
				AND LNXX_X.LN_GRD_RPS_SEQ = LNXXM.LN_GRD_RPS_SEQ_X
			INNER JOIN 
			(
				SELECT
					RSXX.BF_SSN,
					LNXXM.LN_SEQ,
					RSXX.LN_RPS_SEQ,
					RSXX.LD_RPS_X_PAY_DU
				FROM	
					CDW..RSXX_BR_RPD RSXX
					INNER JOIN
					(
						SELECT
							BF_SSN,
							LN_SEQ,
							MAX(LN_RPS_SEQ) AS LN_RPS_SEQ
						FROM
							CDW..LNXX_LON_RPS
						WHERE
							LC_STA_LONXX != 'A'
						GROUP BY
							BF_SSN,
							LN_SEQ
					) LNXXM
						ON LNXXM.BF_SSN = RSXX.BF_SSN
						AND LNXXM.LN_RPS_SEQ = RSXX.LN_RPS_SEQ
				WHERE
					RSXX.LC_STA_RPSTXX != 'A'
			) RSXX
				ON RSXX.BF_SSN = LNXX.BF_SSN
				AND RSXX.LN_SEQ = LNXX.LN_SEQ
				AND RSXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ			
		WHERE
			LNXX.LC_STA_LONXX != 'A'
	)  InactiveRPS 
		ON InactiveRPS.BF_SSN = LNXX.BF_SSN 
		AND InactiveRPS.LN_SEQ = LNXX.LN_SEQ 
	LEFT JOIN
	( -- Deferment months already used
		SELECT DISTINCT
			DFXX.BF_SSN,
			LNXX.LN_SEQ,
			RSXX.LN_RPS_SEQ,
			RSXX.LD_RPS_X_PAY_DU,
			LNXX.LD_DFR_BEG,
			LNXX.LD_DFR_END,
			DFXX.LC_DFR_TYP,
			SUM(CentralData.dbo.PaymentsDue((CASE WHEN LNXX.LD_DFR_BEG > RSXX.LD_RPS_X_PAY_DU THEN LNXX.LD_DFR_BEG ELSE RSXX.LD_RPS_X_PAY_DU END), (CASE WHEN LNXX.LD_DFR_END < GETDATE() THEN LNXX.LD_DFR_END ELSE GETDATE() END), DAY(RSXX.LD_RPS_X_PAY_DU))) OVER (PARTITION BY DFXX.BF_SSN, LNXX.LN_SEQ, RSXX.LN_RPS_SEQ) [TotalDfrMonthsUsed],
			ROW_NUMBER() OVER (PARTITION BY DFXX.BF_SSN, LNXX.LN_SEQ ORDER BY RSXX.LN_RPS_SEQ DESC) [SEQ]
		FROM
			CDW..DFXX_BR_DFR_REQ DFXX
			INNER JOIN CDW..LNXX_BR_DFR_APV LNXX 
				ON LNXX.BF_SSN = DFXX.BF_SSN 
				AND LNXX.LF_DFR_CTL_NUM = DFXX.LF_DFR_CTL_NUM
			INNER JOIN CDW..LNXX_LON_RPS LNXX 
				ON LNXX.BF_SSN = DFXX.BF_SSN 
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
			INNER JOIN CDW..RSXX_BR_RPD RSXX 
				ON RSXX.BF_SSN = DFXX.BF_SSN 
				AND RSXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
		WHERE
			DFXX.LC_DFR_STA = 'A'
			AND DFXX.LC_STA_DFRXX = 'A'
			AND LNXX.LC_STA_LONXX = 'A'
			AND LNXX.LC_DFR_RSP != 'XXX' -- XXX = DEFERMENT REQUEST DENIED
			AND	LNXX.LD_DFR_BEG <= GETDATE()
			AND	LNXX.LD_DFR_END >= RSXX.LD_RPS_X_PAY_DU
			AND	RSXX.LC_STA_RPSTXX = 'A'
	) AS DEF 
		ON DEF.BF_SSN = PDXX.DF_PRS_ID 
		AND DEF.LN_SEQ = LNXX.LN_SEQ 
		AND DEF.LN_RPS_SEQ = ActiveRPS.LN_RPS_SEQ
	LEFT JOIN
	( -- Forbearnace months already used
		SELECT DISTINCT
			FBXX.BF_SSN,
			LNXX.LN_SEQ,
			RSXX.LN_RPS_SEQ,
			RSXX.LD_RPS_X_PAY_DU,
			LNXX.LD_FOR_BEG,
			LNXX.LD_FOR_END,
			FBXX.LC_FOR_TYP,
			SUM(CentralData.dbo.PaymentsDue((CASE WHEN LNXX.LD_FOR_BEG > RSXX.LD_RPS_X_PAY_DU THEN LNXX.LD_FOR_BEG ELSE RSXX.LD_RPS_X_PAY_DU END), (CASE WHEN LNXX.LD_FOR_END < GETDATE() THEN LNXX.LD_FOR_END ELSE GETDATE() END), DAY(RSXX.LD_RPS_X_PAY_DU))) OVER (PARTITION BY FBXX.BF_SSN, LNXX.LN_SEQ, RSXX.LN_RPS_SEQ) [TotalFrbMonthsUsed],
			ROW_NUMBER() OVER (PARTITION BY FBXX.BF_SSN, LNXX.LN_SEQ ORDER BY RSXX.LN_RPS_SEQ DESC) [SEQ]
		FROM
			CDW..FBXX_BR_FOR_REQ FBXX
			INNER JOIN CDW..LNXX_BR_FOR_APV LNXX 
				ON LNXX.BF_SSN = FBXX.BF_SSN 
				AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
			INNER JOIN CDW..LNXX_LON_RPS LNXX 
				ON LNXX.BF_SSN = FBXX.BF_SSN 
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
			INNER JOIN CDW..RSXX_BR_RPD RSXX 
				ON RSXX.BF_SSN = FBXX.BF_SSN 
				AND RSXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
		WHERE
			FBXX.LC_FOR_STA = 'A'
			AND	FBXX.LC_STA_FORXX = 'A'
			AND	LNXX.LC_STA_LONXX = 'A'
			AND	LNXX.LC_FOR_RSP != 'XXX' --XXX = FORBEARANCE REQUEST DENIED
			AND	LNXX.LD_FOR_BEG <= GETDATE()
			AND	LNXX.LD_FOR_END >= RSXX.LD_RPS_X_PAY_DU
			AND	RSXX.LC_STA_RPSTXX = 'A'
	) FRB 
		ON FRB.BF_SSN = PDXX.DF_PRS_ID 
		AND FRB.LN_SEQ = LNXX.LN_SEQ 
		AND FRB.LN_RPS_SEQ = ActiveRPS.LN_RPS_SEQ
WHERE
	LNXX.LC_STA_LONXX IN('R','L')
	AND	LNXX.LA_CUR_PRI > X.XX
ORDER BY
	LNXX.BF_SSN,
	LNXX.LN_SEQ


-- SELECT Report DATA
SELECT
	D.BF_SSN,
	D.LN_SEQ,
	D.LC_STA_LONXX,
	D.LC_SST_LONXX,
	D.LoanStatus,
	D.WX_OVR_DW_LON_STA,
	D.MonthlyPayment,
	D.OutstandingPrincipal,
	D.OutstandingInterest,
	D.TOTAL,
	D.[PLAN],
	CASE WHEN WQXX.BF_SSN IS NOT NULL THEN 'Monitor Task Queue'
		 WHEN D.HasActiveLNXX = 'N' THEN 'No Active RPS'
		 WHEN DATEADD(MONTH, D.RpsTerm, D.LD_RPS_X_PAY_DU) < GETDATE() THEN 'Active RPS'
		 ELSE 'Unknown'
	END
FROM
(
	SELECT
		RD.BF_SSN,
		RD.LN_SEQ,
		RD.LN_RPS_SEQ,
		MAX(RD.LC_STA_LONXX) AS LC_STA_LONXX,
		MAX(RD.LC_SST_LONXX) AS LC_SST_LONXX,
		MAX(CASE WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'IN GRACE'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'IN SCHOOL'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'IN REPAYMENT'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'IN DEFERMENT'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'IN FORBEARANCE'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'IN CURE'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'CLAIM PENDING'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'CLAIM SUBMITTED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'CLAIM CANCLED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'CLAIM REJECT'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'CLAIM RETURNED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'CLAIM PAID'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'PRE-CLAIM PENDING'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'PRE-CLAIM SUBMITTED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'PRE-CLAIM CANCELLED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'DEATH ALLEGED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'DEATH VERIFIED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'DISABILITY ALLEGED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'DISABILITY VERIFIED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'BANKRUPTCY ALLEGED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'BANKRUPTCY VERIFIED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'PAID IN FULL'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'NOT FULLY ORIGINATED'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'PROCESSING ERROR'
				WHEN DWXX.WC_DW_LON_STA  = 'XX' THEN 'UNKNOWN'
				ELSE 'UNKNOWN'
		END) AS LoanStatus,
		MAX(DWXX.WX_OVR_DW_LON_STA) AS WX_OVR_DW_LON_STA,
		MAX(RD.LA_RPS_ISL) [MonthlyPayment],
		MAX(RD.LA_CUR_PRI) [OutstandingPrincipal],
		ISNULL(MAX(DWXX.WA_TOT_BRI_OTS),X) [OutstandingInterest],
		MAX(RD.LA_CUR_PRI) + ISNULL(MAX(DWXX.WA_TOT_BRI_OTS),X) AS TOTAL,
		MAX(RD.LC_TYP_SCH_DIS) AS [PLAN],
		MAX(RD.LN_RPS_TRM) + ISNULL(MAX(RD.TotalFrbMonthsUsed), X) + ISNULL(MAX(RD.TotalDfrMonthsUsed), X) AS RpsTerm,
		MAX(RD.LD_RPS_X_PAY_DU) AS LD_RPS_X_PAY_DU,
		MAX(RD.HasActiveLNXX) AS HasActiveLNXX
	FROM
		#RepaymentData RD
		INNER JOIN CDW..DWXX_DW_CLC_CLU DWXX 
			ON DWXX.BF_SSN = RD.BF_SSN 
			AND DWXX.LN_SEQ = RD.LN_SEQ
	WHERE
		(RD.LA_CUR_PRI + DWXX.WA_TOT_BRI_OTS) > (X * RD.LA_RPS_ISL)
	GROUP BY
		RD.BF_SSN,
		RD.LN_SEQ,
		RD.LN_RPS_SEQ
) D 
	LEFT JOIN OPENQUERY(DUSTER,
	'
		SELECT
			BF_SSN
		FROM
			OLWHRMX.WQXX_TSK_QUE
		WHERE
			WF_QUE = ''RX''
			AND WX_MSG_X_TSK = ''NO TERM REMAINS. LOAN IS NOT A CURE''
	'
	) WQXX 
		ON WQXX.BF_SSN = D.BF_SSN
WHERE
	DATEADD(MONTH, D.RpsTerm, D.LD_RPS_X_PAY_DU) < GETDATE()
	OR D.HasActiveLNXX = 'N'
	OR WQXX.BF_SSN IS NOT NULL
ORDER BY
	WX_OVR_DW_LON_STA,
	LoanStatus,
	BF_SSN,
	LN_SEQ

--SELECT * FROM #RepaymentData WHERE BF_SSN = 'XXXXXXXXX'
--select * from CDW..LNXX_LON_RPS_SPF where BF_SSN = 'XXXXXXXXX'
--select * from CDW..LNXX_LON_RPS where BF_SSN = 'XXXXXXXXX'
--select * from openquery(legend, 'select * from pkub.wqXX_tsk_que where bf_ssn = ''XXXXXXXXX''')