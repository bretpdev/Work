/*CORNERSTONE PORTION*/
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT DISTINCT
	LNXX.LF_EDS + '|' + -- SSN
	'F' + '|' + --'F' for cornerstone
	'XXXX'  + '|' + --Queue/subqueue
	LEFT(RTRIM(PDXX.DM_PRS_X) + ' ' + RTRIM(PDXX.DM_PRS_LST) + SPACE(XX),XX) + '|' + --Name XX characters max
	 'XXXXXXXX' + '|' + --Requested
	 'XXXXXXXX' + '|' + --Required
	CASE WHEN DATEDIFF(DAY,DDPHN.LD_ATY_REQ_RCV,'XXXX-XX-XX') != X THEN CONVERT(VARCHAR,DDPHN.LD_ATY_REQ_RCV,XXX) ELSE 'XXXXXXXX' END + '|' + --Last attempt DDPHN most recent
	CASE WHEN DATEDIFF(DAY,DDPHN.LD_ATY_REQ_RCV_CNTCT,'XXXX-XX-XX') != X THEN CONVERT(VARCHAR,DDPHN.LD_ATY_REQ_RCV_CNTCT,XXX) ELSE 'XXXXXXXX' END + '|' + --Last contact DDPHN CNTCT most recent
	 'XXX' + '|' + --Activity Complete Days
	CASE WHEN PDXXH.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PDXXH.DN_DOM_PHN_ARA + PDXXH.DN_DOM_PHN_XCH + PDXXH.DN_DOM_PHN_LCL AS VARCHAR(XX)),'XXXXXXXXXX') ELSE 'XXXXXXXXXX' END + '|' + --Home phone
	CASE WHEN PDXXH.DF_PRS_ID IS NOT NULL THEN COALESCE(PDXXH.DC_PHN_SRC,'  ') ELSE '  ' END + '|' + --H Source
	CASE WHEN PDXXH.DF_PRS_ID IS NOT NULL THEN COALESCE(PDXXH.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + '|' + --H consent
	SPACE(X) + '|' + --Filler
	CASE WHEN PDXXA.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PDXXA.DN_DOM_PHN_ARA + PDXXA.DN_DOM_PHN_XCH + PDXXA.DN_DOM_PHN_LCL AS VARCHAR(XX)),'XXXXXXXXXX') ELSE 'XXXXXXXXXX' END + '|' + --Alt phone
	CASE WHEN PDXXA.DF_PRS_ID IS NOT NULL THEN COALESCE(PDXXA.DC_PHN_SRC,'  ') ELSE '  ' END + '|' + --A Source
	CASE WHEN PDXXA.DF_PRS_ID IS NOT NULL THEN COALESCE(PDXXA.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + '|' + --A consent
	SPACE(X) + '|' + --Filler
	CASE WHEN PDXXW.DF_PRS_ID IS NOT NULL THEN COALESCE(CAST(PDXXW.DN_DOM_PHN_ARA + PDXXW.DN_DOM_PHN_XCH + PDXXW.DN_DOM_PHN_LCL AS VARCHAR(XX)),'XXXXXXXXXX') ELSE 'XXXXXXXXXX' END + '|' + --Work phone
	CASE WHEN PDXXW.DF_PRS_ID IS NOT NULL THEN COALESCE(PDXXW.DC_PHN_SRC,'  ') ELSE '  ' END + '|' + --W Source
	CASE WHEN PDXXW.DF_PRS_ID IS NOT NULL THEN COALESCE(PDXXW.DC_ALW_ADL_PHN, ' ') ELSE ' ' END + '|' + --W consent
	SPACE(XX) + '|' + --Filler
	PDXX.DF_PRS_ID + '|' + --Recip SSN
	LEFT(RTRIM(PDXX.DM_PRS_X) + ' ' + RTRIM(PDXX.DM_PRS_LST) + SPACE(XX),XX) + '|' + --Recip Name
	CASE WHEN LNXX.LC_EDS_TYP = 'M' THEN 'ENDORSER  '
		 WHEN LNXX.LC_EDS_TYP = 'S' THEN 'ENDORSER  '
		 ELSE '          ' END + '|' + --Recip Relation
	LNXX.LC_EDS_TYP + ' ' + '|' + --Recip Relation Code
	CASE WHEN LNXX.LC_EDS_TYP = 'M' THEN 'ENDORSER  '
		 WHEN LNXX.LC_EDS_TYP = 'S' THEN 'ENDORSER  '
		 ELSE '          ' END + '|' + --Regards to
	LNXX.LC_EDS_TYP + ' ' + '|' + --Regards to type
	LNXX.BF_SSN + '|' + --Regards SSN
	LEFT(RTRIM(PDXX.DM_PRS_X) + ' ' + RTRIM(PDXX.DM_PRS_LST) + SPACE(XX),XX) + '|' + -- Regards Name
	LEFT(RTRIM(PDXX.DX_STR_ADR_X) + SPACE(XX),XX) + '|' + --AddrX
	LEFT(RTRIM(PDXX.DX_STR_ADR_X) + SPACE(XX),XX) + '|' + --AddrX
	LEFT(RTRIM(PDXX.DM_CT) + SPACE(XX),XX) + '|' + --city
	LEFT(RTRIM(PDXX.DC_DOM_ST) + SPACE(X),X) + '|' + --state
	LEFT(REPLACE(RTRIM(PDXX.DF_ZIP_CDE), '-','') + SPACE(X),X) + '|' + --zip
	PDXX.DI_VLD_ADR + '|' + --Addr Indicator
	RIGHT('XX' + CAST(lnXX.CountLoans AS VARCHAR(X)),X) + '|' + --num loans
	RIGHT('XXXX' + CAST(LNXX.LN_DLQ_MAX AS VARCHAR(X)),X) + '|' + --Days Delq
	RIGHT('XXXXXXX' + CAST(REPLACE(CAST(CurrentBill.TotalDue AS VARCHAR),'.','') AS VARCHAR(X)),X) + '|' + --Total due XXXXXXX = XXX.XX
	RIGHT('XXXXXXXXXX' + CAST(REPLACE(CAST(lnXX.OutstandingBal AS VARCHAR),'.','') AS VARCHAR(XX)),XX) + '|' + --Outstanding Bal
	CASE WHEN LNXX.BF_SSN IS NOT NULL THEN CONVERT(VARCHAR,LNXX.LD_FAT_EFF,XXX) ELSE 'XXXXXXXX' END + '|' + --Last paid 
	'XXXXXXXX' + '|' + --Promise Date
	MaxDisburseLoan.IF_DOE_LDR + '|' + --Lender Code 
	MaxDisburseLoan.IC_TYP_SCL + '|' + --Orig School Type 
	MaxDisburseLoan.IF_DOE_SCL + '|' + --Orig School Code 
	LEFT(RTRIM(MaxDisburseLoan.IM_SCL_SHO) + SPACE(XX),XX) + '|' + --Current school name
	MaxDisburseLoan.IF_GTR + '|' + --Gurantor Code 
	CASE WHEN DATEDIFF(DAY,PDXX.DD_BRT,'XXXX-XX-XX') != X THEN CONVERT(VARCHAR,PDXX.DD_BRT,XXX) ELSE 'XXXXXXXX' END + '|' + --DOB
	'N' + '|' + --Third party indicator
	LEFT(PDXX.DM_PRS_LST,X) + '|' + --Last Name Sort 
	' ' + '|' + --Previous Claim submission
	PDXX.DF_SPE_ACC_ID +--Pheaa account ID
	'R' + '|' + --Call required or optional
	' ' + '|' + --Rolling Delq code
	'  ' + '|' + --Phone call request number
	' ' + '|' + --Requested Call Type Code
	isnull(SDXX.LC_REA_SCL_SPR,'') + '|' + --Sep reason
	CASE WHEN RecentForbDefer.BF_SSN IS NOT NULL THEN CONVERT(VARCHAR,RecentForbDefer.EndDate,XXX) ELSE 'XXXXXXXX' END +--most recent Forb/Defer End Date 
	CASE WHEN HardForb.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N' END + '|' + -- hardship forb indicator
	CASE WHEN PDXX.DF_PRS_ID IS NOT NULL THEN 'Y' ELSE 'N' END + '|' + --Valid Email
	CASE WHEN LNXX.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N' END + '|' + --Direct Debit Indicator
	SPACE(XXX) --Filler
FROM
	CDW..PDXX_PRS_NME PDXX
	INNER JOIN CDW..LNXX_EDS LNXX
		ON LNXX.LF_EDS = PDXX.DF_PRS_ID
	INNER JOIN CDW..LNXX_LON LNXX
		ON LNXX.BF_SSN = LNXX.BF_SSN
		AND LNXX.LN_SEQ = LNXX.LN_SEQ
	INNER JOIN
	(
		SELECT 
			LNXX.BF_SSN,
			count(distinct lnXX.ln_seq) as CountLoans,
			MAX(LN_DLQ_MAX+X) AS LN_DLQ_MAX,
			SUM(COALESCE(LNXX.LA_CUR_PRI,X.XX) + COALESCE(DWXX.WA_TOT_BRI_OTS,X.XX)) AS OutstandingBal
		FROM
			CDW..LNXX_LON_DLQ_HST LNXX
			inner join cdw..lnXX_lon lnXX
				on lnXX.bf_ssn = lnXX.bf_ssn
				and lnXX.ln_seq = lnXX.ln_seq
			INNER JOIN CDW..DWXX_DW_CLC_CLU DWXX
				ON DWXX.BF_SSN = LNXX.BF_SSN
				AND DWXX.LN_SEQ = LNXX.LN_SEQ
			INNER JOIN CDW..LNXX_EDS LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_STA_LONXX = 'A'
		WHERE
			LC_STA_LONXX = 'X'
			AND DATEADD(DAY,-X,CAST(GETDATE() AS DATE)) <= LNXX.LD_DLQ_MAX --Account for AES holidays that we dont honor
			and LC_STA_LONXX IN('R','L')
			AND LA_CUR_PRI > X.XX
		GROUP BY
			LNXX.BF_SSN
	) LNXX
		ON LNXX.BF_SSN = LNXX.BF_SSN
	INNER JOIN
	(
		SELECT DISTINCT
			LNXX.BF_SSN,
			LNXX.IF_DOE_LDR,
			MaxSCXX.IF_DOE_SCL,
			MaxSCXX.IC_TYP_SCL,
			MaxSCXX.IM_SCL_SHO,
			LNXX.IF_GTR 
		FROM
			CDW..LNXX_LON LNXX
			INNER JOIN CDW..LNXX_EDS LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_STA_LONXX = 'A'
			INNER JOIN
			(
				SELECT
					LNXX.BF_SSN,
					MAX(LNXX.LD_LON_X_DSB) AS MaxDisburse
				FROM
					CDW..LNXX_LON LNXX
					INNER JOIN CDW..LNXX_EDS LNXX
						ON LNXX.BF_SSN = LNXX.BF_SSN
						AND LNXX.LN_SEQ = LNXX.LN_SEQ
						AND LNXX.LC_STA_LONXX = 'A'
				WHERE
					LNXX.LC_STA_LONXX = 'R'
					AND LNXX.LA_CUR_PRI > X
					AND LNXX.LD_LON_X_DSB <= CAST(GETDATE() AS DATE) 
				GROUP BY
					LNXX.BF_SSN
			) MaxDate
				ON MaxDate.BF_SSN = LNXX.BF_SSN
				AND MaxDate.MaxDisburse = LNXX.LD_LON_X_DSB
			INNER JOIN
			(
				SELECT DISTINCT
					SCXX.IF_DOE_SCL,
					SCXX.IC_TYP_SCL,
					SCXX.IM_SCL_SHO
				FROM
					CDW..SCXX_SCH_DMO SCXX
			) MaxSCXX
				ON MaxSCXX.IF_DOE_SCL = LNXX.LF_DOE_SCL_ORG
	) MaxDisburseLoan
		ON MaxDisburseLoan.BF_SSN = LNXX.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			SDXX.LF_STU_SSN,
			SDXX.LC_REA_SCL_SPR
		FROM
			CDW..SDXX_STU_SPR SDXX
			INNER JOIN
			(
				SELECT
					SDXX.LF_STU_SSN,
					MAX(SDXX.LD_SCL_SPR) AS LD_SCL_SPR
				FROM
					CDW..SDXX_STU_SPR SDXX
					INNER JOIN CDW..LNXX_EDS LNXX
						ON LNXX.BF_SSN = SDXX.LF_STU_SSN
						AND LNXX.LC_STA_LONXX = 'A'
				GROUP BY
					SDXX.LF_STU_SSN
			) SDXXMax
				ON SDXXMax.LF_STU_SSN = SDXX.LF_STU_SSN
				AND SDXXMax.LD_SCL_SPR = SDXX.LD_SCL_SPR
	) SDXX
		ON SDXX.LF_STU_SSN = LNXX.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			LNXX.BF_SSN,
			MAX(LNXX.LD_FAT_EFF) AS LD_FAT_EFF
		FROM
			CDW..LNXX_FIN_ATY LNXX
			INNER JOIN CDW..LNXX_EDS LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_STA_LONXX = 'A'
		WHERE
			LNXX.PC_FAT_TYP = 'XX'
			AND LNXX.PC_FAT_SUB_TYP = 'XX'
			AND LNXX.LC_STA_LONXX = 'A'
			AND COALESCE(LNXX.LC_FAT_REV_REA,'') = '' 
		GROUP BY
			LNXX.BF_SSN
	) LNXX 
		ON LNXX.BF_SSN = LNXX.BF_SSN
	LEFT JOIN CDW.CALC.IVRDATA CurrentBill
		ON CurrentBill.SSN = LNXX.BF_SSN
	LEFT JOIN 
	(
		SELECT DISTINCT
			AYXX.BF_SSN,
			MAX(LD_ATY_REQ_RCV) OVER(PARTITION BY AYXX.BF_SSN) AS LD_ATY_REQ_RCV,
			MAX(CASE WHEN PF_RSP_ACT = 'CNTCT' THEN LD_ATY_REQ_RCV ELSE NULL END) OVER(PARTITION BY AYXX.BF_SSN) AS LD_ATY_REQ_RCV_CNTCT
		FROM
			CDW..AYXX_BR_LON_ATY AYXX
			INNER JOIN CDW..LNXX_LON_ATY LNXX
				ON LNXX.BF_SSN = AYXX.BF_SSN
				AND LNXX.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
			INNER JOIN CDW..LNXX_EDS LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_STA_LONXX = 'A'
		WHERE
			PF_REQ_ACT = 'DDPHN'
	) DDPHN 
		ON DDPHN.BF_SSN = LNXX.BF_SSN
	LEFT JOIN CDW..PDXX_PRS_PHN PDXXH 
		ON PDXXH.DF_PRS_ID = LNXX.LF_EDS
		AND PDXXH.DC_PHN = 'H'
	LEFT JOIN CDW..PDXX_PRS_PHN PDXXA 
		ON PDXXA.DF_PRS_ID = LNXX.LF_EDS
		AND PDXXA.DC_PHN = 'A'
	LEFT JOIN CDW..PDXX_PRS_PHN PDXXW 
		ON PDXXW.DF_PRS_ID = LNXX.LF_EDS
		AND PDXXW.DC_PHN = 'W'
	LEFT JOIN CDW..PDXX_PRS_ADR PDXX
		ON PDXX.DF_PRS_ID = LNXX.LF_EDS
		AND PDXX.DC_ADR = 'L'
	LEFT JOIN
	(
		SELECT
			EMAIL.DF_PRS_ID,
			EMAIL.DX_ADR_EML,
			ROW_NUMBER() OVER (PARTITION BY Email.DF_PRS_ID ORDER BY Email.PriorityNumber) AS EmailPriority -- number in order of Email.PriorityNumber
		FROM
		(
			SELECT
				PDXX.DF_PRS_ID,
				PDXX.DX_ADR_EML,
				CASE 
					WHEN DC_ADR_EML = 'H' THEN X -- home
					WHEN DC_ADR_EML = 'A' THEN X -- alternate
					WHEN DC_ADR_EML = 'W' THEN X -- work
				END AS PriorityNumber
			FROM
				CDW..PDXX_PRS_ADR_EML PDXX
				INNER JOIN CDW..LNXX_EDS LNXX
					ON LNXX.LF_EDS = pdXX.DF_PRS_ID
					AND LNXX.LC_STA_LONXX = 'A'
			WHERE
				PDXX.DI_VLD_ADR_EML = 'Y' -- valid email address
				AND PDXX.DC_STA_PDXX = 'A'-- active email address record
		) Email
	) PDXX 
		ON PDXX.DF_PRS_ID = LNXX.LF_EDS
		AND PDXX.EmailPriority = X --highest priority email only
	LEFT JOIN
	(
		SELECT DISTINCT
			LNXX.BF_SSN
		FROM
			CDW..LNXX_EFT_TO_LON LNXX
			INNER JOIN CDW..LNXX_EDS LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_STA_LONXX = 'A'
		WHERE
			LC_STA_LNXX = 'A'
			AND CAST(GETDATE() AS DATE) BETWEEN LD_EFT_EFF_BEG AND LD_EFT_EFF_END
	) LNXX
		ON LNXX.BF_SSN = LNXX.BF_SSN
	LEFT JOIN
	(
		SELECT DISTINCT
			LNXX.BF_SSN
		FROM
			CDW..FBXX_BR_FOR_REQ FBXX
			INNER JOIN CDW..LNXX_BR_FOR_APV LNXX
				ON LNXX.BF_SSN = FBXX.BF_SSN
				AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
			INNER JOIN CDW..LNXX_EDS LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_STA_LONXX = 'A'
		WHERE
			FBXX.LC_STA_FORXX = 'A'
			AND FBXX.LC_FOR_STA = 'A'
			AND FBXX.LC_FOR_TYP IN ('XX','XX')
			AND LNXX.LC_FOR_RSP != 'XXX' --denied
			AND LNXX.LC_STA_LONXX = 'A'
	) HardForb
		ON HardForb.BF_SSN = LNXX.BF_SSN
	LEFT JOIN
	(
		SELECT
			Data.BF_SSN,
			MAX(EndDate) AS EndDate
		FROM
		(
			SELECT
				LNXX.BF_SSN,
				MAX(LNXX.LD_FOR_END) AS EndDate
			FROM
				CDW..FBXX_BR_FOR_REQ FBXX
				INNER JOIN CDW..LNXX_BR_FOR_APV LNXX
					ON LNXX.BF_SSN = FBXX.BF_SSN
					AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
				INNER JOIN CDW..LNXX_EDS LNXX
					ON LNXX.BF_SSN = LNXX.BF_SSN
					AND LNXX.LN_SEQ = LNXX.LN_SEQ
					AND LNXX.LC_STA_LONXX = 'A'
			WHERE
				FBXX.LC_STA_FORXX = 'A'
				AND FBXX.LC_FOR_STA = 'A'
				AND LNXX.LC_FOR_RSP != 'XXX' --denied
				AND LNXX.LC_STA_LONXX = 'A'
				AND CAST(LNXX.LD_FOR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in forb
			GROUP BY
				LNXX.BF_SSN

			UNION ALL

			SELECT
				LNXX.BF_SSN,
				MAX(LNXX.LD_DFR_END) AS EndDate
			FROM
				CDW..DFXX_BR_DFR_REQ DFXX
				INNER JOIN CDW..LNXX_BR_DFR_APV LNXX
					ON LNXX.BF_SSN = DFXX.BF_SSN
					AND LNXX.LF_DFR_CTL_NUM = DFXX.LF_DFR_CTL_NUM
				INNER JOIN CDW..LNXX_EDS LNXX
					ON LNXX.BF_SSN = LNXX.BF_SSN
					AND LNXX.LN_SEQ = LNXX.LN_SEQ
					AND LNXX.LC_STA_LONXX = 'A'
			WHERE
				DFXX.LC_STA_DFRXX = 'A'
				AND DFXX.LC_DFR_STA = 'A'
				AND LNXX.LC_DFR_RSP != 'XXX' --denied
				AND LNXX.LC_STA_LONXX = 'A'
				AND CAST(LNXX.LD_DFR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in defer
			GROUP BY
				LNXX.BF_SSN

			UNION ALL

			SELECT
				LNXX.BF_SSN,
				MAX(LNXX.LD_DFR_GRC_END) AS EndDate
			FROM
				CDW..DFXX_BR_DFR_REQ DFXX
				INNER JOIN CDW..LNXX_BR_DFR_APV LNXX
					ON LNXX.BF_SSN = DFXX.BF_SSN
					AND LNXX.LF_DFR_CTL_NUM = DFXX.LF_DFR_CTL_NUM
				INNER JOIN CDW..LNXX_EDS LNXX
					ON LNXX.BF_SSN = LNXX.BF_SSN
					AND LNXX.LN_SEQ = LNXX.LN_SEQ
					AND LNXX.LC_STA_LONXX = 'A'
			WHERE
				DFXX.LC_STA_DFRXX = 'A'
				AND DFXX.LC_DFR_STA = 'A'
				AND LNXX.LC_DFR_RSP != 'XXX' --denied
				AND LNXX.LC_STA_LONXX = 'A'
				AND CAST(LNXX.LD_DFR_BEG AS DATE) <= CAST(GETDATE() AS DATE) --OK if they are currently in defer
			GROUP BY
				LNXX.BF_SSN
		) Data
		GROUP BY
			Data.BF_SSN
	) RecentForbDefer
		ON RecentForbDefer.BF_SSN = LNXX.BF_SSN


