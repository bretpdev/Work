/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWSXX.NWSXXRZ";
FILENAME REPORTX "&RPTLIB/NH XXXX.TXT";

PROC IMPORT OUT= WORK.SOURCE
            DATAFILE= "T:\X days delinquent last X months X.XX.XX.xlsx" 
            DBMS=EXCEL REPLACE;
     RANGE="SHEET$"; 
     GETNAMES=YES;
     MIXED=NO;
     SCANTEXT=YES;
     USEDATE=YES;
     SCANTIME=YES;
RUN;

DATA SOURCE;
SET SOURCE;
FORMAT SSN ZX.;
RUN;

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;

DATA LEGEND.SOURCE; *Send data to Duster;
SET SOURCE;
RUN;

RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;
PROC SQL;
	CREATE TABLE BDSX AS
	SELECT DISTINCT
		LNXX.BF_SSN,
		LNXX.LA_CUR_PRI,
		LNXX.LF_LON_CUR_OWN,
		LNXX.LD_DLQ_ITL_MIN,
		CASE
			WHEN LNXX.LN_DLQ_MAX IS NULL THEN X
			ELSE LNXX.LN_DLQ_MAX + X
		END AS LN_DLQ_MAX,
		TRIM(PDXX.DM_PRS_X) || ', ' || PDXX.DM_PRS_LST AS BOR_NAME,
		PDXX.DX_STR_ADR_X,
		PDXX.DX_STR_ADR_X,
		PDXX.DX_STR_ADR_X,
		PDXX.DM_CT,
		PDXX.DC_DOM_ST,
		PDXX.DF_ZIP_CDE
	FROM 
		PKUB.PDXX_PRS_NME PDXX
		LEFT OUTER JOIN PKUB.PDXX_PRS_ADR PDXX
			ON PDXX.DF_PRS_ID = PDXX.DF_PRS_ID
			AND PDXX.DC_ADR = 'L'
		INNER JOIN  /*GETS THE TOTAL BALANCE*/ 
		(
			SELECT 
				LNXX.BF_SSN,
				LNXX.LF_LON_CUR_OWN,
				SUM(LNXX.LA_CUR_PRI + COALESCE(DWXX.WA_TOT_BRI_OTS,X)) * XXX AS LA_CUR_PRI
			FROM 
				PKUB.LNXX_LON LNXX
				LEFT OUTER JOIN PKUB.DWXX_DW_CLC_CLU DWXX
					ON LNXX.BF_SSN = DWXX.BF_SSN
					AND LNXX.LN_SEQ = DWXX.LN_SEQ
			WHERE LNXX.LC_STA_LONXX = 'R'
				AND LNXX.LA_CUR_PRI > X
			GROUP BY
				LNXX.BF_SSN,
				LNXX.LF_LON_CUR_OWN
			) LNXX
				ON PDXX.DF_PRS_ID = LNXX.BF_SSN
		INNER JOIN SOURCE S
			ON S.SSN = INPUT(LNXX.BF_SSN,BESTXX.)
		LEFT JOIN 
		(
			SELECT 
				LNXX.BF_SSN,
				MIN(LNXX.LD_DLQ_OCC) AS LD_DLQ_ITL_MIN,
				LNXX.LN_DLQ_MAX
			FROM
				PKUB.LNXX_LON_DLQ_HST LNXX
				INNER JOIN PKUB.LNXX_LON LNXX
					ON LNXX.BF_SSN = LNXX.BF_SSN
					AND LNXX.LN_SEQ = LNXX.LN_SEQ
			WHERE LNXX.LC_STA_LONXX = 'X'
				AND LNXX.LC_STA_LONXX = 'R'
				AND LNXX.LA_CUR_PRI > X
				AND (LNXX.LD_DLQ_MAX) = TODAY() - X
			GROUP BY 
				LNXX.BF_SSN,
				LNXX.LN_DLQ_MAX
			) LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
		LEFT OUTER JOIN 
		(
			SELECT DISTINCT 
				BF_SSN
			FROM
				PKUB.DWXX_DW_CLC_CLU
			WHERE WC_DW_LON_STA IN ('XX','XX','XX','XX','XX','XX','XX')
		) DWXX
			ON PDXX.DF_PRS_ID = DWXX.BF_SSN
	WHERE 
		DWXX.BF_SSN IS NULL
;
QUIT;

PROC SQL;
	CREATE TABLE BDS AS/*	select higher delinquency in cases where borrower has split delinquency*/
		SELECT
			BDS.*
		FROM 
			BDSX BDS
			INNER JOIN
				(
					SELECT
						BF_SSN,
						MAX(LN_DLQ_MAX) AS LN_DLQ_MAX
					FROM
						BDSX
					GROUP BY
						BF_SSN
				) DLQ
					ON BDS.BF_SSN = DLQ.BF_SSN
					AND BDS.LN_DLQ_MAX = DLQ.LN_DLQ_MAX
;

	CREATE TABLE PHN AS
		SELECT DISTINCT
			BDS.BF_SSN,
			PDXX.DN_DOM_PHN_ARA || PDXX.DN_DOM_PHN_XCH || PDXX.DN_DOM_PHN_LCL AS PHN,
			PDXX.DC_PHN,
			CASE
				WHEN PDXX.DC_ALW_ADL_PHN IN ('L','Q','P') THEN 'Y'
				ELSE 'N'
			 END AS DC_ALW_ADL_PHN
		FROM 
			BDS 
			INNER JOIN PKUB.PDXX_PRS_PHN PDXX
				ON BDS.BF_SSN = PDXX.DF_PRS_ID
		WHERE pdXX.DI_PHN_VLD = 'Y'
;

	CREATE TABLE DELQ AS
		SELECT DISTINCT 
			PHN.*,
			COALESCE(BILL_DATA.AMTDU,X) * XXX AS AMTDU
		FROM PHN 
			LEFT OUTER JOIN /*GETS THE AMOUNT DUE*/
			(
				SELECT 
					LNXX.BF_SSN,
					SUM(COALESCE(LNXX.LA_BIL_PAS_DU,X) + COALESCE(LNXX.LA_BIL_DU_PRT,X) +	COALESCE(LNXX.LA_LTE_FEE_OTS_PRT,X)) AS AMTDU
				FROM PKUB.LNXX_LON_BIL_CRF LNXX
					INNER JOIN 
					(
						SELECT
							BIL_SEQ.BF_SSN,
							BIL_SEQ.LD_BIL_CRT,
							MAX(LN_SEQ_BIL_WI_DTE) AS LN_SEQ_BIL_WI_DTE
						FROM PKUB.LNXX_LON_BIL_CRF BIL_SEQ
							INNER JOIN 
							(
								SELECT 
									BF_SSN,
									MAX(LD_BIL_CRT) AS LD_BIL_CRT
								FROM PKUB.LNXX_LON_BIL_CRF 
								WHERE LC_STA_LONXX = 'A'
									AND LC_BIL_TYP_LON = 'P'
								GROUP BY
									BF_SSN
							) BIL_DT
								ON BIL_DT.BF_SSN = BIL_SEQ.BF_SSN
								AND BIL_DT.LD_BIL_CRT = BIL_SEQ.LD_BIL_CRT
						WHERE BIL_SEQ.LC_STA_LONXX = 'A'
							AND BIL_SEQ.LC_BIL_TYP_LON = 'P'
						GROUP BY 
							BIL_SEQ.BF_SSN,
							BIL_SEQ.LD_BIL_CRT
					) THE_BILL
						ON LNXX.BF_SSN = THE_BILL.BF_SSN
						AND LNXX.LD_BIL_CRT = THE_BILL.LD_BIL_CRT
						AND LNXX.LN_SEQ_BIL_WI_DTE = THE_BILL.LN_SEQ_BIL_WI_DTE
			LEFT JOIN PKUB.PDXX_PRS_NME PDXX
				ON LNXX.BF_SSN = PDXX.DF_PRS_ID
			LEFT JOIN PKUB.LNXX_LON LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
			WHERE LNXX.LC_STA_LONXX = 'A'
				AND LNXX.LA_CUR_PRI > X
				AND LNXX.LC_STA_LONXX = 'R'
			GROUP BY
				LNXX.BF_SSN
			) BILL_DATA
			ON PHN.BF_SSN = BILL_DATA.BF_SSN
;

	/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
	/*%SQLCHECK;*/
QUIT;
PROC SORT DATA=PHN NODUPRECS; BY BF_SSN; RUN;
PROC SORT DATA=BDS; BY BF_SSN; RUN;
PROC SORT DATA=DELQ; BY BF_SSN; RUN;

DATA PHN(KEEP=BF_SSN PHN_H PHN_A PHN_W PHN_H_CON PHN_A_CON PHN_W_CON);
	SET PHN;
	BY BF_SSN;
	LENGTH PHN_H PHN_A PHN_W $XX. PHN_H_CON PHN_A_CON PHN_W_CON $X.;
	RETAIN PHN_H PHN_A PHN_W PHN_H_CON PHN_A_CON PHN_W_CON;
	IF FIRST.BF_SSN THEN DO;
		PHN_A = '';
		PHN_W = '';
		PHN_H = '';
		PHN_H_CON = '';
		PHN_W_CON = '';
		PHN_A_CON = '';
	END;
	IF DC_PHN = 'H' THEN DO;
		PHN_H = PHN;
		PHN_H_CON = DC_ALW_ADL_PHN;
	END;
	ELSE IF DC_PHN = 'A' THEN DO;
		PHN_A = PHN;
		PHN_A_CON = DC_ALW_ADL_PHN;
	END;
	ELSE IF DC_PHN = 'W' THEN DO;
		PHN_W = PHN;
		PHN_W_CON = DC_ALW_ADL_PHN;
	END;
	IF LAST.BF_SSN THEN OUTPUT;
RUN;

DATA BDS(DROP=DC_PHN PHN DC_ALW_ADL_PHN);
MERGE BDS PHN(IN=A) DELQ;
BY BF_SSN;
IF A;
RUN;

PROC SORT DATA=BDS OUT=BDS NODUPKEY; BY BF_SSN; RUN;  

ENDRSUBMIT;

DATA BDS; 
	SET LEGEND.BDS;  
RUN;

DATA _NULL_;
SET BDS;
FILE REPORTX DROPOVER LRECL=XXXXX;
DO;
	PUT @X BF_SSN   			
		@XX bor_name
		@XX LN_DLQ_MAX
		@XXX PHN_H_CON
		@XXX PHN_H
		@XXX PHN_A_CON
		@XXX PHN_A
		@XXX PHN_W_CON
		@XXX PHN_W
		@XXX dx_str_adr_X
		@XXX dx_str_adr_X
		@XXX dx_str_adr_X
		@XXX dm_ct
		@XXX dc_dom_st
		@XXX df_zip_cde
		@XXX LF_LON_CUR_OWN
		@XXX AMTDU
		@XXX LA_CUR_PRI;	
	END;
RUN;


/*DATA _NULL_;*/
/*	SET BDS;*/
/**/
/*	FILE*/
/*		REPORTX*/
/*		DELIMITER = ','*/
/*		DSD*/
/*		DROPOVER*/
/*		LRECL = XXXXX*/
/*	;*/
/**/
/*	FORMAT*/
/*		AMTDU DOLLARXX.X*/
/*		LA_CUR_PRI DOLLARXX.X*/
/*	;*/
/**/
/*	IF _N_ = X THEN */
/*		DO;*/
/*			PUT 'SSN,Name,Days Delinquent,Consent for Home Phone,Home Phone,Consent for Alternate Phone,Alternate Phone,Consent for Work Phone,' @;*/
/*			PUT 'Work Phone,Street X,Street X,Street X,City,State,Zip Code,Owner Code,Amount Due,Total balance of all loans';*/
/*		END;*/
/**/
/*	AMTDU = AMTDU/XXX;*/
/*	LA_CUR_PRI = LA_CUR_PRI/XXX;*/
/**/
/*	PUT BF_SSN @;			*/
/*	PUT bor_name @;*/
/*	PUT LN_DLQ_MAX @;*/
/*	PUT PHN_H_CON @;*/
/*	PUT PHN_H @;*/
/*	PUT PHN_A_CON @;*/
/*	PUT PHN_A @;*/
/*	PUT PHN_W_CON @;*/
/*	PUT PHN_W @;*/
/*	PUT dx_str_adr_X @;*/
/*	PUT dx_str_adr_X @;*/
/*	PUT dx_str_adr_X @;*/
/*	PUT dm_ct @;*/
/*	PUT dc_dom_st @;*/
/*	PUT df_zip_cde @;*/
/*	PUT LF_LON_CUR_OWN @;*/
/*	PUT AMTDU @;*/
/*	PUT LA_CUR_PRI;	*/
/*RUN;*/
