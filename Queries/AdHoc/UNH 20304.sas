LIBNAME DUSTER REMOTE SERVER=DUSTER SLIBREF=WORK;
RSUBMIT;
LIBNAME OLWHRM1 DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
PROC SQL;
	CREATE TABLE NORS AS
		SELECT DISTINCT
			LN10.BF_SSN,
			LN10.LN_SEQ,
			RS10.LN_RPS_SEQ,
			PD10.DF_SPE_ACC_ID,
			RS10.LC_STA_RPST10,
			RS10.LD_STA_RPST10,
			RS10.LD_RPS_1_PAY_DU
		FROM
			OLWHRM1.PD10_PRS_NME PD10
			JOIN OLWHRM1.LN10_LON LN10
				ON PD10.DF_PRS_ID = LN10.BF_SSN
				AND LN10.LA_CUR_PRI > 0
				AND LN10.LC_STA_LON10 = 'R'
				AND LN10.LI_CON_PAY_STP_PUR <> 'Y'
			JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
				AND DW01.WC_DW_LON_STA NOT IN ('02','04','05','19','17','21')
			LEFT JOIN
				(
					SELECT DISTINCT
						LN65.BF_SSN,
						LN65.LN_SEQ
					FROM
						OLWHRM1.RS10_BR_RPD RS10
						JOIN OLWHRM1.LN65_LON_RPS LN65
							ON RS10.BF_SSN = LN65.BF_SSN
							AND RS10.LN_RPS_SEQ = LN65.LN_RPS_SEQ
					WHERE
						RS10.LC_STA_RPST10 = 'A'
						AND LN65.LC_STA_LON65 = 'A'
				) RPS
				ON LN10.BF_SSN = RPS.BF_SSN
				AND LN10.LN_SEQ = RPS.LN_SEQ
			LEFT JOIN
				(
					SELECT DISTINCT
						LN60.BF_SSN,
						LN60.LN_SEQ
					FROM
						OLWHRM1.FB10_BR_FOR_REQ FB10
						JOIN OLWHRM1.LN60_BR_FOR_APV LN60
							ON FB10.BF_SSN = LN60.BF_SSN
							AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM
					WHERE
						LN60.LD_FOR_BEG < TODAY()
						AND LN60.LD_FOR_END > TODAY()
				) FORB
				ON LN10.BF_SSN = FORB.BF_SSN
				AND LN10.LN_SEQ = FORB.LN_SEQ
			LEFT JOIN OLWHRM1.RS10_BR_RPD RS10
				ON LN10.BF_SSN = RS10.BF_SSN
		WHERE
			RPS.BF_SSN IS NULL
			AND FORB.BF_SSN IS NULL
		ORDER BY
			LN10.BF_SSN,
			LN10.LN_SEQ,
			RS10.LN_RPS_SEQ
	;

	CREATE TABLE MINORS AS
		SELECT
			BF_SSN,
			LN_SEQ,
			MAX(LD_STA_RPST10) AS LD_STA_RPST10 FORMAT DATE9.
		FROM
			NORS
		WHERE
			LC_STA_RPST10 = 'I'
			OR LC_STA_RPST10 IS NULL
		GROUP BY
			BF_SSN,
			LN_SEQ
		ORDER BY
			BF_SSN,
			LN_SEQ
	;

	CREATE TABLE INORS AS
		SELECT
			N.BF_SSN,
			N.LN_SEQ,
			N.LN_RPS_SEQ,
			N.LD_RPS_1_PAY_DU,
			COALESCE(INTCK('MONTH',N.LD_RPS_1_PAY_DU,TODAY()),0) AS TRM_USED,
			N.DF_SPE_ACC_ID,
			N.LC_STA_RPST10,
			N.LD_STA_RPST10
		FROM
			NORS N
			JOIN MINORS M
				ON N.BF_SSN = M.BF_SSN
				AND N.LN_SEQ = M.LN_SEQ
				AND N.LD_STA_RPST10 = M.LD_STA_RPST10
		ORDER BY
			N.BF_SSN,
			N.LN_SEQ,
			N.LN_RPS_SEQ
	;

	CREATE TABLE RST AS
		SELECT DISTINCT
			INORS.BF_SSN,
			INORS.LN_SEQ,
			INORS.LN_RPS_SEQ,
			LN65.LC_TYP_SCH_DIS
		FROM
			INORS
			LEFT JOIN OLWHRM1.LN65_LON_RPS LN65
				ON INORS.BF_SSN = LN65.BF_SSN
				AND INORS.LN_SEQ = LN65.LN_SEQ
				AND INORS.LN_RPS_SEQ = LN65.LN_RPS_SEQ
		ORDER BY
			INORS.BF_SSN,
			INORS.LN_SEQ,
			INORS.LN_RPS_SEQ
	;

	CREATE TABLE TRM AS
		SELECT
			INORS.BF_SSN,
			INORS.LN_SEQ,
			INORS.LN_RPS_SEQ,
			SUM(COALESCE(LN66.LN_RPS_TRM,0)) AS LN_RPS_TRM
		FROM
			INORS
			LEFT JOIN OLWHRM1.LN66_LON_RPS_SPF LN66
				ON INORS.BF_SSN = LN66.BF_SSN
				AND INORS.LN_SEQ = LN66.LN_SEQ
				AND INORS.LN_RPS_SEQ = LN66.LN_RPS_SEQ
		GROUP BY
			INORS.BF_SSN,
			INORS.LN_SEQ,
			INORS.LN_RPS_SEQ
		ORDER BY
			INORS.BF_SSN,
			INORS.LN_SEQ,
			INORS.LN_RPS_SEQ
	;

CREATE TABLE DEF_FOR_DET AS
		SELECT DISTINCT
			INORS.BF_SSN,
			INORS.LN_SEQ,
			DF.LD_BEG,
			DF.LD_END,
			INORS.LD_RPS_1_PAY_DU,
			CASE
				WHEN DF.BF_SSN IS NULL THEN 0
				WHEN DF.LD_BEG GE INORS.LD_RPS_1_PAY_DU THEN COALESCE(INTCK('MONTH',DF.LD_BEG,DF.LD_END),0)
				WHEN DF.LD_BEG LT INORS.LD_RPS_1_PAY_DU AND DF.LD_END GT INORS.LD_RPS_1_PAY_DU THEN COALESCE(INTCK('MONTH',INORS.LD_RPS_1_PAY_DU,DF.LD_END),0)
				ELSE 0 
			END AS TOT_DEF_FOR
		FROM 
			INORS
			LEFT JOIN 
				(
					SELECT DISTINCT 
						LN50.BF_SSN
						,LN50.LN_SEQ
						,LN50.LF_DFR_CTL_NUM 	AS CTL_NUM
						,LN50.LN_DFR_OCC_SEQ 	AS OCC_SEQ
						,DF10.LC_DFR_TYP 		AS TYP
						,'D' 					AS DEF_FOR
						,LN50.LD_DFR_BEG 		AS LD_BEG
						,LN50.LD_DFR_END	    AS LD_END
					FROM 
						OLWHRM1.DF10_BR_DFR_REQ DF10
					INNER JOIN OLWHRM1.LN50_BR_DFR_APV LN50  
						ON DF10.BF_SSN = LN50.BF_SSN
						AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM 
					WHERE 
						DF10.LC_DFR_STA = 'A'
						AND DF10.LC_STA_DFR10 = 'A'
						AND LN50.LC_STA_LON50 = 'A'
					UNION 
					SELECT DISTINCT 
						LN60.BF_SSN
						,LN60.LN_SEQ
						,LN60.LF_FOR_CTL_NUM 	AS CTL_NUM
						,LN60.LN_FOR_OCC_SEQ 	AS OCC_SEQ
						,FB10.LC_FOR_TYP 		AS TYP
						,'F' 					AS DEF_FOR
						,LN60.LD_FOR_BEG 		AS LD_BEG
						,LN60.LD_FOR_END		AS LD_END
					FROM 
						OLWHRM1.FB10_BR_FOR_REQ FB10
						INNER JOIN OLWHRM1.LN60_BR_FOR_APV LN60  
							ON FB10.BF_SSN = LN60.BF_SSN
							AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM 
					WHERE 
						FB10.LC_FOR_STA = 'A'
						AND FB10.LC_STA_FOR10 = 'A'
						AND LN60.LC_STA_LON60 = 'A'
				) DF
				ON INORS.BF_SSN = DF.BF_SSN
				AND INORS.LN_SEQ = DF.LN_SEQ
		GROUP BY
			INORS.BF_SSN,
			INORS.LN_SEQ
		ORDER BY
			INORS.BF_SSN,
			INORS.LN_SEQ
	;

	CREATE TABLE DEF_FOR AS
		SELECT DISTINCT
			BF_SSN,
			LN_SEQ,
			SUM(TOT_DEF_FOR) AS TOT_DEF_FOR
		FROM
			DEF_FOR_DET
		GROUP BY
			BF_SSN,
			LN_SEQ
		ORDER BY
			BF_SSN,
			LN_SEQ
	;
QUIT;

ENDRSUBMIT;

DATA NORS; SET DUSTER.NORS; RUN;
DATA MINORS; SET DUSTER.MINORS; RUN;
DATA INORS; SET DUSTER.INORS; RUN;
DATA RST; SET DUSTER.RST; RUN;
DATA TRM; SET DUSTER.TRM; RUN;
DATA DEF_FOR_DET; SET DUSTER.DEF_FOR_DET; RUN;
DATA DEF_FOR; SET DUSTER.DEF_FOR; RUN;

PROC SQL;
	CREATE TABLE FNORS_DET AS
		SELECT DISTINCT
			INORS.BF_SSN,
			INORS.LN_SEQ,
			INORS.DF_SPE_ACC_ID,
			INORS.LC_STA_RPST10,
			INORS.LD_STA_RPST10,
			INORS.LN_RPS_SEQ,
			RST.LC_TYP_SCH_DIS,
			TRM.LN_RPS_TRM,
			INORS.TRM_USED,
			DEF_FOR.TOT_DEF_FOR,
			CASE
				WHEN TRM.LN_RPS_TRM = 0 THEN 0
				ELSE TRM.LN_RPS_TRM - INORS.TRM_USED + DEF_FOR.TOT_DEF_FOR
			END AS TRM_REM	
		FROM
			INORS
			JOIN RST
				ON INORS.BF_SSN = RST.BF_SSN
				AND INORS.LN_SEQ = RST.LN_SEQ
				AND INORS.LN_RPS_SEQ = RST.LN_RPS_SEQ
			JOIN TRM
				ON INORS.BF_SSN = TRM.BF_SSN
				AND INORS.LN_SEQ = TRM.LN_SEQ
				AND INORS.LN_RPS_SEQ = TRM.LN_RPS_SEQ
			LEFT JOIN DEF_FOR
				ON INORS.BF_SSN = DEF_FOR.BF_SSN
				AND INORS.LN_SEQ = DEF_FOR.LN_SEQ
	;

	CREATE TABLE FNORS AS
		SELECT DISTINCT
			BF_SSN,
			LC_STA_RPST10,
			LD_STA_RPST10,
			LN_RPS_SEQ,
			LC_TYP_SCH_DIS,
			TRM_REM
		FROM
			FNORS_DET
	;
QUIT;

PROC EXPORT
		DATA=FNORS
		OUTFILE='T:\SAS\list of loans without active repayment schedule with SSN.xlsx'
		REPLACE;
RUN;
