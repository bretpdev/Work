/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWSXX.NWSXXRZ";
FILENAME REPORTX "&RPTLIB/UNWSXX.NWSXXRX";

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;
RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;

%MACRO SQLCHECK ;
  %IF  &SQLXRC NE X  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @XX " ********************************************************************* "
              / @XX " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @XX " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @XX " ********************************************************************* "
              / @XX " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @XX " ****  &SQLXMSG   **** "
              / @XX " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;

PROC SQL ;
CREATE TABLE TOTAL_POP AS
	SELECT DISTINCT
		COUNT(DISTINCT BF_SSN) AS TOTAL_POP
	FROM
		PKUB.PDXX_PRS_NME PDXX
		INNER JOIN PKUB.LNXX_LON LNXX
			ON PDXX.DF_PRS_ID = LNXX.BF_SSN
	WHERE
		LNXX.LA_CUR_PRI > X
		AND LNXX.LC_STA_LONXX = 'R'
;
CREATE TABLE VALID_ADDRESS AS
	SELECT DISTINCT
		COUNT(DISTINCT LNXX.BF_SSN) AS VALID_ADDRESS
	FROM
		PKUB.PDXX_PRS_NME PDXX
		INNER JOIN PKUB.LNXX_LON LNXX
			ON PDXX.DF_PRS_ID = LNXX.BF_SSN
		INNER JOIN PKUB.PDXX_PRS_ADR PDXX
			ON PDXX.DF_PRS_ID = LNXX.BF_SSN
	WHERE
		LNXX.LA_CUR_PRI > X
		AND LNXX.LC_STA_LONXX = 'R'
		AND PDXX.DI_VLD_ADR = 'Y'
;
CREATE TABLE VALID_EMAIL AS
	SELECT DISTINCT
		COUNT(DISTINCT LNXX.BF_SSN) AS VALID_EMAIL
	FROM
		PKUB.PDXX_PRS_NME PDXX
		INNER JOIN PKUB.LNXX_LON LNXX
			ON PDXX.DF_PRS_ID = LNXX.BF_SSN
		INNER JOIN PKUB.PDXX_PRS_ADR_EML PDXX
			ON PDXX.DF_PRS_ID = LNXX.BF_SSN
	WHERE
		LNXX.LA_CUR_PRI > X
		AND LNXX.LC_STA_LONXX = 'R'
		AND PDXX.DI_VLD_ADR_EML = 'Y'
;
CREATE TABLE VALID_PHONE AS
	SELECT DISTINCT
		COUNT(DISTINCT LNXX.BF_SSN) AS VALID_PHONE
	FROM
		PKUB.PDXX_PRS_NME PDXX
		INNER JOIN PKUB.LNXX_LON LNXX
			ON PDXX.DF_PRS_ID = LNXX.BF_SSN
		INNER JOIN PKUB.PDXX_PRS_PHN PDXX
			ON PDXX.DF_PRS_ID = LNXX.BF_SSN
	WHERE
		LNXX.LA_CUR_PRI > X
		AND LNXX.LC_STA_LONXX = 'R'
		AND PDXX.DI_PHN_VLD = 'Y'
;


QUIT;

ENDRSUBMIT;

DATA TOTAL_POP; SET LEGEND.TOTAL_POP; RUN;
DATA VALID_ADDRESS; SET LEGEND.VALID_ADDRESS; RUN;
DATA VALID_EMAIL; SET LEGEND.VALID_EMAIL; RUN;
DATA VALID_PHONE; SET LEGEND.VALID_PHONE; RUN;


PROC EXPORT DATA = WORK.TOTAL_POP 
            OUTFILE = "T:\NH XXXX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="QuestionX"; 
RUN;

PROC EXPORT DATA = WORK.VALID_ADDRESS 
            OUTFILE = "T:\NH XXXX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="QuestionX"; 
RUN;

PROC EXPORT DATA = WORK.VALID_EMAIL 
            OUTFILE = "T:\NH XXXX.xlsx"  
            DBMS = EXCEL
			REPLACE;
     SHEET="QuestionX"; 
RUN;

PROC EXPORT DATA = WORK.VALID_PHONE 
            OUTFILE = "T:\NH XXXX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="QuestionX"; 
RUN;
