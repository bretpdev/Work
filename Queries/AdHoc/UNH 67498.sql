SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @CURRENTDATE DATE = getdate()

SELECT DISTINCT
	PD10.DF_SPE_ACC_ID,
	'' AS Region,
	'' AS [Queue],
	'' AS BOR_NAME,
	'' AS DTC,
	'' AS LD_ATY_RSP_ATT,
	0 AS LN_DLQ_MAX,
	'' AS LD_ATY_RSP_CTC,
	'' AS REL,
	'' AS REL_CODE,
	'' AS SSN,
	'' AS REL2,
	'' AS REL_CODE2,
	'' AS NAME2,
	PhoneRank.PHN_H_CON,
	PhoneRank.PHN_H,
	PhoneRank.PHN_A_CON,
	PhoneRank.PHN_A,
	PhoneRank.PHN_W_CON,
	PhoneRank.PHN_W,
	'' AS SSN2,
	'' AS NAME3,
	'' AS DX_STR_ADR_1,
	'' AS DX_STR_ADR_2,
	'' AS DX_STR_ADR_3,
	'' AS DM_CT,
	PD30.DC_DOM_ST AS DC_DOM_ST,
	LEFT(PD30.DF_ZIP_CDE,5) AS DF_ZIP_CDE,
	'' AS DM_FGN_CNY,
	'' AS DM_FGN_ST,
	'' AS DI_VLD_ADR,
	'' AS [COUNT],
	LN10.LF_LON_CUR_OWN AS LENDER_CODE,
	ISNULL(REPLACE(BILL_DATA.AMTDU,'.',''),000) AS AMTDU,
	ISNULL(REPLACE(LN10.LA_CUR_PRI,'.',''),000) AS LA_CUR_PRI,
	'' AS MX_DFFDT,
	'' AS CUR_SCL_CODE,
	'' AS DD_BRT,
	'' AS BI_ATY_3_PTY,
	'' AS NAME_SORT,
	'' AS FILLER,
	'' AS FILLER2
	--BILL_DATA.AMTDU AS AMTDU_R3,
	--LN10.LA_CUR_PRI AS LA_CUR_PRI_R3
FROM 
	UDW..PD10_PRS_NME PD10
	INNER JOIN 
	(
		SELECT DISTINCT
			FB10.BF_SSN,
			LN60.LD_FOR_END
		FROM
			UDW..FB10_BR_FOR_REQ FB10
			INNER JOIN UDW..PD10_PRS_NME PD10
				ON PD10.DF_PRS_ID = FB10.BF_SSN
			INNER JOIN UDW..LN60_BR_FOR_APV LN60
				ON LN60.BF_SSN = FB10.BF_SSN
				AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
			INNER JOIN UDW..LN10_LON LN10
				ON LN10.BF_SSN = LN60.BF_SSN
				AND LN10.LN_SEQ = LN60.LN_SEQ
				AND LN10.LA_CUR_PRI > 0
				AND LN10.LC_STA_LON10 = 'R'
		WHERE
			LN60.LC_STA_LON60 = 'A'
			AND FB10.LC_STA_FOR10 = 'A'
			AND FB10.LC_FOR_STA = 'A' --denied records cant have this active
			AND LN60.LC_FOR_RSP != '003'
			AND FB10.LC_FOR_TYP = '40'
			AND CAST(GETDATE() AS DATE) BETWEEN CAST(LN60.LD_FOR_BEG AS DATE) AND CAST(LN60.LD_FOR_END AS DATE)
	) FORB
		ON FORB.BF_SSN = PD10.DF_PRS_ID
	INNER JOIN UDW..PD30_PRS_ADR PD30
		ON PD30.DF_PRS_ID = PD10.DF_PRS_ID
		AND PD30.DC_ADR = 'L'
	INNER JOIN  /*GETS THE TOTAL BALANCE*/ 
	(
		SELECT 
			LN10.BF_SSN,
			LN10.LF_LON_CUR_OWN,
			SUM(ISNULL(LN10.LA_CUR_PRI,0) + ISNULL(DW01.WA_TOT_BRI_OTS,0)) AS LA_CUR_PRI
		FROM 
			UDW..LN10_LON LN10
			LEFT JOIN UDW..DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
		WHERE 
			LN10.LC_STA_LON10 = 'R'
			AND LN10.LA_CUR_PRI > 0.00
		GROUP BY
			LN10.BF_SSN,
			LN10.LF_LON_CUR_OWN
	) LN10
		ON PD10.DF_PRS_ID = LN10.BF_SSN
	INNER JOIN /*Determine best phone numbers to call in the dialer using consent and a ranking on type*/
	(
		SELECT DISTINCT
			DF_PRS_ID,
			MAX(IIF(OverallRank = 1, PHN, '')) AS PHN_H,
			MAX(IIF(OverallRank = 1, DC_ALW_ADL_PHN, '')) AS PHN_H_CON,
			MAX(IIF(OverallRank = 2, PHN, '')) AS PHN_A,
			MAX(IIF(OverallRank = 2, DC_ALW_ADL_PHN, '')) AS PHN_A_CON,
			MAX(IIF(OverallRank = 3, PHN, '')) AS PHN_W,
			MAX(IIF(OverallRank = 3, DC_ALW_ADL_PHN, '')) AS PHN_W_CON
		FROM
		(
			SELECT DISTINCT
				PD40.DF_PRS_ID,
				ISNULL(PD40.DN_DOM_PHN_ARA,'') + ISNULL(PD40.DN_DOM_PHN_XCH,'') + ISNULL(PD40.DN_DOM_PHN_LCL,'') AS PHN,
				PD40.DC_PHN,
				CASE WHEN PD40.DC_ALW_ADL_PHN IN ('L','X','P') 
					THEN 'Y'
					ELSE 'N'
				END AS DC_ALW_ADL_PHN,
				PD40.DC_ALW_ADL_PHN AS Consent,
				/*Rank phones by category and type*/
				DENSE_RANK() OVER (PARTITION BY PD40.DF_PRS_ID ORDER BY Ranks.ConsentRank, Ranks.TypeRank) AS OverallRank
			FROM
				UDW..PD42_PRS_PHN PD40
				INNER JOIN
				(
					SELECT
						*,
						CASE WHEN DC_PHN = 'H' THEN 1
								WHEN DC_PHN = 'A' THEN 2
								WHEN DC_PHN = 'W' THEN 3
								WHEN DC_PHN = 'M' THEN 4
						END AS TypeRank, --H A W M TYPE
						CASE WHEN DC_ALW_ADL_PHN = 'N' THEN 1
								WHEN DC_ALW_ADL_PHN = 'P' THEN 2 
								WHEN DC_ALW_ADL_PHN = 'X' THEN 3
								WHEN DC_ALW_ADL_PHN = 'L' THEN 4
								WHEN DC_ALW_ADL_PHN = 'U' THEN 5 
						END AS ConsentRank--N P X L U CONSENT
					FROM
						UDW..PD42_PRS_PHN PD40
					WHERE
						PD40.DI_PHN_VLD = 'Y'
						AND PD40.DC_NO_HME_PHN != 'J'
				) Ranks
					ON Ranks.DF_PRS_ID = PD40.DF_PRS_ID
					AND Ranks.DC_PHN = PD40.DC_PHN
					AND Ranks.DC_ALW_ADL_PHN = PD40.DC_ALW_ADL_PHN
			WHERE
				PD40.DI_PHN_VLD = 'Y'
				AND PD40.DC_NO_HME_PHN != 'J'
		) Ranked
		WHERE
			Ranked.OverallRank IN (1,2,3)
		GROUP BY
			DF_PRS_ID
	) PhoneRank
		ON PhoneRank.DF_PRS_ID = PD10.DF_PRS_ID
	LEFT JOIN /*GETS THE AMOUNT DUE*/
	(
		SELECT 
			LN80.BF_SSN,
			SUM(ISNULL(LN80.LA_BIL_PAS_DU,0) + ISNULL(LN80.LA_BIL_DU_PRT,0) + ISNULL(LN80.LA_LTE_FEE_OTS_PRT,0)) AS AMTDU
		FROM 
			UDW..LN80_LON_BIL_CRF LN80
			INNER JOIN 
			(
				SELECT
					BIL_SEQ.BF_SSN,
					BIL_SEQ.LD_BIL_CRT,
					MAX(LN_SEQ_BIL_WI_DTE) AS LN_SEQ_BIL_WI_DTE
				FROM
					UDW..LN80_LON_BIL_CRF BIL_SEQ
					INNER JOIN 
					(
						SELECT 
							LN80.BF_SSN,
							MAX(LD_BIL_CRT) AS LD_BIL_CRT
						FROM 
							UDW..LN80_LON_BIL_CRF  LN80
							INNER JOIN 
							(
								SELECT DISTINCT
									FB10.BF_SSN
								FROM
									UDW..FB10_BR_FOR_REQ FB10
									INNER JOIN UDW..PD10_PRS_NME PD10
										ON PD10.DF_PRS_ID = FB10.BF_SSN
									INNER JOIN UDW..LN60_BR_FOR_APV LN60
										ON LN60.BF_SSN = FB10.BF_SSN
										AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
									INNER JOIN UDW..LN10_LON LN10
										ON LN10.BF_SSN = LN60.BF_SSN
										AND LN10.LN_SEQ = LN60.LN_SEQ
										AND LN10.LA_CUR_PRI > 0
										AND LN10.LC_STA_LON10 = 'R'
								WHERE
									LN60.LC_STA_LON60 = 'A'
									AND FB10.LC_STA_FOR10 = 'A'
									AND FB10.LC_FOR_STA = 'A' --denied records cant have this active
									AND LN60.LC_FOR_RSP != '003'
									AND FB10.LC_FOR_TYP = '40'
									AND CAST(GETDATE() AS DATE) BETWEEN CAST(LN60.LD_FOR_BEG AS DATE) AND CAST(LN60.LD_FOR_END AS DATE)
							) FORB
								ON FORB.BF_SSN = LN80.BF_SSN
						WHERE 
							LC_STA_LON80 = 'A'
							AND LC_BIL_TYP_LON = 'P'
						GROUP BY
							LN80.BF_SSN
					) BIL_DT
						ON BIL_DT.BF_SSN = BIL_SEQ.BF_SSN
						AND BIL_DT.LD_BIL_CRT = BIL_SEQ.LD_BIL_CRT
				WHERE 
					BIL_SEQ.LC_STA_LON80 = 'A'
					AND BIL_SEQ.LC_BIL_TYP_LON = 'P'
				GROUP BY 
					BIL_SEQ.BF_SSN,
					BIL_SEQ.LD_BIL_CRT
			) THE_BILL
				ON LN80.BF_SSN = THE_BILL.BF_SSN
				AND LN80.LD_BIL_CRT = THE_BILL.LD_BIL_CRT
				AND LN80.LN_SEQ_BIL_WI_DTE = THE_BILL.LN_SEQ_BIL_WI_DTE
			LEFT JOIN UDW..PD10_PRS_NME PD10
				ON LN80.BF_SSN = PD10.DF_PRS_ID
			LEFT JOIN UDW..LN10_LON LN10
				ON LN80.BF_SSN = LN10.BF_SSN
				AND LN80.LN_SEQ = LN10.LN_SEQ
		WHERE 
			LN80.LC_STA_LON80 = 'A'
			AND LN10.LA_CUR_PRI > 0
			AND LN10.LC_STA_LON10 = 'R'
		GROUP BY
			LN80.BF_SSN
	) BILL_DATA
		ON PD10.DF_PRS_ID = BILL_DATA.BF_SSN	
	LEFT JOIN /*Exclusion logic that acts as a fallback when DW01 refresh is late*/
	(
		SELECT DISTINCT
			DF_PRS_ID,
			CASE WHEN DC_DTH_STA = '01' THEN 'Alleged Death'
			     WHEN DC_DTH_STA = '02' THEN 'Verified Death'
			END AS Reason
		FROM
			UDW..PD21_GTR_DTH
		WHERE
			DC_DTH_STA IN('01','02')

		UNION ALL

		SELECT DISTINCT 
			PD22.DF_PRS_ID,
			CASE WHEN PD23.DC_DSA_STA = '07' THEN 'Alleged TPD'
				 WHEN PD23.DC_DSA_STA = '09' THEN 'Verified TPD'
			END AS Reason
		FROM
			UDW..PD22_PRS_DSA PD22 
			INNER JOIN UDW..PD23_GTR_DSA PD23 
				ON PD23.DF_PRS_ID = PD22.DF_PRS_ID 
				AND PD23.DD_DSA_RPT = PD22.DD_DSA_RPT
			LEFT JOIN UDW..LN10_LON LN10
				ON LN10.BF_SSN = PD22.DF_PRS_ID
				AND LN10.LD_LON_1_DSB > PD22.DD_DSA
		WHERE
			LN10.BF_SSN IS NULL --All disbursements must be before DD_DSA
			AND PD23.DC_DSA_STA = '09'
			OR
			(
				PD23.DC_DSA_STA = '07'
				AND CAST(GETDATE() AS DATE) BETWEEN PD22.DD_PRS_DSA_SPS_SR AND PD22.DD_PRS_DSA_SPS_END 
			)
		
		UNION ALL

		SELECT DISTINCT
			DF_PRS_ID,
			CASE WHEN DC_BKR_STA = '04' THEN 'Alleged Bankruptcy'
				 WHEN DC_BKR_STA = '06' THEN 'Verified Bankruptcy'
			END AS Reason
		FROM
			UDW..PD24_PRS_BKR
		WHERE
			DC_BKR_STA IN('04','06')		
	) BadStatuses
		ON BadStatuses.DF_PRS_ID = PD10.DF_PRS_ID
WHERE 
	BadStatuses.DF_PRS_ID IS NULL
	AND FORB.LD_FOR_END BETWEEN DATEADD(dd, -(DATEPART(dw, @CURRENTDATE)-1), @CURRENTDATE) AND DATEADD(dd, 7-(DATEPART(dw, @CURRENTDATE)), @CURRENTDATE)

/*COBORROWERS*/
UNION ALL

SELECT DISTINCT
	PD10.DF_SPE_ACC_ID, --CoborrowerAccountNumber
	'' AS Region,
	'' AS [Queue],
	'' AS BOR_NAME,
	'' AS DTC,
	'' AS LD_ATY_RSP_ATT,
	0 AS LN_DLQ_MAX,
	'' AS LD_ATY_RSP_CTC,
	CASE WHEN LN20.LC_EDS_TYP = 'M' THEN 'COBRWR'
		 ELSE 'ENDORSER'
	END AS REL,
	'' AS REL_CODE,
	PD10Bor.DF_SPE_ACC_ID AS SSN,
	'' AS REL2,
	'' AS REL_CODE2,
	'' AS NAME2,
	PhoneRank.PHN_H_CON,
	PhoneRank.PHN_H,
	PhoneRank.PHN_A_CON,
	PhoneRank.PHN_A,
	PhoneRank.PHN_W_CON,
	PhoneRank.PHN_W,
	'' AS SSN2,
	'' AS NAME3,
	'' AS DX_STR_ADR_1,
	'' AS DX_STR_ADR_2,
	'' AS DX_STR_ADR_3,
	'' AS DM_CT,
	PD30.DC_DOM_ST AS DC_DOM_ST,
	LEFT(PD30.DF_ZIP_CDE,5) AS DF_ZIP_CDE,
	'' AS DM_FGN_CNY,
	'' AS DM_FGN_ST,
	'' AS DI_VLD_ADR,
	'' AS [COUNT],
	LN10.LF_LON_CUR_OWN AS LENDER_CODE,
	ISNULL(REPLACE(BILL_DATA.AMTDU,'.',''),000) AS AMTDU,
	ISNULL(REPLACE(LN10.LA_CUR_PRI,'.',''),000) AS LA_CUR_PRI,
	'' AS MX_DFFDT,
	'' AS CUR_SCL_CODE,
	'' AS DD_BRT,
	'' AS BI_ATY_3_PTY,
	'' AS NAME_SORT,
	'' AS FILLER,
	'' AS FILLER2
	--BILL_DATA.AMTDU AS AMTDU_R3,
	--LN10.LA_CUR_PRI AS LA_CUR_PRI_R3
FROM 
	UDW..PD10_PRS_NME PD10
	INNER JOIN 
	(
		SELECT DISTINCT
			LN60.BF_SSN,
			LN60.LD_FOR_END
		FROM
			UDW..FB10_BR_FOR_REQ FB10
			INNER JOIN UDW..PD10_PRS_NME PD10
				ON PD10.DF_PRS_ID = FB10.BF_SSN
			INNER JOIN UDW..LN60_BR_FOR_APV LN60
				ON LN60.BF_SSN = FB10.BF_SSN
				AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
			INNER JOIN UDW..LN10_LON LN10
				ON LN10.BF_SSN = LN60.BF_SSN
				AND LN10.LN_SEQ = LN60.LN_SEQ
				AND LN10.LA_CUR_PRI > 0
				AND LN10.LC_STA_LON10 = 'R'
		WHERE
			LN60.LC_STA_LON60 = 'A'
			AND FB10.LC_STA_FOR10 = 'A'
			AND FB10.LC_FOR_STA = 'A' --denied records cant have this active
			AND LN60.LC_FOR_RSP != '003'
			AND FB10.LC_FOR_TYP = '40'
			AND CAST(GETDATE() AS DATE) BETWEEN CAST(LN60.LD_FOR_BEG AS DATE) AND CAST(LN60.LD_FOR_END AS DATE)
	) FORB
		ON FORB.BF_SSN = PD10.DF_PRS_ID
	INNER JOIN UDW..LN20_EDS LN20
		ON LN20.LF_EDS = PD10.DF_PRS_ID
		AND LN20.LC_STA_LON20 = 'A'
	INNER JOIN UDW..PD10_PRS_NME PD10Bor
		ON PD10Bor.DF_PRS_ID = LN20.BF_SSN
	INNER JOIN  /*GETS THE TOTAL BALANCE*/ 
	(
		SELECT 
			LN10.BF_SSN,
			LN10.LF_LON_CUR_OWN,
			SUM(ISNULL(LN10.LA_CUR_PRI,0) + ISNULL(DW01.WA_TOT_BRI_OTS,0)) AS LA_CUR_PRI
		FROM
			UDW..LN20_EDS LN20
			INNER JOIN UDW..LN10_LON LN10
				ON LN20.BF_SSN = LN10.BF_SSN
				AND LN20.LN_SEQ = LN10.LN_SEQ
				AND LN20.LC_STA_LON20 = 'A'
			LEFT JOIN UDW..DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
		WHERE 
			LN10.LC_STA_LON10 = 'R'
			AND LN10.LA_CUR_PRI > 0.00
		GROUP BY
			LN10.BF_SSN,
			LN10.LF_LON_CUR_OWN
	) LN10
		ON LN20.BF_SSN = LN10.BF_SSN
	INNER JOIN UDW..PD30_PRS_ADR PD30
		ON PD30.DF_PRS_ID = PD10.DF_PRS_ID
		AND PD30.DC_ADR = 'L'
	INNER JOIN /*Determine best phone numbers to call in the dialer using consent and a ranking on type*/
	(
		SELECT DISTINCT
			DF_PRS_ID,
			MAX(IIF(OverallRank = 1, PHN, '')) AS PHN_H,
			MAX(IIF(OverallRank = 1, DC_ALW_ADL_PHN, '')) AS PHN_H_CON,
			MAX(IIF(OverallRank = 2, PHN, '')) AS PHN_A,
			MAX(IIF(OverallRank = 2, DC_ALW_ADL_PHN, '')) AS PHN_A_CON,
			MAX(IIF(OverallRank = 3, PHN, '')) AS PHN_W,
			MAX(IIF(OverallRank = 3, DC_ALW_ADL_PHN, '')) AS PHN_W_CON
		FROM
		(
			SELECT DISTINCT
				PD40.DF_PRS_ID,
				ISNULL(PD40.DN_DOM_PHN_ARA,'') + ISNULL(PD40.DN_DOM_PHN_XCH,'') + ISNULL(PD40.DN_DOM_PHN_LCL,'') AS PHN,
				PD40.DC_PHN,
				CASE WHEN PD40.DC_ALW_ADL_PHN IN ('L','X','P') 
					THEN 'Y'
					ELSE 'N'
				END AS DC_ALW_ADL_PHN,
				PD40.DC_ALW_ADL_PHN AS Consent,
				/*Rank phones by category and type*/
				DENSE_RANK() OVER (PARTITION BY PD40.DF_PRS_ID ORDER BY Ranks.ConsentRank, Ranks.TypeRank) AS OverallRank
			FROM
				UDW..PD42_PRS_PHN PD40
				INNER JOIN
				(
					SELECT
						*,
						CASE WHEN DC_PHN = 'H' THEN 1
								WHEN DC_PHN = 'A' THEN 2
								WHEN DC_PHN = 'W' THEN 3
								WHEN DC_PHN = 'M' THEN 4
						END AS TypeRank, --H A W M TYPE
						CASE WHEN DC_ALW_ADL_PHN = 'N' THEN 1
								WHEN DC_ALW_ADL_PHN = 'P' THEN 2 
								WHEN DC_ALW_ADL_PHN = 'X' THEN 3
								WHEN DC_ALW_ADL_PHN = 'L' THEN 4
								WHEN DC_ALW_ADL_PHN = 'U' THEN 5 
						END AS ConsentRank--N P X L U CONSENT
					FROM
						UDW..PD42_PRS_PHN PD40
					WHERE
						PD40.DI_PHN_VLD = 'Y'
						AND PD40.DC_NO_HME_PHN != 'J'
				) Ranks
					ON Ranks.DF_PRS_ID = PD40.DF_PRS_ID
					AND Ranks.DC_PHN = PD40.DC_PHN
					AND Ranks.DC_ALW_ADL_PHN = PD40.DC_ALW_ADL_PHN
			WHERE
				PD40.DI_PHN_VLD = 'Y'
				AND PD40.DC_NO_HME_PHN != 'J'
		) Ranked
		WHERE
			Ranked.OverallRank IN (1,2,3)
		GROUP BY
			DF_PRS_ID
	) PhoneRank
		ON PhoneRank.DF_PRS_ID = PD10.DF_PRS_ID
	LEFT JOIN /*GETS THE AMOUNT DUE*/
	(
		SELECT 
			LN80.BF_SSN,
			SUM(ISNULL(LN80.LA_BIL_PAS_DU,0) + ISNULL(LN80.LA_BIL_DU_PRT,0) + ISNULL(LN80.LA_LTE_FEE_OTS_PRT,0)) AS AMTDU
		FROM 
			UDW..LN80_LON_BIL_CRF LN80
			INNER JOIN 
			(
				SELECT
					BIL_SEQ.BF_SSN,
					BIL_SEQ.LD_BIL_CRT,
					MAX(LN_SEQ_BIL_WI_DTE) AS LN_SEQ_BIL_WI_DTE
				FROM
					UDW..LN80_LON_BIL_CRF BIL_SEQ
					INNER JOIN 
					(
						SELECT 
							LN80.BF_SSN,
							MAX(LD_BIL_CRT) AS LD_BIL_CRT
						FROM 
							UDW..LN80_LON_BIL_CRF LN80
							INNER JOIN 
							(
								SELECT DISTINCT
									FB10.BF_SSN
								FROM
									UDW..FB10_BR_FOR_REQ FB10
									INNER JOIN UDW..PD10_PRS_NME PD10
										ON PD10.DF_PRS_ID = FB10.BF_SSN
									INNER JOIN UDW..LN60_BR_FOR_APV LN60
										ON LN60.BF_SSN = FB10.BF_SSN
										AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
									INNER JOIN UDW..LN10_LON LN10
										ON LN10.BF_SSN = LN60.BF_SSN
										AND LN10.LN_SEQ = LN60.LN_SEQ
										AND LN10.LA_CUR_PRI > 0
										AND LN10.LC_STA_LON10 = 'R'
								WHERE
									LN60.LC_STA_LON60 = 'A'
									AND FB10.LC_STA_FOR10 = 'A'
									AND FB10.LC_FOR_STA = 'A' --denied records cant have this active
									AND LN60.LC_FOR_RSP != '003'
									AND FB10.LC_FOR_TYP = '40'
									AND CAST(GETDATE() AS DATE) BETWEEN CAST(LN60.LD_FOR_BEG AS DATE) AND CAST(LN60.LD_FOR_END AS DATE)
							) FORB
								ON FORB.BF_SSN = LN80.BF_SSN
						WHERE 
							LC_STA_LON80 = 'A'
							AND LC_BIL_TYP_LON = 'P'
						GROUP BY
							LN80.BF_SSN
					) BIL_DT
						ON BIL_DT.BF_SSN = BIL_SEQ.BF_SSN
						AND BIL_DT.LD_BIL_CRT = BIL_SEQ.LD_BIL_CRT
				WHERE 
					BIL_SEQ.LC_STA_LON80 = 'A'
					AND BIL_SEQ.LC_BIL_TYP_LON = 'P'
				GROUP BY 
					BIL_SEQ.BF_SSN,
					BIL_SEQ.LD_BIL_CRT
			) THE_BILL
				ON LN80.BF_SSN = THE_BILL.BF_SSN
				AND LN80.LD_BIL_CRT = THE_BILL.LD_BIL_CRT
				AND LN80.LN_SEQ_BIL_WI_DTE = THE_BILL.LN_SEQ_BIL_WI_DTE
			INNER JOIN UDW..PD10_PRS_NME PD10
				ON LN80.BF_SSN = PD10.DF_PRS_ID
			INNER JOIN UDW..LN10_LON LN10
				ON LN80.BF_SSN = LN10.BF_SSN
				AND LN80.LN_SEQ = LN10.LN_SEQ
			INNER JOIN UDW..LN20_EDS LN20
				ON LN20.BF_SSN = LN10.BF_SSN
				AND LN20.LN_SEQ = LN10.LN_SEQ
				AND LN20.LC_STA_LON20 = 'A'
		WHERE 
			LN80.LC_STA_LON80 = 'A'
			AND LN10.LA_CUR_PRI > 0
			AND LN10.LC_STA_LON10 = 'R'
		GROUP BY
			LN80.BF_SSN
	) BILL_DATA
		ON LN20.BF_SSN = BILL_DATA.BF_SSN	
	LEFT JOIN /*DW01 failed load fallback*/
	(
		SELECT DISTINCT
			DF_PRS_ID,
			CASE WHEN DC_DTH_STA = '01' THEN 'Alleged Death'
			     WHEN DC_DTH_STA = '02' THEN 'Verified Death'
			END AS Reason
		FROM
			UDW..PD21_GTR_DTH
		WHERE
			DC_DTH_STA IN('01','02')

		UNION ALL

		SELECT DISTINCT 
			PD22.DF_PRS_ID,
			CASE WHEN PD23.DC_DSA_STA = '07' THEN 'Alleged TPD'
				 WHEN PD23.DC_DSA_STA = '09' THEN 'Verified TPD'
			END AS Reason
		FROM
			UDW..PD22_PRS_DSA PD22 
			INNER JOIN UDW..PD23_GTR_DSA PD23 
				ON PD23.DF_PRS_ID = PD22.DF_PRS_ID 
				AND PD23.DD_DSA_RPT = PD22.DD_DSA_RPT
			LEFT JOIN UDW..LN10_LON LN10
				ON LN10.BF_SSN = PD22.DF_PRS_ID
				AND LN10.LD_LON_1_DSB > PD22.DD_DSA
		WHERE
			LN10.BF_SSN IS NULL --All disbursements must be before DD_DSA
			AND PD23.DC_DSA_STA = '09'
			OR
			(
				PD23.DC_DSA_STA = '07'
				AND CAST(GETDATE() AS DATE) BETWEEN PD22.DD_PRS_DSA_SPS_SR AND PD22.DD_PRS_DSA_SPS_END 
			)
		
		UNION ALL

		SELECT DISTINCT
			DF_PRS_ID,
			CASE WHEN DC_BKR_STA = '04' THEN 'Alleged Bankruptcy'
				 WHEN DC_BKR_STA = '06' THEN 'Verified Bankruptcy'
			END AS Reason
		FROM
			UDW..PD24_PRS_BKR
		WHERE
			DC_BKR_STA IN('04','06')		
	) BadStatuses
		ON BadStatuses.DF_PRS_ID = LN20.BF_SSN
WHERE 
	BadStatuses.DF_PRS_ID IS NULL
	AND FORB.LD_FOR_END BETWEEN DATEADD(dd, -(DATEPART(dw, @CURRENTDATE)-1), @CURRENTDATE) AND DATEADD(dd, 7-(DATEPART(dw, @CURRENTDATE)), @CURRENTDATE)