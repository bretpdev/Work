/*NOTE:  you must open the DATAFILE in the PROC IMPORT step below and enter the password (SecureX$salliemae) before running this job*/

PROC IMPORT
		OUT=SLMA_TABX
		DATAFILE='Q:\CS Systems Support\Split Loan Transfers\XXXX-XXXX Transfer\Sallie Mae Transfer - Jan XXXX\Transfers Issue Log-CORNERSTONE Onboarding X-XX-XX updated X-XX-encryp.xlsx'
		DBMS=EXCEL
		REPLACE;
	RANGE="tab X$"; 
RUN;

PROC SQL;
	CREATE TABLE SLMA AS
		SELECT DISTINCT
			SUBSTR(SSN,X,X) AS BF_SSN
		FROM
			SLMA_TABX
	;
QUIT;
		
LIBNAME LEGEND REMOTE SERVER=LEGEND SLIBREF=WORK;

DATA LEGEND.SLMA; SET SLMA; RUN;

RSUBMIT;
LIBNAME PKUB DBX DATABASE=DNFPUTDL OWNER=PKUB;

PROC SQL;
	CREATE TABLE SLMA_INFO AS
		SELECT DISTINCT
			SLMA.BF_SSN,
			FSXX.LN_SEQ,
			FSXX.LF_FED_AWD||PUT(FSXX.LN_FED_AWD_SEQ,ZX.) AS Award_ID,
     		RSXX.BD_ANV_QLF_IBR AS ICR_Anniv_Date,
     		FSXX.LA_ICR_BAL_RPY_SR AS Princ_Bal_at_Repayment,
     		RSXX.LA_PMN_STD_PAY AS Perm_Standard_Amt
	 	FROM
			SLMA
			JOIN PKUB.FSXX_DL_LON FSXX
				ON SLMA.BF_SSN = FSXX.BF_SSN
			LEFT JOIN PKUB.RSXX_IBR_IRL_LON RSXX
				ON FSXX.BF_SSN = RSXX.BF_SSN
				AND FSXX.LN_SEQ = RSXX.LN_SEQ
			LEFT JOIN PKUB.RSXX_IBR_RPS RSXX
				ON RSXX.BF_SSN = RSXX.BF_SSN
				AND RSXX.BD_CRT_RSXX = RSXX.BD_CRT_RSXX
				AND RSXX.BN_IBR_SEQ = RSXX.BN_IBR_SEQ
		ORDER BY
			SLMA.BF_SSN
	;

	CREATE TABLE EARLIEST_IBR_BILL AS
		SELECT DISTINCT
			SI.BF_SSN,
			SI.LN_SEQ,
			MIN(LNXX.LD_BIL_DU_LON) AS LD_BIL_DU_LON
		FROM
			SLMA_INFO SI
			JOIN PKUB.LNXX_LON_BIL_CRF LNXX
				ON SI.BF_SSN = LNXX.BF_SSN
				AND SI.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_LON_STA_BIL = 'A'
				AND LNXX.LA_BIL_CUR_DU = X
			JOIN PKUB.LNXX_LON LNXX
				ON SI.BF_SSN = LNXX.BF_SSN
				AND SI.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LD_BIL_DU_LON GT LNXX.LD_LON_IBR_ENT
		GROUP BY
			SI.BF_SSN,
			SI.LN_SEQ
	;

	CREATE TABLE EARLIEST_IBR_PMT AS
		SELECT DISTINCT
			BILL.BF_SSN,
			BILL.LN_SEQ,
			MIN(LNXX.LD_FAT_EFF) AS IBR_DATE
		FROM
			EARLIEST_IBR_BILL BILL
			JOIN PKUB.LNXX_LON_BIL_CRF LNXX
				ON BILL.BF_SSN = LNXX.BF_SSN
				AND BILL.LN_SEQ = LNXX.LN_SEQ
				AND BILL.LD_BIL_DU_LON = LNXX.LD_BIL_DU_LON
				AND LNXX.LD_BIL_DU_LON LT 'XXJULXXXX'D
				AND LNXX.LA_TOT_BIL_STS = LNXX.LA_BIL_CUR_DU
			JOIN PKUB.RMXX_BR_RMT RMXX
				ON LNXX.BF_SSN = RMXX.BF_SSN
				AND LNXX.LD_BIL_CRT = RMXX.LD_BIL_CRT
				AND LNXX.LN_SEQ_BIL_WI_DTE = RMXX.LN_SEQ_BIL_WI_DTE
			JOIN PKUB.LNXX_LON_PAY_FAT LNXX
				ON BILL.BF_SSN = LNXX.BF_SSN
				AND BILL.LN_SEQ = LNXX.LN_SEQ
				AND RMXX.LD_RMT_BCH_INI = LNXX.LD_RMT_BCH_INI
				AND RMXX.LC_RMT_BCH_SRC_IPT = LNXX.LC_RMT_BCH_SRC_IPT
				AND RMXX.LN_RMT_BCH_SEQ = LNXX.LN_RMT_BCH_SEQ
				AND RMXX.LN_RMT_SEQ = LNXX.LN_RMT_SEQ
				AND RMXX.LN_RMT_ITM = LNXX.LN_RMT_ITM 
				AND RMXX.LN_RMT_ITM_SEQ = LNXX.LN_RMT_ITM_SEQ
			JOIN PKUB.LNXX_FIN_ATY LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LN_FAT_SEQ = LNXX.LN_FAT_SEQ
				AND LNXX.LD_FAT_EFF GE 'XXJULXXXX'D
				AND LNXX.PC_FAT_TYP = 'XX'
				AND LNXX.PC_FAT_SUB_TYP IN ('XX', 'XX', 'XX', 'XX', 'XX', 'XX', 'XX', 'XX', 'XX')
				AND LNXX.LC_FAT_REV_REA = ''
				AND LNXX.LC_STA_LONXX = 'A'
		GROUP BY
			BILL.BF_SSN,
			BILL.LN_SEQ
	;

	CREATE TABLE IBR_EH_DEF AS
		SELECT DISTINCT
			SI.BF_SSN,
			SI.LN_SEQ,
			CASE
				WHEN 'XXJULXXXX'D BETWEEN LNXX.LD_DFR_BEG AND LNXX.LD_DFR_END THEN 'XXJULXXXX'D
				ELSE LNXX.LD_DFR_BEG
			END AS LD_DFR_BEG
		FROM
			SLMA_INFO SI	
			JOIN PKUB.DFXX_BR_DFR_REQ DFXX
				ON SI.BF_SSN = DFXX.BF_SSN
			JOIN PKUB.LNXX_BR_DFR_APV LNXX
				ON DFXX.BF_SSN = LNXX.BF_SSN
				AND DFXX.LF_DFR_CTL_NUM = LNXX.LF_DFR_CTL_NUM
				AND SI.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_DFR_RSP NE 'XXX'
				AND LNXX.LC_STA_LONXX = 'A'
				AND DFXX.LC_DFR_STA = 'A'
				AND DFXX.LC_STA_DFRXX = 'A'
				AND DFXX.LC_DFR_TYP = 'XX'
				AND LNXX.LD_DFR_BEG GE 'XXJULXXXX'D
	;

	CREATE TABLE EARLIEST_IBR_EH_DEF AS
		SELECT DISTINCT
			BF_SSN,
			LN_SEQ,
			MIN(LD_DFR_BEG) AS IBR_DATE
		FROM
			IBR_EH_DEF
		GROUP BY
			BF_SSN,
			LN_SEQ
	;

	CREATE TABLE IBR_FORGIVE_START AS
		SELECT
			BF_SSN,
			LN_SEQ,
			MIN(IBR_DATE) AS IBR_Forgiveness_Start_Date
		FROM
			(
				SELECT * FROM EARLIEST_IBR_PMT
				UNION
				SELECT * FROM EARLIEST_IBR_EH_DEF
			)
		GROUP BY
			BF_SSN,
			LN_SEQ
	;	

	CREATE TABLE IBR_FORGIVENESS_CNTR AS
		SELECT
			SI.BF_SSN,
			SI.LN_SEQ,
			FLOOR(SUM((LNXX.LD_DFR_END - LNXX.LD_DFR_BEG + X) / XXX * XX)) AS IBR_Forgiveness_Month_Counter
		FROM
			SLMA_INFO SI
			JOIN PKUB.DFXX_BR_DFR_REQ DFXX
				ON SI.BF_SSN = DFXX.BF_SSN
			JOIN PKUB.LNXX_BR_DFR_APV LNXX
				ON DFXX.BF_SSN = LNXX.BF_SSN
				AND DFXX.LF_DFR_CTL_NUM = LNXX.LF_DFR_CTL_NUM
				AND SI.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LC_DFR_RSP NE 'XXX'
				AND LNXX.LC_STA_LONXX = 'A'
				AND DFXX.LC_DFR_STA = 'A'
				AND DFXX.LC_STA_DFRXX = 'A'
				AND DFXX.LC_DFR_TYP = 'XX'
				AND 
					(
						LNXX.LD_DFR_BEG GE 'XXJULXXXX'D
						OR 'XXJULXXXX'D BETWEEN LNXX.LD_DFR_BEG AND LNXX.LD_DFR_END
					)
		GROUP BY
			SI.BF_SSN,
			SI.LN_SEQ
	;

	CREATE TABLE IBR_PMT_CNTR AS
		SELECT DISTINCT
			SI.BF_SSN,
			SI.LN_SEQ,
			CASE
				WHEN LNXX.LC_TYP_SCH_DIS IN ('IB', 'IL') THEN X
				WHEN LNXX.LA_TOT_BIL_STS GE LNXX.LA_STD_STD_PAY THEN X
				ELSE X
			END AS CNT
		FROM
			SLMA_INFO SI
			JOIN PKUB.LNXX_LON_BIL_CRF LNXX
				ON SI.BF_SSN = LNXX.BF_SSN
				AND SI.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LD_BIL_DU_LON > 'XXJULXXXX'D
				AND LNXX.LC_LON_STA_BIL = 'A'
			JOIN PKUB.RMXX_BR_RMT RMXX
				ON LNXX.BF_SSN = RMXX.BF_SSN
				AND LNXX.LD_BIL_CRT = RMXX.LD_BIL_CRT
				AND LNXX.LN_SEQ_BIL_WI_DTE = RMXX.LN_SEQ_BIL_WI_DTE
			JOIN PKUB.LNXX_LON_PAY_FAT LNXX
				ON SI.BF_SSN = LNXX.BF_SSN
				AND SI.LN_SEQ = LNXX.LN_SEQ
				AND RMXX.LD_RMT_BCH_INI = LNXX.LD_RMT_BCH_INI
				AND RMXX.LC_RMT_BCH_SRC_IPT = LNXX.LC_RMT_BCH_SRC_IPT
				AND RMXX.LN_RMT_BCH_SEQ = LNXX.LN_RMT_BCH_SEQ
				AND RMXX.LN_RMT_SEQ = LNXX.LN_RMT_SEQ
				AND RMXX.LN_RMT_ITM = LNXX.LN_RMT_ITM 
				AND RMXX.LN_RMT_ITM_SEQ = LNXX.LN_RMT_ITM_SEQ
			JOIN PKUB.LNXX_FIN_ATY LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LN_FAT_SEQ = LNXX.LN_FAT_SEQ
				AND LNXX.LC_FAT_REV_REA = ''
				AND LNXX.LC_STA_LONXX = 'A'
				AND LNXX.LD_FAT_EFF GE 'XXJULXXXX'D
			JOIN PKUB.LNXX_LON_RPS LNXX
				ON SI.BF_SSN = LNXX.BF_SSN
				AND SI.LN_SEQ = LNXX.LN_SEQ
			JOIN PKUB.LNXX_LON_RPS_SPF LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
				AND LNXX.LA_TOT_BIL_STS = LNXX.LA_RPS_ISL
			JOIN PKUB.LNXX_LON LNXX
				ON SI.BF_SSN = LNXX.BF_SSN
				AND SI.LN_SEQ = LNXX.LN_SEQ
		;	

	CREATE TABLE EXPANDED_SLMA_INFO AS
		SELECT
			SI.*,
			IFS.IBR_Forgiveness_Start_Date,
			IFC.IBR_Forgiveness_Month_Counter,
			IPC.Number_of_Qual_Payments_IBR
		FROM
			SLMA_INFO SI
			LEFT JOIN IBR_FORGIVE_START IFS
				ON SI.BF_SSN = IFS.BF_SSN
				AND SI.LN_SEQ = IFS.LN_SEQ
			LEFT JOIN IBR_FORGIVENESS_CNTR IFC
				ON SI.BF_SSN = IFC.BF_SSN
				AND SI.LN_SEQ = IFC.LN_SEQ				
			LEFT JOIN 
				(
					SELECT
						BF_SSN,
						LN_SEQ,
						COUNT(CNT) AS Number_of_Qual_Payments_IBR
					FROM
						IBR_PMT_CNTR
					GROUP BY
						BF_SSN,
						LN_SEQ
				) IPC
				ON SI.BF_SSN = IPC.BF_SSN
				AND SI.LN_SEQ = IPC.LN_SEQ
	;

QUIT;

DATA EXPANDED_SLMA_INFO;
	SET EXPANDED_SLMA_INFO;

	FORMAT IBR_Forgiveness_Start_Date DATEX.;
RUN;

ENDRSUBMIT;

DATA EXPANDED_SLMA_INFO; SET LEGEND.EXPANDED_SLMA_INFO; RUN;

PROC EXPORT
		DATA=EXPANDED_SLMA_INFO
		OUTFILE='T:\SLMA_INFO_TABX.XLSX'
		REPLACE;
RUN;
