%LET BANA = %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\EA27_BANA.dsn; update_lock_typ=nolock; bl_keepnulls=no");
LIBNAME BANA ODBC &BANA ;

PROC SQL;
	CREATE TABLE POP_25852 AS
		SELECT
			P.BORROWERSSN AS BF_SSN,
			P.LOAN_NUMBER,
			MAP.LN_SEQ,
			F.NextPaymentDueDate,
			P.RemainingLoanTerm,
			P.RepaymentPlanCode,
			S.PartialFinancialHardshipAmount,
			S.PermanentStandardPayAmount,
			S.IBRForgiveStartDate,
			P.MonthlyPaymentAmount,
			DAY(DATEPART(P.NextPaymentDueDate)) AS DUE_DATE,
			DC.InterestRate

		FROM
			BANA._03PaymentDataRecord P
			INNER JOIN BANA.COMPASSLOANMAPPING MAP
				ON MAP.BORROWERSSN = P.BORROWERSSN
				AND MAP.LOAN_NUMBER = P.LOAN_NUMBER
			INNER JOIN BANA._05SupplementalBorrowerRecord S
				ON P.BORROWERSSN = S.BORROWERSSN
				AND P.LOAN_NUMBER = S.LOAN_NUMBER
			INNER JOIN BANA._07_08DisbClaimEnrollRecord DC
				ON DC.BORROWERSSN = P.BORROWERSSN
				AND DC.LOAN_NUMBER = P.LOAN_NUMBER
			LEFT JOIN
			(
				SELECT
					BORROWERSSN,
					LOAN_NUMBER,
					MIN(NextPaymentDueDate) AS NextPaymentDueDate
				FROM
					BANA._03PaymentDataRecord 
				GROUP BY
					BORROWERSSN,
					LOAN_NUMBER
			) F
				ON F.BORROWERSSN = P.BORROWERSSN
				AND F.LOAN_NUMBER = P.LOAN_NUMBER
		WHERE
			RemainingLoanTerm = 0
			and  RepaymentPlanCode not in ('ib','ip')
;
QUIT;

DATA DUSTER.POP_25852;
SET POP_25852;
RUN;

/*TEST*/
/*LIBNAME  DUSTER  REMOTE  SERVER=QADBD004 SLIBREF=WORK  ;*/

/*LIVE*/
LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;

RSUBMIT;  

/*%let DB = DLGSWQUT;  *This is test;*/
%let DB = DLGSUTWH;  *This is live;

LIBNAME OLWHRM1 DB2 DATABASE=&DB OWNER=OLWHRM1;
PROC SQL;
	CREATE TABLE POP_25852 AS
		SELECT DISTINCT
			P.*,
			LN10.LA_CUR_PRI
		FROM
			POP_25852 P
			INNER JOIN OLWHRM1.LN10_LON LN10	
				ON P.BF_SSN = LN10.BF_SSN
				AND P.LN_SEQ = LN10.LN_SEQ
		WHERE
			LN10.LF_LON_CUR_OWN = '829769'
			AND LN10.LA_CUR_PRI > 0
			AND LN10.LC_STA_LON10 = 'P'		
;
	CREATE TABLE RS10 AS
		SELECT DISTINCT
			D.BF_SSN,
			D.LN_SEQ,
			MAX(COALESCE(RS10.LN_RPS_SEQ,0)) AS LN_RPS_SEQ
		FROM
			 POP_25852 D
		LEFT JOIN OLWHRM1.RS10_BR_RPD RS10
			ON D.BF_SSN = RS10.BF_SSN
		GROUP BY 
			D.BF_SSN
		ORDER BY 
			D.BF_SSN,
			D.LN_SEQ
;
QUIT;
ENDRSUBMIT;	

DATA POP_25852;
SET DUSTER.POP_25852;
RUN;
	
DATA RS10; /*make rs10 on a loan level*/
RETAIN COUNT 0;
SET DUSTER.RS10;
BY BF_SSN LN_SEQ;
COUNT = (COUNT + 1);
NEW_LN_RPS_SEQ = (LN_RPS_SEQ + (COUNT));
IF LAST.BF_SSN THEN
	COUNT = 0;
RUN;


PROC SQL;
	CREATE TABLE NON_IB_POP AS
		SELECT
			*
		FROM
			POP_25852
		WHERE
			RepaymentPlanCode ^= 'IB'
;
QUIT;

PROC SQL;
	CREATE TABLE RS10_NON_IB_FINAL AS 
		SELECT DISTINCT
			D.BF_SSN,
			R.NEW_LN_RPS_SEQ AS LN_RPS_SEQ,
			TODAY() AS LD_STA_RPST10,
			'A' AS LC_STA_RPST10,
			'M' AS LC_FRQ_PAY,
			'N' AS LI_SIG_RPD_DIS,
			CASE
				WHEN DAY(DATEPART(D.NextPaymentDueDate)) = 31 THEN INTNX('day' ,DATEPART(D.NextPaymentDueDate), -3, 'same')
				WHEN DAY(DATEPART(D.NextPaymentDueDate)) = 30 THEN INTNX('day' ,DATEPART(D.NextPaymentDueDate), -2, 'same')
				WHEN DAY(DATEPART(D.NextPaymentDueDate)) = 29 THEN INTNX('day' ,DATEPART(D.NextPaymentDueDate), -1, 'same')
				ELSE DATEPART(D.NextPaymentDueDate)
			END AS LD_RPS_1_PAY_DU,
			'1' AS LC_RPD_DIS,
			INTNX('month' ,DATEPART(D.NextPaymentDueDate), -1, 'same')  as LD_SNT_RPD_DIS,
			'NULL' as LD_RTN_RPD_DIS,
			'DIG TIMESTAMP' AS LF_LST_DTS_RS10,
			'NULL' AS LC_RPS_OPT_PRT,
			'NULL' AS LF_USR_RPS_REQ ,
			D.DUE_DATE AS LN_BR_REQ_DU_DAY,
			'NULL' as BD_CRT_RS05,
			'NULL' as BN_IBR_SEQ,
			'NULL' AS LC_RPY_FIX_TRM_AMT,
			'NULL' AS LC_CAP_TRG_LVE_PFH 
		FROM
			NON_IB_POP D
			INNER JOIN RS10 R
				ON RS10.BF_SSN = D.BF_SSN
				AND RS10.LN_SEQ = D.LN_SEQ
;
QUIT;

DATA RS10_NON_IB_FINAL;
	SET RS10_NON_IB_FINAL;
	FORMAT LD_STA_RPST10 MMDDYY10.;
FORMAT LD_RPS_1_PAY_DU MMDDYY10.;
FORMAT LD_SNT_RPD_DIS MMDDYY10.;
RUN;

PROC EXPORT DATA = WORK.RS10_NON_IB_FINAL 
            OUTFILE = "T:\NH 25852 R2 RS10 NON IBR.xlsx"  
            DBMS = EXCEL
			REPLACE;
     SHEET="RS10 ADD"; 
RUN;

PROC SQL;
	CREATE TABLE LN65_NON_IB_FINAL AS 
		SELECT DISTINCT
			D.BF_SSN,
			D.LN_SEQ,
			R.NEW_LN_RPS_SEQ AS LN_RPS_SEQ,
			'NULL' AS LA_RPD_INT_DIS,
			D.InterestRate AS LR_APR_RPD_DIS,
			'NULL' AS LA_TOT_RPD_DIS ,
			D.LA_CUR_PRI AS LA_CPI_RPD_DIS,
			'NULL' AS LR_INT_RPD_DIS ,
			'NULL' AS LA_ANT_CAP ,
			'NULL' AS LD_GRC_PRD_END ,
			TODAY() AS LD_CRT_LON65,
			'A' AS LC_STA_LON65,
			'DIG TIMESTAMP' AS LF_LST_DTS_LN65,
			CASE
				WHEN D.RepaymentPlanCode IN ('A','AI','G3','E2','E3','O','C','I1','I3','I4','L','P','Q','R') THEN 'L'
				WHEN D.RepaymentPlanCode IN ('G','D1','D2','D3','D4','D5','D6','D7') THEN 'G'
				WHEN D.RepaymentPlanCode = 'I' THEN 'IS'
				WHEN D.RepaymentPlanCode = 'B1' THEN 'EL'
				WHEN D.RepaymentPlanCode = 'K1' THEN 'EG'
				WHEN D.RepaymentPlanCode IN ('IL','IP') THEN 'IL'
				WHEN D.RepaymentPlanCode = 'Z1' THEN 'S2'
				ELSE D.RepaymentPlanCode 
			END AS LC_TYP_SCH_DIS,
			'NULL' AS LA_ACR_INT_RPD,
			'NULL' AS LA_ANT_SUP_FEE,
			'NULL' AS LN_RPD_MAX_TRM_REQ,
			'NULL' AS LD_RPD_MAX_TRM_SR,
			'NULL' AS LC_RPD_INA_REA,
			1 AS LC_RPD_DIS,
			'NULL' as LR_CLC_INC_SCH,
			'NULL' as LA_CLC_RPY_SCH,
			'NULL' AS LI_ICR_RPD_NEG_AMR 
		FROM
			NON_IB_POP D
			INNER JOIN RS10 R
				ON RS10.BF_SSN = D.BF_SSN
				AND RS10.LN_SEQ = D.LN_SEQ
;
QUIT;

DATA LN65_NON_IB_FINAL;
	SET LN65_NON_IB_FINAL;
	FORMAT LD_CRT_LON65 MMDDYY10.;
	FORMAT LA_CPI_RPD_DIS 12.2;
RUN;

PROC EXPORT DATA = WORK.LN65_NON_IB_FINAL 
            OUTFILE = "T:\NH 25852 R2 LN65 NON IBR.xlsx"  
            DBMS = EXCEL
			REPLACE;
     SHEET="LN65 ADD"; 
RUN;

PROC SQL;
	CREATE TABLE LN66_NON_IB_FINAL AS 
		SELECT DISTINCT
			D.BF_SSN,
			D.LN_SEQ,
			R.NEW_LN_RPS_SEQ AS LN_RPS_SEQ,
			'1' AS LN_GRD_RPS_SEQ,
			D.LA_CUR_PRI AS LA_RPS_ISL,
			TODAY() AS LD_CRT_LON66,
			CASE
				WHEN D.LA_CUR_PRI > 100 THEN 2
				ELSE 1
			END AS LN_RPS_TRM ,
			'DIG TIMESTAMP' AS LF_LST_DTS_LN66,
			'NULL' AS LA_PRI_RDC_GRD,
			'NULL' AS LN_PRI_RDC_GRD_TRM,
			'NULL' as LA_PRI_ATU_PAY,
			'NULL' as LD_RPYE_FGV
		FROM
			NON_IB_POP D
			INNER JOIN RS10 R
				ON RS10.BF_SSN = D.BF_SSN 
				AND RS10.LN_SEQ = D.LN_SEQ
;
QUIT;
				
DATA LN66_NON_IB_FINAL;
	SET LN66_NON_IB_FINAL;
	FORMAT LD_CRT_LON66 MMDDYY10.;
	FORMAT LA_RPS_ISL 12.2;
RUN;

PROC EXPORT DATA = WORK.LN66_NON_IB_FINAL 
            OUTFILE = "T:\NH 25852 R2 LN66 NON IBR.xlsx"  
            DBMS = EXCEL
			REPLACE;
     SHEET="LN66 ADD"; 
RUN;



PROC SQL;
	CREATE TABLE ACH_POP_FINAL AS 
		SELECT DISTINCT
			BF_SSN,
			LN_SEQ,
			LA_RPS_ISL AS NEW_PAYMENT_AMT
		FROM
			LN66_NON_IB_FINAL P
			INNER JOIN bana.ACH_data A
				ON A.SSN = P.BF_SSN
;
QUIT;

PROC EXPORT DATA = WORK.ACH_POP_FINAL 
            OUTFILE = "T:\NH 25852_ACH.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="ACH POPULATION"; 
RUN;
