USE CDW
GO

SELECT DISTINCT
	CNH.*,
	CASE WHEN LNXX.BF_SSN IS NULL THEN 'No' ELSE 'Yes' END,
	'' AS NSLDS_CODE,
	LTRIM(RTRIM(ISNULL(PDXX.DM_PRS_X,''))) AS FIRST_NAME,
	LTRIM(RTRIM(ISNULL(PDXX.DM_PRS_LST,''))) AS LAST_NAME,
	ISNULL(CONVERT(VARCHAR(XX), PDXX.DD_BRT, XXX),'') AS BDAY,
	COALESCE(PHXX.DX_CNC_EML_ADR, PDXX.DX_ADR_EML,'') AS CURRENT_EMAIL,
	PDXX.PHN AS CURRENT_PHONE,
	PDXX.DX_STR_ADR_X + ' ' + PDXX.DX_STR_ADR_X AS STREET_ADDRESS,
	PDXX.DM_CT AS CITY,
	PDXX.DC_DOM_ST AS [STATE],
	PDXX.DF_ZIP_CDE AS ZIP,
	CASE WHEN LNXX.LA_CUR_PRI > X THEN 'Yes' ELSE 'No' END AS HAS_BALANCE,
	CASE WHEN FORB.BF_SSN IS NOT NULL THEN 'Yes' ELSE 'No' END AS CURRENTLY_IN_FORB,
	FORB.LD_FOR_BEG AS FORB_START_DATE,
	FORB.LD_FOR_END AS FORB_END_DATE,
	'' AS NOT_FORB_START_DATE,
	'' AS NOT_FORB_END_DATE,
	 ''  AS NOT_FORB_CON



FROM
	CDW..[CNH XXXXX] CNH
	INNER JOIN 
	(
	select
		bf_ssn,
		sum(la_cur_pri) as la_cur_pri
	from CDW..LNXX_LON LNXX
		group by bf_ssn
	) lnXX	ON LNXX.BF_SSN = CNH.SSN
	INNER JOIN CDW..PDXX_PRS_NME PDXX
		ON PDXX.DF_PRS_ID = CNH.SSN
	INNER JOIN CDW..PDXX_PRS_ADR PDXX
		ON PDXX.DF_PRS_ID = PDXX.DF_PRS_ID
		AND PDXX.DC_ADR = 'L'
	LEFT JOIN CDW..PHXX_CNC_EML PHXX
		ON PHXX.DF_SPE_ID = PDXX.DF_SPE_ACC_ID
		AND PHXX.DI_VLD_CNC_EML_ADR = 'Y'
	LEFT OUTER JOIN 
	(
		SELECT
			*,
			ROW_NUMBER() OVER (PARTITION BY DF_PRS_ID ORDER BY PriorityNumber) [EmailPriority]
		FROM
		(
			SELECT
				PDXX.DF_PRS_ID,
				PDXX.DX_ADR_EML,
				CASE 
					WHEN DC_ADR_EML = 'H' THEN X
					WHEN DC_ADR_EML = 'A' THEN X
					WHEN DC_ADR_EML = 'W' THEN X
				END [PriorityNumber]
			FROM
				CDW..PDXX_PRS_ADR_EML PDXX
			WHERE
				PDXX.DI_VLD_ADR_EML = 'Y'
		) Email
	) PDXX 
		ON PDXX.DF_PRS_ID = PDXX.DF_PRS_ID
		AND PDXX.EmailPriority = X --highest priority email only
LEFT JOIN 
(
SELECT
				PDXX.DF_PRS_ID,
				COALESCE(PDXX.DN_DOM_PHN_ARA,'') + COALESCE(PDXX.DN_DOM_PHN_XCH,'') + COALESCE(PDXX.DN_DOM_PHN_LCL,'') AS PHN,
						
				/*Rank phones by category and type*/
				DENSE_RANK() OVER (PARTITION BY PDXX.DF_PRS_ID ORDER BY Ranks.TYPERANK) AS OverallRank
			FROM
				CDW..PDXX_PRS_PHN PDXX
				INNER JOIN
				(
					SELECT
						*,
						CASE WHEN DC_PHN = 'H' THEN X
								WHEN DC_PHN = 'A' THEN X
								WHEN DC_PHN = 'W' THEN X
								WHEN DC_PHN = 'M' THEN X
						END AS TypeRank --H A W M TYPE
						
					FROM
						CDW..PDXX_PRS_PHN PDXX
					WHERE
						PDXX.DI_PHN_VLD = 'Y'
						AND PDXX.DC_NO_HME_PHN != 'J'
				) Ranks
					ON Ranks.DF_PRS_ID = PDXX.DF_PRS_ID
					AND Ranks.DC_PHN = PDXX.DC_PHN
					AND Ranks.DC_ALW_ADL_PHN = PDXX.DC_ALW_ADL_PHN
			WHERE
				PDXX.DI_PHN_VLD = 'Y'
				
) PDXX
	ON PDXX.DF_PRS_ID = CNH.SSN
	AND PDXX.OverallRank = X
LEFT JOIN
(
	SELECT	DISTINCT
		FBXX.BF_SSN,
		max(LNXX.LD_FOR_BEG) as LD_FOR_BEG,
		max(LNXX.LD_FOR_END) as LD_FOR_END
	FROM	
		CDW..FBXX_BR_FOR_REQ FBXX
		INNER JOIN CDW..LNXX_BR_FOR_APV LNXX
			ON LNXX.BF_SSN = FBXX.BF_SSN
			AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
	WHERE
		FBXX.LC_FOR_STA = 'A'
		AND LNXX.LC_STA_LONXX = 'A'
		AND FBXX.LC_STA_FORXX = 'A'
		--AND FBXX.LC_FOR_TYP = 'XX'
		AND GETDATE() BETWEEN LNXX.LD_FOR_BEG AND LNXX.LD_FOR_END
	group by fbXX.bf_ssn
)FORB
	ON FORB.BF_SSN = CNH.SSN


