/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTZ "&RPTLIB/ULWDWX.LWDWXRZ";
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTX "&RPTLIB/ULWDWX.LWDWXRX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";
FILENAME REPORTXX "&RPTLIB/ULWDWX.LWDWXRXX.&sysdate";

LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;
data _null_;
call symput('rsub',put(time(),timeX.));
run;
RSUBMIT;  
LIBNAME OLWHRMX DBX DATABASE=DLGSUTWH OWNER=OLWHRMX; 
LIBNAME SAS_TAB VX '/sas/whse/progrevw';
DATA _NULL_; 
SET SAS_TAB.LASTRUN_JOBS;
/*If the job must be run manually set this macro to the last day it successfully ran(last business day).*/
LAST_RUN = X;	*COMMENT FOR PROD, IT WILL READ THE DATE FROM A TABLE;
/*IF JOB = 'UTLWDWX' THEN DO;*/
	CALL SYMPUT('LAST_RUN',"'"||TRIM(LEFT(PUT(LAST_RUN,DATEXX.)))|| "'D");
	CALL SYMPUT('LAST_RUNPASS',"'"|| PUT(LAST_RUN,MMDDYYXX.) || "'");
/*END;*/
RUN;

%PUT &LAST_RUN &LAST_RUNPASS;

/*THE TABLES ARE GOING TO HAVE THE ACCOUNT NUMBER RATHER THAN SSN AS A PRIMARY KEY*/
/*THE ACCOUNT NUMBER IS BEING TAKEN FROM THE PDXX TABLE WHILE SSN IS DROPPED*/
%MACRO SSNXACC(TBL,ADKEY);
PROC SORT DATA=&TBL; BY BF_SSN &ADKEY; RUN;
DATA &TBL(DROP=BF_SSN);
MERGE SSNXACC(IN=B) &TBL(IN=A);
BY BF_SSN;
IF A AND B;
RUN;
PROC SORT DATA=&TBL; BY DF_SPE_ACC_ID &ADKEY; RUN;
%MEND;

/*******************************************
* BORROWER DATA
********************************************/
PROC SQL;
	CREATE TABLE SSNXACC AS
	SELECT DISTINCT A.DF_SPE_ACC_ID
		,B.BF_SSN
	FROM OLWHRMX.PDXX_PRS_NME A
	INNER JOIN OLWHRMX.LNXX_LON B
		ON A.DF_PRS_ID = B.BF_SSN
	where b.bf_ssn = 'XXXXXXXXX';
;
QUIT;
PROC SORT DATA=SSNXACC; BY BF_SSN; RUN;

/*******************************************
* ENDORSER DATA
********************************************/

DATA LNXX(DROP=LF_LST_DTS_LNXX);
	SET OLWHRMX.LNXX_EDS(KEEP=BF_SSN LC_STA_LONXX LC_EDS_TYP LF_LST_DTS_LNXX LN_SEQ);
	where bf_ssn = 'XXXXXXXXX';
	IF DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN ;
RUN; 
%SSNXACC(LNXX,LN_SEQ);

/*******************************************
* REFERENCE DATA
********************************************/
DATA BRXX(DROP=BF_LST_DTS_BRXX BD_RFR_LST_ATT_HME BD_RFR_LST_ATT_ALT BD_RFR_LST_CNC BD_LTR_SNT_RFR);
	SET OLWHRMX.BRXX_BR_REF(RENAME=(DF_PRS_ID_BR=BF_SSN  ) 
		KEEP=DF_PRS_ID_BR DF_PRS_ID_RFR BC_STA_BRXX BI_ATH_X_PTY BC_RFR_REL_BR 
			BM_RFR_X BM_RFR_LST BF_LST_DTS_BRXX BD_RFR_LST_CNC BD_RFR_LST_ATT_HME 
			BD_RFR_LST_ATT_ALT BD_LTR_SNT_RFR);
			where bf_ssn = 'XXXXXXXXX';
	format LST_ATT  LST_CNC mmddyyXX.;
	IF DATEPART(BF_LST_DTS_BRXX) >= &LAST_RUN;
	LST_CNC = MAX(BD_RFR_LST_CNC,BD_LTR_SNT_RFR);
	LST_ATT = MAX(BD_RFR_LST_ATT_HME,BD_RFR_LST_ATT_ALT);
RUN;
%SSNXACC(BRXX,DF_PRS_ID_RFR);

/*******************************************
* TRANSACTION DATA
********************************************/

DATA LNXX(DROP=LF_LST_DTS_LNXX ) ;
	SET OLWHRMX.LNXX_FIN_ATY(KEEP=BF_SSN LN_SEQ LN_FAT_SEQ LD_FAT_PST
		LD_FAT_EFF LC_STA_LONXX LA_FAT_CUR_PRI LA_FAT_NSI LA_FAT_LTE_FEE 
		LF_LST_DTS_LNXX PC_FAT_TYP PC_FAT_SUB_TYP LC_FAT_REV_REA );
	WHERE LC_FAT_REV_REA ^= 'X' and bf_ssn = 'XXXXXXXXX'
		AND DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN;
	LA_FAT_CUR_PRI = COALESCE(LA_FAT_CUR_PRI,X);
	LA_FAT_NSI = COALESCE(LA_FAT_NSI,X);
	LA_FAT_LTE_FEE = COALESCE(LA_FAT_LTE_FEE,X);
IF  PC_FAT_TYP IN ('XX','XX','XX','XX','XX','XX','XX','XX','XX','XX');
RUN;
%SSNXACC(LNXX,LN_SEQ LN_FAT_SEQ);

/*******************************************
* BILLING DATA
********************************************/
PROC SQL;
CONNECT TO DBX (DATABASE=DLGSUTWH);
CREATE TABLE LNXX AS
SELECT *
FROM CONNECTION TO DBX (
SELECT B.BF_SSN
	,B.LN_SEQ
	,B.LD_BIL_CRT
	,B.LN_SEQ_BIL_WI_DTE
	,B.LN_BIL_OCC_SEQ
	,B.LD_BIL_DU_LON
	,B.LC_STA_LONXX
	,COALESCE(b.la_bil_cur_du,X) AS LA_BIL_CUR_DU
	,COALESCE(b.la_bil_pas_du,X) AS la_bil_pas_du
	,COALESCE(b.la_tot_bil_sts,X) AS la_tot_bil_sts
	,LC_BIL_MTD
	,LC_IND_BIL_SNT
	,LC_STA_BILXX
	,E.LN_FAT_SEQ
	,E.LD_FAT_EFF
FROM OLWHRMX.BLXX_BR_BIL C
INNER JOIN OLWHRMX.LNXX_LON_BIL_CRF B
	ON B.BF_SSN = C.BF_SSN
	AND B.LD_BIL_CRT = C.LD_BIL_CRT
	AND B.LN_SEQ_BIL_WI_DTE = C.LN_SEQ_BIL_WI_DTE
LEFT OUTER JOIN OLWHRMX.LNXX_BIL_LON_FAT D
	ON D.BF_SSN = B.BF_SSN
	AND D.LN_SEQ = B.LN_SEQ
	AND D.LD_BIL_CRT = B.LD_BIL_CRT
	AND D.LN_SEQ_BIL_WI_DTE = B.LN_SEQ_BIL_WI_DTE
	AND D.LN_BIL_OCC_SEQ = B.LN_BIL_OCC_SEQ
	AND B.LA_BIL_CUR_DU = B.LA_TOT_BIL_STS
LEFT OUTER JOIN OLWHRMX.LNXX_FIN_ATY E
	ON D.BF_SSN = E.BF_SSN
	AND D.LN_SEQ = E.LN_SEQ
	AND D.LN_FAT_SEQ = E.LN_FAT_SEQ
WHERE B.LC_BIL_TYP_LON = 'P' 
	AND B.LD_LST_DTS_LNXX >= &LAST_RUNPASS);
	c.bf_ssn = 'XXXXXXXXX';
QUIT; 
proc sort data=lnXX; by bf_ssn ln_seq LD_BIL_CRT LN_SEQ_BIL_WI_DTE LN_BIL_OCC_SEQ LN_FAT_SEQ; run;
data lnXX(drop=LN_BIL_OCC_SEQ LN_FAT_SEQ); 
set lnXX;
where bf_ssn = 'XXXXXXXXX';
by bf_ssn ln_seq LD_BIL_CRT LN_SEQ_BIL_WI_DTE ;
if last.ln_seq_bil_wi_dte;
run;
%SSNXACC(LNXX,LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE);

/*******************************************
* DEFERMENT DATA
********************************************/
PROC SQL;
CREATE TABLE DFXX AS
	SELECT B.BF_SSN
		,B.LN_SEQ
		,B.LF_DFR_CTL_NUM
		,B.LN_DFR_OCC_SEQ
		,C.LC_DFR_TYP
		,C.LD_DFR_INF_CER
		,B.LD_DFR_BEG
		,B.LD_DFR_END
		,B.LC_LON_LEV_DFR_CAP
		,B.LC_STA_LONXX
		,C.LC_DFR_STA
		,C.LC_STA_DFRXX
	FROM OLWHRMX.LNXX_BR_DFR_APV B
	INNER JOIN OLWHRMX.DFXX_BR_DFR_REQ C
		ON B.BF_SSN = C.BF_SSN
		AND B.LF_DFR_CTL_NUM = C.LF_DFR_CTL_NUM
	WHERE (DATEPART(B.LF_LST_DTS_LNXX) >= &LAST_RUN 
			OR DATEPART(C.LF_LST_DTS_DFXX) >= &LAST_RUN)
			and b.bf_ssn = 'XXXXXXXXX';;

/*******************************************
* FORBEARANCE DATA
********************************************/
CREATE TABLE FBXX AS
	SELECT B.BF_SSN
		,B.LN_SEQ
		,B.LF_FOR_CTL_NUM
		,B.LN_FOR_OCC_SEQ
		,C.LC_FOR_TYP
		,C.LD_FOR_INF_CER
		,B.LD_FOR_BEG
		,B.LD_FOR_END
		,B.LC_LON_LEV_FOR_CAP 
		,B.LC_STA_LONXX
		,C.LC_FOR_STA
		,C.LC_STA_FORXX
		,C.LA_REQ_RDC_PAY
	FROM OLWHRMX.LNXX_BR_FOR_APV B
	INNER JOIN OLWHRMX.FBXX_BR_FOR_REQ C
		ON B.BF_SSN = C.BF_SSN
		AND B.LF_FOR_CTL_NUM = C.LF_FOR_CTL_NUM
	WHERE (DATEPART(B.LF_LST_DTS_LNXX) >= &LAST_RUN
			OR DATEPART(C.LF_LST_DTS_FBXX) >= &LAST_RUN)
			and b.bf_ssn = 'XXXXXXXXX';;
QUIT;
%SSNXACC(DFXX,LN_SEQ LF_DFR_CTL_NUM LN_DFR_OCC_SEQ);
%SSNXACC(FBXX,LN_SEQ LF_FOR_CTL_NUM LN_FOR_OCC_SEQ);

/*******************************************
* LOAN DATA
********************************************/
DATA LNXX(DROP=	LF_LST_DTS_LNXX ) ;
	SET OLWHRMX.LNXX_LON (KEEP= BF_SSN LN_SEQ LC_STA_LONXX LA_CUR_PRI LA_LON_AMT_GTR LD_END_GRC_PRD
		IC_LON_PGM LD_LON_X_DSB LF_LST_DTS_LNXX LD_PIF_RPT IF_GTR);
	WHERE DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN and bf_ssn = 'XXXXXXXXX';;
RUN;
%SSNXACC(LNXX,LN_SEQ);

/*******************************************
* ACH DATA
********************************************/
DATA LNXX(DROP=LF_LST_DTS_LNXX );
	SET OLWHRMX.LNXX_EFT_TO_LON(KEEP=BF_SSN LN_SEQ BN_EFT_SEQ LF_LST_DTS_LNXX 
		LD_EFT_EFF_END LC_STA_LNXX );
	where bf_ssn = 'XXXXXXXXX';
	IF DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN;
RUN;
PROC SORT DATA=LNXX; BY BF_SSN LN_SEQ DESCENDING BN_EFT_SEQ; RUN;
DATA LNXX;
SET LNXX;
BY BF_SSN LN_SEQ;
IF FIRST.LN_SEQ;
RUN;
%SSNXACC(LNXX,LN_SEQ);

/*******************************************
* REHAB DATA 
********************************************/
DATA LNXX(DROP= LF_LST_DTS_LNXX);
	SET OLWHRMX.LNXX_RPD_PIO_CVN (KEEP= BF_SSN LN_SEQ LF_LST_DTS_LNXX LD_LON_RHB_PCV);
	WHERE LD_LON_RHB_PCV ^= .
		and DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN and bf_ssn = 'XXXXXXXXX';;
RUN;
%SSNXACC(LNXX,LN_SEQ);

/*********************************************
* DELINQUENCY DATA
**********************************************/
DATA LNXX(DROP=LF_LST_DTS_LNXX LC_STA_LONXX);
	SET OLWHRMX.LNXX_LON_DLQ_HST(KEEP=BF_SSN LN_SEQ LN_DLQ_SEQ LD_DLQ_OCC
		LF_LST_DTS_LNXX LC_STA_LONXX LN_DLQ_MAX LD_DLQ_MAX);
	where bf_ssn = 'XXXXXXXXX';
	IF DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN;
	IF LC_STA_LONXX ^= 'X' OR (LC_STA_LONXX = 'X' AND LD_DLQ_MAX ^= TODAY() - X) THEN DO;
		LN_DLQ_MAX = X;
		LD_DLQ_OCC = .;
	END;
RUN;
PROC SORT DATA=LNXX; BY BF_SSN LN_SEQ DESCENDING LN_DLQ_SEQ; RUN;
DATA LNXX TILPCHECK;
SET LNXX(DROP=LN_DLQ_SEQ);
where bf_ssn = 'XXXXXXXXX';
BY BF_SSN LN_SEQ;
IF FIRST.LN_SEQ;
RUN;
%SSNXACC(LNXX,LN_SEQ);


/*******************************************
* CALL FORWARDING DATA
********************************************/
PROC SQL;
/*get TILP borrowers*/
CREATE TABLE TILP AS
	SELECT H.DF_SPE_ACC_ID
		,a.bf_ssn
		,'' AS CLUID
		,A.LN_SEQ
		,CASE 
			WHEN LN_DLQ_MAX >= XX THEN 'XX'
			ELSE 'XX'
		END AS FORWARDING
	FROM OLWHRMX.PDXX_PRS_NME H 
	INNER JOIN OLWHRMX.LNXX_LON A
		ON A.BF_SSN = H.DF_PRS_ID
	LEFT OUTER JOIN TILPCHECK B
		ON A.BF_SSN = B.BF_SSN
		AND A.LN_SEQ = B.LN_SEQ
	WHERE A.IC_LON_PGM = 'TILP';

/*	get all OneLINK borrowers*/
	CREATE TABLE ALL_ONELINK AS
		SELECT DISTINCT
			PDXX.DF_SPE_ACC_ID,
			PDXX.DF_PRS_ID AS BF_SSN,
			GAXX.AF_APL_ID||GAXX.AF_APL_ID_SFX AS CLUID,
			. AS LN_SEQ,
			'XX' AS FORWARDING
		FROM
			OLWHRMX.PDXX_PDM_INF PDXX
			JOIN OLWHRMX.GAXX_APP GAXX
				ON PDXX.DF_PRS_ID = GAXX.DF_PRS_ID_BR
			JOIN OLWHRMX.GAXX_LON_APP GAXX
				ON GAXX.AF_APL_ID = GAXX.AF_APL_ID
		WHERE
			DATEPART(GAXX.AF_LST_DTS_GAXX) >= &LAST_RUN
			OR DATEPART(GAXX.AF_LST_DTS_GAXX) >= &LAST_RUN
	;

/*	get all COMPASS borrowers*/
	CREATE TABLE ALL_COMPASS AS
		SELECT DISTINCT
			PDXX.DF_SPE_ACC_ID,
			PDXX.DF_PRS_ID AS BF_SSN,
			LNXX.LF_LON_ALT||PUT(LNXX.LN_LON_ALT_SEQ,ZX.) AS CLUID,
			LNXX.LN_SEQ,
			CASE
				WHEN LNXX.IC_LON_PGM = 'COMPLT' THEN 'XX'
				WHEN DWXX.WC_DW_LON_STA = 'XX' THEN 'XX'
				WHEN DWXX.WC_DW_LON_STA IS NULL THEN 'XX'
				ELSE 'XX'
			END AS FORWARDING,
			LNXX.LF_LST_DTS_LNXX,
			LNXX.IC_LON_PGM
		FROM
			OLWHRMX.PDXX_PRS_NME PDXX
			JOIN OLWHRMX.LNXX_LON LNXX
				ON PDXX.DF_PRS_ID = LNXX.BF_SSN
			LEFT JOIN OLWHRMX.DWXX_DW_CLC_CLU DWXX
				ON LNXX.BF_SSN = DWXX.BF_SSN
				AND LNXX.LN_SEQ = DWXX.LN_SEQ
	;

/*	get OneLINK borrower who are not also on COMPASS*/
	CREATE TABLE ONELINK AS
		SELECT
			O.DF_SPE_ACC_ID,
			O.BF_SSN,
			O.CLUID,
			O.LN_SEQ,
			O.FORWARDING
		FROM
			ALL_ONELINK O
			LEFT JOIN ALL_COMPASS C
				ON O.BF_SSN = C.BF_SSN
		WHERE
			C.BF_SSN IS NULL
	;

/*	get non-TILP borrowers where LNXX was updated since last run*/
	CREATE TABLE COMPASS AS
		SELECT
			DF_SPE_ACC_ID,
			BF_SSN,
			CLUID,
			LN_SEQ,
			FORWARDING
		FROM
			ALL_COMPASS
		WHERE
			DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN
			AND IC_LON_PGM <> 'TILP'
	;

/*	combine and sort COMPASS, OneLINK-only, and TILP borrowers*/
	CREATE TABLE CALLFWD AS
		SELECT
			DF_SPE_ACC_ID,
			BF_SSN,
			CLUID,
			LN_SEQ,
			FORWARDING
		FROM
			(
				SELECT * FROM COMPASS 
				UNION 
				SELECT * FROM ONELINK 
				UNION 
				SELECT * FROM TILP
			)
		ORDER BY
			DF_SPE_ACC_ID,
			CLUID,
			LN_SEQ
	;		
QUIT;


/*******************************************
* BORROWER BENEFIT ELIGIBILITY
********************************************/
DATA LNXX(DROP=LF_LST_DTS_LNXX);
	SET OLWHRMX.LNXX_LON_BBS(KEEP=BF_SSN LN_SEQ LC_STA_LNXX LD_BBS_DSQ LC_BBS_ELG LF_LST_DTS_LNXX);
	where bf_ssn = 'XXXXXXXXX';
	IF DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN ;
RUN;
PROC SORT DATA=LNXX; BY BF_SSN LN_SEQ LC_STA_LNXX; RUN;
DATA LNXX(drop=LC_STA_LNXX);
SET LNXX;
BY BF_SSN LN_SEQ LC_STA_LNXX;
IF FIRST.LN_SEQ;
RUN;
%SSNXACC(LNXX,LN_SEQ);

/*******************************************
* BORROWER BENEFITS
********************************************/
DATA LNXX(DROP=LF_LST_DTS_LNXX);
	SET OLWHRMX.LNXX_LON_BBS_TIR
		(KEEP=BF_SSN LN_SEQ PM_BBS_PGM PN_BBS_PGM_SEQ LC_STA_LNXX LN_LON_BBT_PAY LF_LST_DTS_LNXX);
		where bf_ssn = 'XXXXXXXXX';
	IF DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN ;
	LN_LON_BBT_PAY = COALESCE(LN_LON_BBT_PAY,X);
RUN;
PROC SORT DATA=LNXX; BY BF_SSN LN_SEQ LC_STA_LNXX; RUN;
DATA LNXX;
	SET LNXX;
		BY BF_SSN LN_SEQ LC_STA_LNXX;
	IF FIRST.LN_SEQ;
RUN;
DATA RPXX;
	SET OLWHRMX.RPXX_BBS_PGM_TIR(KEEP=PM_BBS_PGM PN_BBS_PGM_SEQ  
		PN_BBT_PAY_ICV );
RUN;
PROC SORT DATA=LNXX; BY PM_BBS_PGM PN_BBS_PGM_SEQ;RUN;
PROC SORT DATA=RPXX; BY PM_BBS_PGM PN_BBS_PGM_SEQ;RUN;
DATA LNXX(DROP=PM_BBS_PGM PN_BBS_PGM_SEQ);
	MERGE LNXX(IN=A) RPXX;
		BY PM_BBS_PGM PN_BBS_PGM_SEQ;
	IF A;
RUN;
%SSNXACC(LNXX,LN_SEQ);

/*******************************************
* REPAYMENT SCHEDULE DATA
********************************************/
PROC SQL;
CREATE TABLE LNXX AS
	SELECT C.BF_SSN
		,C.LN_SEQ
		,D.LN_GRD_RPS_SEQ
		,D.LN_RPS_TRM
		,B.LD_RPS_X_PAY_DU
		,B.LD_SNT_RPD_DIS
		,C.LD_CRT_LONXX
		,C.LC_TYP_SCH_DIS
		,D.LA_RPS_ISL
	FROM OLWHRMX.RSXX_BR_RPD B
	INNER JOIN OLWHRMX.LNXX_LON_RPS C
		ON B.BF_SSN = C.BF_SSN
		AND B.LN_RPS_SEQ = C.LN_RPS_SEQ
	INNER JOIN OLWHRMX.LNXX_LON_RPS_SPF D
		ON C.BF_SSN = D.BF_SSN
		AND C.LN_SEQ = D.LN_SEQ
		AND C.LN_RPS_SEQ = D.LN_RPS_SEQ
	WHERE C.LC_STA_LONXX = 'A'
		and c.bf_ssn = 'XXXXXXXXX';;
QUIT;
PROC SORT DATA=LNXX; BY BF_SSN LN_SEQ LN_GRD_RPS_SEQ; RUN;
DATA LNXX(DROP= A B C NEXT_SEQ LD_RPS_X_PAY_DU LN_GRD_RPS_SEQ);
SET LNXX;
where bf_ssn = 'XXXXXXXXX';
FORMAT NEXT_SEQ DATEX.;
BY BF_SSN LN_SEQ LN_GRD_RPS_SEQ;
RETAIN NEXT_SEQ A C B;
IF FIRST.LN_SEQ THEN DO;
	A = .;
	NEXT_SEQ = INTNX('MONTH',LD_RPS_X_PAY_DU,LN_RPS_TRM,'S');
	IF NEXT_SEQ > TODAY() THEN DO;
		A = LN_GRD_RPS_SEQ ;
		C = LA_RPS_ISL ;
	END;
END;
ELSE IF A= . THEN DO;
	NEXT_SEQ = INTNX('MONTH',NEXT_SEQ,LN_RPS_TRM,'S');
	IF NEXT_SEQ > TODAY() THEN DO;
		A = LN_GRD_RPS_SEQ ;
		C = LA_RPS_ISL ;
	END;
END;
IF FIRST.LN_SEQ THEN B = LN_RPS_TRM;
ELSE B = B + LN_RPS_TRM;
IF LAST.LN_SEQ THEN DO;
	LN_RPS_TRM = B;
	LA_RPS_ISL = C;
	LN_GRD_RPS_SEQ = A;
	DAY_DUE = DAY(LD_RPS_X_PAY_DU);
	OUTPUT;
END;
RUN;
%SSNXACC(LNXX,LN_SEQ);

/*******************************************
* INTEREST RATE DATA
********************************************/
DATA LNXX(DROP=LC_STA_LONXX LD_ITR_EFF_BEG LD_ITR_EFF_END LF_LST_DTS_LNXX);
	SET OLWHRMX.LNXX_INT_RTE_HST(KEEP=BF_SSN LN_SEQ LC_STA_LONXX 
		LD_ITR_EFF_BEG LD_ITR_EFF_END LF_LST_DTS_LNXX LR_ITR LR_INT_RDC_PGM_ORG);
	WHERE LC_STA_LONXX = 'A' and bf_ssn = 'XXXXXXXXX'
		AND LD_ITR_EFF_BEG <= TODAY() 
		AND LD_ITR_EFF_END >= TODAY() 
		AND DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN;
	LR_ITR = COALESCE(LR_ITR,X);
	LR_INT_RDC_PGM_ORG = COALESCE(LR_INT_RDC_PGM_ORG,LR_ITR);
RUN;
%SSNXACC(LNXX,LN_SEQ);

/*********************************************
* ENROLLMENT - LOAN LEVEL
**********************************************/
PROC SQL;
CREATE TABLE SDXX AS
	SELECT A.BF_SSN
		,A.LN_SEQ
		,B.LN_STU_SPR_SEQ
		,B.LD_SCL_SPR
		,D.IM_SCL_FUL
	FROM OLWHRMX.SDXX_STU_SPR B
	INNER JOIN OLWHRMX.SCXX_SCH_DMO D
		ON B.LF_DOE_SCL_ENR_CUR = D.IF_DOE_SCL
	INNER JOIN OLWHRMX.LNXX_LON_STU_OSD C
		ON B.LF_STU_SSN = C.LF_STU_SSN
		AND B.LN_STU_SPR_SEQ = C.LN_STU_SPR_SEQ
	INNER JOIN OLWHRMX.LNXX_LON A
		ON C.BF_SSN = A.BF_SSN
		AND C.LN_SEQ = A.LN_SEQ
	WHERE B.LC_STA_STUXX = 'A'
		and a.bf_ssn = 'XXXXXXXXX'
		AND C.LC_STA_LONXX = 'A'
		AND (DATEPART(B.LF_LST_DTS_SDXX) >= &LAST_RUN
			OR DATEPART(C.LF_CRT_DTS_LNXX) >= &LAST_RUN);
QUIT;
PROC SORT DATA=SDXX; BY BF_SSN LN_SEQ LN_STU_SPR_SEQ;RUN;
DATA SDXX(DROP=LN_STU_SPR_SEQ);
	SET SDXX;
		BY BF_SSN LN_SEQ LN_STU_SPR_SEQ;
	IF LAST.LN_SEQ;
RUN;
%SSNXACC(SDXX,LN_SEQ);

/*********************************************
* EMPLOYER DATA
**********************************************/
PROC SQL;
CREATE TABLE BRXX AS
	SELECT A.BF_SSN
		,B.IM_IST_FUL
		,B.IX_GEN_STR_ADR_X
		,B.IX_GEN_STR_ADR_X
		,B.IM_GEN_CT
		,B.IC_GEN_ST
		,B.IF_GEN_ZIP
		,B.IN_GEN_PHN
	FROM OLWHRMX.BRXX_BR_EMP A
	INNER JOIN OLWHRMX.INXX_LGS_IDM_MST B
		ON A.BF_EMP_ID_X = B.IF_IST
	WHERE DATEPART(A.BF_LST_DTS_BRXX) >= &LAST_RUN and a.bf_ssn = 'XXXXXXXXX';
QUIT;
%SSNXACC(BRXX,);

/*********************************************
* AUTOPAY DATA
**********************************************/
DATA BRXX(DROP=BF_LST_DTS_BRXX );
	SET OLWHRMX.BRXX_BR_EFT(KEEP=BF_SSN BN_EFT_SEQ BF_EFT_ABA BF_EFT_ACC BC_EFT_STA
		BD_EFT_STA BA_EFT_ADD_WDR BN_EFT_NSF_CTR BN_EFT_DAY_DUE BC_EFT_DNL_REA BF_LST_DTS_BRXX);
	where bf_ssn = 'XXXXXXXXX';
	IF DATEPART(BF_LST_DTS_BRXX) >= &LAST_RUN ;
RUN;
PROC SORT DATA=BRXX; BY BF_SSN BC_EFT_STA DESCENDING BN_EFT_SEQ; RUN;
DATA BRXX; 
SET BRXX; 
BY BF_SSN BC_EFT_STA DESCENDING BN_EFT_SEQ;
IF FIRST.BF_SSN OR BC_EFT_STA = 'A';
RUN;
PROC SORT DATA=BRXX; BY BF_SSN BN_EFT_SEQ; RUN;
DATA BRXX(DROP=A B BN_EFT_DAY_DUE);
FORMAT A BN_EFT_DAY_DUE $X.;
SET BRXX;
BY BF_SSN;
RETAIN A B;
IF FIRST.BF_SSN AND LAST.BF_SSN THEN OUTPUT;
ELSE IF FIRST.BF_SSN AND LAST.BF_SSN = X AND BC_EFT_STA = 'A' THEN DO;
	A = BN_EFT_DAY_DUE;
	B = BA_EFT_ADD_WDR;
END;
ELSE IF FIRST.BF_SSN = X AND BC_EFT_STA = 'A' THEN DO;
	IF A ^= BN_EFT_DAY_DUE THEN A = TRIM(A) || ',' || BN_EFT_DAY_DUE;
	B = B + BA_EFT_ADD_WDR;
END;
IF FIRST.BF_SSN = X AND LAST.BF_SSN THEN DO;
	BN_EFT_DAY_DUE = A;
	BA_EFT_ADD_WDR = B;
	OUTPUT; 
END;
RUN;
%SSNXACC(BRXX,);

/*********************************************
* DEMOGRAPHICS
**********************************************/
PROC SQL;
CREATE TABLE PDXX AS
	SELECT distinct A.DF_SPE_ACC_ID
		,a.df_prs_id as bf_ssn
		,A.DM_PRS_X
		,A.DM_PRS_LST
		,A.DM_PRS_MID
		,A.DD_BRT
	FROM OLWHRMX.PDXX_PRS_NME A
	WHERE substr(df_prs_id,X,X) ^= 'P'
		and DATEPART(A.DF_LST_DTS_PDXX) >= &LAST_RUN
		and a.df_prs_id = 'XXXXXXXXX';

CREATE TABLE PDXX AS
	SELECT distinct c.df_prs_id as bf_ssn
		,C.DX_STR_ADR_X
		,C.DX_STR_ADR_X
		,C.DM_CT
		,C.DC_DOM_ST
		,C.DF_ZIP_CDE
		,C.DM_FGN_ST
		,C.DM_FGN_CNY
		,C.DD_VER_ADR
		,C.DI_VLD_ADR
	FROM OLWHRMX.PDXX_PRS_ADR C
	WHERE C.DC_ADR = 'L'
		AND DATEPART(C.DF_LST_DTS_PDXX) >= &LAST_RUN
		and c.df_prs_id = 'XXXXXXXXX';

CREATE TABLE PDXX AS
	SELECT DISTINCT d.df_prs_id as bf_ssn
		,D.DC_PHN
		,D.DC_ALW_ADL_PHN
		,D.DD_PHN_VER
		,D.DI_PHN_VLD
		,D.DN_DOM_PHN_ARA
		,D.DN_DOM_PHN_XCH
		,D.DN_DOM_PHN_LCL
		,D.DN_PHN_XTN
		,D.DN_FGN_PHN_CNY
		,D.DN_FGN_PHN_CT
		,D.DN_FGN_PHN_LCL
	FROM  OLWHRMX.PDXX_PRS_PHN D
	WHERE DATEPART(D.DF_LST_DTS_PDXX) >= &LAST_RUN
	and d.df_prs_id = 'XXXXXXXXX';

	CREATE TABLE PDXX AS
		SELECT DISTINCT 
			DF_PRS_ID AS BF_SSN,
			DC_ADR_EML,
			DX_ADR_EML,
			DD_VER_ADR_EML,
			DI_VLD_ADR_EML
		FROM 
			OLWHRMX.PDXX_PRS_ADR_EML
		WHERE 
			DATEPART(DF_LST_DTS_PDXX) >= &LAST_RUN
			AND DC_STA_PDXX = 'A'
			and df_prs_id = 'XXXXXXXXX';
	;
QUIT;
proc sort data=pdXX; by bf_ssn dc_adr_eml descending dd_ver_adr_eml; run;
data pdXX;
set pdXX;
by bf_ssn dc_adr_eml;
if first.dc_adr_eml;
run;
%SSNXACC(PDXX,);
%SSNXACC(PDXX,DC_PHN);
%SSNXACC(PDXX,dc_adr_eml);

/*********************************************
* SUSPENSE PAYMENTS
**********************************************/
PROC SQL;
CREATE TABLE RMXX AS
	SELECT DISTINCT A.BF_SSN
		,SUM(A.LA_BR_RMT_PST) AS LA_BR_RMT_PST
	FROM OLWHRMX.RMXX_BR_RMT_PST A
	WHERE LC_RMT_STA_PST = 'S' and a.bf_ssn = 'XXXXXXXXX';
	GROUP BY BF_SSN;
QUIT;
%SSNXACC(RMXX,);

/*********************************************
* AMOUNTS DUE INFORMATION
**********************************************/
PROC SQL ;
CREATE TABLE CUR_DUE AS
SELECT A.BF_SSN
	,B.LD_BIL_CRT
	,B.LN_SEQ_BIL_WI_DTE
	,B.LD_BIL_DU_LON
	,SUM(COALESCE(B.LA_BIL_CUR_DU,X) - COALESCE(B.LA_TOT_BIL_STS,X)) AS Cur_Due
	,A.LA_LTE_FEE_OTS
from (SELECT BF_SSN
			,LN_SEQ
			,LA_CUR_PRI
			,LC_STA_LONXX
			,SUM(COALESCE(LA_LTE_FEE_OTS,X)) AS LA_LTE_FEE_OTS
		FROM OLWHRMX.LNXX_LON where bf_ssn = 'XXXXXXXXX'
		GROUP BY BF_SSN) A
LEFT OUTER JOIN OLWHRMX.LNXX_LON_BIL_CRF b
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
	AND b.lc_sta_lonXX = 'A'
	AND B.LC_LON_STA_BIL = 'X'
	AND A.LC_STA_LONXX = 'R'
	AND A.LA_CUR_PRI > X
where a.bf_ssn = 'XXXXXXXXX'
GROUP BY A.BF_SSN
	,B.LD_BIL_CRT
	,B.LN_SEQ_BIL_WI_DTE
	,B.LD_BIL_DU_LON
;
QUIT;
PROC SORT DATA=CUR_DUE; BY BF_SSN LD_BIL_CRT LN_SEQ_BIL_WI_DTE; RUN;
DATA CUR_DUE(keep=bf_ssn cur_due past_due tot_due tot_due_fee); 
SET CUR_DUE;
BY BF_SSN ;
RETAIN PAST_DUE a X ;
IF FIRST.BF_SSN THEN do;
	PAST_DUE = X;
	a = X;
end;

IF LD_BIL_DU_LON < TODAY() THEN PAST_DUE = PAST_DUE + CUR_DUE;
else do;
	if ld_bil_du_lon > intnx('month',today(),+X,'s') then cur_due = X;
	a = a + cur_due;
end;

IF LAST.BF_SSN THEN DO;
	cur_due = a;
	if intnx('month',today(),-X,'s') >= ld_bil_du_lon then do;
		cur_due = X;
		past_due = X;
		LA_LTE_FEE_OTS = X;
	end;
	if intnx('month',ld_bil_du_lon,-X,'s') > ld_bil_crt then do;
		past_due = X;
		LA_LTE_FEE_OTS = X;
	end;
	TOT_DUE = PAST_DUE + CUR_DUE;
	TOT_DUE_FEE = TOT_DUE + LA_LTE_FEE_OTS;

	OUTPUT;
END;
RUN;
%SSNXACC(CUR_DUE,);

/*********************************************
* ADDITIONAL LOAN DATA
**********************************************/
PROC SQL;
CREATE TABLE DWXX AS
SELECT A.BF_SSN
	,A.LN_SEQ
	,A.WC_DW_LON_STA 
	,A.WA_TOT_BRI_OTS 
	,A.WD_LON_RPD_SR 
	,A.WX_OVR_DW_LON_STA
FROM OLWHRMX.DWXX_DW_CLC_CLU A
INNER JOIN OLWHRMX.LNXX_LON B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
WHERE DATEPART(LF_LST_DTS_LNXX) >= &LAST_RUN
	OR B.LA_CUR_PRI > X and a.bf_ssn = 'XXXXXXXXX';
QUIT;
%SSNXACC(DWXX,LN_SEQ);

/*********************************************
* CREDIT REPORTING INFORMATION
**********************************************/
PROC SQL;
CREATE TABLE LNXX AS
SELECT A.BF_SSN 
	,A.LN_SEQ
	,A.LC_RPT_STA_CRB
	,A.LD_RPT_CRB
	,B.LD_STA_LNXX AS DT_ADJ
FROM OLWHRMX.LNXX_LON_CRB_RPT A
LEFT OUTER JOIN OLWHRMX.LNXX_LON_CRB_RPT B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
	AND A.LD_RPT_CRB = B.LD_RPT_CRB
	AND SUBSTR(A.LF_LST_USR_LNXX,X,X) = 'UT'
	AND B.LC_STA_LNXX = 'I'
WHERE A.LD_RPT_CRB > INTNX('YEAR',TODAY(),-X,'S')
	AND A.LC_STA_LNXX = 'A'
	AND DATEPART(A.LF_LST_DTS_LNXX) >= &LAST_RUN
 and a.bf_ssn = 'XXXXXXXXX';
QUIT;
%SSNXACC(LNXX,LN_SEQ);

/*********************************************
* ACTIVITY HISTORY
**********************************************/
PROC SQL;
CONNECT TO DBX (DATABASE=DLGSUTWH);
CREATE TABLE ARCS AS
SELECT *
FROM CONNECTION TO DBX (
	SELECT AYXX.BF_SSN
		,AYXX.LN_ATY_SEQ
		,AYXX.PF_REQ_ACT
		,AYXX.LC_STA_ACTYXX
		,LX_ATY
	FROM OLWHRMX.AYXX_BR_LON_ATY AYXX
	LEFT OUTER JOIN OLWHRMX.AYXX_ATY_CMT AYXX
		ON AYXX.BF_SSN = AYXX.BF_SSN 
		AND AYXX.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
		AND AYXX.LN_ATY_CMT_SEQ = X
 	LEFT OUTER JOIN OLWHRMX.AYXX_ATY_TXT AYXX
		ON AYXX.BF_SSN = AYXX.BF_SSN 
		AND AYXX.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
		AND AYXX.LN_ATY_CMT_SEQ = AYXX.LN_ATY_CMT_SEQ
	WHERE AYXX.PF_REQ_ACT IN ('DRLFA','KXADD','KXPHN','MXXXX')
		AND (AYXX.LF_LST_DTS_AYXX >= &LAST_RUNPASS or AYXX.PF_REQ_ACT = 'DRLFA'
		and ayXX.bf_ssn = 'XXXXXXXXX')
FOR READ ONLY WITH UR
);

CREATE TABLE ARC_IND AS
SELECT *
FROM CONNECTION TO DBX (
	SELECT AYXX.BF_SSN
		,AYXX.LN_ATY_SEQ
		,AYXX.PF_REQ_ACT
		,AYXX.LC_STA_ACTYXX
	FROM OLWHRMX.AYXX_BR_LON_ATY AYXX
	WHERE AYXX.PF_REQ_ACT IN ('SPHAE','VIPSS')
		AND AYXX.LF_LST_DTS_AYXX >= &LAST_RUNPASS
		and ayXX.bf_ssn = 'XXXXXXXXX'
FOR READ ONLY WITH UR
);

	CREATE TABLE DLXXX AS
		SELECT *
		FROM 
			CONNECTION TO DBX 
				(
					SELECT 
						AYXX.BF_SSN
						,AYXX.LN_ATY_SEQ
						,AYXX.LD_ATY_REQ_RCV
						,AYXX.LC_STA_ACTYXX
					FROM
						OLWHRMX.AYXX_BR_LON_ATY AYXX
					WHERE 
						AYXX.PF_REQ_ACT = 'DLXXX'
						AND AYXX.LF_LST_DTS_AYXX >= &LAST_RUNPASS
						and ayXX.bf_ssn = 'XXXXXXXXX'
				)
	;

	CREATE TABLE ARCHIST AS
		SELECT *
		FROM 
			CONNECTION TO DBX 
				(
					SELECT 
						AYXX.BF_SSN
						,AYXX.LN_ATY_SEQ
						,AYXX.LC_STA_ACTYXX
						,AYXX.PF_REQ_ACT
						,AYXX.PF_RSP_ACT
						,AYXX.LD_ATY_REQ_RCV
						,AYXX.LD_ATY_RSP
						,AYXX.LF_USR_REQ_ATY
						,AYXX.LT_ATY_RSP
						,AYXX.LX_ATY
						,ACXX.PX_ACT_DSC_REQ
					FROM 
						OLWHRMX.AYXX_BR_LON_ATY AYXX
					 	LEFT JOIN OLWHRMX.AYXX_ATY_TXT AYXX
							ON AYXX.BF_SSN = AYXX.BF_SSN 
							AND AYXX.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
							AND AYXX.LN_ATY_CMT_SEQ = X
							AND AYXX.LN_ATY_TXT_SEQ = X
						LEFT JOIN OLWHRMX.ACXX_ACT_REQ ACXX
							ON AYXX.PF_REQ_ACT = ACXX.PF_REQ_ACT
					WHERE 
						AYXX.LC_ATY_RCP = 'B'
						AND AYXX.LF_LST_DTS_AYXX >= &LAST_RUNPASS
						and ayXX.bf_ssn = 'XXXXXXXXX'
				)
	;
DISCONNECT FROM DBX;
QUIT;

DATA DRLFA ARCS(DROP=DOL) ;
SET ARCS;
IF PF_REQ_ACT = 'DRLFA' THEN DO;
	IF SUBSTR(LX_ATY,X,X) = '{' and lc_sta_actyXX = 'A' THEN DO;
		DOL = INPUT(SCAN(LX_ATY,X,'{}'),DOLLARX.X);
		OUTPUT DRLFA;
	END;
END;
ELSE OUTPUT ARCS;
RUN;

PROC SORT DATA=DRLFA; BY BF_SSN;RUN;
DATA DRLFA (KEEP=BF_SSN FEE_WAV_DOL FEE_WAV_CT);
	SET DRLFA;
	RETAIN FEE_WAV_DOL FEE_WAV_CT;
	BY BF_SSN;
	IF FIRST.BF_SSN THEN DO;
		FEE_WAV_DOL = DOL;
		FEE_WAV_CT = X;
	END;
	ELSE DO;
		FEE_WAV_DOL + DOL;
		FEE_WAV_CT + X;
	END;
	IF LAST.BF_SSN THEN OUTPUT;	
RUN;

DATA KXADD(KEEP=BF_SSN LN_ATY_SEQ LC_STA_ACTYXX DX_STR_ADR_X DX_STR_ADR_X DM_CT DC_DOM_ST DF_ZIP_CDE DM_FGN_CNY COMMENTS)
	KXPHN(KEEP=BF_SSN LN_ATY_SEQ LC_STA_ACTYXX PHNX PHNX PHNX COMMENTS)
	ARC_MXXXX(KEEP=BF_SSN LN_ATY_SEQ LC_STA_ACTYXX LX_ATY);
SET ARCS;
LENGTH DX_STR_ADR_X $XX. DX_STR_ADR_X $XX. DM_CT $XX. DC_DOM_ST $X. DF_ZIP_CDE $XX. DM_FGN_CNY $XX. COMMENTS $XXX.;
LENGTH  PHNX PHNX PHNX $XX.;
ARRAY ADR{X} $ DX_STR_ADR_X DX_STR_ADR_X DM_CT DC_DOM_ST DF_ZIP_CDE DM_FGN_CNY COMMENTS;
ARRAY PHN{X} $ PHNX PHNX PHNX COMMENTS;
IF PF_REQ_ACT = 'KXADD' THEN DO;
	DO I = X TO X;
		ADR(I) = SCAN(LX_ATY,I,',');
	END;
	OUTPUT KXADD;
END;
ELSE if pf_req_act = 'KXPHN' THEN DO;
	DO I = X TO X;
		PHN(I) = SCAN(LX_ATY,I,',');
	END;
	OUTPUT KXPHN;
END;
ELSE IF PF_REQ_ACT = 'MXXXX' THEN OUTPUT ARC_MXXXX;
RUN;

%SSNXACC(KXADD,LN_ATY_SEQ);
%SSNXACC(KXPHN,LN_ATY_SEQ);
%SSNXACC(DLXXX,LN_ATY_SEQ);
%SSNXACC(DRLFA,);
%SSNXACC(ARCHIST,LN_ATY_SEQ); 
%SSNXACC(ARC_MXXXX,LN_ATY_SEQ);
%SSNXACC(ARC_IND,LN_ATY_SEQ); 


/*********************************************
* DISBURSEMENT
**********************************************/
PROC SQL;
	CONNECT TO DBX (DATABASE=DLGSUTWH);

	CREATE TABLE LNXX_DISB AS
		SELECT 
			*
		FROM 
			CONNECTION TO DBX 
				(
					SELECT
						LNXX.BF_SSN,
						LNXX.LN_BR_DSB_SEQ,
						LNXX.LA_DSB - COALESCE(LNXX.LA_DSB_CAN,X) AS LA_DSB,
						LNXX.LD_DSB,
						LNXX.LC_DSB_TYP,
						LNXX.LC_STA_LONXX,
						LNXX.LN_SEQ,
						COALESCE(LNXX.LA_DL_DSB_REB,X) - COALESCE(LNXX.LA_DSB_REB_CAN,X) AS LA_DL_REBATE
					FROM
						OLWHRMX.LNXX_DSB LNXX
					WHERE
						LNXX.LF_LST_DTS_LNXX >= &LAST_RUNPASS
						and LNXX.bf_ssn = 'XXXXXXXXX'

					FOR READ ONLY WITH UR
				)
	;

	DISCONNECT FROM DBX;
QUIT;
%SSNXACC(LNXX_DISB,LN_BR_DSB_SEQ);

/*********************************************
* ADXX
**********************************************/

proc sql;
CREATE TABLE ADXX AS
	SELECT 
		ADXX.BF_SSN,
		ADXX.LD_FAT_ADJ_REQ,
		ADXX.LN_SEQ_FAT_ADJ_REQ, 
		ADXX.LC_TYP_FAT_ADJ_REQ, 
		ADXX.LC_STA_FAT_ADJ_REQ	
	FROM 
		OLWHRMX.ADXX_PCV_ATY_ADJ ADXX
	WHERE 
		DATEPART(ADXX.LF_LST_DTS_ADXX) >= &LAST_RUN
		and ADXX.bf_ssn = 'XXXXXXXXX'
;
QUIT;
%SSNXACC(ADXX,);


/*uncomment to update data set in prod*/
/*DATA SAS_TAB.LASTRUN_JOBS;*/
/*SET SAS_TAB.LASTRUN_JOBS;*/
/*IF JOB = 'UTLWDWX' THEN LAST_RUN = TODAY();*/
/*RUN;*/
ENDRSUBMIT;
data _null_;
call symput('endrsub',put(time(),timeX.));
run;

DATA LNXX; SET DUSTER.LNXX; RUN; *X;
DATA BRXX; SET DUSTER.BRXX; RUN; *X;
DATA LNXX; SET DUSTER.LNXX; RUN; *X;
DATA LNXX; SET DUSTER.LNXX; RUN; *X;
DATA DFXX; SET DUSTER.DFXX; RUN; *X;
DATA FBXX; SET DUSTER.FBXX; RUN; *X;
DATA PDXX; SET DUSTER.PDXX; RUN; *X;
DATA KXPHN; SET DUSTER.KXPHN; RUN; *X;  
DATA DRLFA; SET DUSTER.DRLFA; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA CALLFWD; SET DUSTER.CALLFWD; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA SDXX; SET DUSTER.SDXX; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA BRXX; SET DUSTER.BRXX; RUN; *XX;
DATA BRXX; SET DUSTER.BRXX; RUN; *XX;
DATA PDXX; SET DUSTER.PDXX; RUN; *XX;
DATA RMXX; SET DUSTER.RMXX; RUN; *XX;
DATA PDXX; SET DUSTER.PDXX; RUN; *XX;
DATA PDXX; SET DUSTER.PDXX; RUN; *XX;
DATA KXADD; SET DUSTER.KXADD; RUN; *XX;
DATA ARCHIST; SET DUSTER.ARCHIST; RUN; *XX;
DATA DWXX; SET DUSTER.DWXX; RUN; *XX;
DATA LNXX; SET DUSTER.LNXX; RUN; *XX;
DATA CUR_DUE; SET DUSTER.CUR_DUE; RUN; *XX;
DATA DLXXX; SET DUSTER.DLXXX; RUN; *XX; 
DATA ARC_MXXXX; SET DUSTER.ARC_MXXXX; RUN; *XX;
DATA ARC_IND; SET DUSTER.ARC_IND; RUN; *XX; 
DATA LNXX_DISB; SET DUSTER.LNXX_DISB; RUN; *XX; 
DATA ADXX; SET DUSTER.ADXX; RUN; *XX;

data _null_;
call symput('FILETRAN',put(time(),timeX.));
run;
DATA _NULL_;
SET LNXX end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LC_STA_LONXX $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET BRXX end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LST_CNC LST_ATT MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT DF_PRS_ID_RFR  @;
	PUT BC_STA_BRXX @;
	PUT BI_ATH_X_PTY @;
	PUT BC_RFR_REL_BR @;
	PUT BM_RFR_X @;
	PUT BM_RFR_LST @;
	PUT LST_CNC @;
	PUT LST_ATT $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_BIL_CRT LD_FAT_EFF LD_BIL_DU_LON MMDDYYXX. ;
FORMAT 	LA_BIL_CUR_DU LA_BIL_PAS_DU	LA_TOT_BIL_STS X.X;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LD_BIL_CRT @;
	PUT LN_SEQ_BIL_WI_DTE @;
	PUT LD_FAT_EFF @;
	PUT LD_BIL_DU_LON @;
	PUT LC_STA_LONXX @;
	PUT LA_BIL_CUR_DU @;
	PUT LA_BIL_PAS_DU @;
	PUT LC_BIL_MTD @;
	PUT LC_IND_BIL_SNT @;
	PUT LC_STA_BILXX @;
	PUT LA_TOT_BIL_STS $;
END;
if eof then put "-End-";
RUN; 

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_FAT_PST LD_FAT_EFF MMDDYYXX. ;
FORMAT LA_FAT_CUR_PRI LA_FAT_LTE_FEE XX.X ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LN_FAT_SEQ @;
	PUT LD_FAT_PST @;
	PUT LD_FAT_EFF  @;
	PUT LC_STA_LONXX @;
	PUT LA_FAT_CUR_PRI @;
	PUT LA_FAT_LTE_FEE @;
	PUT PC_FAT_TYP @;
	PUT PC_FAT_SUB_TYP @;
	PUT LA_FAT_NSI @;
	PUT LC_FAT_REV_REA $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DFXX end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_DFR_INF_CER LD_DFR_BEG LD_DFR_END MMDDYYXX. ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LF_DFR_CTL_NUM @;
	PUT LN_DFR_OCC_SEQ @;
	PUT LC_DFR_TYP @;
	PUT LD_DFR_INF_CER @;
	PUT LD_DFR_BEG @;
	PUT LD_DFR_END @;
	PUT LC_LON_LEV_DFR_CAP @;
	PUT LC_STA_LONXX @;
	PUT LC_DFR_STA @;
	PUT LC_STA_DFRXX $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET FBXX end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_FOR_INF_CER LD_FOR_BEG LD_FOR_END MMDDYYXX. LA_REQ_RDC_PAY X.X;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LF_FOR_CTL_NUM @;
	PUT LN_FOR_OCC_SEQ @;
	PUT LC_FOR_TYP @;
	PUT LD_FOR_INF_CER @;
	PUT LD_FOR_BEG @;
	PUT LD_FOR_END @;
	PUT LC_LON_LEV_FOR_CAP @;
	PUT LC_STA_LONXX @;
	PUT LC_FOR_STA @;
	PUT LC_STA_FORXX @;
	PUT LA_REQ_RDC_PAY $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET PDXX end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT DD_BRT MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT BF_SSN @;
	PUT DM_PRS_X @;
	PUT DM_PRS_LST @;
	PUT DM_PRS_MID @;
	PUT DD_BRT $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET KXPHN end = eof;
FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;	
	PUT DF_SPE_ACC_ID @;
	PUT LN_ATY_SEQ @;
	PUT LC_STA_ACTYXX @;
	PUT PHNX @;
	PUT PHNX @;
	PUT PHNX @;
	PUT COMMENTS $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DRLFA end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT FEE_WAV_DOL @;
	PUT FEE_WAV_CT $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_END_GRC_PRD LD_LON_X_DSB  LD_PIF_RPT MMDDYYXX. ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LC_STA_LONXX @;
	PUT LA_CUR_PRI  @;
	PUT LA_LON_AMT_GTR @;
	PUT LD_END_GRC_PRD @;
	PUT IC_LON_PGM @;
	PUT LD_LON_X_DSB @;
	PUT LD_PIF_RPT @;
	PUT IF_GTR $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT BN_EFT_SEQ @;
	PUT LC_STA_LNXX $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_LON_RHB_PCV MMDDYYXX. ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LD_LON_RHB_PCV $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET CALLFWD end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT BF_SSN @;
	PUT CLUID @;
	PUT LN_SEQ @;
	PUT FORWARDING $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_BBS_DSQ MMDDYYXX. ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LD_BBS_DSQ  @;
	PUT LC_BBS_ELG $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LN_LON_BBT_PAY @;
	PUT PN_BBT_PAY_ICV $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_CRT_LONXX LD_SNT_RPD_DIS MMDDYYXX. ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LD_CRT_LONXX @;	
	PUT LC_TYP_SCH_DIS @; 
	PUT LD_SNT_RPD_DIS @;
	PUT LA_RPS_ISL @;
	PUT DAY_DUE @;
	PUT LN_RPS_TRM $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LR_ITR @;
	PUT LR_INT_RDC_PGM_ORG $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET SDXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_SCL_SPR MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LD_SCL_SPR @;
	PUT IM_SCL_FUL $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_DLQ_OCC LD_DLQ_MAX MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LD_DLQ_OCC @;
	PUT LN_DLQ_MAX @;
	PUT LD_DLQ_MAX $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET BRXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT IM_IST_FUL @;
	PUT IX_GEN_STR_ADR_X @;
	PUT IX_GEN_STR_ADR_X @;
	PUT IM_GEN_CT @;
	PUT IC_GEN_ST @;
	PUT IF_GEN_ZIP @;
	PUT IN_GEN_PHN $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET BRXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT BD_EFT_STA MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT BN_EFT_SEQ @;
	PUT BF_EFT_ABA @;
	PUT BF_EFT_ACC @;
	PUT BC_EFT_STA @;
	PUT BD_EFT_STA @;
	PUT BA_EFT_ADD_WDR @;
	PUT BN_EFT_NSF_CTR @;
	PUT BC_EFT_DNL_REA $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET PDXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT DD_VER_ADR_EML MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT DC_ADR_EML @;
	PUT DX_ADR_EML @;
	PUT DD_VER_ADR_EML @;
	PUT DI_VLD_ADR_EML $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET RMXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LA_BR_RMT_PST XX.X ;

IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LA_BR_RMT_PST $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET PDXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT DD_VER_ADR MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT DX_STR_ADR_X @;
	PUT DX_STR_ADR_X @;
	PUT DM_CT @;
	PUT DC_DOM_ST @;
	PUT DF_ZIP_CDE @;
	PUT DM_FGN_ST @;
	PUT DM_FGN_CNY @;
	PUT DD_VER_ADR @;
	PUT DI_VLD_ADR $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET PDXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT DD_PHN_VER MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT DC_PHN @;
	PUT DC_ALW_ADL_PHN @;
	PUT DD_PHN_VER @;
	PUT DI_PHN_VLD @;
	PUT DN_DOM_PHN_ARA @;
	PUT DN_DOM_PHN_XCH @;
	PUT DN_DOM_PHN_LCL @;
	PUT DN_PHN_XTN @;
	PUT DN_FGN_PHN_CNY @;
	PUT DN_FGN_PHN_CT @;
	PUT DN_FGN_PHN_LCL $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET KXADD end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_ATY_SEQ  @;
	PUT LC_STA_ACTYXX @;
	PUT DX_STR_ADR_X @;
	PUT DX_STR_ADR_X @;
	PUT DM_CT @;
	PUT DC_DOM_ST @;
	PUT DF_ZIP_CDE @;
	PUT DM_FGN_CNY @;
	PUT COMMENTS $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET ARCHIST end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_ATY_REQ_RCV LD_ATY_RSP MMDDYYXX.;
FORMAT LT_ATY_RSP TIMEX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_ATY_SEQ @;
	PUT LC_STA_ACTYXX @;
	PUT PF_REQ_ACT @;
	PUT PF_RSP_ACT @;
	PUT PX_ACT_DSC_REQ @;
	PUT LD_ATY_REQ_RCV @;
	PUT LD_ATY_RSP @;
	PUT LF_USR_REQ_ATY @;
	PUT LT_ATY_RSP @;
	PUT LX_ATY $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DWXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT WA_TOT_BRI_OTS X.X WD_LON_RPD_SR mmddyyXX.;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT WC_DW_LON_STA  @;
	PUT WA_TOT_BRI_OTS @;
	PUT WD_LON_RPD_SR @;
	PUT WX_OVR_DW_LON_STA $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LNXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT DT_ADJ LD_RPT_CRB MMDDYYXX. ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LC_RPT_STA_CRB  @;
	PUT LD_RPT_CRB @;
	PUT DT_ADJ $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET CUR_DUE end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT cur_due past_due tot_due tot_due_fee X.X ;
IF _N_ = X THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT cur_due @;
	PUT past_due @;
	PUT tot_due @;
	PUT tot_due_fee $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DLXXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
FORMAT LD_ATY_REQ_RCV MMDDYYXX.;
IF _N_ = X THEN put "-Begin-";
DO;	
	PUT DF_SPE_ACC_ID @;
	PUT LN_ATY_SEQ @;
	PUT LC_STA_ACTYXX @;
	PUT LD_ATY_REQ_RCV $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET ARC_MXXXX end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;	
	PUT DF_SPE_ACC_ID @;
	PUT LN_ATY_SEQ @;
	PUT LC_STA_ACTYXX @;
	PUT LX_ATY $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET ARC_IND end = eof;
FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
IF _N_ = X THEN put "-Begin-";
DO;	
	PUT DF_SPE_ACC_ID @;
	PUT LN_ATY_SEQ @;
	PUT PF_REQ_ACT @;
	PUT LC_STA_ACTYXX $;
end;
if eof then put "-End-";
RUN;
%PUT &rsub &ENDRSUB &FILETRAN ;

DATA _NULL_;
	SET LNXX_DISB END = EOF;
	FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
	FORMAT LD_DSB MMDDYYXX.;
	FORMAT LA_DSB LA_DL_REBATE X.X;

	IF _N_ = X THEN PUT "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_BR_DSB_SEQ @;
		PUT LA_DSB @;
		PUT LD_DSB @;
		PUT LC_DSB_TYP @;
		PUT LC_STA_LONXX @;
		PUT LN_SEQ @;
		PUT LA_DL_REBATE $;
	END;
	IF EOF THEN PUT "-End-";
RUN;


DATA _NULL_;
	SET ADXX END = EOF;
	FILE REPORTXX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;

	IF _N_ = X THEN PUT "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LD_FAT_ADJ_REQ @;
		PUT LN_SEQ_FAT_ADJ_REQ @;
		PUT LC_TYP_FAT_ADJ_REQ @;
		PUT LC_STA_FAT_ADJ_REQ $;
	END;
	IF EOF THEN PUT "-End-";
RUN;
