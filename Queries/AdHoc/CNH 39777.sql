USE [CDW]
GO
/****** Object:  StoredProcedure [dbo].[spMD_GetCompassBorrowerLevelData]    Script Date: XX/XX/XXXX X:XX:XX AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[spMD_GetCompassBorrowerLevelData]
	@AccountIdentifier	VARCHAR(XX)  ,
	@IdentifierType	VARCHAR(XX) 
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @AccountNumber VARCHAR(XX) = (SELECT DF_SPE_ACC_ID FROM PDXX_PRS_NME WHERE DF_SPE_ACC_ID = @AccountIdentifier OR DF_PRS_ID = @AccountIdentifier)
	IF @AccountNumber IS NOT NULL
	BEGIN
		--get all borrower level data with exception of ACH and Employer information
		SELECT	
			PDXX.DF_PRS_ID as SSN,
			PDXX.DF_SPE_ACC_ID as AccountNumber,

			COALESCE(SUMM.WA_TOT_BRI_OTS, X.XX) as Interest,
			COALESCE(SUMM.COHORT, '') as CohortYear,
			COALESCE(SUMM.COHORT_IND, 'N') as CohortAlertIndicator,
			COALESCE(SUMM.LA_CUR_PRI, X.XX) as Principal,
			COALESCE(SUMM.LR_ITR_DLY, X.XX) as DailyInterest,
			COALESCE(SUMM.LR_ITR_MONTH, X.XX) as MonthlyInterestAccrual,
			COALESCE(SUMM.LR_ITR_MONTH_X, X.XX) as MonthlyInterestAccrualPlusX,
		
			COALESCE(REPAY.DUE_DAY, '') as NextDueDate,
			COALESCE(REPAY.LD_CRT_LONXX, '') as LastRPSPrintDate,
			COALESCE(REPAY.MONTH_AMT, '') as MonthlyPaymentAmount,
			COALESCE(REPAY.MULT_DUE_DT, 'N') as MultipleDueDatesAlertIndicator,
			COALESCE(REPAY.DUE_DAY, '') as DueDay,

			COALESCE(DUE.CUR_DUE, X.XX) as CurrentAmountDue, 
			COALESCE(DUE.PAST_DUE, X.XX) as AmountPastDue,
			COALESCE(DUE.TOT_DUE, X.XX) as TotalAmountDue,
			COALESCE(DUE.TOT_DUE_FEE, X.XX) as TotalAmountPlusLateFees,

			COALESCE(BILL.MULT_BIL_MTD, 'N') as MultipleBillMethodAlertIndicator,
			COALESCE(BILL.BIL_MTD, '') as BillType,

			COALESCE(LPMT.LST_PMT_RCVD, '') as LastPaymentReceivedDate,
			COALESCE(ENDR.COBORROWER, 'N') as CoborrowerAlertIndicator,
			COALESCE(FORB.FORB_XX, 'N') as ExceededXXMonthForbAlertIndicator,
			COALESCE(DELQ.LD_DLQ_OCC, '') as DateDelinquencyOccured,
			CAST(COALESCE(DELQ.CUR_DLQ , X) AS INT) as DaysDelinquent,
			COALESCE(FEE.FEE_WAV_DOL, X) as TotalLateFeesWaived,
			COALESCE(FEE.FEE_WAV_CT, X) as TotalNumberOfTimesLateFeesHaveBeenWaived,
			COALESCE(VIPSS,'N') AS VipAlertIndicator,
			COALESCE(SPHAN,'N') AS SpecialHandlingAlertIndicator,
			COALESCE(MXXXX.LX_ATY, '') as InfoXXX,
			COALESCE(DLXXX.DLXXX, X) as NumberOfXXDayLettersSent,
			COALESCE(REHAB.LD_LON_RHB_PCV, '') as Rehabilitated,
			COALESCE(REHAB.REHAB_IND, 'N') AS RehabilitatedAlertIndicator,
			COALESCE(PDISB.PendDisb, 'N') AS HasPendingDisbursement,			
			COALESCE(RMXX.LA_BR_RMT_PST, X.XX) AS PaymentsInSuspense
		FROM	
			dbo.PDXX_PRS_NME PDXX
			LEFT JOIN 
			(
				SELECT
					PDXX.DF_SPE_ACC_ID,
					CAST(SUM(CAST(SUBSTRING(COMBINED_COMMENT.LX_ATY, (CHARINDEX('$',COMBINED_COMMENT.LX_ATY)+X), (CHARINDEX('}',COMBINED_COMMENT.LX_ATY) -X)) AS MONEY)) AS DECIMAL(X,X)) AS FEE_WAV_DOL,
					COUNT(*) AS FEE_WAV_CT
				FROM
					PDXX_PRS_NME PDXX
					INNER JOIN
					(
						SELECT DISTINCT
							AYXX.BF_SSN,
							STUFF(
							(
								SELECT 
										' ' + SUB.LX_ATY AS [text()]
								FROM 
									AYXX_ATY_TXT SUB
								WHERE
									SUB.BF_SSN = AYXX.BF_SSN
									AND SUB.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
							FOR XML PATH('')
							)
							,X,X, '') AS LX_ATY
			
						FROM	
							AYXX_BR_LON_ATY AYXX
							INNER JOIN AYXX_ATY_TXT AYXX
								ON AYXX.BF_SSN = AYXX.BF_SSN
								AND AYXX.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
							left JOIN PDXX_PRS_NME PDXX
								ON PDXX.DF_PRS_ID = AYXX.BF_SSN
						WHERE
							AYXX.PF_REQ_ACT = 'DRLFA'
							AND AYXX.LX_ATY like '%{WAVEFEES}%'
							AND PDXX.DF_SPE_ACC_ID = @AccountNumber
					) COMBINED_COMMENT
						ON COMBINED_COMMENT.BF_SSN = PDXX.DF_PRS_ID
				GROUP BY
					PDXX.DF_SPE_ACC_ID
			) FEE ON
				PDXX.DF_SPE_ACC_ID = FEE.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT 
					AYXX.BF_SSN,
					CONVERT(VARCHAR(XX), MAX(LD_ATY_REQ_RCV), XXX) AS LAST_DLXXX, 
					COUNT(DISTINCT DATEDIFF(MONTH, LD_ATY_REQ_RCV, GETDATE())) AS DLXXX
				FROM
					AYXX_BR_LON_ATY AYXX
					INNER JOIN PDXX_PRS_NME PDXX
						ON PDXX.DF_PRS_ID = AYXX.BF_SSN
				WHERE
					AYXX.PF_REQ_ACT = 'DLXXX'
					AND LD_ATY_REQ_RCV >= DATEADD(YEAR, - X, GETDATE())
					AND PDXX.DF_SPE_ACC_ID = @AccountNUmber
					AND  PF_RSP_ACT = 'PRNTD'
				GROUP BY
					AYXX.BF_SSN
			) DLXXX ON
				PDXX.DF_PRS_ID = DLXXX.BF_SSN
			LEFT JOIN  
			(
				SELECT 
					AYXX.BF_SSN,
					STUFF(
					(
						SELECT 
								' ' + SUB.LX_ATY AS [text()]
						FROM 
							AYXX_ATY_TXT SUB
						WHERE
							SUB.BF_SSN = AYXX.BF_SSN
							AND SUB.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
					FOR XML PATH('')
					)
					,X,X, '')
					AS LX_ATY
				FROM	
					AYXX_ATY_TXT AYXX
					INNER JOIN
					(
						SELECT
							AYXX.BF_SSN,
							MAX(AYXX.LN_ATY_SEQ) AS LN_ATY_SEQ
						FROM
							AYXX_BR_LON_ATY AYXX
							INNER JOIN PDXX_PRS_NME PDXX
								ON PDXX.DF_PRS_ID = AYXX.BF_SSN
						WHERE
							AYXX.PF_REQ_ACT = 'MXXXX'
							and PDXX.DF_SPE_ACC_ID = @AccountNumber
						GROUP BY
							AYXX.BF_SSN
					) MAX_ARC
						ON MAX_ARC.BF_SSN = AYXX.BF_SSN
						AND MAX_ARC.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
			) MXXXX
				ON MXXXX.BF_SSN = PDXX.DF_PRS_ID
			LEFT JOIN 
			(
				SELECT	
					RMXX.BF_SSN,
					SUM(RMXX.LA_BR_RMT_PST) AS LA_BR_RMT_PST
					--RMXX.LA_BR_RMT_PST
				FROM
					PDXX_PRS_NME PDXX
					INNER JOIN RMXX_BR_RMT_PST RMXX
						ON RMXX.BF_SSN = PDXX.DF_PRS_ID
				WHERE
					PDXX.DF_SPE_ACC_ID = @AccountNumber
					AND RMXX.LC_RMT_STA_PST = 'S'
					AND RMXX.PC_FAT_TYP = 'XX' 
					AND RMXX.PC_FAT_SUB_TYP = 'XX'
				GROUP BY
					RMXX.BF_SSN
			) RMXX
				ON RMXX.BF_SSN = PDXX.DF_PRS_ID
			LEFT JOIN
			(
				SELECT DISTINCT
					LNXX.BF_SSN,
					SUM(ISNULL(CUR.CUR_DUE,X)) AS CUR_DUE,
					SUM(ISNULL(PST.PAST_DUE,X)) AS PAST_DUE,
					SUM(COALESCE(CUR.CUR_DUE,X) + COALESCE(PST.PAST_DUE,X)) AS TOT_DUE,
					SUM(COALESCE(CUR.CUR_DUE,X) + COALESCE(PST.PAST_DUE,X) + COALESCE(LNXX.LA_LTE_FEE_OTS,X)) AS TOT_DUE_FEE
				FROM 
					LNXX_LON LNXX
					INNER JOIN PDXX_PRS_NME PDXX
						ON PDXX.DF_PRS_ID = LNXX.BF_SSN
					LEFT JOIN 
					(
						SELECT
							LNXX.BF_SSN,
							LNXX.LN_SEQ,
							SUM(COALESCE(LNXX.LA_BIL_CUR_DU,X) - COALESCE(LNXX.LA_TOT_BIL_STS,X)) AS CUR_DUE
						FROM 
							LNXX_LON_BIL_CRF LNXX
							INNER JOIN 
							(
								SELECT
									LNXX.BF_SSN,
									LNXX.LN_SEQ,
									MIN(LNXX.LD_BIL_DU_LON) AS LD_BIL_DU_LON
								FROM 
									LNXX_LON_BIL_CRF LNXX
									INNER JOIN PDXX_PRS_NME PDXX
										ON PDXX.DF_PRS_ID = LNXX.BF_SSN
								WHERE 
									LNXX.LC_STA_LONXX = 'A'
									AND LNXX.LC_LON_STA_BIL = 'X'
									AND LNXX.LD_BIL_DU_LON > GETDATE()
									and PDXX.DF_SPE_ACC_ID = @AccountNumber
					
								GROUP BY 
									LNXX.BF_SSN,
									LNXX.LN_SEQ
							) MIN_DTE
								ON LNXX.BF_SSN = MIN_DTE.BF_SSN
									AND LNXX.LN_SEQ = MIN_DTE.LN_SEQ
									AND LNXX.LD_BIL_DU_LON = MIN_DTE.LD_BIL_DU_LON
						WHERE 
							LNXX.LC_STA_LONXX = 'A'
							AND LNXX.LC_LON_STA_BIL = 'X'
						GROUP BY 
							LNXX.BF_SSN,
							LNXX.LN_SEQ
						) CUR
							ON LNXX.BF_SSN = CUR.BF_SSN
							AND LNXX.LN_SEQ = CUR.LN_SEQ
					LEFT JOIN 
					(
						SELECT
							LNXX.BF_SSN,
							LNXX.LN_SEQ,
							SUM(COALESCE(LNXX.LA_BIL_CUR_DU,X) - COALESCE(LNXX.LA_TOT_BIL_STS,X)) AS PAST_DUE,
							SUM(LNXX.LA_BIL_CUR_DU) AS LA_BIL_CUR_DU,
							SUM(LNXX.LA_TOT_BIL_STS) AS LA_TOT_BIL_STS
						FROM 
							LNXX_LON_BIL_CRF LNXX
						WHERE 
							LNXX.LC_STA_LONXX = 'A'
							AND LNXX.LC_LON_STA_BIL = 'X'
							AND LNXX.LD_BIL_DU_LON <= getdate()
						GROUP BY 
							LNXX.BF_SSN,
							LNXX.LN_SEQ
					) PST
						ON LNXX.BF_SSN = PST.BF_SSN
						AND LNXX.LN_SEQ = PST.LN_SEQ
				WHERE 
					LNXX.LA_CUR_PRI > X
					AND LNXX.LC_STA_LONXX = 'R'
					AND PDXX.DF_SPE_ACC_ID = @AccountNumber
				GROUP BY 
					LNXX.BF_SSN
			) DUE
				ON DUE.BF_SSN = PDXX.DF_PRS_ID
			LEFT JOIN
			(
				SELECT DISTINCT 
					LNXX.BF_SSN, 
					SUM(LNXX.LA_CUR_PRI) AS LA_CUR_PRI, 
					SUM(DWXX.WA_TOT_BRI_OTS) AS WA_TOT_BRI_OTS, 
					CAST(SUM(CAST(CAST(((CASE WHEN DWXX.WC_DW_LON_STA IN ('XX', 'XX', 'XX') AND LNXX.IC_LON_PGM IN ('SUBSPC', 'DSCON', 'DSS', 'SUBCNS', 'STFFRD') THEN X ELSE LNXX.LA_CUR_PRI END)) * COALESCE (LNXX.LR_ITR, X) / XXX AS INTEGER) AS NUMERIC(X, X)) / XXX) AS NUMERIC(X, X)) AS LR_ITR_DLY, 
					CAST(SUM(CAST(CAST(((CASE WHEN DWXX.WC_DW_LON_STA IN ('XX', 'XX', 'XX') AND LNXX.IC_LON_PGM IN ('SUBSPC', 'DSCON', 'DSS', 'SUBCNS', 'STFFRD') THEN X ELSE LNXX.LA_CUR_PRI END)) * COALESCE (LNXX.LR_ITR, X) / XXX AS INTEGER) AS NUMERIC(X, X)) / XXX) AS NUMERIC(X, X)) * XX AS LR_ITR_MONTH,
					CAST(CASE WHEN SUM(LNXX.LA_CUR_PRI) > X THEN SUM(CAST(CAST(((CASE WHEN DWXX.WC_DW_LON_STA IN ('XX', 'XX', 'XX') AND LNXX.IC_LON_PGM IN ('SUBSPC', 'DSCON', 'DSS', 'SUBCNS', 'STFFRD') THEN X ELSE LNXX.LA_CUR_PRI END)) * COALESCE (LNXX.LR_ITR, X) / XXX AS INTEGER) AS NUMERIC(X, X)) / XXX) * XX + X ELSE X END AS NUMERIC(X, X)) AS LR_ITR_MONTH_X,  
					CONVERT(VARCHAR(X), YEAR(DATEADD(MONTH, X, MAX(CAST(DWXX.WD_LON_RPD_SR AS DATETIME))))) AS COHORT,
					CASE 
						WHEN YEAR(DATEADD(MONTH, X, MAX(CAST(WD_LON_RPD_SR AS DATETIME)))) >= YEAR(DATEADD(YEAR, - X, (DATEADD(MONTH, X, GETDATE())))) THEN 'Y' 
						ELSE 'N' 
					END AS COHORT_IND
				FROM        
					DBO.LNXX_LON LNXX
					INNER JOIN PDXX_PRS_NME PDXX
						ON PDXX.DF_PRS_ID = LNXX.BF_SSN
					INNER JOIN DBO.DWXX_DW_CLC_CLU DWXX
						ON DWXX.BF_SSN = LNXX.BF_SSN AND LNXX.LN_SEQ = DWXX.LN_SEQ 
					LEFT JOIN
						(
							SELECT
								LNXX.BF_SSN,
								LNXX.LN_SEQ,
								LNXX.LR_ITR,
								LNXX.LR_INT_RDC_PGM_ORG,
								ROW_NUMBER() OVER (PARTITION BY LNXX.BF_SSN, LNXX.LN_SEQ ORDER BY LD_STA_LONXX DESC) AS SEQ
							FROM	
								LNXX_INT_RTE_HST LNXX
								INNER JOIN PDXX_PRS_NME PDXX
									ON PDXX.DF_PRS_ID = LNXX.BF_SSN
							WHERE
								LNXX.LC_STA_LONXX = 'A'
								AND
								GETDATE() BETWEEN LNXX.LD_ITR_EFF_BEG AND LNXX.LD_ITR_EFF_END
								AND 
								PDXX.DF_SPE_ACC_ID = @AccountNumber

							) LNXX ON LNXX.BF_SSN = LNXX.BF_SSN	AND LNXX.LN_SEQ = LNXX.LN_SEQ AND LNXX.SEQ = X
				WHERE
					PDXX.DF_SPE_ACC_ID = @AccountNumber
				GROUP BY
					LNXX.BF_SSN
			) SUMM
				ON SUMM.BF_SSN  = PDXX.DF_PRS_ID	
			LEFT JOIN
			(
				SELECT
				   BILL.DF_SPE_ACC_ID,
				   BIL_MTD = STUFF(
										(
											SELECT 
												( ', ' + BIL_MTD  ) AS [text()]
											FROM 
											(
												SELECT DISTINCT
													LB.DF_SPE_ACC_ID,
													LB.BIL_MTD
												FROM
													LOAN_Bill LB
											) SUB
										   WHERE 
												BILL.DF_SPE_ACC_ID = SUB.DF_SPE_ACC_ID
										   ORDER BY 
												DF_SPE_ACC_ID,
												BIL_MTD
										   FOR XML PATH( '' )
										  ),X,X,''),
					MULTI_TYP.MULT_BIL_MTD
				FROM 
					LOAN_Bill BILL
					LEFT JOIN 
					(
						SELECT 
							BILL.DF_SPE_ACC_ID,
							CASE WHEN COUNT(DISTINCT BILL.BIL_MTD) > X THEN 'Y' ELSE 'N' END AS MULT_BIL_MTD
						FROM
							LOAN_Bill BILL
						WHERE
							DF_SPE_ACC_ID = @AccountNumber
						GROUP BY 
							BILL.DF_SPE_ACC_ID
					) MULTI_TYP
						ON BILL.DF_SPE_ACC_ID = MULTI_TYP.DF_SPE_ACC_ID
				WHERE
					BILL.DF_SPE_ACC_ID = @AccountNumber
				GROUP BY 
					BILL.DF_SPE_ACC_ID, 
					MULTI_TYP.MULT_BIL_MTD

			)BILL
				ON BILL.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT DISTINCT
					PDXX.DF_SPE_ACC_ID,
					CONVERT(VARCHAR, MAX(LNXX.LD_DLQ_OCC), XXX) [LD_DLQ_OCC],
					MAX((LN_DLQ_MAX+X)) [CUR_DLQ]
				FROM
					LNXX_LON_DLQ_HST LNXX
					INNER JOIN PDXX_PRS_NME PDXX
						ON PDXX.DF_PRS_ID = LNXX.BF_SSN
				WHERE
					LNXX.LC_STA_LONXX = 'X'
					AND PDXX.DF_SPE_ACC_ID = @AccountNumber
					AND DATEDIFF(DAY, LNXX.LD_DLQ_MAX, GETDATE()) < X --DOES NOT PULL BORROWERS THAT ARE A DELIQUENCY TRANSFER BUT WILL PULL BORROWERS AFTER A HOLIDAY
				GROUP BY 
					PDXX.DF_SPE_ACC_ID
			)DELQ
				ON DELQ.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT DISTINCT 
					PDXX.DF_SPE_ACC_ID, 
					'Y' AS COBORROWER
				FROM 
					PDXX_PRS_NME PDXX
					INNER JOIN LNXX_EDS LNXX
						ON LNXX.BF_SSN = PDXX.DF_PRS_ID
				WHERE
					PDXX.DF_SPE_ACC_ID = @AccountNumber
			)ENDR
				ON ENDR.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT DISTINCT
					PDXX.DF_SPE_ACC_ID,
					CASE WHEN SUM(DATEDIFF(MONTH, LNXX.LD_FOR_BEG, LNXX.LD_FOR_END)) OVER(PARTITION BY PDXX.DF_PRS_ID) >= XX THEN 'Y' ELSE 'N' END FORB_XX
				FROM
					PDXX_PRS_NME PDXX
					INNER JOIN 
					(
						SELECT DISTINCT
							LNXX.BF_SSN,
							LNXX.LD_FOR_BEG,
							CASE 
								WHEN LNXX.LD_FOR_END > GETDATE() THEN CAST(GETDATE() AS DATE)
								ELSE LNXX.LD_FOR_END
							END AS LD_FOR_END
						FROM
							FBXX_BR_FOR_REQ FBXX
							INNER JOIN PDXX_PRS_NME PDXX
								ON PDXX.DF_PRS_ID = FBXX.BF_SSN
							INNER JOIN LNXX_BR_FOR_APV LNXX
								ON LNXX.BF_SSN = FBXX.BF_SSN
								AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
						WHERE
							FBXX.LC_FOR_STA = 'A'
							AND 
							FBXX.LC_STA_FORXX = 'A'
							AND 
							FBXX.LC_FOR_TYP = 'XX'
							AND
							LNXX.LC_STA_LONXX = 'A'
							AND 
							LNXX.LC_FOR_RSP != 'XXX' --XXX = FORBEARANCE REQUEST DENIED
							AND
							LNXX.LD_FOR_BEG <= GETDATE()
							AND 
							PDXX.DF_SPE_ACC_ID = @AccountNumber
					)LNXX
						ON LNXX.BF_SSN = PDXX.DF_PRS_ID
			)FORB
				ON FORB.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT
					PDXX.DF_SPE_ACC_ID,
					CONVERT(VARCHAR, MAX_BORR_PAYMENT.LD_FAT_EFF, XXX) AS LST_PMT_RCVD,
					CONVERT(DECIMAL(X, X), MAX_BORR_PAYMENT.TRANS_AMT) AS TRAN_AMT,
					CONVERT(VARCHAR, MAX_IVR_PAYMENT.LD_FAT_EFF ,XXX) AS LST_PMT_IVR,
					CONVERT(DECIMAL(X, X), MAX_IVR_PAYMENT.TRANS_AMT) AS LST_AMT_IVR,
					CONVERT(varchar, MAX_BORR_PAYMENT.LD_FAT_EFF, XXX) AS LST_PMT_RCVD_IVR
				FROM
					PDXX_PRS_NME PDXX
					LEFT JOIN --GETS THE LAST PAYMENT OF TYPE XX
					(
						SELECT
							PDXX.DF_SPE_ACC_ID,
							MAX(LNXX.LD_FAT_EFF) OVER (PARTITION BY PDXX.DF_SPE_ACC_ID) AS LD_FAT_EFF,
							SUM(ABS(ISNULL(LA_FAT_CUR_PRI,X) + ISNULL(LA_FAT_NSI,X) + ISNULL(LA_FAT_LTE_FEE,X))) OVER  (PARTITION BY PDXX.DF_SPE_ACC_ID, LNXX.LD_FAT_EFF) AS TRANS_AMT,
							ROW_NUMBER() OVER (PARTITION BY LNXX.BF_SSN, LNXX.PC_FAT_TYP ORDER BY LNXX.LD_FAT_EFF DESC) [RNK]
						FROM	
							PDXX_PRS_NME PDXX
							INNER JOIN LNXX_FIN_ATY LNXX
								ON LNXX.BF_SSN = PDXX.DF_PRS_ID
						WHERE
							LNXX.LC_STA_LONXX = 'A'
							AND LNXX.LC_FAT_REV_REA = ''--NOT REVERSED
							AND LNXX.PC_FAT_TYP = 'XX'
							AND PDXX.DF_SPE_ACC_ID = @AccountNumber
					) MAX_BORR_PAYMENT
						ON MAX_BORR_PAYMENT.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
						AND MAX_BORR_PAYMENT.RNK = X
					LEFT JOIN --GETS THE LAST PAYMENT OF TYPE XX SUB TYPE XX
					(
						SELECT
							PDXX.DF_SPE_ACC_ID,
							MAX(LNXX.LD_FAT_EFF) OVER (PARTITION BY PDXX.DF_SPE_ACC_ID) AS LD_FAT_EFF,
							SUM(ABS(ISNULL(LA_FAT_CUR_PRI,X) + ISNULL(LA_FAT_NSI,X) + ISNULL(LA_FAT_LTE_FEE,X))) OVER  (PARTITION BY PDXX.DF_SPE_ACC_ID, LNXX.LD_FAT_EFF) AS TRANS_AMT,
							ROW_NUMBER() OVER (PARTITION BY LNXX.BF_SSN, LNXX.PC_FAT_TYP ORDER BY LNXX.LD_FAT_EFF DESC) [RNK]
						FROM	
							PDXX_PRS_NME PDXX
							INNER JOIN LNXX_FIN_ATY LNXX
								ON LNXX.BF_SSN = PDXX.DF_PRS_ID
						WHERE
							LNXX.LC_STA_LONXX = 'A'
							AND LNXX.LC_FAT_REV_REA = ''--NOT REVERSED
							AND LNXX.PC_FAT_TYP = 'XX'
							AND LNXX.PC_FAT_SUB_TYP = 'XX'
							AND PDXX.DF_SPE_ACC_ID = @AccountNumber
					) MAX_IVR_PAYMENT
						ON MAX_IVR_PAYMENT.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
						AND MAX_IVR_PAYMENT.RNK = X
				WHERE
					PDXX.DF_SPE_ACC_ID = @AccountNumber
					AND MAX_BORR_PAYMENT.DF_SPE_ACC_ID IS NOT NULL 
			)LPMT
				ON LPMT.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN 
			(
				SELECT DISTINCT
					PDXX.DF_SPE_ACC_ID,
					CONVERT(VARCHAR, MAX(COALESCE(RSXX.LD_SNT_RPD_DIS, RS.TermStartDate, FORB.FORB_CREATE)) OVER (PARTITION BY RSXX.BF_SSN), XXX) AS LD_CRT_LONXX,
					CASE WHEN FORB.BF_SSN IS NOT NULL THEN FORB.DUE_DAY
					ELSE STUFF(
					(
						SELECT distinct
							', ' + CASE WHEN LTRIM(RTRIM(DWXX.WX_OVR_DW_LON_STA)) = 'LITIGATION' THEN '' ELSE CAST(DAY(R.LD_RPS_X_PAY_DU) AS VARCHAR(XX)) END AS [text()]
						FROM
							[calc].RepaymentSchedules R
							INNER JOIN DWXX_DW_CLC_CLU DWXX
								ON R.BF_SSN = DWXX.BF_SSN
								AND R.LN_SEQ = DWXX.LN_SEQ
						WHERE
		
							 RS.BF_SSN = R.BF_SSN
							 AND R.CurrentGradation = X

					FOR XML PATH('')
					)
					,X,X,'')  END AS DUE_DAY,
					CASE WHEN FORB.BF_SSN IS NOT NULL THEN FORB.MONTH_AMT 
					ELSE STUFF(
					(
						SELECT distinct
							', ' + CASE WHEN LTRIM(RTRIM(DWXX.WX_OVR_DW_LON_STA)) = 'LITIGATION' THEN '' ELSE '$' + CAST(SUM(R.LA_RPS_ISL) OVER (PARTITION BY DAY(R.LD_RPS_X_PAY_DU))  AS VARCHAR(XX)) END AS [text()]
						FROM
							[calc].RepaymentSchedules R
							INNER JOIN DWXX_DW_CLC_CLU DWXX
								ON R.BF_SSN = DWXX.BF_SSN
								AND R.LN_SEQ = DWXX.LN_SEQ
						WHERE
							 RS.BF_SSN = R.BF_SSN
							 AND R.CurrentGradation = X

					FOR XML PATH('')
					)
					,X,X,'') END AS MONTH_AMT,
					CASE
						WHEN RS_COUNT.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N'
					END AS MULT_DUE_DT 
				FROM	
					PDXX_PRS_NME PDXX
					LEFT JOIN [calc].RepaymentSchedules RS
						ON PDXX.DF_PRS_ID = RS.BF_SSN
					LEFT JOIN
					(
						SELECT	
							BF_SSN,
							COUNT(DISTINCT DAY(LD_RPS_X_PAY_DU)) AS DAY_COUNT
						FROM
							[calc].RepaymentSchedules RS
							INNER JOIN PDXX_PRS_NME PDXX
								ON PDXX.DF_PRS_ID = RS.BF_SSN
						WHERE
							PDXX.DF_SPE_ACC_ID = @AccountNumber
						GROUP BY
							BF_SSN
						HAVING COUNT(DISTINCT DAY(LD_RPS_X_PAY_DU)) > X
					) RS_COUNT
						ON RS_COUNT.BF_SSN = RS.BF_SSN
					LEFT JOIN RSXX_BR_RPD RSXX
						ON RSXX.BF_SSN = RS.BF_SSN
						AND RSXX.LN_RPS_SEQ = RS.LN_RPS_SEQ
					LEFT JOIN
					(
						SELECT
							FBXX.BF_SSN,
							MAX(FBXX.LD_STA_FORXX) AS FORB_CREATE,
							'RPF=$' + CONVERT(VARCHAR, (SUM(FBXX.LA_REQ_RDC_PAY) OVER (PARTITION BY FBXX.BF_SSN, FBXX.LF_FOR_CTL_NUM)), X) AS MONTH_AMT,
							CAST(DAY(DATEADD(s, - X, DATEADD(mm, DATEDIFF(m, X, GETDATE()) + X, X))) AS VARCHAR) AS DUE_DAY
						FROM
							FBXX_BR_FOR_REQ FBXX
							INNER JOIN LNXX_BR_FOR_APV LNXX
								ON LNXX.BF_SSN = FBXX.BF_SSN
								AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
							INNER JOIN PDXX_PRS_NME PDXX
								ON PDXX.DF_PRS_ID = FBXX.BF_SSN
						WHERE
							FBXX.LC_FOR_STA = 'A'
							AND 
							FBXX.LC_STA_FORXX = 'A'
							AND
							LNXX.LC_STA_LONXX = 'A'
							AND 
							LNXX.LC_FOR_RSP != 'XXX'
							AND
							FBXX.LA_REQ_RDC_PAY > X
							AND 
							LNXX.LD_FOR_BEG <= GETDATE()
							AND 
							LNXX.LD_FOR_END >= GETDATE()
							AND
							PDXX.DF_SPE_ACC_ID = @AccountNumber
						GROUP BY
							FBXX.BF_SSN,
							FBXX.LA_REQ_RDC_PAY,
							FBXX.LF_FOR_CTL_NUM
					) FORB
						ON FORB.BF_SSN = pdXX.DF_PRS_ID

				WHERE
					(
						(RSXX.LC_STA_RPSTXX = 'A' AND RS.CurrentGradation = X)
						 OR 
						 FORB.BF_SSN IS NOT NULL
					)
					AND PDXX.DF_SPE_ACC_ID = @AccountNumber
			
			)REPAY
				ON REPAY.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT     
					PDXX.DF_SPE_ACC_ID, 
					CONVERT(VARCHAR(XX), MAX(LD_LON_RHB_PCV), XXX) AS LD_LON_RHB_PCV, 
					'Y' AS REHAB_IND
				FROM
					dbo.LNXX_RPD_PIO_CVN LNXX
					INNER JOIN PDXX_PRS_NME PDXX
						ON PDXX.DF_PRS_ID = LNXX.BF_SSN
				WHERE
					LD_LON_RHB_PCV IS NOT NULL
					AND PDXX.DF_SPE_ACC_ID = @AccountNumber
				GROUP BY 
					PDXX.DF_SPE_ACC_ID
			)REHAB
				ON REHAB.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT DISTINCT
					PDXX.DF_SPE_ACC_ID,
					CASE WHEN AYXX.PF_REQ_ACT = 'VIPSS' THEN 'Y' ELSE 'N' END AS VIPSS,
					CASE WHEN AYXX.PF_REQ_ACT = 'SPHAN' THEN 'Y' ELSE 'N' END AS SPHAN
				FROM
					PDXX_PRS_NME PDXX
					INNER JOIN AYXX_BR_LON_ATY AYXX
						ON AYXX.BF_SSN = PDXX.DF_PRS_ID
				WHERE
					AYXX.PF_REQ_ACT IN ('VIPSS','SPHAN')
					AND AYXX.LC_STA_ACTYXX = 'A'
					AND PDXX.DF_SPE_ACC_ID = @AccountNumber
			) VIPSS
				ON VIPSS.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
			LEFT JOIN
			(
				SELECT DISTINCT 
					PDXX.DF_SPE_ACC_ID, 
					'Y' AS PendDisb
				FROM 
					dbo.LNXX_DSB LNXX
					INNER JOIN PDXX_PRS_NME PDXX
						ON PDXX.DF_PRS_ID = LNXX.BF_SSN
				WHERE
					 (LC_DSB_TYP = 'X')
					 AND ISNULL(LC_DSB_CAN_TYP,'') = ''
					 AND LC_STA_LONXX = 'A'
					 AND PDXX.DF_SPE_ACC_ID = @AccountNumber

			)PDISB
				ON PDISB.DF_SPE_ACC_ID = PDXX.DF_SPE_ACC_ID
		WHERE
				PDXX.DF_SPE_ACC_ID = @AccountNumber
	END
END