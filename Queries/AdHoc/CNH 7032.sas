/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWSXX.NWSXXRZ";
FILENAME REPORTX "&RPTLIB/UNWSXX.NWSXXRX";

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;
RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;
LIBNAME AES DBX DATABASE=&DB OWNER=AES; 

%MACRO SQLCHECK ;
  %IF  &SQLXRC NE X  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @XX " ********************************************************************* "
              / @XX " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @XX " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @XX " ********************************************************************* "
              / @XX " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @XX " ****  &SQLXMSG   **** "
              / @XX " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;

PROC SQL;
	CONNECT TO DBX (DATABASE=&DB);

	CREATE TABLE DEMO AS
		SELECT	
			*
		FROM	
			CONNECTION TO DBX 
				(
					SELECT DISTINCT
						'CornerStone' AS SERVICER_NAME,
						'XXXXXX' AS SERVICER_ID,
						(PDXX.DM_PRS_X || ' ' || PDXX.DM_PRS_MID || ' ' || PDXX.DM_PRS_LST) AS BORROWER_LEGAL_NAME,
						LNXX.BF_SSN AS SOCIAL_SECURITY_NUMBER,
						(PDXX.DX_STR_ADR_X || ' ' || PDXX.DX_STR_ADR_X || ' ' || PDXX.DX_STR_ADR_X || ' ' || PDXX.DM_CT  || ' ' || PDXX.DC_DOM_ST || ' ' || PDXX.DF_ZIP_CDE) AS ADDRESS,
						PDXX.DM_FGN_CNY AS COUNTRY,
						COALESCE(HOME_EMAIL.DX_ADR_EML, ALT_EMAIL.DX_ADR_EML) AS EMAIL_ADDRESS,
						CASE
							WHEN ESIGN.DF_SPE_ID IS NOT NULL THEN 'Y'
							ELSE 'N'
						END AS ESIGN_ON_FILE,
						CASE
							WHEN ESIGN.DF_SPE_ID IS NOT NULL THEN COALESCE(DATE(ESIGN.DF_DTS_ACP_TRM_EFF), 'XX/XX/XXXX')
							ELSE NULL
						END AS ESIGN_CERTIFICATION_DATE,
						COALESCE(HOME_MOBLE_PHONE.PHONE,ALT_MOBLE_PHONE.PHONE,WORK_MOBLE_PHONE.PHONE,MOBLE_MOBLE_PHONE.PHONE,HOME_PHONE.PHONE,ALT_PHONE.PHONE,WORK_PHONE.PHONE,MOBLE_PHONE.PHONE,'') AS MOBILE_NUMBER,
						COALESCE(HOME_MOBLE_PHONE.DC_ALW_ADL_PHN,ALT_MOBLE_PHONE.DC_ALW_ADL_PHN,WORK_MOBLE_PHONE.DC_ALW_ADL_PHN,MOBLE_MOBLE_PHONE.DC_ALW_ADL_PHN,'N') AS TCPA_CONSENT,
						COALESCE(HOME_MOBLE_PHONE.DD_PHN_VER,ALT_MOBLE_PHONE.DD_PHN_VER,WORK_MOBLE_PHONE.DD_PHN_VER,MOBLE_MOBLE_PHONE.DD_PHN_VER,NULL) AS TCPA_CONSENT_DATE,
						CASE
							WHEN LNXX.LC_TYP_SCH_DIS = 'CA' THEN 'Pay As You Earn  PFH'
							WHEN LNXX.LC_TYP_SCH_DIS = 'CX' THEN 'Income-Contingent Repayment X'
							WHEN LNXX.LC_TYP_SCH_DIS = 'CX' THEN 'Income-Contingent Repayment X'
							WHEN LNXX.LC_TYP_SCH_DIS = 'CX' THEN 'Income-Contingent Repayment X'
							WHEN LNXX.LC_TYP_SCH_DIS = 'IB' THEN 'Income-Based Repayment PFH'
							WHEN LNXX.LC_TYP_SCH_DIS = 'IX' THEN 'Income-Based Repayment XXXX PFH'
							ELSE 'NA'
						END AS REPAYMENT_PLAN_NAME,
						PA.LA_RPS_ISL AS CURRENT_MONTHLY_PA_FOR_IDR,
						RSXX.BA_PMN_STD_TOT_PAY AS PERMANENT_STANDARD_PA_AMOUNT,
						RSXX.BD_ANV_QLF_IBR AS ANNIVERSARY_DUE_DATE,
						DATE((DAYS(RSXX.BD_ANV_QLF_IBR) - XX)) AS SOFT_DEADLINE_DATE
					FROM
						PKUB.PDXX_PRS_NME PDXX
						INNER JOIN PKUB.LNXX_LON LNXX
							ON PDXX.DF_PRS_ID = LNXX.BF_SSN
						INNER JOIN PKUB.PDXX_PRS_ADR PDXX
							ON PDXX.DF_PRS_ID = PDXX.DF_PRS_ID
						INNER JOIN PKUB.RSXX_BR_RPD RSXX
							ON RSXX.BF_SSN = LNXX.BF_SSN
						INNER JOIN PKUB.LNXX_LON_RPS LNXX
							ON LNXX.BF_SSN = LNXX.BF_SSN
							AND LNXX.LN_SEQ = LNXX.LN_SEQ
							AND LNXX.LN_RPS_SEQ = RSXX.LN_RPS_SEQ
						INNER JOIN PKUB.RSXX_IBR_RPS RSXX
							ON RSXX.BF_SSN = PDXX.DF_PRS_ID
							AND RSXX.BC_STA_RSXX = 'A'
						INNER JOIN
						(
							SELECT
								LNXX.BF_SSN,
								SUM(LNXX.LA_RPS_ISL) AS LA_RPS_ISL 
							FROM
								PKUB.LNXX_LON_RPS_SPF LNXX
							INNER JOIN PKUB.RSXX_BR_RPD RSXX
								ON RSXX.BF_SSN = LNXX.BF_SSN
								AND RSXX.LC_STA_RPSTXX = 'A'
								AND LNXX.LN_RPS_SEQ = RSXX.LN_RPS_SEQ
								AND RSXX.BN_IBR_SEQ  = LNXX.LN_GRD_RPS_SEQ
							GROUP BY
								LNXX.BF_SSN
						)PA
							ON PA.BF_SSN = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								DX_ADR_EML
							FROM
								PKUB.PDXX_PRS_ADR_EML
							WHERE
								DC_STA_PDXX= 'A'
								AND DI_VLD_ADR_EML = 'Y'
								AND DC_ADR_EML = 'H'
						)HOME_EMAIL
							ON HOME_EMAIL.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								DX_ADR_EML
							FROM
								PKUB.PDXX_PRS_ADR_EML
							WHERE
								DC_STA_PDXX= 'A'
								AND DI_VLD_ADR_EML = 'Y'
								AND DC_ADR_EML = 'A'
						)ALT_EMAIL
							ON ALT_EMAIL.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_SPE_ID,
								DF_DTS_ACP_TRM_EFF
							FROM
								AES.PHXX_CNC_EML
							WHERE
								DI_CNC_ELT_OPI = 'Y' OR DI_CNC_EBL_OPI = 'Y' OR DI_CNC_TAX_OPI = 'Y'
						) ESIGN
							ON ESIGN.DF_SPE_ID = PDXX.DF_SPE_ACC_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'H'
								AND PDXX.DC_ALW_ADL_PHN = 'P'
						) HOME_MOBLE_PHONE
							ON HOME_MOBLE_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'A'
								AND PDXX.DC_ALW_ADL_PHN = 'P'
						) ALT_MOBLE_PHONE
							ON ALT_MOBLE_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'W'
								AND PDXX.DC_ALW_ADL_PHN = 'P'
						) WORK_MOBLE_PHONE
							ON WORK_MOBLE_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'M'
								AND PDXX.DC_ALW_ADL_PHN = 'P'
						) MOBLE_MOBLE_PHONE
							ON MOBLE_MOBLE_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'H'
								AND DC_ALW_ADL_PHN = 'N'
						) HOME_PHONE
							ON HOME_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'A'
								AND DC_ALW_ADL_PHN = 'N'
						) ALT_PHONE
							ON ALT_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'W'
								AND DC_ALW_ADL_PHN = 'N'
						) WORK_PHONE
							ON WORK_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID
						LEFT JOIN
						(
							SELECT
								DF_PRS_ID,
								(DN_DOM_PHN_ARA || DN_DOM_PHN_XCH || DN_DOM_PHN_LCL) AS PHONE,
								DC_ALW_ADL_PHN,
								DD_PHN_VER
							FROM
								PKUB.PDXX_PRS_PHN PDXX
							WHERE
								PDXX.DI_PHN_VLD ='Y'
								AND PDXX.DC_PHN = 'M'
								AND DC_ALW_ADL_PHN = 'N'
						) MOBLE_PHONE
							ON MOBLE_PHONE.DF_PRS_ID = PDXX.DF_PRS_ID


					WHERE
						LNXX.LA_CUR_PRI > X
						AND LNXX.LC_STA_LONXX = 'R'
						AND LNXX.LC_STA_LONXX = 'A'
						AND RSXX.LC_STA_RPSTXX = 'A'
						AND LNXX.LC_TYP_SCH_DIS IN ('CA','CX','CX','CX','IB','IX')
						AND (HOME_EMAIL.DF_PRS_ID IS NOT NULL OR ALT_EMAIL.DF_PRS_ID IS NOT NULL)
						AND RSXX.BD_ANV_QLF_IBR BETWEEN 'XX/XX/XXXX' AND 'XX/XX/XXXX'

					FOR READ ONLY WITH UR
				)
	;

	DISCONNECT FROM DBX;

	/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
	/*%SQLCHECK;*/
QUIT;

ENDRSUBMIT;

DATA DEMO; SET LEGEND.DEMO; RUN;

DATA FINAL;
	SET DEMO;
	FORMAT SOFT_DEADLINE_DATE MMDDYYXX.;
	FORMAT ANNIVERSARY_DUE_DATE MMDDYYXX.;
	FORMAT ESIGN_CERTIFICATION_DATE MMDDYYXX.;
	FORMAT TCPA_CONSENT_DATE MMDDYYXX.;
	FORMAT CURRENT_MONTHLY_PA_FOR_IDR DOLLARXX.X;
	FORMAT PERMANENT_STANDARD_PA_AMOUNT DOLLARXX.X;


	IF TCPA_CONSENT = 'P' THEN TCPA_CONSENT = 'Y';

RUN;

PROC EXPORT DATA = WORK.FINAL 
            OUTFILE = "T:\NH XXXX_VX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="SheetX"; 
RUN;
