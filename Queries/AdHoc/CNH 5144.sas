/*NOTE: 	open Q:\CS Systems Support\Data Mart Validation Reports\NSLDS FILE COMPARE XXXXXX\NSLDS Repayment Plan Detail XXXXXX.xlsx using password R$XpQyiZ%X#m*/
/*			before running this job*/

LIBNAME LEGEND REMOTE SERVER=LEGEND SLIBREF=WORK;
LIBNAME REPAYDET 'Q:\CS Systems Support\Data Mart Validation Reports\NSLDS FILE COMPARE XXXXXX\NSLDS Repayment Plan Detail XXXXXX.xlsx';
LIBNAME INREPAY 'Q:\CS Systems Support\Data Mart Validation Reports\NSLDS FILE COMPARE XXXXXX\XXXX-XX-XX_IN_REPAY Including Defaults.xlsx';

DATA LEGEND.CS; SET INREPAY.'BYSTATUS$'N; RUN;
DATA NSLDS; SET REPAYDET.'SHEETX$'N; RUN;

RSUBMIT;
LIBNAME PKUB DBX DATABASE=DNFPUTDL OWNER=PKUB;

PROC SQL;
	CREATE TABLE CS_AWARD AS
		SELECT
			CS.BF_SSN,
			CS.LN_SEQ,
			CS.LID,
			CS.SCHD_TYP,
			FSXX.LF_FED_AWD||PUT(FSXX.LN_FED_AWD_SEQ,ZX.) AS AWARD
		FROM
			CS
			JOIN PKUB.FSXX_DL_LON FSXX
				ON CS.BF_SSN = FSXX.BF_SSN
				AND CS.LN_SEQ = FSXX.LN_SEQ
	;
QUIT;

ENDRSUBMIT;

DATA CS_AWARD; SET LEGEND.CS_AWARD; RUN;

PROC SQL;
	CREATE TABLE NSLDS_RP AS
		SELECT
			NS.AWARD,
			NS.FX AS REPAY_TYP,
			CS.SCHD_TYP
		FROM
			NSLDS NS
			JOIN CS_AWARD CS
				ON NS.AWARD = CS.AWARD
	;
	
	CREATE TABLE IN_CS_NOT_IN_NSLDS AS
		SELECT
			CS.BF_SSN,
			CS.AWARD,
			CS.SCHD_TYP
		FROM
			CS_AWARD CS
			LEFT JOIN NSLDS NS
				ON CS.AWARD = NS.AWARD
		WHERE
			NS.AWARD IS NULL
	;

	CREATE TABLE IN_NSLDS_NOT_IN_CS AS
		SELECT
			NS.AWARD,
			NS.FX AS REPAY_TYP
		FROM
			NSLDS NS
			LEFT JOIN CS_AWARD CS
				ON CS.AWARD = NS.AWARD
		WHERE
			CS.AWARD IS NULL
	;
			
QUIT;
		
PROC EXPORT
		DATA = NSLDS_RP
		OUTFILE='T:\SAS\NSLDS Data file compare XXXXXX.XLSX'
		REPLACE;
RUN;

PROC EXPORT
		DATA = IN_CS_NOT_IN_NSLDS
		OUTFILE='T:\SAS\NSLDS Data file compare XXXXXX.XLSX'
		REPLACE;
RUN;

PROC EXPORT
		DATA = IN_NSLDS_NOT_IN_CS
		OUTFILE='T:\SAS\NSLDS Data file compare XXXXXX.XLSX'
		REPLACE;
RUN;
