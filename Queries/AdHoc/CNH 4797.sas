%LET RPTLIB = T:\SAS;

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;
RSUBMIT LEGEND;
LIBNAME PKUB DBX DATABASE=DNFPUTDL OWNER=PKUB;

PROC SQL;
	CREATE TABLE ALL_SCH AS
		SELECT DISTINCT
			RSXX.LD_RPS_X_PAY_DU,
			RSXX.LC_STA_RPSTXX,
			RSXX.LD_STA_RPSTXX,
			CASE
				WHEN LNXX.LC_TYP_SCH_DIS IN ('IB', 'IL') THEN 'IBR'
				WHEN LNXX.LC_TYP_SCH_DIS IN ('CX', 'CX', 'CX', 'CQ') THEN 'ICR'
				WHEN LNXX.LC_TYP_SCH_DIS IN ('CA', 'CP') THEN 'PAYE'
				ELSE ''
			END AS SCH_TYP,
			LNXX.BF_SSN,
			LNXX.LN_SEQ,
			LNXX.BF_SSN||PUT(LNXX.LN_SEQ,ZX.) AS LID,
			LNXX.LN_RPS_SEQ,
			LNXX.LN_GRD_RPS_SEQ,
			LNXX.LA_RPS_ISL,
			LNXX.LN_RPS_TRM
		FROM
			PKUB.RSXX_BR_RPD RSXX
			INNER JOIN PKUB.LNXX_LON_RPS LNXX
				ON RSXX.BF_SSN = LNXX.BF_SSN
				AND RSXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
			JOIN PKUB.LNXX_LON_RPS_SPF LNXX
				ON LNXX.BF_SSN = LNXX.BF_SSN
				AND LNXX.LN_SEQ = LNXX.LN_SEQ
				AND LNXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
		WHERE 
			LNXX.LC_TYP_SCH_DIS IN ('IB', 'IL', 'CX', 'CX', 'CX', 'CQ', 'CA', 'CP')
			AND RSXX.LD_RPS_X_PAY_DU <= 'XXFEBXXXX'D
			AND 
				(
					RSXX.LC_STA_RPSTXX = 'A'
					OR
					RSXX.LD_STA_RPSTXX > 'XXMAYXXXX'D
				)
		ORDER BY
			LNXX.BF_SSN,
			LNXX.LN_SEQ,
			LNXX.LN_RPS_SEQ,
			LNXX.LN_GRD_RPS_SEQ		
	;

QUIT;

ENDRSUBMIT;
DATA ALL_SCH; SET LEGEND.ALL_SCH; RUN;

%MACRO BYMON(TBL,DT,MON,YR);
	PROC SQL;
		CREATE TABLE IP_&TBL AS
			SELECT
				*,
				&DT AS MON,
				PUT(&DT, MMDDYYXX.) AS MONTH_END
			FROM
				ALL_SCH
			WHERE
				LD_RPS_X_PAY_DU <= &DT
				AND 
					(
						LC_STA_RPSTXX = 'A'
						OR
						LD_STA_RPSTXX >= &DT
					)
		;
	QUIT;

%MEND BYMON;

%BYMON(JUNXX,'XXJUNXXXX'D);
%BYMON(JULXX,'XXJULXXXX'D);
%BYMON(AUGXX,'XXAUGXXXX'D);
%BYMON(SEPXX,'XXSEPXXXX'D);
%BYMON(OCTXX,'XXOCTXXXX'D);
%BYMON(NOVXX,'XXNOVXXXX'D);
%BYMON(DECXX,'XXDECXXXX'D);
%BYMON(JANXX,'XXJANXXXX'D);
%BYMON(FEBXX,'XXFEBXXXX'D);

DATA ALL_MONS;
	SET IP_JUNXX IP_JULXX IP_AUGXX IP_SEPXX IP_OCTXX IP_NOVXX IP_DECXX IP_JANXX IP_FEBXX ;
RUN;

PROC SQL;
	CREATE TABLE CNTS AS
		SELECT DISTINCT
			MON,
			SCH_TYP,
			COUNT(DISTINCT BF_SSN) AS CNT
		FROM
			ALL_MONS
		GROUP BY
			SCH_TYP,
			MON
		ORDER BY
			MON
	;
QUIT;

%MACRO GETPMT(TBL,DT);
	/*identifies the current payment amount*/
	DATA &TBL ;
		SET IP_&TBL;
		LENGTH PREV_LID $ XX;
		FORMAT LD_GRD_BEG LD_GRD_END DATEX.; 

		RETAIN PREV_LID '';
		RETAIN LD_GRD_END; 

		TARG_DATE = &DT; 

	/*	determine the beginning of the first term for the gradation each time a new gradation record is read in*/
		IF PREV_LID NE LID THEN  
			DO; 
				PMT_DUE = LD_RPS_X_PAY_DU; 
				PREV_LID = LID;
			END;
		ELSE 
			PMT_DUE = LD_GRD_END + X; 

		IF PMT_DUE > TARG_DATE THEN RETURN; 

	/*	calculate the gradation term begin and end for each payment in the gradation*/
		DO LN_GRD_TRM = X TO LN_RPS_TRM;
			IF LN_GRD_TRM = X THEN LD_GRD_BEG = PMT_DUE;	
			ELSE LD_GRD_BEG = LD_GRD_END + X;	

			LD_GRD_END = INTNX('MONTH',LD_GRD_BEG - X,X,'SAME'); 

	/*		once the current gradation is found, output the data and then move on to the next observation */
			IF TARG_DATE >= LD_GRD_BEG AND TARG_DATE <= LD_GRD_END THEN
				DO;
					OUTPUT;
					RETURN;
				END;
		END;
	RUN;

%MEND GETPMT;

%GETPMT(JUNXX,'XXJUNXXXX'D);
%GETPMT(JULXX,'XXJULXXXX'D);
%GETPMT(AUGXX,'XXAUGXXXX'D);
%GETPMT(SEPXX,'XXSEPXXXX'D);
%GETPMT(OCTXX,'XXOCTXXXX'D);
%GETPMT(NOVXX,'XXNOVXXXX'D);
%GETPMT(DECXX,'XXDECXXXX'D);
%GETPMT(JANXX,'XXJANXXXX'D);
%GETPMT(FEBXX,'XXFEBXXXX'D);

DATA ALL_PMT_MONS;
	SET JUNXX JULXX AUGXX SEPXX OCTXX NOVXX DECXX JANXX FEBXX ;
RUN;

PROC SQL;
	CREATE TABLE PMT_CNTS AS
		SELECT DISTINCT
			MON,
			SCH_TYP,
			COUNT(DISTINCT BF_SSN) AS CNT
		FROM
			ALL_PMT_MONS
		WHERE
			LA_RPS_ISL = X
		GROUP BY
			SCH_TYP,
			MON
		ORDER BY
			MON
	;
QUIT;


ODS RTF BODY = "T:\SAS\Query for FSA Presentation - Borrower Counts.RTF";

PROC PRINT NOOBS SPLIT='/' DATA=CNTS WIDTH=UNIFORM WIDTH=MIN LABEL;
	FORMAT 
		MON MMDDYYXX.
		CNT COMMAX.
	;

	BY
		MON
	;

	VAR 	
		SCH_TYP
		CNT
	;

	LABEL
		MON = 'Month End'
		SCH_TYP = 'Schedule Type'
		CNT = 'Number of Borrowers'
	;

	TITLE 'Query for FSA Presentation';
RUN;

ODS RTF CLOSE;

ODS RTF BODY = "T:\SAS\Query for FSA Presentation - Payment = X.RTF";

PROC PRINT NOOBS SPLIT='/' DATA=PMT_CNTS WIDTH=UNIFORM WIDTH=MIN LABEL;
	FORMAT 
		MON MMDDYYXX.
		CNT COMMAX.
	;

	BY
		MON
	;

	VAR 	
		SCH_TYP
		CNT
	;

	LABEL
		MON = 'Month End'
		SCH_TYP = 'Schedule Type'
		CNT = 'Number of Borrowers'
	;

	TITLE 'Query for FSA Presentation';
RUN;

ODS RTF CLOSE;

PROC EXPORT
	DATA = ALL_MONS
	OUTFILE = "T:\SAS\Query for FSA Presentation Detail.XLSX"
	DBMS = EXCEL
	REPLACE;
	SHEET='BRW_CNTS';
RUN;

PROC EXPORT
	DATA = ALL_PMT_MONS
	OUTFILE = "T:\SAS\Query for FSA Presentation Detail.XLSX"
	DBMS = EXCEL
	REPLACE;
	SHEET='ZERO_PMT_AMT';
RUN;
