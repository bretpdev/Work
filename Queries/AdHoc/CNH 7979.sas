DATA FILEDATA;
INFILE "Q:\UHEAA Projects\Jesse\Due Dil Comments - DCR\call_hist files\call_hist*" MISSOVER;
INPUT  
        +XX
        BF_SSN $X.
		+XX
		LD_ATY_RSP mmddyyXX.
		+XX
		PF_RSP_ACT $X.;
FORMAT LD_ATY_RSP mmddyyXX.;
RUN;

PROC SQL;
	CREATE TABLE FILEDATAXX AS
		SELECT
			INPUT(BF_SSN, BESTXX.) AS BF_SSN,
			LD_ATY_RSP,
			PF_RSP_ACT
		FROM
			FILEDATA
		WHERE
			BF_SSN NOT LIKE 'RF%'
			OR TRIM(BF_SSN) ^= ''
;

	CREATE TABLE FILEDATA AS 
		SELECT
			BF_SSN FORMAT ZX.,
			LD_ATY_RSP,
			PF_RSP_ACT
		FROM FILEDATAXX
		WHERE
			BF_SSN IS NOT NULL
;
QUIT;

PROC SQL;
	CREATE TABLE DATA AS
		SELECT
			BF_SSN AS BF_SSN,
			MONOTONIC() AS LN_ATY_SEQ,
			LD_ATY_RSP,
			LD_ATY_RSP AS LD_ATY_REQ_RCV,
			'UTXXXXX' AS LF_USR_REQ_ATY,
			. AS LC_PRD_CAL,
			'UTXXXXX' AS LF_PRF_BY,
			'A' AS LC_STA_ACTYXX,
			LD_ATY_RSP AS LD_STA_ACTYXX,
			. AS LI_ATY_MKP_GRC,
			'B' AS LC_ATY_RCP,
			DATETIME() AS LF_LST_DTS_AYXX FORMAT DATETIMEXX.X,
			'B' AS LC_ATY_RGD_TO,
 			CASE  PF_RSP_ACT 
				WHEN 'D'  THEN 'INVPH'
				WHEN 'XX' THEN 'INVPH'
				WHEN 'BZ' THEN 'NOCTC'
				WHEN 'FX' THEN 'NOCTC'
				when 'AM' THEN 'NOCTC'
				WHEN 'N'  THEN 'NOCTC'
				WHEN 'NC' THEN 'NOCTC'
				WHEN 'WN' THEN 'NOCTC'
				WHEN 'LM' THEN 'NOCTC'
				WHEN 'MC' THEN 'NOCTC'
				WHEN 'XX' THEN 'NOCTC'
				WHEN 'B'  THEN 'NOCTC'
				WHEN 'X'  THEN 'NOCTC'
				WHEN 'HD' THEN 'NOCTC'
				WHEN 'MD' THEN 'NOCTC'
				WHEN 'RP' THEN 'CNTCT'
				WHEN 'XX' THEN 'CNTCT'
				WHEN 'XX' THEN 'CNTCT'
				WHEN 'DF' THEN 'CNTCT'
				WHEN 'FB' THEN 'CNTCT'
				WHEN 'RC' THEN 'CNTCT'
				WHEN 'PT' THEN 'CNTCT'
				WHEN 'XX' THEN 'CNTCT'
				WHEN '__' THEN 'NOCTC'
				WHEN 'XX' THEN 'NOCTC'
				WHEN 'NA' THEN 'NOCTC'
				WHEN 'A' THEN 'NOCTC'
				ELSE  'UNKNOWN CODE:' || PF_RSP_ACT 
			END AS PF_RSP_ACT,
			'DDPHN' AS PF_REQ_ACT
		FROM
			FILEDATA
;
QUIT;

PROC SQL;
	CREATE TABLE DATA_TO_SEND AS
		SELECT DISTINCT
			BF_SSN
		FROM
			DATA
;
QUIT;

LIBNAME  DUSTER  REMOTE  SERVER=DUSTER SLIBREF=WORK;
DATA DUSTER.SOURCE; *Send data to Duster;
SET DATA_TO_SEND;
RUN;

RSUBMIT DUSTER;
LIBNAME OLWHRMX DBX DATABASE=DLGSUTWH OWNER=OLWHRMX;
PROC SQL;
	CREATE TABLE dst AS
		SELECT DISTINCT	
			S.BF_SSN
		FROM
			 SOURCE S
		INNER JOIN OLWHRMX.PDXX_PRS_NME PDXX
			ON INPUT(PDXX.DF_PRS_ID, BESTXX.) = SOURCE.BF_SSN
		INNER JOIN OLWHRMX.LNXX_LON LNXX
			ON LNXX.BF_SSN = PDXX.DF_PRS_ID
		WHERE
			LNXX.LA_CUR_PRI > X
			AND LNXX.LC_STA_LONXX = 'R'
;
QUIT;
ENDRSUBMIT;

DATA DST; SET DUSTER.DST; RUN;

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=WORK;
DATA LEGEND.SOURCE; *Send data to Duster;
SET DATA_TO_SEND;
RUN;

RSUBMIT LEGEND;
LIBNAME PKUB DBX DATABASE=DNFPUTDL OWNER=PKUB;
PROC SQL;
	CREATE TABLE LNG AS
		SELECT DISTINCT	
			S.BF_SSN
		FROM
			 SOURCE S
		INNER JOIN PKUB.PDXX_PRS_NME PDXX
			ON INPUT(PDXX.DF_PRS_ID, BESTXX.) = SOURCE.BF_SSN
		INNER JOIN PKUB.LNXX_LON LNXX
			ON LNXX.BF_SSN = PDXX.DF_PRS_ID
		WHERE
			LNXX.LA_CUR_PRI > X
			AND LNXX.LC_STA_LONXX = 'R'
;
QUIT;
ENDRSUBMIT;

DATA LNG; SET LEGEND.LNG; RUN;

PROC SQL;
	CREATE TABLE NO_REGION AS
		SELECT DISTINCT
			DATA.*
		FROM
			DATA
		LEFT JOIN DST D
			ON D.BF_SSN = DATA.BF_SSN
		LEFT JOIN LNG L
			ON L.BF_SSN = DATA.BF_SSN
		WHERE
			D.BF_SSN IS NULL AND L.BF_SSN IS NULL
;

	CREATE TABLE DUSTER_DATA AS
		SELECT DISTINCT
				DATA.*
		FROM
			DATA
		INNER JOIN DST D
			ON D.BF_SSN = DATA.BF_SSN
;

	CREATE TABLE LEGEND_DATA AS 
		SELECT DISTINCT
			DATA.*
		FROM
			DATA
		INNER JOIN LNG L
			ON L.BF_SSN = DATA.BF_SSN
;
QUIT;

/*LIBNAME  DUSTER  REMOTE  SERVER=DUSTER SLIBREF=WORK;*/
/*DATA DUSTER.NO_REGION; *Send data to Duster;*/
/*SET NO_REGION;*/
/*RUN;*/

/*RSUBMIT DUSTER;*/
/*LIBNAME OLWHRMX DBX DATABASE=DLGSUTWH OWNER=OLWHRMX;*/
/*PROC SQL;*/
/*	CREATE TABLE ENDORSERDST AS*/
/*		SELECT DISTINCT	*/
/*			S.BF_SSN,*/
/*			lnXX.BF_SSN AS BWR_SSN*/
/*		FROM*/
/*			 NO_REGION S*/
/*		INNER JOIN OLWHRMX.PDXX_PRS_NME PDXX*/
/*			ON input(PDXX.DF_PRS_ID, bestXX.) = s.BF_SSN*/
/*		INNER JOIN OLWHRMX.LNXX_EDS LNXX*/
/*			ON LNXX.LF_EDS = PDXX.DF_PRS_ID*/
/*;*/
/*QUIT;*/
/*ENDRSUBMIT;*/
/**/
/*DATA ENDORSERDST; SET DUSTER.ENDORSERDST; RUN;*/
/**/
/*LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=WORK;*/
/*DATA LEGEND.NO_REGION; *Send data to Duster;*/
/*SET NO_REGION;*/
/*RUN;*/
/**/
/*RSUBMIT LEGEND;*/
/*LIBNAME PKUB DBX DATABASE=DNFPUTDL OWNER=PKUB;*/
/*PROC SQL;*/
/*	CREATE TABLE ENDORSERLNG AS*/
/*		SELECT DISTINCT	*/
/*			S.BF_SSN,*/
/*			LNXX.BF_SSN AS BWR_SSN*/
/*		FROM*/
/*			 NO_REGION S*/
/*		INNER JOIN PKUB.PDXX_PRS_NME PDXX*/
/*			ON INPUT(PDXX.DF_PRS_ID, BESTXX.) = S.BF_SSN*/
/*		INNER JOIN PKUB.LNXX_EDS LNXX*/
/*			ON LNXX.LF_EDS = PDXX.DF_PRS_ID*/
/*;*/
/*QUIT;*/
/*ENDRSUBMIT;*/
/**/
/*DATA ENDORSERLNG; SET LEGEND.ENDORSERLNG; RUN;*/


data legend_dataX;
set legend_data;
if _N_ < XXXXXXX then
	output;
run;

data legend_dataX;
set legend_data;
if _N_ > XXXXXXX then
	output;
run;

PROC EXPORT DATA = WORK.DUSTER_DATA 
            OUTFILE = "T:\NH XXXX RX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="RX"; 
RUN;

PROC EXPORT DATA = WORK.LEGEND_DATAX
            OUTFILE = "T:\NH XXXX RX_X.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="RX"; 
RUN;

PROC EXPORT DATA = WORK.LEGEND_DATAX
            OUTFILE = "T:\NH XXXX RX_X.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="RX"; 
RUN;

/*PROC EXPORT DATA = WORK.ENDORSERDST */
/*            OUTFILE = "T:\NH XXXX RX.xlsx" */
/*            DBMS = EXCEL*/
/*			REPLACE;*/
/*     SHEET="RX"; */
/*RUN;*/




	
