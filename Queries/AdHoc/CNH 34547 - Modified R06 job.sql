SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
/*Dynamic table name logic*/
DECLARE @LastDayPrevMonth DATE = DATEADD(DAY, -X*DAY(CAST(GETDATE() AS DATE)), CAST(GETDATE() AS DATE))

DECLARE @TableDWXX VARCHAR(XX) = '[AuditCDW].[dbo].DWXX_DW_CLC_CLU_'
DECLARE @TableLNXX VARCHAR(XX) = '[AuditCDW].[dbo].LNXX_LON_'
DECLARE @TableLNXX VARCHAR(XX) = '[AuditCDW].[dbo].LNXX_LON_DLQ_HST_'
DECLARE @Month VARCHAR(X) = LEFT(DATENAME(MONTH, @LastDayPrevMonth), X)
DECLARE @Year  VARCHAR(X) = DATEPART(YEAR,@LastDayPrevMonth)
DECLARE @DWXX VARCHAR(XX) = @TableDWXX + @Month + @Year
DECLARE @LNXX VARCHAR(XX) = @TableLNXX + @Month + @Year
DECLARE @LNXX VARCHAR(XX) = @TableLNXX + @Month + @Year

DECLARE @RXQuery VARCHAR(MAX) = 
'
/*RX*/
SELECT 
	AuditLNXX.LC_FED_PGM_YR AS [LOAN PROGRAM],
	SUM(AuditLNXX.LA_CUR_PRI) AS Principal,
	SUM(AuditLNXX.LA_NSI_OTS) AS Interest,
	X AS LA_FAT_LTE_FEE,
	''IN SCHOOL'' AS Category,
	X AS CategoryNumber,
	COUNT(DISTINCT AuditDWXX.BF_SSN) AS CategoryCountByBorrower,
	COUNT(DISTINCT AuditDWXX.BF_SSN + CAST(AuditDWXX.LN_SEQ AS VARCHAR)) AS CategoryCountByLoan,
	CASE WHEN AuditLNXX.IC_LON_PGM IN(''DLSCNS'',''DLSSPL'',''DLSTFD'') THEN ''SUB''
		 WHEN AuditLNXX.IC_LON_PGM IN(''DLPCNS'',''DLPLGB'',''DLPLUS'',''DLUCNS'',''DLUNST'',''DLUSPL'',''TEACH'') THEN ''UNSUB''
		 ELSE ''''
	END AS Portfolio,
	BorCount.BorCount
FROM 
	'+ @LNXX +' AuditLNXX
	INNER JOIN '+ @DWXX +' AuditDWXX
		ON AuditDWXX.BF_SSN = AuditLNXX.BF_SSN
		AND AuditDWXX.LN_SEQ = AuditLNXX.LN_SEQ
		AND AuditDWXX.WC_DW_LON_STA = ''XX''
	LEFT JOIN
	(
		SELECT
			COUNT(DISTINCT LNXX.BF_SSN) AS BorCount
		FROM
			'+ @LNXX +' LNXX
		WHERE
			LNXX.LC_STA_LONXX NOT IN(''P'',''I'',''J'')
			AND 
			(
				LNXX.LA_CUR_PRI != X.XX
				OR LNXX.LA_NSI_OTS != X.XX
			)
	) BorCount
		ON X = X
	LEFT JOIN '+ @LNXX +' AuditLNXX
		ON AuditLNXX.BF_SSN = AuditLNXX.BF_SSN
		AND AuditLNXX.LN_SEQ = AuditLNXX.LN_SEQ
		AND AuditLNXX.LC_STA_LONXX = ''X''
		AND AuditLNXX.LC_DLQ_TYP = ''P''
	LEFT JOIN CDW..LNXX_LON_MTH_BAL LNXX --Pulls month end balances for overpaid accounts
		ON LNXX.BF_SSN = AuditLNXX.BF_SSN
		AND LNXX.LN_SEQ = AuditLNXX.LN_SEQ
		AND LNXX.LC_STA_LONXX = ''A''
		AND LNXX.LA_OTS_PRI_ELG < X
		AND LNXX.LD_EFF_MTH_BAL = '''+ CAST(@LastDayPrevMonth AS VARCHAR) +'''	
WHERE
	AuditLNXX.LC_STA_LONXX NOT IN(''P'',''I'',''J'')
	AND 
	(
		AuditLNXX.LA_CUR_PRI != X.XX
		OR AuditLNXX.LA_NSI_OTS != X.XX
	)
GROUP BY
	AuditLNXX.LC_FED_PGM_YR,
	CASE WHEN AuditLNXX.IC_LON_PGM IN(''DLSCNS'',''DLSSPL'',''DLSTFD'') THEN ''SUB''
		 WHEN AuditLNXX.IC_LON_PGM IN(''DLPCNS'',''DLPLGB'',''DLPLUS'',''DLUCNS'',''DLUNST'',''DLUSPL'',''TEACH'') THEN ''UNSUB''
		 ELSE ''''
	END,
	BorCount.BorCount
ORDER BY
	AuditLNXX.LC_FED_PGM_YR,
	CASE WHEN AuditLNXX.IC_LON_PGM IN(''DLSCNS'',''DLSSPL'',''DLSTFD'') THEN ''SUB''
		 WHEN AuditLNXX.IC_LON_PGM IN(''DLPCNS'',''DLPLGB'',''DLPLUS'',''DLUCNS'',''DLUNST'',''DLUSPL'',''TEACH'') THEN ''UNSUB''
		 ELSE ''''
	END
'

EXEC(@RXQuery)





