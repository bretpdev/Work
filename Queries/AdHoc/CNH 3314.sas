LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;
RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%let DB = DNFPUTDL;  *This is live;

PROC SQL;
	CONNECT TO DBX (DATABASE=&DB);

	CREATE TABLE FIRST_POP AS
		SELECT	
			*
		FROM	
			CONNECTION TO DBX 
				(
					SELECT	DISTINCT
						LNXX.BF_SSN,
						LNXX.LN_SEQ,
						LNXX.LD_FAT_EFF,
						LNXX.LF_LON_ALT,
						LNXX.LN_LON_ALT_SEQ
					FROM PKUB.LNXX_FIN_ATY LNXX
						INNER JOIN PKUB.LNXX_LON LNXX
							ON LNXX.BF_SSN = LNXX.BF_SSN
							AND LNXX.LN_SEQ = LNXX.LN_SEQ
					WHERE
						LNXX.PC_FAT_TYP = 'XX' 
						AND LNXX.PC_FAT_SUB_TYP = 'XX'
						AND LNXX.LC_STA_LONXX = 'A'
						AND DAYS(LD_FAT_EFF) BETWEEN DAYS('XX/XX/XXXX') AND DAYS('XX/XX/XXXX')

					FOR READ ONLY WITH UR
				)
	;


	DISCONNECT FROM DBX;

	/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
	/*%SQLCHECK;*/
QUIT;

ENDRSUBMIT;


RSUBMIT LEGEND;
LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;
PROC SQL;
	CREATE TABLE SECOND_POP AS
		SELECT DISTINCT	
			LNXX.BF_SSN,
			LNXX.LN_SEQ,
			LNXX.LD_LON_EFF_ADD,
			LNXX.LF_LON_ALT,
			LNXX.LN_LON_ALT_SEQ
			
		FROM
			FIRST_POP FIR
			INNER JOIN PKUB.LNXX_LON LNXX
				ON LNXX.BF_SSN = FIR.BF_SSN
		WHERE 
			FIR.LD_FAT_EFF <= LNXX.LD_LON_EFF_ADD
		
;
QUIT;
ENDRSUBMIT;

DATA FIRST_POP(DROP=LF_LON_ALT LN_LON_ALT_SEQ);
SET LEGEND.FIRST_POP;
RUN;





/*export to Excel spreadsheet*/
PROC EXPORT DATA = WORK.FIRST_POP 
            OUTFILE = "T:\SAS\NH_XXXX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="FIRST_POPULATION"; 
RUN;

PROC EXPORT DATA = LEGEND.SECOND_POP 
            OUTFILE = "T:\SAS\NH_XXXX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="SECOND_POPULATION"; 
RUN;
