/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWSXX.NWSXXRZ";
FILENAME REPORTX "&RPTLIB/UNWSXX.NWSXXRX";

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;
RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;

PROC SQL;
	CONNECT TO DBX (DATABASE=&DB);

	CREATE TABLE DEMO AS
		SELECT	
			*
		FROM	
			CONNECTION TO DBX 
				(
					SELECT DISTINCT
						PDXX.DF_SPE_ACC_ID,
						WQXX.PF_REQ_ACT AS ARC,
						WQXX.WF_CRT_DTS_WQXX AS DATE_TASK_CREATED,
						LKXX.PX_DSC_MDM AS CURRENT_STATUS,
						MAX(LN_DLQ_MAX) OVER (PARTITION BY LNXX.BF_SSN) AS LN_DLQ_MAX,
						LNXX.LD_RPT_CRB,
						LNXX.LC_RPT_STA_CRB,
						LKXXL.PX_DSC_MDM AS CREDIT_STATUS
					FROM
						PKUB.WQXX_TSK_QUE WQXX
						INNER JOIN PKUB.AYXX_BR_LON_ATY AYXX
							ON AYXX.BF_SSN = WQXX.BF_SSN
							AND AYXX.LN_ATY_SEQ = WQXX.LN_ATY_SEQ
						INNER JOIN PKUB.LNXX_LON_ATY LNXX
							ON LNXX.BF_SSN = AYXX.BF_SSN
							AND LNXX.LN_ATY_SEQ = AYXX.LN_ATY_SEQ
						INNER JOIN PKUB.PDXX_PRS_NME PDXX
							ON PDXX.DF_PRS_ID = WQXX.BF_SSN
						INNER JOIN PKUB.DWXX_DW_CLC_CLU DWXX
							ON DWXX.BF_SSN = WQXX.BF_SSN
							AND DWXX.LN_SEQ = LNXX.LN_SEQ
						INNER JOIN PKUB.LKXX_LS_CDE_LKP LKXX
							ON LKXX.PM_ATR = 'WC-DW-LON-STA'
							AND LKXX.PX_ATR_VAL = DWXX.WC_DW_LON_STA
						LEFT JOIN PKUB.LNXX_LON_DLQ_HST LNXX
							ON LNXX.BF_SSN = WQXX.BF_SSN
							AND LNXX.LC_STA_LONXX = 'X'
						LEFT JOIN PKUB.LNXX_LON_CRB_RPT LNXX
							ON LNXX.BF_SSN = WQXX.BF_SSN
							AND LNXX.LD_RPT_CRB >= 'XX/XX/XXXX'
							AND LNXX.LD_RPT_CRB <= 'XX/XX/XXXX'
						LEFT JOIN PKUB.LKXX_LS_CDE_LKP LKXXL
							ON LKXXL.PM_ATR = 'LC-RPT-STA-CRB'
							AND LKXXL.PX_ATR_VAL = LNXX.LC_RPT_STA_CRB
					WHERE
						WF_QUE = 'XX'
						AND WF_SUB_QUE = 'XX'

					FOR READ ONLY WITH UR
				)
	;

	DISCONNECT FROM DBX;
QUIT;

ENDRSUBMIT;

DATA DEMO; SET LEGEND.DEMO; RUN;

PROC SQL;
CREATE TABLE DATA AS
	SELECT DISTINCT
		DF_SPE_ACC_ID,
		ARC,
		DATE_TASK_CREATED,
		CURRENT_STATUS,
		LN_DLQ_MAX AS DAYS_PAST_DUE,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = XX AND YEAR(LD_RPT_CRB) = XXXX THEN CREDIT_STATUS END) AS NOVXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = XX THEN CREDIT_STATUS END) AS DECXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS JANXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS FEBXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS MARXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS APRXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS MAYXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS JUNXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS JULYXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS AUGXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = X THEN CREDIT_STATUS END) AS SEPTXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = XX THEN CREDIT_STATUS END) AS OCTXX,
		MAX(CASE WHEN MONTH(LD_RPT_CRB) = XX AND YEAR(LD_RPT_CRB) = XXXX THEN CREDIT_STATUS END) AS NOVXX
	FROM
		DEMO
	GROUP BY	
		DF_SPE_ACC_ID,
		DATE_TASK_CREATED,
		CURRENT_STATUS,
		LN_DLQ_MAX,
		ARC
;
QUIT;


PROC EXPORT 
	DATA= WORK.DATA
	OUTFILE= "T:\CNH XXXXX.XLSX" 
	DBMS=XLSX /*this is the correct DBMS for EXCEL XXXX */
	REPLACE /*comment out or delete this line and change the name of the sheet below if you want to add the output to a new tab in an existing spreadsheet*/
	; /*NOTE everything up to this semi-colon is actually one command, it has just been broken up on separate lines for readability*/
	SHEET="SheetX"; 
RUN;
