LIBNAME XL 'T:\MONITOR-INPUT-FED.xlsx';

DATA XLSOURCE;
	SET XL.'FED SSNs$'N;
	SSN = PUT(INPUT(BF_SSN,X.),zX.);
	KEEP SSN;
RUN;

LIBNAME XL CLEAR;

/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWSXX.NWSXXRZ";
FILENAME REPORTX "&RPTLIB/UNWSXX.NWSXXRX";

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;

DATA LEGEND.XLSOURCE;
	SET XLSOURCE;
	BF_SSN = SSN;
	WF_QUE = '';
	KEEP BF_SSN WF_QUE;
RUN;

RSUBMIT LEGEND;

%LET DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;
LIBNAME AES DBX DATABASE=&DB OWNER=AES;

PROC SQL ;
	CONNECT TO DBX (DATABASE=&DB);

	CREATE TABLE RX AS
		SELECT DISTINCT
			WQXX.BF_SSN
			,WQXX.WF_QUE
		FROM
			PKUB.WQXX_TSK_QUE WQXX
		WHERE
			WQXX.WF_QUE = 'RX'
			AND WQXX.WC_STA_WQUEXX NOT IN ('X', 'C')
			AND (
					UPPER(WQXX.WX_MSG_X_TSK) LIKE UPPER('EXPIRED%')
					OR UPPER(WQXX.WX_MSG_X_TSK) LIKE UPPER('NO TERM%')
				)	
	;		
	DISCONNECT FROM DBX;

QUIT;

ENDRSUBMIT;

DATA RX; 
	SET LEGEND.RX; 
RUN;

PROC SQL;
/*gets borrowers in both the RX and xl file*/
	CREATE TABLE XL_RX AS
		SELECT 
			B.*
		FROM 
			XLSOURCE A
			INNER JOIN RX B
				ON A.SSN = B.BF_SSN
	;
/*gets borrowers in xl file with no RX*/
	CREATE TABLE XL_NO_RX AS
		SELECT 
			A.* 
		FROM 
			XLSOURCE A
			LEFT JOIN XL_RX B
				ON A.SSN = B.BF_SSN
		WHERE 
			B.BF_SSN IS NULL
	;
/*gets those in rX file who aren't in xl file*/
	CREATE TABLE NO_XL AS
		SELECT 
			A.*
		FROM 
			RX A
			LEFT JOIN XL_RX B
				ON A.BF_SSN = B.BF_SSN
		WHERE 
			B.BF_SSN IS NULL
	;
/*properly combines them all*/
	CREATE TABLE SOURCE_COMBO AS
		SELECT * FROM XL_RX
		UNION
		SELECT * FROM XL_NO_RX
		UNION
		SELECT * FROM NO_XL
	;
QUIT;

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;

DATA LEGEND.SOURCE_COMBO;
	SET SOURCE_COMBO;
RUN;

RSUBMIT LEGEND;

PROC SQL ;
	CONNECT TO DBX (DATABASE=&DB);

	CREATE TABLE DEMO AS
		SELECT DISTINCT	
			S.BF_SSN AS SSN
			,CASE
				WHEN SUM(LNXX_BAL.LA_CUR_PRI) <= X.XX
				THEN 'X.XX'
				ELSE ' '
			END AS ZERO_BAL
			,CASE
				WHEN S.WF_QUE = 'RX' 
				THEN 'Y'
				ELSE 'N'
			 END AS RX
/*			,CASE*/
/*				WHEN WQXX.BF_SSN IS NOT NULL */
/*				THEN 'Y'*/
/*				ELSE 'N'*/
/*			 END AS RX*/
			,CASE
				WHEN PHXX.DF_SPE_ID IS NOT NULL 
				THEN 'Y'
				ELSE 'N'
			 END AS ECORR
			,CASE
				WHEN LNXX.BF_SSN IS NOT NULL 
				THEN 'Y'
				ELSE 'N'
			 END AS ACH
/*			,CASE*/
/*			 WHEN LNXX.BF_SSN IS NOT NULL THEN 'RESOLVED'*/
/*			 ELSE ' '*/
/*			 END AS RESOLVED*/
			,CASE
				WHEN DWXX_X.BF_SSN IS NOT NULL 
				THEN 'DEFER'
				ELSE ' '
			 END AS DEFER
			,CASE
				WHEN DWXX_XX.BF_SSN IS NOT NULL 
				THEN 'CLM_PD'
				ELSE ' '
			 END AS CLM_PD
			,CASE
				WHEN DWXX_XX.BF_SSN IS NOT NULL 
				THEN 'DTH_ALG'
				ELSE ' '
			 END AS DTH_ALG
			,CASE
				WHEN DWXX_XX.BF_SSN IS NOT NULL
				THEN 'DTH_VRF'
				ELSE ' '
			 END AS DTH_VRF
			,CASE
				WHEN DWXX_XX.BF_SSN IS NOT NULL
				THEN 'DSB_ALG'
				ELSE ' '
			 END AS DSB_ALG
			,CASE
				WHEN DWXX_XX.BF_SSN IS NOT NULL 
				THEN 'DSB_VRF'
				ELSE ' '
			 END AS DSB_VRF
			,CASE
				WHEN DWXX_XX.BF_SSN IS NOT NULL 
				THEN 'BKP_ALG'
				ELSE ' '
			 END AS BKP_ALG
			,CASE
				WHEN DWXX_XX.BF_SSN IS NOT NULL 
				THEN 'BKP_VRF'
				ELSE ' '
			 END AS BKP_VRF
/*			,CASE*/
/*			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'PIF'*/
/*			 ELSE ' '*/
/*			 END AS PIF*/
			,CASE
				WHEN FBR.BF_SSN IS NOT NULL 
				THEN 'FORB'
				ELSE ' '
			 END AS FORB
			,CASE
				WHEN SPLIT.BF_SSN IS NOT NULL 
				THEN 'SPLIT'
				ELSE ' '
			 END AS SPLIT
			,CASE
				WHEN IDR.BF_SSN IS NOT NULL 
				THEN 'IDR'
				ELSE ' '
			 END AS IDR
			,CASE
				WHEN F_RPS.BF_SSN IS NOT NULL 
				THEN 'F_RPS'
				ELSE ' '
			 END AS F_RPS
			,CASE
				WHEN AYXX.BF_SSN IS NOT NULL 
				THEN 'SETUP'
				ELSE ' '
			 END AS SETUP
			,CASE
				WHEN OVRPS.BF_SSN IS NOT NULL 
				THEN 'OVRPS'
				ELSE ' '
			 END AS OVRPS
			,CASE
				WHEN RPS.BF_SSN IS NOT NULL 
				THEN 'RPS>RX'
				ELSE ' '
			 END AS RPS
		FROM
			SOURCE_COMBO S
/*			LEFT JOIN PKUB.WQXX_TSK_QUE WQXX*/
/*				ON S.BF_SSN = WQXX.BF_SSN*/
/*				AND WQXX.WF_QUE = 'RX'*/
			INNER JOIN PKUB.PDXX_PRS_NME PDXX
				ON S.BF_SSN = PDXX.DF_PRS_ID
			LEFT JOIN AES.PHXX_CNC_EML PHXX
				ON PDXX.DF_SPE_ACC_ID = PUT(PHXX.DF_SPE_ID,zXX.)
			LEFT JOIN PKUB.LNXX_EFT_TO_LON LNXX	
				ON S.BF_SSN = LNXX.BF_SSN
				AND LNXX.LC_STA_LNXX = 'A'
/*			LEFT JOIN PKUB.LNXX_LON_RPS LNXX*/
/*				ON S.BF_SSN = LNXX.BF_SSN*/
/*				AND LNXX.LD_CRT_LONXX >= 'XXJUNXXXX'd*/
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_X
				ON S.BF_SSN = DWXX_X.BF_SSN
				AND DWXX_X.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XXX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
/*			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX*/
/*				ON S.BF_SSN = DWXX_XX.BF_SSN*/
/*				AND DWXX_XX.WC_DW_LON_STA = 'XX'*/
			LEFT JOIN 
			(
				SELECT
					S.BF_SSN
				FROM 
					SOURCE_COMBO S
					INNER JOIN PKUB.LNXX_BR_FOR_APV LNXX
						ON S.BF_SSN = LNXX.BF_SSN
					INNER JOIN PKUB.FBXX_BR_FOR_REQ FBXX
						ON S.BF_SSN = FBXX.BF_SSN
						AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
				WHERE
					FBXX.LC_FOR_TYP IN ('XX','XX')
					AND TODAY() BETWEEN LNXX.LD_FOR_BEG AND LNXX.LD_FOR_END
					AND LNXX.LC_STA_LONXX = 'A'
					AND FBXX.LC_FOR_STA = 'A'
					AND FBXX.LC_STA_FORXX = 'A'
			) FBR
				ON S.BF_SSN = FBR.BF_SSN
			LEFT JOIN 
			(
				SELECT
					S.BF_SSN
				FROM 
					SOURCE_COMBO S
					INNER JOIN PKUB.LNXX_LON_RPS LNXX
						ON S.BF_SSN = LNXX.BF_SSN
					INNER JOIN 
					(
						SELECT
							S.BF_SSN
						FROM 
							SOURCE_COMBO S
							INNER JOIN PKUB.LNXX_LON_RPS LNXX
								ON S.BF_SSN = LNXX.BF_SSN
						WHERE
							LNXX.LC_STA_LONXX = 'A'
							AND LNXX.LC_TYP_SCH_DIS IN ('FS', 'FG', 'IB', 'IL', 'IX', 'IP', 'CX', 'CX', 'CX', 'CL', 'CQ', 'IS', 'CA', 'CP', 'RP', 'IA', 'IX', 'RE')
					) TYPS
						ON S.BF_SSN = TYPS.BF_SSN
					WHERE 
						LNXX.LC_STA_LONXX = 'A'
						AND 
						LNXX.LC_TYP_SCH_DIS NOT IN ('FS', 'FG', 'IB', 'IL', 'IX', 'IP', 'CX', 'CX', 'CX', 'CL', 'CQ', 'IS', 'CA', 'CP', 'RP', 'IA', 'IX', 'RE')
			) SPLIT
				ON S.BF_SSN = SPLIT.BF_SSN
			LEFT JOIN PKUB.LNXX_LON_RPS IDR
				ON S.BF_SSN = IDR.BF_SSN 
				AND IDR.LC_TYP_SCH_DIS IN ('IB','IL','IX','IP','CX','CX','CX','CL','CQ','IS','CA','CP','RP','IA','IX','RE')
			LEFT JOIN PKUB.LNXX_LON_RPS F_RPS
				ON S.BF_SSN = F_RPS.BF_SSN
				AND F_RPS.LC_TYP_SCH_DIS IN ('FG','FS')
			LEFT JOIN PKUB.AYXX_BR_LON_ATY AYXX
				ON S.BF_SSN = AYXX.BF_SSN
				AND AYXX.LD_ATY_RSP IS NULL
				AND AYXX.PF_REQ_ACT IN ('GRSEL','IDRPN','CODCA','CODPA','CODRV','GXXXI','IBADI','IBALN','IBRAF','IBRDF','IBRRW','IBRWB','IBRWV','ICRAL','IDRPR','RPYNL','TXXXX','WRIDR')
			LEFT JOIN PKUB.AYXX_BR_LON_ATY OVRPS
				ON S.BF_SSN = OVRPS.BF_SSN
				AND OVRPS.LD_ATY_RSP IS NULL
				AND OVRPS.PF_REQ_ACT = 'OVRPS'
			LEFT JOIN 
			(
				SELECT
					S.BF_SSN
				FROM 
					SOURCE_COMBO S
					INNER JOIN 
					(
						SELECT
							S.BF_SSN
							,WQXX.WD_ACT_REQ
						FROM 
							SOURCE_COMBO S
							JOIN PKUB.WQXX_TSK_QUE WQXX
								ON S.BF_SSN = WQXX.BF_SSN
						WHERE
							WQXX.WF_QUE = 'RX'
					)WQXX
						ON S.BF_SSN = WQXX.BF_SSN
					INNER JOIN PKUB.LNXX_LON_RPS LNXX
						ON S.BF_SSN = LNXX.BF_SSN
				WHERE 
					LNXX.LD_CRT_LONXX > WQXX.WD_ACT_REQ
			) RPS
				ON S.BF_SSN = RPS.BF_SSN
			LEFT JOIN PKUB.LNXX_LON LNXX_BAL
				ON S.BF_SSN = LNXX_BAL.BF_SSN
			LEFT JOIN PKUB.LNXX_LON LNXX
				ON S.BF_SSN = LNXX.BF_SSN
				AND LNXX.LF_LON_CUR_OWN LIKE 'XXXXXX%'
				AND LNXX.LA_CUR_PRI > X.XX
				AND LNXX.LC_STA_LONXX = 'R'
		WHERE
			LNXX.BF_SSN IS NULL
		GROUP BY
			S.BF_SSN
			,RX
			,ECORR
			,ACH
			,DEFER
			,CLM_PD
			,DTH_ALG
			,DTH_VRF
			,DSB_ALG
			,DSB_VRF
			,BKP_ALG
			,BKP_VRF
			,FORB
			,SPLIT
			,IDR
			,F_RPS
			,SETUP
			,OVRPS
			,RPS
	;

	DISCONNECT FROM DBX;

QUIT;

ENDRSUBMIT;

DATA DEMO; SET LEGEND.DEMO; RUN;

PROC SQL;
	CREATE TABLE FNL AS
		SELECT
			D.SSN
			,D.RX
			,D.ECORR
			,D.ACH
			,COALESCE
			(
/*				D.RESOLVED*/
				,D.ZERO_BAL
				,D.DEFER
				,D.CLM_PD
				,D.DTH_ALG
				,D.DTH_VRF
				,D.DSB_ALG
				,D.DSB_VRF
				,D.BKP_ALG
				,D.BKP_VRF
/*				,D.PIF*/
				,D.FORB
				,D.SPLIT
				,D.IDR
				,D.F_RPS
				,D.SETUP
				,D.OVRPS
				,D.RPS
				,'N'
			) AS EXEMPT
		FROM 
			DEMO D
;
QUIT;

/*export to Excel spreadsheet*/
PROC EXPORT DATA = WORK.FNL 
            OUTFILE = "T:\SAS\CNH XXXXX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="FED"; 
RUN;
