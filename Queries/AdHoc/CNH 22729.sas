/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/ULWABX.LWABXRZ";
FILENAME REPORTX "&RPTLIB/ULWABX.LWABXRX";
LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;
RSUBMIT;
/*LIBNAME OLWHRMX DBX DATABASE=DLGSUTWH OWNER=OLWHRMX;*/

%MACRO SQLCHECK ;
  %IF  &SQLXRC NE X  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @XX " ********************************************************************* "
              / @XX " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @XX " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @XX " ********************************************************************* "
              / @XX " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @XX " ****  &SQLXMSG   **** "
              / @XX " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;

PROC SQL;
	CONNECT TO DBX (DATABASE=DLGSUTWH);

	CREATE TABLE DEMO AS
		SELECT 
			*
		FROM 
			CONNECTION TO DBX 
				(
					SELECT
						PDXX.DF_SPE_ACC_ID AS ACCOUNT_NUMBER,
						LNXX.LN_SEQ AS LOAN_SEQ,
						LNXX.LA_CUR_PRI AS PRINCIPAL_BALANCE,
						DWXX.LA_NSI_OTS AS OUTSTANDING_INTEREST
					FROM	
						OLWHRMX.PDXX_PRS_NME PDXX
					INNER JOIN OLWHRMX.LNXX_LON LNXX
						ON LNXX.BF_SSN = PDXX.DF_PRS_ID
					INNER JOIN OLWHRMX.DWXX_DW_CLC_CLU DWXX
						ON DWXX.BF_SSN = LNXX.BF_SSN
						AND DWXX.LN_SEQ = LNXX.LN_SEQ
					WHERE	
						LNXX.IC_LON_PGM = 'TILP'
						AND LNXX.LA_CUR_PRI > X
						AND LNXX.LC_STA_LONXX = 'R'
						

					FOR READ ONLY WITH UR
				)
	;

	DISCONNECT FROM DBX;

	/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
	/*%SQLCHECK;*/
QUIT;

ENDRSUBMIT;
DATA DEMO;
	SET DUSTER.DEMO;
RUN;

PROC SQL;
	CREATE TABLE BORROWER_LEVEL AS
		SELECT DISTINCT
			ACCOUNT_NUMBER,
			SUM(PRINCIPAL_BALANCE) AS PRINCIPAL_BALANCE,
			SUM(OUTSTANDING_INTEREST) AS OUTSTANDING_INTEREST
		FROM
			DEMO
		GROUP BY 
			ACCOUNT_NUMBER
;
QUIT;

PROC SQL;
	CREATE TABLE FIN_STATS AS 
		SELECT
			COUNT(DISTINCT ACCOUNT_NUMBER) AS BORROWER_COUNT,
			COUNT(LOAN_SEQ) AS LOAN_COUNT,
			SUM(PRINCIPAL_BALANCE) AS TOTAL_PRINCIPAL_BALANCE,
			SUM(OUTSTANDING_INTEREST) AS TOTAL_OUTSTANDING_INTEREST,
			SUM(PRINCIPAL_BALANCE + OUTSTANDING_INTEREST) AS TOTAL_OUTSTANDING
		FROM
			DEMO
;
QUIT;


PROC EXPORT DATA = WORK.BORROWER_LEVEL 
            OUTFILE = "T:\SAS\TILP BALANCES.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="Borrower Level"; 
RUN;

PROC EXPORT DATA = WORK.DEMO 
            OUTFILE = "T:\SAS\TILP BALANCES.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="Loan Level"; 
RUN;

PROC EXPORT DATA = WORK.FIN_STATS 
            OUTFILE = "T:\SAS\TILP BALANCES.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="Portfolio Level"; 
RUN;
