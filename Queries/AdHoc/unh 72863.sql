USE UDW
GO

DROP TABLE IF EXISTS #FINAL

;WITH RPS AS 
(
SELECT DISTINCT
	PD10.DF_PRS_ID,
	LN65.LN_RPS_SEQ,
	LN10.LN_SEQ,
	PD10.DF_SPE_ACC_ID AS AccountNumber,
	RTRIM(PD10.DM_PRS_1) AS FirstName,
	RTRIM(PD10.DM_PRS_LST) AS LastName,
	CAST(WQ21.WF_CRT_DTS_WQ21 AS DATE) AS QueueCreateDate,
	CAST(LN65.LD_CRT_LON65 AS DATE) AS RepaymentSchCreateDate,
	LN65.LC_TYP_SCH_DIS AS NEW_SCH
	--WQ21.*
FROM	
	UDW..WQ21_TSK_QUE_HST WQ21
	INNER JOIN UDW..PD10_PRS_NME PD10
		ON PD10.DF_PRS_ID = WQ21.BF_SSN
	INNER JOIN UDW..LN10_LON LN10
		ON LN10.BF_SSN = WQ21.BF_SSN
		AND LN10.LA_CUR_PRI > 0.00
		AND LN10.LC_STA_LON10 = 'R'
	INNER JOIN UDW..LN65_LON_RPS LN65
		ON LN65.BF_SSN = WQ21.BF_SSN
		AND CAST(LN65.LD_CRT_LON65 AS DATE) <= DATEADD(DAY, 3, CAST(WQ21.WF_CRT_DTS_WQ21 AS DATE))
	--INNER JOIN UDW..LN65_LON_RPS LN65_PREV
	--	ON LN65_PREV.BF_SSN = LN65.BF_SSN
	--	AND LN65_PREV.LN_SEQ = LN65.LN_SEQ
	--	AND LN65_PREV.LN_RPS_SEQ <= LN65.LN_RPS_SEQ
WHERE
	WF_QUE = 'RE'
	AND WC_STA_WQUE20 = 'U'
)
SELECT
	*,
	LEAD(R.RepaymentSchCreateDate) OVER (PARTITION BY R.AccountNumber, LN_SEQ ORDER BY R.RepaymentSchCreateDate) AS NEXT_DATE,
	LEAD(R.NEW_SCH) OVER (PARTITION BY R.AccountNumber, LN_SEQ ORDER BY R.RepaymentSchCreateDate) AS NEXT_SCH,
	LAG(R.RepaymentSchCreateDate) OVER (PARTITION BY R.AccountNumber, LN_SEQ ORDER BY R.RepaymentSchCreateDate) AS LAST_DATE,
	LAG(R.NEW_SCH) OVER (PARTITION BY R.AccountNumber, LN_SEQ ORDER BY R.RepaymentSchCreateDate) AS PREV_SCH
INTO #FINAL
FROM
	RPS R
;

SELECT DISTINCT
	AccountNumber,
	FirstName,
	LastName, 
	QueueCreateDate,
	RepaymentSchCreateDate,
	NEW_SCH,
	PREV_SCH,
	CASE 
		WHEN NEW_SCH = 'IB' AND PREV_SCH = 'IB' THEN 1
		WHEN NEW_SCH = 'IB' AND PREV_SCH = 'IL' THEN 2
		WHEN NEW_SCH = 'IL' AND PREV_SCH = 'IB' THEN 3
		ELSE NULL
	END AS CATEGORY
FROM
	#FINAL
WHERE
	RepaymentSchCreateDate = NEXT_DATE
	AND QueueCreateDate BETWEEN DATEADD(DAY, -3, RepaymentSchCreateDate) AND DATEADD(DAY, 3, RepaymentSchCreateDate)
	AND CASE 
		WHEN NEW_SCH = 'IB' AND PREV_SCH = 'IB' THEN 1
		WHEN NEW_SCH = 'IB' AND PREV_SCH = 'IL' THEN 2
		WHEN NEW_SCH = 'IL' AND PREV_SCH = 'IB' THEN 3
		ELSE NULL
	END  IS NOT NULL
ORDER BY
	CASE 
		WHEN NEW_SCH = 'IB' AND PREV_SCH = 'IB' THEN 1
		WHEN NEW_SCH = 'IB' AND PREV_SCH = 'IL' THEN 2
		WHEN NEW_SCH = 'IL' AND PREV_SCH = 'IB' THEN 3
		ELSE NULL
	END 

--5774
--5141
