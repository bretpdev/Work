/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWSXX.NWSXXRZ";
FILENAME REPORTX "&RPTLIB/UNWSXX.NWSXXRX";

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;
RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;

%MACRO SQLCHECK ;
  %IF  &SQLXRC NE X  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @XX " ********************************************************************* "
              / @XX " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @XX " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @XX " ********************************************************************* "
              / @XX " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @XX " ****  &SQLXMSG   **** "
              / @XX " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;

PROC SQL ;
	CONNECT TO DBX (DATABASE=&DB);

	CREATE TABLE BASEPOP AS
		SELECT	
			*
		FROM	
			CONNECTION TO DBX 
				(
					SELECT DISTINCT
						LNXX.BF_SSN
						,PDXX.DF_SPE_ACC_ID
						,LNXX.LN_SEQ
						,LNXX.LF_RGL_CAT_LPXX
						,LNXX.IC_LON_PGM
						,LNXX.IF_GTR
						,LNXX.LN_DLQ_MAX
						,LNXX_OCC.LD_DLQ_OCC
					FROM
						PKUB.LNXX_LON LNXX
						JOIN (
								SELECT
									LNXX.BF_SSN
									,MAX(LNXX.LN_DLQ_MAX) AS LN_DLQ_MAX
								FROM 
									PKUB.LNXX_LON_DLQ_HST LNXX
								WHERE 
									LNXX.LC_STA_LONXX = 'X'
									AND
									LNXX.LN_DLQ_MAX > XXX
								GROUP BY 
									LNXX.BF_SSN
									) LNXX
							ON LNXX.BF_SSN = LNXX.BF_SSN
						JOIN (
								SELECT
									LNXX.BF_SSN
									,MIN(LNXX.LD_DLQ_OCC) AS LD_DLQ_OCC
								FROM
									PKUB.LNXX_LON_DLQ_HST LNXX
								WHERE
									LNXX.LC_STA_LONXX = 'X'
								GROUP BY 
									LNXX.BF_SSN
									) LNXX_OCC
							ON LNXX.BF_SSN = LNXX_OCC.BF_SSN
						JOIN PKUB.PDXX_PRS_NME PDXX
							ON LNXX.BF_SSN = PDXX.DF_PRS_ID
					WHERE
						LNXX.LA_CUR_PRI > X
						AND 
						LNXX.LC_STA_LONXX = 'R'

					FOR READ ONLY WITH UR
				)
	;

	CREATE TABLE THIRTY_NINETY AS
		SELECT DISTINCT
			BP.*
			,LPXX.PC_STA_LPDXX
			,LPXX.PC_DD_STA
			,LPXX.PN_DAY_WDO_BEG
			,ACXX.PF_REQ_ACT
			,AYXX.LD_ATY_REQ_RCV
			,AYXX.PF_RSP_ACT
			,AYXX.LD_ATY_RSP
		FROM 
			BASEPOP BP
			JOIN PKUB.LPXX_DD_ACT_STA LPXX
				ON BP.IC_LON_PGM = LPXX.IC_LON_PGM
				AND BP.IF_GTR = LPXX.IF_GTR
				AND BP.LF_RGL_CAT_LPXX = LPXX.PF_RGL_CAT
				AND LPXX.PC_STA_LPDXX = 'A'
				AND LPXX.PC_DD_STA = 'D'
			JOIN PKUB.LPXX_DD_ACT_STE LPXX
				ON LPXX.PC_STA_LPDXX = LPXX.PC_STA_LPDXX
				AND BP.IC_LON_PGM = LPXX.IC_LON_PGM
				AND LPXX.PF_RGL_CAT = LPXX.PF_RGL_CAT
				AND BP.IF_GTR = LPXX.IF_GTR
				AND LPXX.IF_OWN = LPXX.IF_OWN
				AND LPXX.PC_DD_STA = LPXX.PC_DD_STA
				AND LPXX.PC_DD_SCH_TYP = LPXX.PC_DD_SCH_TYP
				AND LPXX.PD_EFF_SR_LPDXX = LPXX.PD_EFF_SR_LPDXX
				AND LPXX.PN_DAY_WDO_BEG IN (XX,XX)
			JOIN PKUB.AYXX_BR_LON_ATY AYXX
				ON BP.BF_SSN = AYXX.BF_SSN
				AND LPXX.PF_REQ_ACT = AYXX.PF_REQ_ACT
				AND BP.LD_DLQ_OCC LE AYXX.LD_ATY_REQ_RCV
				AND AYXX.LC_STA_ACTYXX = 'A'
				AND AYXX.LD_ATY_RSP BETWEEN BP.LD_DLQ_OCC AND BP.LD_DLQ_OCC + XX
			JOIN PKUB.ACXX_ACT_REQ ACXX
				ON LPXX.PF_REQ_ACT = ACXX.PF_REQ_ACT
				AND ACXX.PC_REQ_ACT_RCP = 'B'
				AND ACXX.PC_TYP_REQ_ACT = 'C'
	;

	CREATE TABLE ONES AS
		SELECT DISTINCT
			BP.*
			,LPXX.PC_STA_LPDXX
			,LPXX.PC_DD_STA
			,LPXX.PN_DAY_WDO_BEG
			,ACXX.PF_REQ_ACT
			,AYXX.LD_ATY_REQ_RCV
			,AYXX.PF_RSP_ACT
			,AYXX.LD_ATY_RSP
		FROM 
			BASEPOP BP
			JOIN PKUB.LPXX_DD_ACT_STA LPXX
				ON BP.IC_LON_PGM = LPXX.IC_LON_PGM
				AND BP.IF_GTR = LPXX.IF_GTR
				AND BP.LF_RGL_CAT_LPXX = LPXX.PF_RGL_CAT
				AND LPXX.PC_STA_LPDXX = 'A'
				AND LPXX.PC_DD_STA = 'D'
			JOIN PKUB.LPXX_DD_ACT_STE LPXX
				ON LPXX.PC_STA_LPDXX = LPXX.PC_STA_LPDXX
				AND BP.IC_LON_PGM = LPXX.IC_LON_PGM
				AND LPXX.PF_RGL_CAT = LPXX.PF_RGL_CAT
				AND BP.IF_GTR = LPXX.IF_GTR
				AND LPXX.IF_OWN = LPXX.IF_OWN
				AND LPXX.PC_DD_STA = LPXX.PC_DD_STA
				AND LPXX.PC_DD_SCH_TYP = LPXX.PC_DD_SCH_TYP
				AND LPXX.PD_EFF_SR_LPDXX = LPXX.PD_EFF_SR_LPDXX
				AND LPXX.PN_DAY_WDO_BEG = X
				AND LPXX.PN_MIN_DAY_OFS_BEG GE XX
			JOIN PKUB.AYXX_BR_LON_ATY AYXX
				ON BP.BF_SSN = AYXX.BF_SSN
				AND LPXX.PF_REQ_ACT = AYXX.PF_REQ_ACT
				AND BP.LD_DLQ_OCC LE AYXX.LD_ATY_REQ_RCV
				AND AYXX.LC_STA_ACTYXX = 'A'
				AND AYXX.LD_ATY_RSP BETWEEN BP.LD_DLQ_OCC AND BP.LD_DLQ_OCC + XX
			JOIN PKUB.ACXX_ACT_REQ ACXX
				ON LPXX.PF_REQ_ACT = ACXX.PF_REQ_ACT
				AND ACXX.PC_REQ_ACT_RCP = 'B'
				AND ACXX.PC_TYP_REQ_ACT = 'C'
	;

	CREATE TABLE ARCS AS
		SELECT DISTINCT
			BP.*
			,' ' AS PC_STA_LPDXX
			,' ' AS PC_DD_STA
			,XX AS PN_DAY_WDO_BEG
			,AYXX.PF_REQ_ACT
			,AYXX.LD_ATY_REQ_RCV
			,AYXX.PF_RSP_ACT
			,AYXX.LD_ATY_RSP
		FROM
			BASEPOP BP
			JOIN PKUB.AYXX_BR_LON_ATY AYXX
				ON BP.BF_SSN = AYXX.BF_SSN
				AND BP.LD_DLQ_OCC LE AYXX.LD_ATY_REQ_RCV
				AND AYXX.LC_STA_ACTYXX = 'A'
				AND AYXX.LD_ATY_RSP BETWEEN BP.LD_DLQ_OCC AND BP.LD_DLQ_OCC + XX
		WHERE 
			AYXX.PF_REQ_ACT IN ('PXXXA','PXXXM')
	;

	CREATE TABLE ALL AS
		SELECT
			BP.*
			,TN.PC_STA_LPDXX
			,TN.PC_DD_STA
			,TN.PN_DAY_WDO_BEG
			,TN.PF_REQ_ACT
			,TN.LD_ATY_REQ_RCV
			,TN.PF_RSP_ACT
			,TN.LD_ATY_RSP
		FROM 
			BASEPOP BP
			LEFT JOIN THIRTY_NINETY TN
				ON BP.BF_SSN = TN.BF_SSN
				AND BP.LN_SEQ = TN.LN_SEQ
	UNION
		SELECT
			BP.*
			,O.PC_STA_LPDXX
			,O.PC_DD_STA
			,O.PN_DAY_WDO_BEG
			,O.PF_REQ_ACT
			,O.LD_ATY_REQ_RCV
			,O.PF_RSP_ACT
			,O.LD_ATY_RSP
		FROM 
			BASEPOP BP
			LEFT JOIN ONES O
				ON BP.BF_SSN = O.BF_SSN
				AND BP.LN_SEQ = O.LN_SEQ
	UNION
		SELECT
			BP.*
			,A.PC_STA_LPDXX
			,A.PC_DD_STA
			,A.PN_DAY_WDO_BEG
			,A.PF_REQ_ACT
			,A.LD_ATY_REQ_RCV
			,A.PF_RSP_ACT
			,A.LD_ATY_RSP
		FROM 
			BASEPOP BP
			LEFT JOIN ARCS A
				ON BP.BF_SSN = A.BF_SSN
				AND BP.LN_SEQ = A.LN_SEQ

	;

	DISCONNECT FROM DBX;

PROC SORT DATA=ALL; BY BF_SSN LN_SEQ LD_DLQ_OCC LD_ATY_REQ_RCV; RUN;

	/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
	/*%SQLCHECK;*/
QUIT;

ENDRSUBMIT;

DATA BASEPOP; SET LEGEND.BASEPOP; RUN;
DATA THIRTY_NINETY; SET LEGEND.THIRTY_NINETY; RUN;
DATA ONES; SET LEGEND.ONES; RUN;
DATA ARCS; SET LEGEND.ARCS; RUN;
DATA ALL; SET LEGEND.ALL; RUN;

PROC SQL;
	CREATE TABLE BWR AS
		SELECT DISTINCT
			A.BF_SSN
			,A.DF_SPE_ACC_ID
			,A.LF_RGL_CAT_LPXX
			,A.IC_LON_PGM
			,A.IF_GTR
			,A.LN_DLQ_MAX
			,A.LD_DLQ_OCC
			,A.PC_STA_LPDXX
			,A.PC_DD_STA
			,A.PN_DAY_WDO_BEG
			,A.PF_REQ_ACT
			,A.LD_ATY_REQ_RCV
			,A.PF_RSP_ACT
			,A.LD_ATY_RSP
			,CASE
				WHEN A.PF_RSP_ACT = 'CNTCT' THEN X
				ELSE X
			 END AS CTC
			,CASE
				WHEN A.PF_RSP_ACT IN ('NOCTC','NOPHN','INVPH') THEN X
				ELSE X
			 END AS OTH_RSP
		FROM 
			ALL A
	;
RUN;

	CREATE TABLE CNT AS
		SELECT
			B.*
			,CASE
				WHEN CTC.CNT_CTC GE X OR RSP.CNT_OTH_RSP GE X THEN 'X'
				ELSE ' '
			 END AS EXCL
		FROM 
			BWR B
			LEFT JOIN(
					SELECT
						B.BF_SSN
						,SUM(B.CTC) AS CNT_CTC
					FROM 
						BWR B
					GROUP BY 
						B.BF_SSN
					 ) CTC
				ON B.BF_SSN = CTC.BF_SSN
			LEFT JOIN(
					SELECT
						B.BF_SSN
						,SUM(B.OTH_RSP) AS CNT_OTH_RSP
					FROM 
						BWR B
					GROUP BY B.BF_SSN
					 ) RSP
				ON B.BF_SSN = RSP.BF_SSN
	;
RUN;

PROC SORT DATA=CNT; BY DF_SPE_ACC_ID; RUN;

DATA CNT;
	SET CNT;
	FORMAT LD_ATY_REQ_RCV LD_ATY_RSP DATEX.;
RUN;

/*export to Excel spreadsheet*/
PROC EXPORT DATA = WORK.CNT
            OUTFILE = "T:\SAS\XXXX RX TEST XXXX_X_XX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="A"; 
RUN;

/*export to queue builder (fed) file*/
DATA _NULL_;
	SET DEMO ;
	FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;
	PUT DF_SPE_ACC_ID 'AMFDD,,,,,,,ALL,Borrower has multiple due dates please review' ;
RUN;

/*export to comma delimited file*/
PROC EXPORT DATA = WORK.DEMO 
            OUTFILE = "T:\SAS\CSV OUTPUT.CSV" 
            DBMS = CSV 
			REPLACE;
     PUTNAMES = YES;
RUN;

/*export to comman delimited file for the Special E-mail Campaign - FED script*/
DATA _NULL_;
	SET DEMO ;
	FILE REPORTX DELIMITER=',' DSD DROPOVER LRECL=XXXXX;

	IF _N_ = X THEN
		DO;
			PUT "ACCOUNT_NUMBER,BORROWER_NAME,EMAIL_ADDRESS";
		END;

	DO;
	   PUT DF_SPE_ACC_ID @;
	   PUT BRW_NAME @;
	   PUT DX_ADR_EML $ ;
	END;
RUN;


/*write to comma delimited file for the Email Batch Script - FED script*/
DATA _NULL_;
	SET		WORK.SKIP;
	FILE	REPORTX delimiter=',' DSD DROPOVER lrecl=XXXXX;

	/* write column names, remove this to create a file without a header row */
	IF _N_ = X THEN
		DO;
			PUT	
				'DF_SPE_ACC_ID'
				','
				'DM_PRS_X'
				','
				'DM_PRS_LST'
				','
				'DX_ADR_EML'
			;
		END;

	/* write data*/	
	DO;
		PUT DF_SPE_ACC_ID $ @;
		PUT DM_PRS_X $ @;
		PUT DM_PRS_LST $ @;
		PUT DX_ADR_EML $;
		;
	END;
RUN;
