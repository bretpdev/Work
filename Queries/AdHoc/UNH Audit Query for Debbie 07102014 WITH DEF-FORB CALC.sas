PROC IMPORT OUT = WORK.SOURCE
            DATAFILE = "C:\SERF_File\2011_Indenture_2014.6.xlsx"
			REPLACE;
            SHEET = 'Sheet1$'n; 
RUN;

proc sql;
	create table bwr as
		select distinct
			ssn
		from
			source
;
proc sql;
	create table bwr_count as
		select count(ssn) as count
		from
		bwr
;

data percent;
set bwr_count;
per = 1208 / count;
run;


LIBNAME  DUSTER  REMOTE  SERVER=DUSTER SLIBREF=WORK;
DATA DUSTER.SOURCE; *Send data to Duster;
SET SOURCE;
RUN;

RSUBMIT DUSTER;
LIBNAME OLWHRM1 DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;

PROC SQL;
	CREATE TABLE POP AS
		SELECT DISTINCT	
			LN10.BF_SSN,
			LN10.LN_SEQ,
			CASE
				WHEN LN10.IC_LON_PGM IN ('SLS','PLUS','PLUSGB') THEN (DSB.LD_DSB + 1)
				WHEN LN10.IC_LON_PGM IN ('CNSLDN','SUBCNS','SUBSPC','UNCNS','UNSPC') THEN (LN10.LD_LON_1_DSB + 1)
				ELSE (LN10.LD_END_GRC_PRD + 1)
			END AS LD_END_GRC_PRD,
			LN10.LF_RGL_CAT_LP10,
			LN10.IC_LON_PGM,
			LN10.IF_GTR,
			LN10.LF_LON_CUR_OWN,
			MR5B.IF_BND_ISS,
			LN10.LD_LON_1_DSB
		FROM
			 OLWHRM1.LN10_LON LN10
		INNER JOIN SOURCE S
			ON S.SSN = LN10.BF_SSN
			AND INPUT(S.LN_SEQ,BEST12.) = LN10.LN_SEQ
		INNER JOIN OLWHRM1.MR5B_MR_LON_MTH_02 MR5B
			ON LN10.BF_SSN = MR5B.BF_SSN
			AND LN10.LN_SEQ = MR5B.LN_SEQ
		LEFT JOIN 
		(
			SELECT DISTINCT
				BF_SSN,
				LN_SEQ,
				MAX(LD_DSB) AS LD_DSB
			FROM
				OLWHRM1.LN15_DSB
			WHERE
				LD_DSB_CAN IS NULL
			GROUP BY 
				BF_SSN,
				LN_SEQ
		)DSB
			ON DSB.BF_SSN = LN10.BF_SSN
			AND DSB.LN_SEQ = LN10.LN_SEQ
		WHERE 
			LN10.LC_STA_LON10 = 'R'
			AND LN10.IC_LON_PGM ^= 'TILP'
			AND MR5B.IF_BND_ISS IN ('1102011A', '14002014')
;

PROC SQL;
	CREATE TABLE LOANS_WITH_ACTIVE_FORBEARANCE AS
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			SUM(COALESCE(((LN60.LD_FOR_END - TODAY()) / 30.42),0)) AS DIFFERENCE
		FROM
			 POP P
		INNER JOIN OLWHRM1.LN60_BR_FOR_APV LN60
			ON P.BF_SSN = LN60.BF_SSN
			AND P.LN_SEQ = LN60.LN_SEQ
			AND LN60.LC_STA_LON60 = 'A'
		INNER JOIN OLWHRM1.FB10_BR_FOR_REQ FB10
			ON FB10.BF_SSN = LN60.BF_SSN
			AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM
			AND FB10.LC_FOR_STA = 'A'
			AND FB10.LC_STA_FOR10 = 'A'
		WHERE
			LN60.LD_FOR_END > TODAY()
		GROUP BY 
			P.BF_SSN,
			P.LN_SEQ
;	

PROC SQL;
	CREATE TABLE LOANS_WITH_ACTIVE_DEFERMENT AS
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			SUM(COALESCE(((LN50.LD_DFR_END - TODAY()) / 30.42),0)) AS DIFFERENCE
		FROM
			 POP P
		INNER JOIN  OLWHRM1.LN50_BR_DFR_APV LN50
			ON P.BF_SSN = LN50.BF_SSN
			AND P.LN_SEQ = LN50.LN_SEQ
			and LN50.LC_STA_LON50 = 'A'
		INNER JOIN OLWHRM1.DF10_BR_DFR_REQ DF10
			ON DF10.BF_SSN = LN50.BF_SSN
			AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
			AND DF10.LC_DFR_STA = 'A'
			AND DF10.LC_STA_DFR10 = 'A'
		WHERE
			LN50.LD_DFR_END > TODAY()
		GROUP BY 
			P.BF_SSN,
			P.LN_SEQ
;	

PROC SQL;
	CREATE TABLE DEFERMENTS AS
		SELECT DISTINCT	
			P.BF_SSN,
			P.LN_SEQ,
			COALESCE((SUM(LN50.LD_DFR_END - LN50.LD_DFR_BEG) / 30.42), 0) AS TOTAL_MONTHS_USED,
			(COALESCE((SUM(LN50.LD_DFR_END - LN50.LD_DFR_BEG) / 30.42), 0) - COALESCE(LWAD.DIFFERENCE, 0)) AS MONTHS_USED
		FROM
			 POP P
		INNER JOIN  OLWHRM1.LN50_BR_DFR_APV LN50
			ON P.BF_SSN = LN50.BF_SSN
			AND P.LN_SEQ = LN50.LN_SEQ
		INNER JOIN OLWHRM1.DF10_BR_DFR_REQ DF10
			ON DF10.BF_SSN = LN50.BF_SSN
			AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
			
		LEFT JOIN LOANS_WITH_ACTIVE_DEFERMENT LWAD
			ON LWAD.BF_SSN = P.BF_SSN
			AND LWAD.LN_SEQ = P.LN_SEQ
		WHERE
			LN50.LC_STA_LON50 = 'A'
			AND DF10.LC_DFR_STA = 'A'
			AND DF10.LC_STA_DFR10 = 'A'
		GROUP BY 
			P.BF_SSN,
			P.LN_SEQ
;

PROC SQL;
	CREATE TABLE FORBEARANCE AS
		SELECT DISTINCT	
			P.BF_SSN,
			P.LN_SEQ,
			COALESCE((SUM(LN60.LD_FOR_END - LN60.LD_FOR_BEG) / 30.42), 0) AS TOTAL_MONTHS_USED,
			(COALESCE((SUM(LN60.LD_FOR_END - LN60.LD_FOR_BEG) / 30.42), 0) - COALESCE(LWAF.DIFFERENCE, 0)) AS MONTHS_USED
		FROM
			 POP P
		INNER JOIN OLWHRM1.LN60_BR_FOR_APV LN60
			ON P.BF_SSN = LN60.BF_SSN
			AND P.LN_SEQ = LN60.LN_SEQ
		INNER JOIN OLWHRM1.FB10_BR_FOR_REQ FB10
			ON FB10.BF_SSN = LN60.BF_SSN
			AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM
		LEFT JOIN LOANS_WITH_ACTIVE_FORBEARANCE LWAF
			ON LWAF.BF_SSN = P.BF_SSN
			AND LWAF.LN_SEQ = P.LN_SEQ
		WHERE
			LN60.LC_STA_LON60 = 'A'
			AND FB10.LC_FOR_STA = 'A'
			AND FB10.LC_STA_FOR10 = 'A'
		GROUP BY 
			P.BF_SSN,
			P.LN_SEQ
			
;

PROC SQL;
	CREATE TABLE MAX_REPAYMENT AS
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			LP10.PN_RPD_TRM_MAX
		FROM
			POP P
		INNER JOIN OLWHRM1.LP10_RPY_PAR LP10
			ON LP10.IC_LON_PGM = P.IC_LON_PGM
			AND LP10.PF_RGL_CAT = P.LF_RGL_CAT_LP10
			AND LP10.IF_GTR = P.IF_GTR
			AND LP10.IF_OWN = P.LF_LON_CUR_OWN
/*			AND LP10.PC_STA_LPD10 = 'A'*/
;

PROC SQL;
	CREATE TABLE TEST AS 
		SELECT
			*
		FROM
			OLWHRM1.DF10_BR_DFR_REQ
		WHERE
			BF_SSN = '528492316'
;
QUIT;
ENDRSUBMIT;

DATA TEST; SET DUSTER.TEST; RUN;


DATA POP; SET DUSTER.POP; RUN;

DATA DEFERMENTS; SET DUSTER.DEFERMENTS;RUN;

DATA FORBEARANCE; SET DUSTER.FORBEARANCE; RUN;
DATA MAX_REPAYMENT; SET DUSTER.MAX_REPAYMENT; RUN;

PROC SQL;
	CREATE TABLE DEFERMENTS AS
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			COALESCE(D.TOTAL_MONTHS_USED,0) AS TOTAL_MONTHS_USED,
			COALESCE(D.MONTHS_USED,0) AS MONTHS_USED
		FROM
			POP P
		LEFT JOIN DEFERMENTS D
			ON D.BF_SSN = P.BF_SSN
			AND D.LN_SEQ = P.LN_SEQ
;
QUIT;

PROC SQL;
	CREATE TABLE FORBEARANCE AS
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			COALESCE(F.TOTAL_MONTHS_USED,0) AS TOTAL_MONTHS_USED,
			COALESCE(F.MONTHS_USED,0) AS MONTHS_USED
		FROM
			POP P
		LEFT JOIN FORBEARANCE F
			ON F.BF_SSN = P.BF_SSN
			AND F.LN_SEQ = P.LN_SEQ
		
;
QUIT;


PROC SQL;
	CREATE TABLE REPAY_END AS 
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			intnx('month', P.LD_END_GRC_PRD , MR.PN_RPD_TRM_MAX) + day(P.LD_END_GRC_PRD ) -1 AS REPAYMENT_END_DATE FORMAT MMDDYY10.
		FROM 
			POP P
		INNER JOIN MAX_REPAYMENT MR
			ON MR.BF_SSN = P.BF_SSN
			AND MR.LN_SEQ = P.LN_SEQ
;
QUIT;

PROC SQL;
	CREATE TABLE NEW_REPAY_END AS 
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,intnx('month', P.LD_END_GRC_PRD , MR.PN_RPD_TRM_MAX) + day(P.LD_END_GRC_PRD ) -1 AS REPAYMENT_END_DATE FORMAT MMDDYY10.,
			intnx('month', P.LD_END_GRC_PRD , (MR.PN_RPD_TRM_MAX + D.MONTHS_USED + F.MONTHS_USED)) + day(P.LD_END_GRC_PRD ) -1 AS NEW_REPAYMENT_END_DATE FORMAT MMDDYY10.
		FROM 
			POP P
		INNER JOIN MAX_REPAYMENT MR
			ON MR.BF_SSN = P.BF_SSN
			AND MR.LN_SEQ = P.LN_SEQ
		INNER JOIN FORBEARANCE F
			ON F.BF_SSN = P.BF_SSN
			AND F.LN_SEQ = P.LN_SEQ
		INNER JOIN DEFERMENTS D
			ON D.BF_SSN = P.BF_SSN
			AND D.LN_SEQ = P.LN_SEQ
;
QUIT;

PROC SQL;
	CREATE TABLE TERMS_REMAINING AS 
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			((NRE.NEW_REPAYMENT_END_DATE - TODAY()) / 30.42) AS TERMS_REMAINING
		FROM
			POP P
		INNER JOIN NEW_REPAY_END NRE
			ON NRE.BF_SSN = P.BF_SSN
			AND NRE.LN_SEQ = P.LN_SEQ
;
QUIT;



PROC SQL;
	CREATE TABLE NUMBER_OF_TERMS_REMAINING AS 
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			MR.PN_RPD_TRM_MAX,
			TR.TERMS_REMAINING,
			(MR.PN_RPD_TRM_MAX - TR.TERMS_REMAINING) AS PAYMENTS_MADE
		FROM
			POP P
		INNER JOIN TERMS_REMAINING TR
			ON TR.BF_SSN = P.BF_SSN
			AND TR.LN_SEQ = P.LN_SEQ
		INNER JOIN MAX_REPAYMENT MR
			ON MR.BF_SSN = P.BF_SSN
			AND MR.LN_SEQ = P.LN_SEQ
;
QUIT;

PROC SQL;
	CREATE TABLE FINAL AS 
		SELECT DISTINCT
			P.BF_SSN,
			P.LN_SEQ,
			P.IC_LON_PGM,
			P.LF_LON_CUR_OWN,
			P.IF_BND_ISS,
			P.LD_END_GRC_PRD - 1 AS GRACE_END FORMAT MMDDYY10.,
			P.LD_LON_1_DSB FORMAT MMDDYY10.,
			P.LD_END_GRC_PRD FORMAT MMDDYY10.,
			MR.PN_RPD_TRM_MAX,
			NRE.REPAYMENT_END_DATE FORMAT MMDDYY10.,
			D.MONTHS_USED AS DEFERMENT_MONTH_USED,
			D.TOTAL_MONTHS_USED AS TOTAL_DEFERMENT_MONTH_USED,
			F.MONTHS_USED AS FORBEARANCE_MONTH_USED,
			F.TOTAL_MONTHS_USED AS TOTAL_FORBEARANCE_MONTH_USED,
			NRE.NEW_REPAYMENT_END_DATE FORMAT MMDDYY10.,
			TR.TERMS_REMAINING,
			NOTR.PAYMENTS_MADE
		FROM POP P
			INNER JOIN MAX_REPAYMENT MR
				ON MR.BF_SSN = P.BF_SSN
				AND MR.LN_SEQ = P.LN_SEQ
			INNER JOIN NEW_REPAY_END NRE
				ON NRE.BF_SSN = P.BF_SSN
				AND NRE.LN_SEQ = P.LN_SEQ
			INNER JOIN DEFERMENTS D
				ON D.BF_SSN = P.BF_SSN
				AND D.LN_SEQ = P.LN_SEQ
			INNER JOIN FORBEARANCE F
				ON F.BF_SSN = P.BF_SSN
				AND F.LN_SEQ = P.LN_SEQ
			INNER JOIN TERMS_REMAINING TR
				ON TR.BF_SSN = P.BF_SSN
				AND TR.LN_SEQ = P.LN_SEQ
			INNER JOIN NUMBER_OF_TERMS_REMAINING NOTR
				ON NOTR.BF_SSN = P.BF_SSN
				AND NOTR.LN_SEQ = P.LN_SEQ
;
QUIT;

PROC EXPORT DATA = WORK.FINAL 
            OUTFILE = "C:\SERF_File\Repayment Audit Query 07-10-2014-v3.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="Sheet1"; 
RUN;



