/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/ULWAB1.LWAB1RZ";
FILENAME REPORT2 "&RPTLIB/ULWAB1.LWAB1R2";
LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;
RSUBMIT;
LIBNAME OLWHRM1 DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;

%MACRO SQLCHECK ;
  %IF  &SQLXRC NE 0  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @01 " ********************************************************************* "
              / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @01 " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @01 " ****  &SQLXMSG   **** "
              / @01 " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;

%MACRO CATG(RPT,NME,NUM);
PROC SQL;
	CONNECT TO DB2 (DATABASE=DLGSUTWH);

	CREATE TABLE &RPT AS
		SELECT 
			*
		FROM 
			CONNECTION TO DB2 
				(
					SELECT
						LN40.BF_SSN
						,&NUM AS CATEGORY
						,&NME AS CATEGORY_NME
					FROM	
						OLWHRM1.LN40_LON_CLM_PCL LN40
					WHERE	
						LN40.LC_REA_CLP_LON = &NUM
					ORDER BY 
						RAND() FETCH FIRST 10 ROWS ONLY
						
					FOR READ ONLY WITH UR
				)
	;

	DISCONNECT FROM DB2;

	/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
	/*%SQLCHECK;*/
QUIT;
%MEND CATG;
%CATG (FALSE,'FALSE','00');
%CATG (DEATH,'DEATH','01');
%CATG (DISABILITY,'DISABILITY','02');
%CATG (BKR,'BKR','03');
%CATG (SCL_CLOSE,'SCL_CLOSE','04');
%CATG (INELG_BOR,'INELG_BOR','05');
%CATG (INSTL_DLQ,'INSTL_DLQ','06');
%CATG (INTR_DLQ,'INTR_DLQ','07');
%CATG (SKIP,'SKIP','08');
%CATG (SKIP_INSTL_DLQ,'SKIP_INSTL_DLQ','09');
%CATG (SKIP_INT_DLQ,'SKIP_INT_DLQ','10');

DATA POP;
	SET SKIP_INSTL_DLQ FALSE DEATH DISABILITY BKR SCL_CLOSE INELG_BOR INSTL_DLQ INTR_DLQ SKIP SKIP_INT_DLQ;
RUN;

PROC SORT DATA=POP; BY CATEGORY BF_SSN; RUN;

PROC SQL;
	CREATE TABLE CL10 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,CL10.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.CL10_CLM_PCL CL10
				ON POP.BF_SSN = CL10.BF_SSN
	;
QUIT;

PROC SQL;
	CREATE TABLE LN40 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,LN40.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.LN40_LON_CLM_PCL LN40
				ON POP.BF_SSN = LN40.BF_SSN
	;
QUIT;

PROC SQL;
	CREATE TABLE LN10 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,LN10.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.LN10_LON LN10
				ON POP.BF_SSN = LN10.BF_SSN
	;
QUIT;

PROC SQL;
	CREATE TABLE LN16 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,LN16.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.LN16_LON_DLQ_HST LN16
				ON POP.BF_SSN = LN16.BF_SSN
	;
QUIT;

PROC SQL;
	CREATE TABLE DW01 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,DW01.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.LN16_LON_DLQ_HST DW01
				ON POP.BF_SSN = DW01.BF_SSN
	;
QUIT;

PROC SQL;
	CREATE TABLE PD20 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,PD20.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.PD20_PRS_DTH PD20
				ON POP.BF_SSN = PD20.DF_PRS_ID
	;
QUIT;

PROC SQL;
	CREATE TABLE PD21 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,PD21.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.PD21_GTR_DTH PD21
				ON POP.BF_SSN = PD21.DF_PRS_ID
	;
QUIT;

PROC SQL;
	CREATE TABLE PD22 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,PD22.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.PD22_PRS_DSA PD22
				ON POP.BF_SSN = PD22.DF_PRS_ID
	;
QUIT;

PROC SQL;
	CREATE TABLE PD23 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,PD23.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.PD23_GTR_DSA PD23
				ON POP.BF_SSN = PD23.DF_PRS_ID
	;
QUIT;

PROC SQL;
	CREATE TABLE PD24 AS
		SELECT
			POP.CATEGORY
			,POP.CATEGORY_NME
			,PD24.*	
		FROM 
			POP
			JOIN 
				OLWHRM1.PD24_PRS_BKR PD24
				ON POP.BF_SSN = PD24.DF_PRS_ID
	;
QUIT;

/*%MACRO DUMP(TBL,TBL_NME,SSN);*/
/*PROC SQL;*/
/*	CREATE TABLE &TBL AS*/
/*		SELECT*/
/*			POP.CATEGORY*/
/*			,POP.CATEGORY_NME*/
/*			,&TBL.*	*/
/*		FROM */
/*			POP*/
/*			JOIN */
/*				OLWHRM1.&TBL_NME &TBL*/
/*				ON POP.BF_SSN = &TBL.&SSN*/
/*	;*/
/*QUIT;*/
/*%MEND DUMP;*/
/*%DUMP (CL10,CL10_CLM_PCL,BF_SSN);*/
/*%DUMP (LN40,LN40_LON_CLM_PCL,BF_SSN);*/
/*%DUMP (LN10,LN10_LON,BF_SSN);*/
/*%DUMP (LN16,LN16_LON_DLQ_HST,BF_SSN);*/
/*%DUMP (DW01,LN16_LON_DLQ_HST,BF_SSN);*/
/*%DUMP (PD20,PD20_PRS_DTH,DF_PRS_ID);*/
/*%DUMP (PD21,PD21_GTR_DTH,DF_PRS_ID);*/
/*%DUMP (PD22,PD22_PRS_DSA,DF_PRS_ID);*/
/*%DUMP (PD23,PD23_GTR_DSA,DF_PRS_ID);*/
/*%DUMP (PD24,PD24_PRS_BKR,DF_PRS_ID);*/

ENDRSUBMIT;

%MACRO BRING_DOWN(TBL);
DATA &TBL;
	SET DUSTER.&TBL;
RUN;
%MEND BRING_DOWN;
%BRING_DOWN (CL10);
%BRING_DOWN (LN40);
%BRING_DOWN (LN10);
%BRING_DOWN (LN16);
%BRING_DOWN (DW01);
%BRING_DOWN (PD20);
%BRING_DOWN (PD21);
%BRING_DOWN (PD22);
%BRING_DOWN (PD23);
%BRING_DOWN (PD24);

%MACRO EXP(TBL);
/*export to Excel spreadsheet*/
PROC EXPORT DATA = WORK.&TBL 
            OUTFILE = "T:\SAS\NH 23869.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="&TBL"; 
RUN;
%MEND EXP;
%EXP (CL10);
%EXP (LN40);
%EXP (LN10);
%EXP (LN16);
%EXP (DW01);
%EXP (PD20);
%EXP (PD21);
%EXP (PD22);
%EXP (PD23);
%EXP (PD24);
