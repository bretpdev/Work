/*******************************
		PSLF TRANSFERS
*******************************/

/*%LET RPTLIB = T:\PSLF Transfer - ; *TEST;*/
%LET RPTLIB = Q:\CS Loan Servicing\PSLF Transfer\PSLF Transfer - ; *LIVE;

%LET DATERUN = %SYSFUNC(TODAY(), YYMMDDNX.);
%PUT &DATERUN;

%LET TIMERUN=%SYSFUNC(COMPRESS(%SYSFUNC(TRANSLATE(%SYSFUNC(TIME(),TIMEAMPMXX.),.,:))));
%PUT &TIMERUN;

LIBNAME XL 'T:\BWRTRANOU.xlsx';
DATA XLSOURCE;
	SET XL.'SHEETX$'N;
	IF BORROWER_SSN ^= ''; *subsetting IF to remove nulls;
	BF_SSN = STRIP(COMPRESS(BORROWER_SSN,'-'));
	FORMAT BF_SSN $X.;
	KEEP BF_SSN;
RUN;
LIBNAME XL CLEAR;

LIBNAME LEGEND REMOTE SERVER=LEGEND SLIBREF=WORK;
DATA LEGEND.XLSOURCE;
	SET XLSOURCE;
RUN;

RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is VUKX test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%LET DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;
PROC SQL;
	CREATE TABLE BORROWERS AS
		SELECT DISTINCT	
			 XLS.BF_SSN
			,PDXX.DM_PRS_X
			,PDXX.DM_PRS_LST
			,LNXX.LN_SEQ
			,LNXX.IC_LON_PGM
/*			,LNXX.LA_CUR_PRI + DWXX.LA_NSI_OTS + DWXX.LA_NSI_ACR AS LA_LON_BAL*/
			,SUM(LNXX.LA_CUR_PRI, DWXX.LA_NSI_OTS, DWXX.LA_NSI_ACR) AS LA_LON_BAL
			,LNXX.LC_FED_PGM_YR
			,LNXX.LD_LON_GTR
			,BAL.LA_TOT_BAL
			,DELQ.LN_DLQ_MAX
			,CASE
				WHEN CONS.BF_SSN IS NOT NULL THEN X
				ELSE X
			END AS IS_CONS /*consolidation*/
			,CASE 
				WHEN DWXXS.WC_DW_LON_STA IN ('XX','XX') THEN X
				ELSE X
			END AS IN_BNK /*bankruptcy*/
			,CASE 
				WHEN DWXXS.WC_DW_LON_STA IN ('XX','XX') THEN X
				ELSE X
			END AS IN_TPD
			,CASE 
				WHEN DWXXS.WC_DW_LON_STA IN ('XX','XX') THEN X
				ELSE X
			END AS IN_DTH /*death*/
			,CASE
				WHEN AYXX.BF_SSN IS NOT NULL THEN AYXX.PF_REQ_ACT
				ELSE ''
			END AS OTHER_SPCL /*other specialty claim*/
			,RPS.LC_TYP_SCH_DIS /*repayment schedule type*/
			,FSXX.LF_FED_AWD
			,FSXX.LN_FED_AWD_SEQ
		FROM
			XLSOURCE XLS
			INNER JOIN PKUB.PDXX_PRS_NME PDXX
				ON XLS.BF_SSN = PDXX.DF_PRS_ID
			INNER JOIN PKUB.LNXX_LON LNXX
				ON XLS.BF_SSN = LNXX.BF_SSN
			INNER JOIN PKUB.DWXX_DW_CLC_CLU DWXX
				ON LNXX.BF_SSN = DWXX.BF_SSN
				AND LNXX.LN_SEQ = DWXX.LN_SEQ
			INNER JOIN 
			(/*get total principal balance*/
				SELECT DISTINCT
					LNXX.BF_SSN,
/*					SUM(LNXX.LA_CUR_PRI + DWXX.LA_NSI_OTS + DWXX.LA_NSI_ACR) AS LA_TOT_BAL*/
					SUM(SUM(LNXX.LA_CUR_PRI, DWXX.LA_NSI_OTS, DWXX.LA_NSI_ACR)) AS LA_TOT_BAL
				FROM
					PKUB.LNXX_LON LNXX
					INNER JOIN PKUB.DWXX_DW_CLC_CLU DWXX
						ON LNXX.BF_SSN = DWXX.BF_SSN
						AND LNXX.LN_SEQ = DWXX.LN_SEQ
				GROUP BY
					LNXX.BF_SSN
			) BAL
				ON LNXX.BF_SSN = BAL.BF_SSN
			LEFT JOIN 
			(/*get max deliquency on loans with a balance*/
				SELECT DISTINCT
					LNXX.BF_SSN,
					MAX(LNXX.LN_DLQ_MAX) AS LN_DLQ_MAX
				FROM
					PKUB.LNXX_LON_DLQ_HST LNXX
					INNER JOIN PKUB.LNXX_LON LNXX
						ON LNXX.BF_SSN = LNXX.BF_SSN
						AND LNXX.LN_SEQ = LNXX.LN_SEQ
				WHERE
					LNXX.LC_STA_LONXX = 'X'
					AND LNXX.LA_CUR_PRI > X.XX
				GROUP BY
					LNXX.BF_SSN
			) DELQ
				ON DELQ.BF_SSN = LNXX.BF_SSN
			LEFT JOIN 
			(/*consolidation on loans with a balance*/
				SELECT DISTINCT
					AYXX.BF_SSN
				FROM
					PKUB.AYXX_BR_LON_ATY AYXX
					INNER JOIN PKUB.LNXX_LON LNXX
						ON AYXX.BF_SSN = LNXX.BF_SSN
				WHERE
					AYXX.PF_REQ_ACT = 'DLCON'
					AND AYXX.LD_ATY_REQ_RCV >= (TODAY() - XX)
					AND LNXX.LA_CUR_PRI > X.XX
			) CONS
				ON LNXX.BF_SSN = CONS.BF_SSN
			LEFT JOIN 
			(/*bankruptcy,tpd,death on loans with a balance*/
				SELECT DISTINCT 
					DWXX.BF_SSN,
					DWXX.WC_DW_LON_STA
				FROM
					PKUB.DWXX_DW_CLC_CLU DWXX
					INNER JOIN PKUB.LNXX_LON LNXX
						ON DWXX.BF_SSN = LNXX.BF_SSN
						AND DWXX.LN_SEQ = LNXX.LN_SEQ
				WHERE 
					DWXX.WC_DW_LON_STA IN ('XX','XX','XX','XX','XX','XX')
					AND LNXX.LA_CUR_PRI > X.XX
			) DWXXS
				ON LNXX.BF_SSN = DWXXS.BF_SSN
			LEFT JOIN 
			(/*specialty claim on loans with a balance*/
				SELECT DISTINCT
					AYXX.BF_SSN,
					AYXX.PF_REQ_ACT
				FROM
					PKUB.AYXX_BR_LON_ATY AYXX
					INNER JOIN PKUB.LNXX_LON LNXX
						ON AYXX.BF_SSN = LNXX.BF_SSN
				WHERE
					AYXX.PF_REQ_ACT IN ('CSFSA','TLFSA','FCFSA')
					AND LNXX.LA_CUR_PRI > X.XX
			) AYXX
				ON LNXX.BF_SSN = AYXX.BF_SSN
			LEFT JOIN
			(/*gets active repayment schedule on loans with a balance*/
				SELECT DISTINCT
					RSXX.BF_SSN,
					LNXX.LN_SEQ,
					LNXX.LC_TYP_SCH_DIS
				FROM
					PKUB.RSXX_BR_RPD RSXX
					INNER JOIN PKUB.LNXX_LON_RPS LNXX
						ON RSXX.BF_SSN = LNXX.BF_SSN
						AND RSXX.LN_RPS_SEQ = LNXX.LN_RPS_SEQ
					INNER JOIN PKUB.LNXX_LON LNXX
						ON LNXX.BF_SSN = LNXX.BF_SSN
						AND LNXX.LN_SEQ = LNXX.LN_SEQ
				WHERE 
					RSXX.LC_STA_RPSTXX = 'A'
					AND LNXX.LC_STA_LONXX = 'A'
					AND LNXX.LA_CUR_PRI > X.XX
			) RPS
				ON LNXX.BF_SSN = RPS.BF_SSN
				AND LNXX.LN_SEQ = RPS.LN_SEQ
			LEFT JOIN PKUB.FSXX_DL_LON FSXX /*gets award ID*/
				ON LNXX.BF_SSN = FSXX.BF_SSN
				AND LNXX.LN_SEQ = FSXX.LN_SEQ
	;

	CREATE TABLE NOTEXIST AS
		SELECT
			XLS.BF_SSN
			,X AS SSNNOTEXIST
		FROM
			XLSOURCE XLS
			LEFT JOIN PKUB.LNXX_LON LNXX
				ON XLS.BF_SSN = LNXX.BF_SSN
		WHERE
			LNXX.BF_SSN IS NULL
	;
QUIT;
ENDRSUBMIT;

DATA BORROWERS; 
	SET LEGEND.BORROWERS
		LEGEND.NOTEXIST;
RUN;

DATA REASONS;
	SET BORROWERS;
	IF LA_TOT_BAL <= XX AND SSNNOTEXIST ^=X
		THEN REASONX = 'Total Balance <= $XX';
	IF LN_DLQ_MAX >= XXX 
		THEN REASONX = 'Active Delinquency >= XXX';
	IF IS_CONS = X
		THEN REASONX = 'Consolidation in Process';
	IF IN_BNK = X 
		THEN REASONX = 'Specialty Claim/Bankruptcy';
	IF IN_TPD = X 
		THEN REASONX = 'Specialty Claim/TPD';
	IF IN_DTH = X 
		THEN REASONX = 'Specialty Claim/Death';
	IF OTHER_SPCL ^= '' 
		THEN REASONX = CATS('Specialty Claim/',OTHER_SPCL);
	IF SSNNOTEXIST = X
		THEN REASONX = 'Borrower not on our system/student only';

	REASON = CATX(' | ',REASONX,REASONX,REASONX,REASONX,REASONX,REASONX,REASONX,REASONX);
RUN;

PROC SQL;
	CREATE TABLE RX AS
	SELECT DISTINCT
		*
	FROM
	(/*combines all reasons into one field*/
		SELECT DISTINCT
			BF_SSN 		AS SSN,
			DM_PRS_X 	AS First_Name,
			DM_PRS_LST	AS Last_Name,
			CATX(' | ',REASONX,REASONX,REASONX,REASONX,REASONX,REASONX,REASONX,REASONX) AS Exclusion_Reason
		FROM
		(/*puts multiple reasons on one row for same borrower*/
			SELECT DISTINCT
				BF_SSN,
				DM_PRS_X,
				DM_PRS_LST,
				MAX(REASONX) AS REASONX,
				MAX(REASONX) AS REASONX,
				MAX(REASONX) AS REASONX,
				MAX(REASONX) AS REASONX,
				MAX(REASONX) AS REASONX,
				MAX(REASONX) AS REASONX,
				MAX(REASONX) AS REASONX,
				MAX(REASONX) AS REASONX
			FROM
				REASONS
			GROUP BY
				BF_SSN
				,DM_PRS_X
				,DM_PRS_LST
		)
	)
	WHERE
		Exclusion_Reason ^= ''
	ORDER BY
		Exclusion_Reason,
		Last_Name
;QUIT;

PROC EXPORT
	DATA=RX
	OUTFILE="&RPTLIB. RX - &DATERUN. - &TIMERUN..xlsx"
	DBMS = EXCEL
	REPLACE;
RUN;

PROC SQL;
	CREATE TABLE RX AS
		SELECT
			REASONS.BF_SSN 			AS SSN,
			REASONS.DM_PRS_X 		AS First_Name,
			REASONS.DM_PRS_LST 		AS Last_Name,
			REASONS.LN_SEQ 			AS Loan_Sequence,
			REASONS.IC_LON_PGM 		AS Loan_Program,
			REASONS.LC_FED_PGM_YR 	AS Loan_Code,
			CATS(REASONS.LF_FED_AWD, PUT(REASONS.LN_FED_AWD_SEQ,zX.)) AS Award_ID,
			REASONS.LD_LON_GTR 		AS Guaranty_Date,
			REASONS.LA_LON_BAL 		AS Loan_Balance,
			REASONS.LC_TYP_SCH_DIS 	AS Repayment_Schedule_Type
		FROM
			REASONS
			LEFT JOIN RX
				ON REASONS.BF_SSN = RX.SSN			
		WHERE
			REASONS.REASON = ''
			AND RX.SSN IS NULL /*exclude RX borrowers*/
			AND REASONS.LA_LON_BAL > X.XX
		ORDER BY
			SSN,
			Loan_Sequence
;QUIT;

PROC EXPORT
	DATA=RX
	OUTFILE="&RPTLIB. RX - &DATERUN. - &TIMERUN..xlsx"
	DBMS = EXCEL
	REPLACE;
RUN;
