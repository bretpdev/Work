PROC IMPORT OUT= WORK.SAUCE
            DATAFILE= "T:\Populations.xlsx" 
            DBMS=EXCEL REPLACE;
     RANGE="Total Pop, De-Dup$"; 
     GETNAMES=YES;
     MIXED=NO;
     SCANTEXT=YES;
     USEDATE=YES;
     SCANTIME=YES;
RUN;

DATA SAUCEX;
	SET SAUCE;
	SSN = PUT(INPUT(BF_SSN,X.),zX.);
	KEEP SSN;
RUN;

/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWSXX.NWSXXRZ";
FILENAME REPORTX "&RPTLIB/UNWSXX.NWSXXRX";

LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;

DATA LEGEND.SAUCE;
	SET SAUCEX;
	BF_SSN = SSN;
	KEEP BF_SSN;
RUN;


RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
/*%let DB = DNFPRUUT;  *This is VUKX test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DBX DATABASE=&DB OWNER=PKUB;
LIBNAME AES DBX DATABASE=&DB OWNER=AES;

%MACRO SQLCHECK ;
  %IF  &SQLXRC NE X  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @XX " ********************************************************************* "
              / @XX " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @XX " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @XX " ********************************************************************* "
              / @XX " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @XX " ****  &SQLXMSG   **** "
              / @XX " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;

PROC SQL ;
	CONNECT TO DBX (DATABASE=&DB);

	CREATE TABLE DEMO AS
		SELECT DISTINCT	
			S.BF_SSN AS SSN
			,CASE
			 WHEN WQXX.BF_SSN IS NOT NULL THEN 'Y'
			 ELSE 'N'
			 END AS RX
			,CASE
			 WHEN PHXX.DF_SPE_ID IS NOT NULL THEN 'Y'
			 ELSE 'N'
			 END AS ECORR
			,CASE
			 WHEN LNXX.BF_SSN IS NOT NULL THEN 'Y'
			 ELSE 'N'
			 END AS ACH
			,CASE
			 WHEN LNXX.BF_SSN IS NOT NULL THEN 'RESOLVED'
			 ELSE ' '
			 END AS RESOLVED
			,CASE
			 WHEN DWXX_X.BF_SSN IS NOT NULL THEN 'DEFER'
			 ELSE ' '
			 END AS DEFER
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'CLM_PD'
			 ELSE ' '
			 END AS CLM_PD
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'DTH_ALG'
			 ELSE ' '
			 END AS DTH_ALG
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'DTH_VRF'
			 ELSE ' '
			 END AS DTH_VRF
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'DSB_ALG'
			 ELSE ' '
			 END AS DSB_ALG
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'DSB_VRF'
			 ELSE ' '
			 END AS DSB_VRF
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'BKP_ALG'
			 ELSE ' '
			 END AS BKP_ALG
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'BKP_VRF'
			 ELSE ' '
			 END AS BKP_VRF
			,CASE
			 WHEN DWXX_XX.BF_SSN IS NOT NULL THEN 'PIF'
			 ELSE ' '
			 END AS PIF
			,CASE
			 WHEN FBR.BF_SSN IS NOT NULL THEN 'FORB'
			 ELSE ' '
			 END AS FORB
			,CASE
			 WHEN SPLIT.BF_SSN IS NOT NULL THEN 'SPLIT'
			 ELSE ' '
			 END AS SPLIT
			,CASE
			 WHEN IDR.BF_SSN IS NOT NULL THEN 'IDR'
			 ELSE ' '
			 END AS IDR
			,CASE
			 WHEN F_RPS.BF_SSN IS NOT NULL THEN 'F_RPS'
			 ELSE ' '
			 END AS F_RPS
			,CASE
			 WHEN AYXX.BF_SSN IS NOT NULL THEN 'SETUP'
			 ELSE ' '
			 END AS SETUP
			,CASE
			 WHEN OVRPS.BF_SSN IS NOT NULL THEN 'OVRPS'
			 ELSE ' '
			 END AS OVRPS
			,CASE
			 WHEN RPS.BF_SSN IS NOT NULL THEN 'RPS>RX'
			 ELSE ' '
			 END AS RPS
		FROM
			SAUCE S
			LEFT JOIN PKUB.WQXX_TSK_QUE WQXX
				ON S.BF_SSN = WQXX.BF_SSN
				AND WQXX.WF_QUE = 'RX'
			JOIN PKUB.PDXX_PRS_NME PDXX
				ON S.BF_SSN = PDXX.DF_PRS_ID
			LEFT JOIN AES.PHXX_CNC_EML PHXX
				ON PDXX.DF_SPE_ACC_ID = PUT(PHXX.DF_SPE_ID,zXX.)
			LEFT JOIN PKUB.LNXX_EFT_TO_LON LNXX	
				ON S.BF_SSN = LNXX.BF_SSN
				AND LNXX.LC_STA_LNXX = 'A'
			LEFT JOIN PKUB.LNXX_LON_RPS LNXX
				ON S.BF_SSN = LNXX.BF_SSN
				AND LNXX.LD_CRT_LONXX >= 'XXJUNXXXX'd
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_X
				ON S.BF_SSN = DWXX_X.BF_SSN
				AND DWXX_X.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XXX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN PKUB.DWXX_DW_CLC_CLU DWXX_XX
				ON S.BF_SSN = DWXX_XX.BF_SSN
				AND DWXX_XX.WC_DW_LON_STA = 'XX'
			LEFT JOIN (
					SELECT
						S.BF_SSN
					FROM 
						SAUCE S
						JOIN PKUB.LNXX_BR_FOR_APV LNXX
							ON S.BF_SSN = LNXX.BF_SSN
						JOIN PKUB.FBXX_BR_FOR_REQ FBXX
							ON S.BF_SSN = FBXX.BF_SSN
							AND LNXX.LF_FOR_CTL_NUM = FBXX.LF_FOR_CTL_NUM
					WHERE
						FBXX.LC_FOR_TYP IN ('XX','XX')
						AND TODAY() BETWEEN LNXX.LD_FOR_BEG AND LNXX.LD_FOR_END
						AND LNXX.LC_STA_LONXX = 'A'
						AND FBXX.LC_FOR_STA = 'A'
						AND FBXX.LC_STA_FORXX = 'A'
						) FBR
				ON S.BF_SSN = FBR.BF_SSN
			LEFT JOIN (
					SELECT
						S.BF_SSN
					FROM 
						SAUCE S
						JOIN PKUB.LNXX_LON_RPS LNXX
							ON S.BF_SSN = LNXX.BF_SSN
						JOIN (
								SELECT
									S.BF_SSN
								FROM 
									SAUCE S
									JOIN PKUB.LNXX_LON_RPS LNXX
										ON S.BF_SSN = LNXX.BF_SSN
								WHERE
									LNXX.LC_STA_LONXX = 'A'
									AND 
									LNXX.LC_TYP_SCH_DIS IN ('FS', 'FG', 'IB', 'IL', 'IX', 'IP', 'CX', 'CX', 'CX', 'CL', 'CQ', 'IS', 'CA', 'CP', 'RP', 'IA', 'IX', 'RE')
								) TYPS
							ON S.BF_SSN = TYPS.BF_SSN
					WHERE 
						LNXX.LC_STA_LONXX = 'A'
						AND 
						LNXX.LC_TYP_SCH_DIS NOT IN ('FS', 'FG', 'IB', 'IL', 'IX', 'IP', 'CX', 'CX', 'CX', 'CL', 'CQ', 'IS', 'CA', 'CP', 'RP', 'IA', 'IX', 'RE')
						) SPLIT
				ON S.BF_SSN = SPLIT.BF_SSN
			LEFT JOIN PKUB.LNXX_LON_RPS IDR
				ON S.BF_SSN = IDR.BF_SSN 
				AND IDR.LC_TYP_SCH_DIS IN ('IB','IL','IX','IP','CX','CX','CX','CL','CQ','IS','CA','CP','RP','IA','IX','RE')
			LEFT JOIN PKUB.LNXX_LON_RPS F_RPS
				ON S.BF_SSN = F_RPS.BF_SSN
				AND F_RPS.LC_TYP_SCH_DIS IN ('FG','FS')
			LEFT JOIN PKUB.AYXX_BR_LON_ATY AYXX
				ON S.BF_SSN = AYXX.BF_SSN
				AND AYXX.LD_ATY_RSP IS NULL
				AND AYXX.PF_REQ_ACT IN ('GRSEL','IDRPN','CODCA','CODPA','CODRV','GXXXI','IBADI','IBALN','IBRAF','IBRDF','IBRRW','IBRWB','IBRWV','ICRAL','IDRPR','RPYNL','TXXXX','WRIDR')
			LEFT JOIN PKUB.AYXX_BR_LON_ATY OVRPS
				ON S.BF_SSN = OVRPS.BF_SSN
				AND OVRPS.LD_ATY_RSP IS NULL
				AND OVRPS.PF_REQ_ACT = 'OVRPS'
			LEFT JOIN (
					SELECT
						S.BF_SSN
					FROM 
						SAUCE S
						JOIN (
								SELECT
									S.BF_SSN
									,WQXX.WD_ACT_REQ
								FROM 
									SAUCE S
									JOIN PKUB.WQXX_TSK_QUE WQXX
										ON S.BF_SSN = WQXX.BF_SSN
								WHERE
									WQXX.WF_QUE = 'RX'
								)WQXX
							ON S.BF_SSN = WQXX.BF_SSN
						JOIN PKUB.LNXX_LON_RPS LNXX
							ON S.BF_SSN = LNXX.BF_SSN
					WHERE 
						LNXX.LD_CRT_LONXX > WQXX.WD_ACT_REQ
						) RPS
				ON S.BF_SSN = RPS.BF_SSN

	;

	DISCONNECT FROM DBX;

	/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
	/*%SQLCHECK;*/
QUIT;

ENDRSUBMIT;

DATA DEMO; SET LEGEND.DEMO; RUN;

PROC SQL;
	CREATE TABLE FNL AS
		SELECT
			D.SSN
			,D.RX
			,D.ECORR
			,D.ACH
			,COALESCE(D.RESOLVED, D.DEFER, D.CLM_PD, D.DTH_ALG, D.DTH_VRF, D.DSB_ALG, D.DSB_VRF, D.BKP_ALG, D.BKP_VRF, D.PIF, D.FORB, D.SPLIT, D.IDR, D.F_RPS, D.SETUP, D.OVRPS, D.RPS, 'N') AS EXEMPT
		FROM 
			DEMO D
;
QUIT;

/*export to Excel spreadsheet*/
PROC EXPORT DATA = WORK.FNL 
            OUTFILE = "T:\SAS\NH XXXX vX.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="A"; 
RUN;
