LIBNAME XL 'T:\MONITOR-INPUT-COM.xlsx';

DATA XLSOURCE;
	SET XL.'COM SSNs$'N;
	SSN = PUT(INPUT(BF_SSN,9.),z9.);
	KEEP SSN;
RUN;

LIBNAME XL CLEAR;

/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWS46.NWS46RZ";
FILENAME REPORT2 "&RPTLIB/UNWS46.NWS46R2";

LIBNAME  DUSTER  REMOTE  SERVER=DUSTER SLIBREF=work  ;

DATA DUSTER.XLSOURCE;
	SET XLSOURCE;
	BF_SSN = SSN;
	WF_QUE = '';
	KEEP BF_SSN WF_QUE;
RUN;

RSUBMIT DUSTER;

%LET DB = DLGSUTWH;  *This is live;

LIBNAME OLWHRM1 DB2 DATABASE=&DB OWNER=OLWHRM1;
LIBNAME AES DB2 DATABASE=&DB OWNER=AES;

PROC SQL ;
	CONNECT TO DB2 (DATABASE=&DB);

	CREATE TABLE R0 AS
		SELECT DISTINCT
			WQ20.BF_SSN
			,WQ20.WF_QUE
		FROM
			OLWHRM1.WQ20_TSK_QUE WQ20
		WHERE
			WQ20.WF_QUE = 'R0'
			AND WQ20.WC_STA_WQUE20 NOT IN ('X', 'C')
			AND (
					UPPER(WQ20.WX_MSG_1_TSK) LIKE UPPER('EXPIRED%')
					OR UPPER(WQ20.WX_MSG_1_TSK) LIKE UPPER('NO TERM%')
				)	
	;		
	DISCONNECT FROM DB2;

QUIT;

ENDRSUBMIT;

DATA R0; 
	SET DUSTER.R0; 
RUN;

PROC SQL;
/*gets borrowers in both the R0 and xl file*/
	CREATE TABLE XL_R0 AS
		SELECT 
			B.*
		FROM 
			XLSOURCE A
			INNER JOIN R0 B
				ON A.SSN = B.BF_SSN
	;
/*gets borrowers in xl file with no R0*/
	CREATE TABLE XL_NO_R0 AS
		SELECT 
			A.* 
		FROM 
			XLSOURCE A
			LEFT JOIN XL_R0 B
				ON A.SSN = B.BF_SSN
		WHERE 
			B.BF_SSN IS NULL
	;
/*gets those in r0 file who aren't in xl file*/
	CREATE TABLE NO_XL AS
		SELECT 
			A.*
		FROM 
			R0 A
			LEFT JOIN XL_R0 B
				ON A.BF_SSN = B.BF_SSN
		WHERE 
			B.BF_SSN IS NULL
	;
/*properly combines them all*/
	CREATE TABLE SOURCE_COMBO AS
		SELECT * FROM XL_R0
		UNION
		SELECT * FROM XL_NO_R0
		UNION
		SELECT * FROM NO_XL
	;
QUIT;

LIBNAME  DUSTER  REMOTE  SERVER=DUSTER SLIBREF=work  ;

DATA DUSTER.SOURCE_COMBO;
	SET SOURCE_COMBO;
RUN;

RSUBMIT DUSTER;

PROC SQL ;
	CONNECT TO DB2 (DATABASE=&DB);

	CREATE TABLE DEMO AS
		SELECT DISTINCT	
			S.BF_SSN AS SSN
			,CASE
				WHEN SUM(LN10_BAL.LA_CUR_PRI) <= 0.00
				THEN '0.00'
				ELSE ' '
			END AS ZERO_BAL
			,CASE
				WHEN S.WF_QUE = 'R0' 
				THEN 'Y'
				ELSE 'N'
			 END AS R0
/*			,CASE*/
/*				WHEN WQ20.BF_SSN IS NOT NULL */
/*				THEN 'Y'*/
/*				ELSE 'N'*/
/*			 END AS R0*/
/*			,CASE*/
/*				WHEN PH05.DF_SPE_ID IS NOT NULL */
/*				THEN 'Y'*/
/*				ELSE 'N'*/
/*			 END AS ECORR*/
			,CASE
				WHEN LN83.BF_SSN IS NOT NULL 
				THEN 'Y'
				ELSE 'N'
			 END AS ACH
/*			,CASE*/
/*			 WHEN LN65.BF_SSN IS NOT NULL THEN 'RESOLVED'*/
/*			 ELSE ' '*/
/*			 END AS RESOLVED*/
			,CASE
				WHEN DW01_4.BF_SSN IS NOT NULL 
				THEN 'DEFER'
				ELSE ' '
			 END AS DEFER
			,CASE
				WHEN DW01_12.BF_SSN IS NOT NULL 
				THEN 'CLM_PD'
				ELSE ' '
			 END AS CLM_PD
			,CASE
				WHEN DW01_16.BF_SSN IS NOT NULL 
				THEN 'DTH_ALG'
				ELSE ' '
			 END AS DTH_ALG
			,CASE
				WHEN DW01_17.BF_SSN IS NOT NULL
				THEN 'DTH_VRF'
				ELSE ' '
			 END AS DTH_VRF
			,CASE
				WHEN DW01_18.BF_SSN IS NOT NULL
				THEN 'DSB_ALG'
				ELSE ' '
			 END AS DSB_ALG
			,CASE
				WHEN DW01_19.BF_SSN IS NOT NULL 
				THEN 'DSB_VRF'
				ELSE ' '
			 END AS DSB_VRF
			,CASE
				WHEN DW01_20.BF_SSN IS NOT NULL 
				THEN 'BKP_ALG'
				ELSE ' '
			 END AS BKP_ALG
			,CASE
				WHEN DW01_21.BF_SSN IS NOT NULL 
				THEN 'BKP_VRF'
				ELSE ' '
			 END AS BKP_VRF
/*			,CASE*/
/*			 WHEN DW01_22.BF_SSN IS NOT NULL THEN 'PIF'*/
/*			 ELSE ' '*/
/*			 END AS PIF*/
			,CASE
				WHEN FBR.BF_SSN IS NOT NULL 
				THEN 'FORB'
				ELSE ' '
			 END AS FORB
			,CASE
				WHEN SPLIT.BF_SSN IS NOT NULL 
				THEN 'SPLIT'
				ELSE ' '
			 END AS SPLIT
			,CASE
				WHEN IDR.BF_SSN IS NOT NULL 
				THEN 'IDR'
				ELSE ' '
			 END AS IDR
			,CASE
				WHEN F_RPS.BF_SSN IS NOT NULL 
				THEN 'F_RPS'
				ELSE ' '
			 END AS F_RPS
			,CASE
				WHEN AY10.BF_SSN IS NOT NULL 
				THEN 'SETUP'
				ELSE ' '
			 END AS SETUP
			,CASE
				WHEN OVRPS.BF_SSN IS NOT NULL 
				THEN 'OVRPS'
				ELSE ' '
			 END AS OVRPS
			,CASE
				WHEN RPS.BF_SSN IS NOT NULL 
				THEN 'RPS>R0'
				ELSE ' '
			 END AS RPS
		FROM
			SOURCE_COMBO S
/*			LEFT JOIN OLWHRM1.WQ20_TSK_QUE WQ20*/
/*				ON S.BF_SSN = WQ20.BF_SSN*/
/*				AND WQ20.WF_QUE = 'R0'*/
			INNER JOIN OLWHRM1.PD10_PRS_NME PD10
				ON S.BF_SSN = PD10.DF_PRS_ID
/*			LEFT JOIN AES.PH05_CNC_EML PH05*/
/*				ON PD10.DF_SPE_ACC_ID = PUT(PH05.DF_SPE_ID,z10.)*/
			LEFT JOIN OLWHRM1.LN83_EFT_TO_LON LN83	
				ON S.BF_SSN = LN83.BF_SSN
				AND LN83.LC_STA_LN83 = 'A'
/*			LEFT JOIN OLWHRM1.LN65_LON_RPS LN65*/
/*				ON S.BF_SSN = LN65.BF_SSN*/
/*				AND LN65.LD_CRT_LON65 >= '22JUN2015'd*/
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_4
				ON S.BF_SSN = DW01_4.BF_SSN
				AND DW01_4.WC_DW_LON_STA = '04'
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_12
				ON S.BF_SSN = DW01_12.BF_SSN
				AND DW01_12.WC_DW_LON_STA = '12'
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_16
				ON S.BF_SSN = DW01_16.BF_SSN
				AND DW01_16.WC_DW_LON_STA = '016'
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_17
				ON S.BF_SSN = DW01_17.BF_SSN
				AND DW01_17.WC_DW_LON_STA = '17'
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_18
				ON S.BF_SSN = DW01_18.BF_SSN
				AND DW01_18.WC_DW_LON_STA = '18'
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_19
				ON S.BF_SSN = DW01_19.BF_SSN
				AND DW01_19.WC_DW_LON_STA = '19'
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_20
				ON S.BF_SSN = DW01_20.BF_SSN
				AND DW01_20.WC_DW_LON_STA = '20'
			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_21
				ON S.BF_SSN = DW01_21.BF_SSN
				AND DW01_21.WC_DW_LON_STA = '21'
/*			LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01_22*/
/*				ON S.BF_SSN = DW01_22.BF_SSN*/
/*				AND DW01_22.WC_DW_LON_STA = '22'*/
			LEFT JOIN 
			(
				SELECT
					S.BF_SSN
				FROM 
					SOURCE_COMBO S
					INNER JOIN OLWHRM1.LN60_BR_FOR_APV LN60
						ON S.BF_SSN = LN60.BF_SSN
					INNER JOIN OLWHRM1.FB10_BR_FOR_REQ FB10
						ON S.BF_SSN = FB10.BF_SSN
						AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
				WHERE
					FB10.LC_FOR_TYP IN ('10','14')
					AND TODAY() BETWEEN LN60.LD_FOR_BEG AND LN60.LD_FOR_END
					AND LN60.LC_STA_LON60 = 'A'
					AND FB10.LC_FOR_STA = 'A'
					AND FB10.LC_STA_FOR10 = 'A'
			) FBR
				ON S.BF_SSN = FBR.BF_SSN
			LEFT JOIN 
			(
				SELECT
					S.BF_SSN
				FROM 
					SOURCE_COMBO S
					INNER JOIN OLWHRM1.LN65_LON_RPS LN65
						ON S.BF_SSN = LN65.BF_SSN
					INNER JOIN 
					(
						SELECT
							S.BF_SSN
						FROM 
							SOURCE_COMBO S
							INNER JOIN OLWHRM1.LN65_LON_RPS LN65
								ON S.BF_SSN = LN65.BF_SSN
						WHERE
							LN65.LC_STA_LON65 = 'A'
							AND LN65.LC_TYP_SCH_DIS IN ('FS', 'FG', 'IB', 'IL', 'I3', 'IP', 'C1', 'C2', 'C3', 'CL', 'CQ', 'IS', 'CA', 'CP', 'RP', 'IA', 'I5', 'RE')
					) TYPS
						ON S.BF_SSN = TYPS.BF_SSN
					WHERE 
						LN65.LC_STA_LON65 = 'A'
						AND 
						LN65.LC_TYP_SCH_DIS NOT IN ('FS', 'FG', 'IB', 'IL', 'I3', 'IP', 'C1', 'C2', 'C3', 'CL', 'CQ', 'IS', 'CA', 'CP', 'RP', 'IA', 'I5', 'RE')
			) SPLIT
				ON S.BF_SSN = SPLIT.BF_SSN
			LEFT JOIN OLWHRM1.LN65_LON_RPS IDR
				ON S.BF_SSN = IDR.BF_SSN 
				AND IDR.LC_TYP_SCH_DIS IN ('IB','IL','I3','IP','C1','C2','C3','CL','CQ','IS','CA','CP','RP','IA','I5','RE')
			LEFT JOIN OLWHRM1.LN65_LON_RPS F_RPS
				ON S.BF_SSN = F_RPS.BF_SSN
				AND F_RPS.LC_TYP_SCH_DIS IN ('FG','FS')
			LEFT JOIN OLWHRM1.AY10_BR_LON_ATY AY10
				ON S.BF_SSN = AY10.BF_SSN
				AND AY10.LD_ATY_RSP IS NULL
				AND AY10.PF_REQ_ACT IN ('GRSEL','IDRPN','CODCA','CODPA','CODRV','G119I','IBADI','IBALN','IBRAF','IBRDF','IBRRW','IBRWB','IBRWV','ICRAL','IDRPR','RPYNL','T4506','WRIDR')
			LEFT JOIN OLWHRM1.AY10_BR_LON_ATY OVRPS
				ON S.BF_SSN = OVRPS.BF_SSN
				AND OVRPS.LD_ATY_RSP IS NULL
				AND OVRPS.PF_REQ_ACT = 'OVRPS'
			LEFT JOIN 
			(
				SELECT
					S.BF_SSN
				FROM 
					SOURCE_COMBO S
					INNER JOIN 
					(
						SELECT
							S.BF_SSN
							,WQ20.WD_ACT_REQ
						FROM 
							SOURCE_COMBO S
							JOIN OLWHRM1.WQ20_TSK_QUE WQ20
								ON S.BF_SSN = WQ20.BF_SSN
						WHERE
							WQ20.WF_QUE = 'R0'
					)WQ20
						ON S.BF_SSN = WQ20.BF_SSN
					INNER JOIN OLWHRM1.LN65_LON_RPS LN65
						ON S.BF_SSN = LN65.BF_SSN
				WHERE 
					LN65.LD_CRT_LON65 > WQ20.WD_ACT_REQ
			) RPS
				ON S.BF_SSN = RPS.BF_SSN
			LEFT JOIN OLWHRM1.LN10_LON LN10_BAL
				ON S.BF_SSN = LN10_BAL.BF_SSN
			LEFT JOIN OLWHRM1.LN10_LON LN10
				ON S.BF_SSN = LN10.BF_SSN
				AND LN10.LF_LON_CUR_OWN LIKE '829769%'
				AND LN10.LA_CUR_PRI > 0.00
				AND LN10.LC_STA_LON10 = 'R'
		WHERE
			LN10.BF_SSN IS NULL
		GROUP BY
			S.BF_SSN
			,R0
/*			,ECORR*/
			,ACH
			,DEFER
			,CLM_PD
			,DTH_ALG
			,DTH_VRF
			,DSB_ALG
			,DSB_VRF
			,BKP_ALG
			,BKP_VRF
			,FORB
			,SPLIT
			,IDR
			,F_RPS
			,SETUP
			,OVRPS
			,RPS
	;

	DISCONNECT FROM DB2;

QUIT;

ENDRSUBMIT;

DATA DEMO; SET DUSTER.DEMO; RUN;

PROC SQL;
	CREATE TABLE FNL AS
		SELECT
			D.SSN
			,D.R0
/*			,D.ECORR*/
			,D.ACH
			,COALESCE
			(
/*				D.RESOLVED*/
				,D.ZERO_BAL
				,D.DEFER
				,D.CLM_PD
				,D.DTH_ALG
				,D.DTH_VRF
				,D.DSB_ALG
				,D.DSB_VRF
				,D.BKP_ALG
				,D.BKP_VRF
/*				,D.PIF*/
				,D.FORB
				,D.SPLIT
				,D.IDR
				,D.F_RPS
				,D.SETUP
				,D.OVRPS
				,D.RPS
				,'N'
			) AS EXEMPT
		FROM 
			DEMO D
;
QUIT;

/*export to Excel spreadsheet*/
PROC EXPORT DATA = WORK.FNL 
            OUTFILE = "T:\SAS\UNH 29061.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="COM"; 
RUN;
