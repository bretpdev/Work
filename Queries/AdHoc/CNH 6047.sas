PROC IMPORT OUT = WORK.SOURCE
            DATAFILE = "T:\Nov TransfersVX.xlsx" 
            DBMS = xlsx REPLACE;
   			SHEET = 'CORNERSTONE'; 
RUN;

DATA SOURCE;
      SET SOURCE;
      BF_SSN = STRIP(COMPRESS(BORROWER_SSN,'-'));
      FORMAT BF_SSN $X.;
      KEEP BF_SSN ;
RUN;


LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=WORK;
DATA LEGEND.SOURCE; *Send data to legend;
SET SOURCE;
RUN;

RSUBMIT LEGEND;
LIBNAME PKUB DBX DATABASE=DNFPUTDL OWNER=PKUB;
PROC SQL;
	CREATE TABLE POP AS
		SELECT DISTINCT	
			s.BF_SSN as s_ssn,
			LNXX.BF_SSN,
			PDXX.DF_SPE_ACC_ID AS ACCOUNT_NUMBER,
			PDXX.DM_PRS_X AS FIRST_NAME,
			PDXX.DM_PRS_LST AS LAST_NAME,
			SUM.TOTAL_BALANCE,
			DELI.LN_DLQ_MAX,
			DWXX.DWXX_STATUS,
			AYXX.AYXX_STATUS,
			FSXX.LD_DL_CON_INQ
		FROM
			 SOURCE S
		LEFT JOIN PKUB.PDXX_PRS_NME PDXX
			ON PDXX.DF_PRS_ID = S.BF_SSN
		LEFT JOIN PKUB.LNXX_LON LNXX
			ON LNXX.BF_SSN = PDXX.DF_PRS_ID
		LEFT JOIN 
		(
			SELECT DISTINCT
				LNXXS.BF_SSN,
				LNXXS.LN_SEQ,
				SUM(LNXXS.LA_CUR_PRI + DWXXS.WA_TOT_BRI_OTS) AS TOTAL_BALANCE
			FROM
				PKUB.LNXX_LON LNXXS
			INNER JOIN PKUB.DWXX_DW_CLC_CLU DWXXS
				ON LNXXS.BF_SSN = DWXXS.BF_SSN
				AND LNXXS.LN_SEQ = DWXXS.LN_SEQ 
			GROUP BY
				LNXXS.BF_SSN
		)SUM
			ON SUM.BF_SSN = LNXX.BF_SSN
			AND SUM.LN_SEQ = LNXX.LN_SEQ
		LEFT JOIN
		(
			SELECT DISTINCT
				BF_SSN,
				LN_SEQ,
				LN_DLQ_MAX
			FROM
				PKUB.LNXX_LON_DLQ_HST
			WHERE
				LC_STA_LONXX = 'X'
				AND LD_DLQ_MAX ^= (TODAY() -X)
		)DELI
			ON DELI.BF_SSN = LNXX.BF_SSN
			AND DELI.LN_SEQ = LNXX.LN_SEQ
		LEFT JOIN 
		(
			SELECT DISTINCT 
				BF_SSN,
				LN_SEQ,
				'DWXX' AS DWXX_STATUS
			FROM PKUB.DWXX_DW_CLC_CLU
			WHERE WC_DW_LON_STA IN ('XX','XX','XX','XX','XX','XX')	
		)DWXX
			ON DWXX.BF_SSN = LNXX.BF_SSN
			AND DWXX.LN_SEQ = LNXX.LN_SEQ
		LEFT JOIN 
		(
			SELECT DISTINCT
				BF_SSN,
				'AYXX' AS AYXX_STATUS
			FROM
				PKUB.AYXX_BR_LON_ATY
			WHERE
				PF_REQ_ACT IN ('CSFSA','ADCSH','TLFSA','ADTLF','UPFSA','ADUPR','SSFSA','ADSXX','FCFSA','ADFCR')
				OR (PF_REQ_ACT = 'DLCON' AND LD_STA_ACTYXX BETWEEN TODAY() - XXX AND TODAY())
		)AYXX
			ON AYXX.BF_SSN = LNXX.BF_SSN
		LEFT JOIN
		(
			SELECT DISTINCT
				BF_SSN,
				LN_SEQ,
				(TODAY() - LD_DL_CON_INQ) AS LD_DL_CON_INQ
			FROM
				PKUB.FSXX_DL_LON
		)FSXX
			ON FSXX.BF_SSN = LNXX.BF_SSN
			AND FSXX.LN_SEQ = LNXX.LN_SEQ
			

;
QUIT;
ENDRSUBMIT;

data test;
set legend.pop;
run;

DATA POP;
SET LEGEND.POP;
WHERE
			(TOTAL_BALANCE <= XX AND TOTAL_BALANCE IS NOT NULL)
			OR LN_DLQ_MAX >= XXX
			OR (DWXX_STATUS = 'DWXX' OR AYXX_STATUS = 'AYXX')
			OR (LD_DL_CON_INQ < XX AND LD_DL_CON_INQ IS NOT NULL);
RUN;

DATA REASONS;
SET POP;
IF TOTAL_BALANCE <= XX THEN
	REASONX = 'Total balance of all loans is <= $XX';
IF LN_DLQ_MAX >= XXX THEN
	REASONX = 'Delinquency on any loan is >= XXX days';
IF (DWXX_STATUS = 'DWXX' OR AYXX_STATUS = 'AYXX') THEN
	REASONX = 'Specialty Claim/TPD in process';
IF LD_DL_CON_INQ < XX AND LD_DL_CON_INQ ^= . THEN
	REASONX = 'In a Consolidation Stop-Pursuit status';

REASON = CATX('|',REASONX,REASONX,REASONX,REASONX);
RUN;

DATA OUTPT(DROP=BF_SSN TOTAL_BALANCE LN_DLQ_MAX DWXX_STATUS AYXX_STATUS LD_DL_CON_INQ REASONX REASONX REASONX REASONX);
SET REASONS;
RUN;

PROC EXPORT DATA = WORK.OUTPT
            OUTFILE = "T:\SAS\NH XXXX XX_XX_XXXX vX.CSV" 
            DBMS = CSV 
			REPLACE;
     PUTNAMES = YES;
RUN;
