DROP TABLE IF EXISTS #MAIN_POP

SELECT DISTINCT
	PD10.DF_SPE_ACC_ID,
	FORB.*,
	RS.LD_RPS_1_PAY_DU,
	CASE WHEN FORB.LD_FOR_END >= CAST(GETDATE() AS DATE) THEN 1 ELSE 0 END AS STILL_IN_FORB,
	CASE WHEN RS.LD_RPS_1_PAY_DU > CAST(GETDATE() AS DATE) AND F_FORB.BF_SSN IS NULL AND LN16.BF_SSN IS NULL AND FORB.LD_FOR_END <= CAST(GETDATE() AS DATE) THEN 1 ELSE 0 END AS REPAY_NOT_STARTED,
	CASE WHEN RS.LD_RPS_1_PAY_DU <= CAST(GETDATE() AS DATE) AND LN16.BF_SSN IS NULL AND F_FORB.BF_SSN IS NULL AND FORB.LD_FOR_END <= CAST(GETDATE() AS DATE) and PIF.LA_CUR_PRI IS NULL  THEN 1 ELSE 0 END AS RESUMED_PAYMENTS_CURRENT,
	CASE WHEN ISNULL(LN16.LN_DLQ_MAX,0) BETWEEN 1 AND 10 THEN 1 ELSE 0 END AS PD1,
	CASE WHEN ISNULL(LN16.LN_DLQ_MAX,0) BETWEEN 11 AND 20 THEN 1 ELSE 0 END AS PD2,
	CASE WHEN ISNULL(LN16.LN_DLQ_MAX,0) BETWEEN 21 AND 30 THEN 1 ELSE 0 END AS PD3,
	CASE WHEN ISNULL(LN16.LN_DLQ_MAX,0) > 30 THEN 1 ELSE 0 END AS PD4,
	CASE WHEN PIF.LA_CUR_PRI <= 0 THEN 1 ELSE 0 END AS PIF,
	CASE WHEN F_FORB.BF_SSN IS NOT NULL THEN 1 ELSE 0 END AS FUTURE_FORB_COUNT,
	LN16.LN_DLQ_MAX,
	CASE WHEN F_FORB.BF_SSN IS NOT NULL THEN 'Y' ELSE 'N' END AS FUTURE_FORB,
	F_FORB.LD_FOR_BEG AS F_FORB_BEGIN,
	DATENAME(month, FORB.LD_FOR_BEG) AS M,
	MONTH(FORB.LD_FOR_BEG) AS N
INTO #MAIN_POP
FROM
	UDW..LN35_LON_OWN LN35
	INNER JOIN UDW..PD10_PRS_NME PD10
		ON PD10.DF_PRS_ID = LN35.BF_SSN
	INNER JOIN UDW..LN10_LON LN10
		ON LN10.BF_SSN = LN35.BF_SSN
		AND LN10.LN_SEQ = LN10.LN_SEQ
	INNER JOIN
	(	
		SELECT
			FB10.BF_SSN,
			LN60.LN_SEQ,
			FB10.LF_FOR_CTL_NUM,
			LN60.LD_FOR_BEG,
			LN60.LD_FOR_END,
			LN60.LF_LST_DTS_LN60,
			FB10.LF_LST_DTS_FB10
		FROM
			UDW..FB10_BR_FOR_REQ FB10
			INNER JOIN UDW..LN60_BR_FOR_APV LN60
				ON LN60.BF_SSN = FB10.BF_SSN
				AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
		WHERE
			FB10.LC_FOR_TYP = '40'
			 AND LN60.LD_FOR_BEG BETWEEN '03/01/2020' AND '06/30/2020'
			 AND FB10.LC_FOR_STA = 'A'
			 AND LN60.LC_FOR_RSP  != '003'
	) FORB
		ON FORB.BF_SSN = LN35.BF_SSN
		AND FORB.LN_SEQ = LN35.LN_SEQ
	LEFT JOIN ULS.dasforbuh.ProcessQueue PQ
		ON PQ.AccountNumber = PD10.DF_SPE_ACC_ID
		AND PQ.AddedAt > '03/01/2020'
		AND PQ.DeletedOn IS NULL
	LEFT JOIN UDW.CALC.RepaymentSchedules RS
		ON RS.BF_SSN = LN10.BF_SSN
		AND RS.LN_SEQ = LN10.LN_SEQ
		AND RS.CurrentGradation = 1
	LEFT JOIN 
	(
		SELECT 
			LN16.*
		FROM
			UDW..LN16_LON_DLQ_HST LN16
			INNER JOIN UDW..LN10_LON LN10
				ON LN10.BF_SSN = LN16.BF_SSN
				AND LN10.LN_SEQ = LN16.LN_SEQ
				AND LN10.LA_CUR_PRI > 0
				AND LN10.LC_STA_LON10 = 'R'
	) LN16
		ON LN16.BF_SSN = LN10.BF_SSN
		AND LN16.LN_SEQ = LN10.LN_SEQ
		AND LN16.LC_STA_LON16 = '1'
	LEFT JOIN
	(
		SELECT
			FB10.BF_SSN,
			LN60.LN_SEQ,
			FB10.LF_FOR_CTL_NUM,
			LN60.LD_FOR_BEG,
			LN60.LD_FOR_END,
			LN60.LF_LST_DTS_LN60,
			FB10.LF_LST_DTS_FB10
		FROM
			UDW..FB10_BR_FOR_REQ FB10
			INNER JOIN UDW..LN60_BR_FOR_APV LN60
				ON LN60.BF_SSN = FB10.BF_SSN
				AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
		WHERE
			 LN60.LD_FOR_BEG BETWEEN '03/01/2020' AND GETDATE()
			 AND FB10.LC_FOR_STA = 'A'
			 AND LN60.LC_STA_LON60 = 'A'
			 AND LN60.LC_FOR_RSP  != '003'
	) F_FORB
		ON F_FORB.BF_SSN = LN35.BF_SSN
		AND F_FORB.LN_SEQ = LN35.LN_SEQ
		AND F_FORB.LD_FOR_BEG > FORB.LD_FOR_BEG
	LEFT JOIN
	(
		SELECT
			BF_SSN,
			SUM(LA_CUR_PRI) AS LA_CUR_PRI
		FROM
			UDW..LN10_LON
		GROUP BY
			BF_SSN
		HAVING SUM(LA_CUR_PRI) <= 0
	) PIF
		ON PIF.BF_SSN = LN10.BF_SSN
WHERE
	LN35.IF_BND_ISS = '93002011'
	AND LN35.LC_STA_LON35 = 'A'
	AND CAST(GETDATE() AS DATE) BETWEEN LN35.LD_OWN_EFF_SR AND ISNULL(LN35.LD_OWN_EFF_END, '01/01/2099')
	AND PQ.AccountNumber IS NULL


--SELECT * FROM #MAIN_POP WHERE REPAY_NOT_STARTED = 1 order by bf_ssn, ln_seq

SELECT 
	P.M,
	P.N,
	count(distinct df_spe_acc_id) as total_count,
	sum(STILL_IN_FORB) as STILL_IN_FORB,
	SUM(REPAY_NOT_STARTED) AS REPAY_NOT_STARTED,
	SUM(RESUMED_PAYMENTS_CURRENT) AS RESUMED_PAYMENTS_CURRENT,
	SUM(PD1) AS PD1,
	SUM(PD2) AS PD2,
	SUM(PD3) AS PD3,
	SUM(PD4) AS PD4,
	SUM(PIF) AS PIF,
	SUM(FUTURE_FORB_COUNT) AS FUTURE_FORB_COUNT
FROM
(
	SELECT	
		MP.DF_SPE_ACC_ID,
		MP.M,
		MP.N,
		MAX(MP.STILL_IN_FORB) AS STILL_IN_FORB,
		MAX(REPAY_NOT_STARTED) AS REPAY_NOT_STARTED,
		MAX(RESUMED_PAYMENTS_CURRENT) AS RESUMED_PAYMENTS_CURRENT,
		MAX(PD1) AS PD1,
		MAX(PD2) AS PD2,
		MAX(PD3) AS PD3,
		MAX(PD4) AS PD4,
		MAX(PIF) AS PIF,
		MAX(FUTURE_FORB_COUNT) AS FUTURE_FORB_COUNT
	FROM
		#MAIN_POP MP
	GROUP BY
		MP.DF_SPE_ACC_ID,
		MP.M,
		MP.N
) P
GROUP BY
	M,
	N
ORDER BY
	N