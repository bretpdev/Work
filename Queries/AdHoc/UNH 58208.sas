/*Labor day 2018*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWDW1.LWDW1R2";*LN20;
FILENAME REPORTZ "&RPTLIB/ULWDW1.LWDW1RZ";
FILENAME REPORT3 "&RPTLIB/ULWDW1.LWDW1R3";*BR03;
FILENAME REPORT4 "&RPTLIB/ULWDW1.LWDW1R4";*LN80;
FILENAME REPORT5 "&RPTLIB/ULWDW1.LWDW1R5";*LN90;
FILENAME REPORT6 "&RPTLIB/ULWDW1.LWDW1R6";*DF10;
FILENAME REPORT7 "&RPTLIB/ULWDW1.LWDW1R7";*FB10;
FILENAME REPORT8 "&RPTLIB/ULWDW1.LWDW1R8";*PD10;
FILENAME REPORT9 "&RPTLIB/ULWDW1.LWDW1R9";*K0PHN;
FILENAME REPORT10 "&RPTLIB/ULWDW1.LWDW1R10";*DRLFA;
FILENAME REPORT11 "&RPTLIB/ULWDW1.LWDW1R11";*LN10;
FILENAME REPORT12 "&RPTLIB/ULWDW1.LWDW1R12";*LN83;
FILENAME REPORT13 "&RPTLIB/ULWDW1.LWDW1R13";*LN09;
FILENAME REPORT14 "&RPTLIB/ULWDW1.LWDW1R14";*CALLFWD;
FILENAME REPORT15 "&RPTLIB/ULWDW1.LWDW1R15";*LN54;
FILENAME REPORT16 "&RPTLIB/ULWDW1.LWDW1R16";*LN55;
FILENAME REPORT17 "&RPTLIB/ULWDW1.LWDW1R17";*LN65;
FILENAME REPORT18 "&RPTLIB/ULWDW1.LWDW1R18";*LN72;
FILENAME REPORT19 "&RPTLIB/ULWDW1.LWDW1R19";*SD10;
FILENAME REPORT20 "&RPTLIB/ULWDW1.LWDW1R20";*LN16;
FILENAME REPORT21 "&RPTLIB/ULWDW1.LWDW1R21";*BR02;
FILENAME REPORT22 "&RPTLIB/ULWDW1.LWDW1R22";*BR30;
FILENAME REPORT23 "&RPTLIB/ULWDW1.LWDW1R23";*PD32;
FILENAME REPORT24 "&RPTLIB/ULWDW1.LWDW1R24";*RM31;
FILENAME REPORT25 "&RPTLIB/ULWDW1.LWDW1R25";*PD30;
FILENAME REPORT26 "&RPTLIB/ULWDW1.LWDW1R26";*PD42;
FILENAME REPORT27 "&RPTLIB/ULWDW1.LWDW1R27";*K0ADD;
FILENAME REPORT28 "&RPTLIB/ULWDW1.LWDW1R28";*ARCHIST;
FILENAME REPORT29 "&RPTLIB/ULWDW1.LWDW1R29";*DW01;
FILENAME REPORT30 "&RPTLIB/ULWDW1.LWDW1R30";*LN56;
FILENAME REPORT31 "&RPTLIB/ULWDW1.LWDW1R31";*CUR_DUE;
FILENAME REPORT32 "&RPTLIB/ULWDW1.LWDW1R32";*DL200;
FILENAME REPORT33 "&RPTLIB/ULWDW1.LWDW1R33";*ARC_M1411;
FILENAME REPORT34 "&RPTLIB/ULWDW1.LWDW1R34";*ARC_IND;
FILENAME REPORT35 "&RPTLIB/ULWDW1.LWDW1R35";*LN15_DISB;
FILENAME REPORT36 "&RPTLIB/ULWDW1.LWDW1R36";*AD20;
FILENAME REPORT37 "&RPTLIB/ULWDW1.LWDW1R37";*AP03;
FILENAME REPORT40 "&RPTLIB/ULWDW1.LWDW1R40";*LN80A;
FILENAME REPORT42 "&RPTLIB/ULWDW1.LWDW1R42";*PD20;
FILENAME REPORT43 "&RPTLIB/ULWDW1.LWDW1R43";*PD21;
FILENAME REPORT44 "&RPTLIB/ULWDW1.LWDW1R44";*PD22;
FILENAME REPORT45 "&RPTLIB/ULWDW1.LWDW1R45";*PD23;
/*FILENAME REPORT46 "&RPTLIB/ULWDW1.LWDW1R46";*PD24;*/
FILENAME REPORT48 "&RPTLIB/ULWDW1.LWDW1R48";*MR01;
FILENAME REPORT51 "&RPTLIB/ULWDW1.LWDW1R51";*LN90A;
FILENAME REPORT53 "&RPTLIB/ULWDW1.LWDW1R53";*GU10;
FILENAME REPORT63 "&RPTLIB/ULWDW1.LWDW1R63";*RP30;

/*TEST*/
/*LIBNAME  QADBD004  REMOTE  SERVER=QADBD004 SLIBREF=WORK  ;*/

/*LIVE*/
LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;
DATA _NULL_;
	call symput('rsub',put(time(),time9.));
RUN;

RSUBMIT;

/*%let DB = DLGSWQUT;  *This is test;*/
%LET DB = DLGSUTWH;  *This is live;

LIBNAME OLWHRM1 DB2 DATABASE=&DB OWNER=OLWHRM1; 
LIBNAME SAS_TAB V8 '/sas/whse/progrevw';

DATA _NULL_; 
	SET SAS_TAB.LASTRUN_JOBS;
	/*If the job must be run manually set this macro to the last day it successfully ran(last business day).*/
	LAST_RUN = TODAY() - 4;	*COMMENT FOR PROD, IT WILL READ THE DATE FROM A TABLE;
	/*	IF JOB = 'UTLWDW1' THEN DO;*/
			CALL SYMPUT('LAST_RUN',"'"||TRIM(LEFT(PUT(LAST_RUN,DATE10.)))|| "'D");
			CALL SYMPUT('LAST_RUNPASS',"'"|| PUT(LAST_RUN,MMDDYY10.) || "'");
	/*	END;*/
RUN;

%PUT &LAST_RUN &LAST_RUNPASS;

/*THE TABLES ARE GOING TO HAVE THE ACCOUNT NUMBER RATHER THAN SSN AS A PRIMARY KEY*/
/*THE ACCOUNT NUMBER IS BEING TAKEN FROM THE PD10 TABLE WHILE SSN IS DROPPED*/
%MACRO SSN2ACC(TBL,ADKEY);
	PROC SORT DATA=&TBL; 
		BY BF_SSN &ADKEY; 
	RUN;
	DATA &TBL(DROP=BF_SSN);
		MERGE SSN2ACC(IN=B) &TBL(IN=A);
		BY BF_SSN;
		IF A AND B;
	RUN;
	PROC SORT DATA=&TBL; 
		BY DF_SPE_ACC_ID &ADKEY; 
	RUN;
%MEND;

/*******************************************
* BORROWER DATA
********************************************/
PROC SQL;
	CREATE TABLE SSN2ACC AS
	SELECT DISTINCT 
		PD10.DF_SPE_ACC_ID
		,LN10.BF_SSN
	FROM
		OLWHRM1.PD10_PRS_NME PD10
		INNER JOIN OLWHRM1.LN10_LON LN10
			ON PD10.DF_PRS_ID = LN10.BF_SSN
/*	where b.bf_ssn like '%111'*/
;
QUIT;
PROC SORT DATA=SSN2ACC; BY BF_SSN; RUN;

/*******************************************
* ENDORSER DATA
********************************************/
DATA LN20(DROP=LF_LST_DTS_LN20);
	SET OLWHRM1.LN20_EDS(KEEP=BF_SSN LC_STA_LON20 LC_EDS_TYP LF_LST_DTS_LN20 LN_SEQ);
	IF DATEPART(LF_LST_DTS_LN20) >= &LAST_RUN ;
RUN; 
%SSN2ACC(LN20,LN_SEQ);

/*******************************************
* REFERENCE DATA
********************************************/
DATA BR03(DROP=BF_LST_DTS_BR03 BD_RFR_LST_ATT_HME BD_RFR_LST_ATT_ALT BD_RFR_LST_CNC BD_LTR_SNT_RFR);
	SET OLWHRM1.BR03_BR_REF(RENAME=(DF_PRS_ID_BR=BF_SSN  ) 
		KEEP=DF_PRS_ID_BR DF_PRS_ID_RFR BC_STA_BR03 BI_ATH_3_PTY BC_RFR_REL_BR 
			BM_RFR_1 BM_RFR_LST BF_LST_DTS_BR03 BD_RFR_LST_CNC BD_RFR_LST_ATT_HME 
			BD_RFR_LST_ATT_ALT BD_LTR_SNT_RFR);
	FORMAT LST_ATT  LST_CNC MMDDYY10.;
	IF DATEPART(BF_LST_DTS_BR03) >= &LAST_RUN;
	LST_CNC = MAX(BD_RFR_LST_CNC,BD_LTR_SNT_RFR);
	LST_ATT = MAX(BD_RFR_LST_ATT_HME,BD_RFR_LST_ATT_ALT);
RUN;
%SSN2ACC(BR03,DF_PRS_ID_RFR);

/*******************************************
* TRANSACTION DATA
********************************************/
DATA LN90(DROP=LF_LST_DTS_LN90 ) ;
	SET OLWHRM1.LN90_FIN_ATY(KEEP=BF_SSN LN_SEQ LN_FAT_SEQ LD_FAT_PST
		LD_FAT_EFF LC_STA_LON90 LA_FAT_CUR_PRI LA_FAT_NSI LA_FAT_LTE_FEE 
		LF_LST_DTS_LN90 PC_FAT_TYP PC_FAT_SUB_TYP LC_FAT_REV_REA );
	WHERE LC_FAT_REV_REA ^= '0'
		AND DATEPART(LF_LST_DTS_LN90) >= &LAST_RUN;
	LA_FAT_CUR_PRI = COALESCE(LA_FAT_CUR_PRI,0);
	LA_FAT_NSI = COALESCE(LA_FAT_NSI,0);
	LA_FAT_LTE_FEE = COALESCE(LA_FAT_LTE_FEE,0);
	IF  PC_FAT_TYP IN ('05','10','14','15','17','26','50','51','55','60');
RUN;
%SSN2ACC(LN90,LN_SEQ LN_FAT_SEQ);

/*******************************************
* BILLING DATA
********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE LN80 AS
	SELECT 
		*
	FROM
		CONNECTION TO DB2 
		(
			SELECT 
				LN80.BF_SSN
				,LN80.LN_SEQ
				,LN80.LD_BIL_CRT
				,LN80.LN_SEQ_BIL_WI_DTE
				,LN80.LN_BIL_OCC_SEQ
				,LN80.LD_BIL_DU_LON
				,LN80.LC_STA_LON80
				,COALESCE(LN80.LA_BIL_CUR_DU,0) AS LA_BIL_CUR_DU
				,COALESCE(LN80.LA_BIL_PAS_DU,0) AS la_bil_pas_du
				,COALESCE(LN80.LA_TOT_BIL_STS,0) AS la_tot_bil_sts
				,LC_BIL_MTD
				,LC_IND_BIL_SNT
				,LC_STA_BIL10
				,LN90.LN_FAT_SEQ
				,LN90.LD_FAT_EFF
			FROM
				OLWHRM1.BL10_BR_BIL BL10
				INNER JOIN OLWHRM1.LN80_LON_BIL_CRF LN80
					ON LN80.BF_SSN = BL10.BF_SSN
					AND LN80.LD_BIL_CRT = BL10.LD_BIL_CRT
					AND LN80.LN_SEQ_BIL_WI_DTE = BL10.LN_SEQ_BIL_WI_DTE
				LEFT JOIN OLWHRM1.LN75_BIL_LON_FAT LN75
					ON LN75.BF_SSN = LN80.BF_SSN
					AND LN75.LN_SEQ = LN80.LN_SEQ
					AND LN75.LD_BIL_CRT = LN80.LD_BIL_CRT
					AND LN75.LN_SEQ_BIL_WI_DTE = LN80.LN_SEQ_BIL_WI_DTE
					AND LN75.LN_BIL_OCC_SEQ = LN80.LN_BIL_OCC_SEQ
					AND LN80.LA_BIL_CUR_DU = LN80.LA_TOT_BIL_STS
				LEFT JOIN OLWHRM1.LN90_FIN_ATY LN90
					ON LN75.BF_SSN = LN90.BF_SSN
					AND LN75.LN_SEQ = LN90.LN_SEQ
					AND LN75.LN_FAT_SEQ = LN90.LN_FAT_SEQ
			WHERE 
				LN80.LC_BIL_TYP_LON = 'P' 
				AND LN80.LD_LST_DTS_LN80 >= &LAST_RUNPASS);
QUIT; 
PROC SORT DATA=LN80; 
	BY BF_SSN LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE LN_BIL_OCC_SEQ LN_FAT_SEQ; 
RUN;
DATA LN80(DROP=LN_BIL_OCC_SEQ LN_FAT_SEQ); 
	SET LN80;
	BY BF_SSN LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE ;
	IF LAST.LN_SEQ_BIL_WI_DTE;
RUN;
%SSN2ACC(LN80,LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE);

/*******************************************
* DEFERMENT DATA
********************************************/
PROC SQL;
	CREATE TABLE DF10 AS
	SELECT 
		LN50.BF_SSN
		,LN50.LN_SEQ
		,LN50.LF_DFR_CTL_NUM
		,LN50.LN_DFR_OCC_SEQ
		,DF10.LC_DFR_TYP
		,DF10.LD_DFR_INF_CER
		,LN50.LD_DFR_BEG
		,LN50.LD_DFR_END
		,LN50.LC_LON_LEV_DFR_CAP
		,LN50.LC_STA_LON50
		,DF10.LC_DFR_STA
		,DF10.LC_STA_DFR10
	FROM 
		OLWHRM1.LN50_BR_DFR_APV LN50
		INNER JOIN OLWHRM1.DF10_BR_DFR_REQ DF10
			ON LN50.BF_SSN = DF10.BF_SSN
			AND LN50.LF_DFR_CTL_NUM = DF10.LF_DFR_CTL_NUM
	WHERE 
		(DATEPART(LN50.LF_LST_DTS_LN50) >= &LAST_RUN 
		OR DATEPART(DF10.LF_LST_DTS_DF10) >= &LAST_RUN);

/*******************************************
* FORBEARANCE DATA
********************************************/
	CREATE TABLE FB10 AS
	SELECT 
		LN60.BF_SSN
		,LN60.LN_SEQ
		,LN60.LF_FOR_CTL_NUM
		,LN60.LN_FOR_OCC_SEQ
		,FB10.LC_FOR_TYP
		,FB10.LD_FOR_INF_CER
		,LN60.LD_FOR_BEG
		,LN60.LD_FOR_END
		,LN60.LC_LON_LEV_FOR_CAP 
		,LN60.LC_STA_LON60
		,FB10.LC_FOR_STA
		,FB10.LC_STA_FOR10
		,FB10.LA_REQ_RDC_PAY
	FROM 
		OLWHRM1.LN60_BR_FOR_APV LN60
		INNER JOIN OLWHRM1.FB10_BR_FOR_REQ FB10
			ON LN60.BF_SSN = FB10.BF_SSN
			AND LN60.LF_FOR_CTL_NUM = FB10.LF_FOR_CTL_NUM
	WHERE 
		(DATEPART(LN60.LF_LST_DTS_LN60) >= &LAST_RUN
		OR DATEPART(FB10.LF_LST_DTS_FB10) >= &LAST_RUN);
QUIT;
%SSN2ACC(DF10,LN_SEQ LF_DFR_CTL_NUM LN_DFR_OCC_SEQ);
%SSN2ACC(FB10,LN_SEQ LF_FOR_CTL_NUM LN_FOR_OCC_SEQ);

/*******************************************
* LOAN DATA
********************************************/
PROC SQL;
	CREATE TABLE LN10 AS
	SELECT DISTINCT
		LN10.BF_SSN,
		LN10.LN_SEQ,
		LN10.LC_STA_LON10,
		LN10.LA_CUR_PRI,
		LN10.LA_LON_AMT_GTR,
		LN10.LD_END_GRC_PRD,
		LN10.IC_LON_PGM,
		LN10.LD_LON_1_DSB,
		LN10.LF_LST_DTS_LN10,
		LN10.LD_PIF_RPT,
		LN10.IF_GTR
	FROM
		OLWHRM1.LN10_LON LN10
	WHERE 
		DATEPART(LN10.LF_LST_DTS_LN10) >= &LAST_RUN;
RUN;
%SSN2ACC(LN10,LN_SEQ);

/*******************************************
* ACH DATA
********************************************/
DATA LN83(DROP=LF_LST_DTS_LN83 );
	SET OLWHRM1.LN83_EFT_TO_LON(KEEP=BF_SSN LN_SEQ BN_EFT_SEQ LF_LST_DTS_LN83 
		LD_EFT_EFF_END LC_STA_LN83);
	IF DATEPART(LF_LST_DTS_LN83) >= &LAST_RUN;
RUN;
PROC SORT DATA=LN83; 
	BY BF_SSN LN_SEQ DESCENDING BN_EFT_SEQ; 
RUN;
DATA LN83;
	SET LN83;
	BY BF_SSN LN_SEQ;
	IF FIRST.LN_SEQ;
RUN;
%SSN2ACC(LN83,LN_SEQ);

/*******************************************
* REHAB DATA 
********************************************/
DATA LN09(DROP= LF_LST_DTS_LN09);
	SET OLWHRM1.LN09_RPD_PIO_CVN (KEEP= BF_SSN LN_SEQ LF_LST_DTS_LN09 LD_LON_RHB_PCV);
	WHERE LD_LON_RHB_PCV ^= .
		AND DATEPART(LF_LST_DTS_LN09) >= &LAST_RUN;
RUN;
%SSN2ACC(LN09,LN_SEQ);

/*********************************************
* DELINQUENCY DATA
**********************************************/
DATA LN16(DROP=LF_LST_DTS_LN16 LC_STA_LON16);
	SET OLWHRM1.LN16_LON_DLQ_HST(KEEP=BF_SSN LN_SEQ LN_DLQ_SEQ LD_DLQ_OCC
		LF_LST_DTS_LN16 LC_STA_LON16 LN_DLQ_MAX LD_DLQ_MAX);
	IF DATEPART(LF_LST_DTS_LN16) >= &LAST_RUN;
	IF LC_STA_LON16 ^= '1' OR (LC_STA_LON16 = '1' AND LD_DLQ_MAX ^= TODAY() - 1) 
	THEN 
		DO;
			LN_DLQ_MAX = 0;
			LD_DLQ_OCC = .;
		END;
RUN;
PROC SORT DATA=LN16; 
	BY BF_SSN LN_SEQ DESCENDING LN_DLQ_SEQ; 
RUN;
DATA LN16 TILPCHECK;
	SET LN16(DROP=LN_DLQ_SEQ);
	BY BF_SSN LN_SEQ;
	IF FIRST.LN_SEQ;
RUN;
%SSN2ACC(LN16,LN_SEQ);

/*******************************************
* CALL FORWARDING DATA
********************************************/
PROC SQL;
	/*get TILP borrowers*/
	CREATE TABLE TILP AS
	SELECT 
		PD10.DF_SPE_ACC_ID
		,LN10.BF_SSN
		,'' AS CLUID
		,LN10.LN_SEQ
		,CASE 
			WHEN LN_DLQ_MAX >= 90 THEN /*'06'*/ '04'
			ELSE '04'
		END AS FORWARDING
	FROM 
		OLWHRM1.PD10_PRS_NME PD10 
		INNER JOIN OLWHRM1.LN10_LON LN10
			ON LN10.BF_SSN = PD10.DF_PRS_ID
		LEFT JOIN TILPCHECK T
			ON LN10.BF_SSN = T.BF_SSN
			AND LN10.LN_SEQ = T.LN_SEQ
	WHERE 
		LN10.IC_LON_PGM = 'TILP';

/*	get all OneLINK borrowers*/
	CREATE TABLE ALL_ONELINK AS
	SELECT DISTINCT
		PD01.DF_SPE_ACC_ID,
		PD01.DF_PRS_ID AS BF_SSN,
		GA10.AF_APL_ID||GA10.AF_APL_ID_SFX AS CLUID,
		. AS LN_SEQ,
		/*'01'*/ '04' AS FORWARDING
	FROM
		OLWHRM1.PD01_PDM_INF PD01
		INNER JOIN OLWHRM1.GA01_APP GA01
			ON PD01.DF_PRS_ID = GA01.DF_PRS_ID_BR
		INNER JOIN OLWHRM1.GA10_LON_APP GA10
			ON GA01.AF_APL_ID = GA10.AF_APL_ID
	WHERE
		DATEPART(GA01.AF_LST_DTS_GA01) >= &LAST_RUN
		OR DATEPART(GA10.AF_LST_DTS_GA10) >= &LAST_RUN
	;

/*	get all COMPASS borrowers*/
	CREATE TABLE ALL_COMPASS AS
	SELECT DISTINCT
		PD10.DF_SPE_ACC_ID,
		PD10.DF_PRS_ID AS BF_SSN,
		LN10.LF_LON_ALT||PUT(LN10.LN_LON_ALT_SEQ,Z2.) AS CLUID,
		LN10.LN_SEQ,
		CASE
			WHEN LN10.IC_LON_PGM = 'COMPLT' THEN '04'
			WHEN DW01.WC_DW_LON_STA = '12' THEN /*'01'*/ '04'
			WHEN DW01.WC_DW_LON_STA IS NULL THEN '04'
			ELSE '04'
		END AS FORWARDING,
		LN10.LF_LST_DTS_LN10,
		LN10.IC_LON_PGM
	FROM
		OLWHRM1.PD10_PRS_NME PD10
		INNER JOIN OLWHRM1.LN10_LON LN10
			ON PD10.DF_PRS_ID = LN10.BF_SSN
		LEFT JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
			ON LN10.BF_SSN = DW01.BF_SSN
			AND LN10.LN_SEQ = DW01.LN_SEQ
	;

/*	get OneLINK borrower who are not also on COMPASS*/
	CREATE TABLE ONELINK AS
	SELECT
		O.DF_SPE_ACC_ID,
		O.BF_SSN,
		O.CLUID,
		O.LN_SEQ,
		O.FORWARDING
	FROM
		ALL_ONELINK O
		LEFT JOIN ALL_COMPASS C
			ON O.BF_SSN = C.BF_SSN
	WHERE
		C.BF_SSN IS NULL
	;

/*	get non-TILP borrowers where LN10 was updated since last run*/
	CREATE TABLE COMPASS AS
	SELECT
		DF_SPE_ACC_ID,
		BF_SSN,
		CLUID,
		LN_SEQ,
		FORWARDING
	FROM
		ALL_COMPASS
	WHERE
		DATEPART(LF_LST_DTS_LN10) >= &LAST_RUN
		AND IC_LON_PGM <> 'TILP'
	;

/*	combine and sort COMPASS, OneLINK-only, and TILP borrowers*/
	CREATE TABLE CALLFWD AS
	SELECT
		DF_SPE_ACC_ID,
		BF_SSN,
		CLUID,
		LN_SEQ,
		FORWARDING
	FROM
		(
			SELECT * FROM COMPASS 
			UNION 
			SELECT * FROM ONELINK 
			UNION 
			SELECT * FROM TILP
		)
	ORDER BY
		DF_SPE_ACC_ID,
		CLUID,
		LN_SEQ
	;		
QUIT;


/*******************************************
* BORROWER BENEFIT ELIGIBILITY
********************************************/
DATA LN54(DROP=LF_LST_DTS_LN54);
	SET OLWHRM1.LN54_LON_BBS(KEEP=BF_SSN LN_SEQ LC_STA_LN54 LD_BBS_DSQ LC_BBS_ELG LF_LST_DTS_LN54);
	IF DATEPART(LF_LST_DTS_LN54) >= &LAST_RUN ;
RUN;
PROC SORT DATA=LN54; 
	BY BF_SSN LN_SEQ LC_STA_LN54; 
RUN;
DATA LN54(drop=LC_STA_LN54);
	SET LN54;
	BY BF_SSN LN_SEQ LC_STA_LN54;
	IF FIRST.LN_SEQ;
RUN;
%SSN2ACC(LN54,LN_SEQ);

/*******************************************
* BORROWER BENEFITS
********************************************/
DATA LN55(DROP=LF_LST_DTS_LN55);
	SET OLWHRM1.LN55_LON_BBS_TIR
		(KEEP=BF_SSN LN_SEQ PM_BBS_PGM PN_BBS_PGM_SEQ LC_STA_LN55 LN_LON_BBT_PAY LF_LST_DTS_LN55);
	IF DATEPART(LF_LST_DTS_LN55) >= &LAST_RUN ;
	LN_LON_BBT_PAY = COALESCE(LN_LON_BBT_PAY,0);
RUN;
PROC SORT DATA=LN55; 
	BY BF_SSN LN_SEQ LC_STA_LN55; 
RUN;
DATA LN55;
	SET LN55;
		BY BF_SSN LN_SEQ LC_STA_LN55;
	IF FIRST.LN_SEQ;
RUN;
DATA RP02;
	SET OLWHRM1.RP02_BBS_PGM_TIR(KEEP=PM_BBS_PGM PN_BBS_PGM_SEQ  
		PN_BBT_PAY_ICV );
RUN;
PROC SORT DATA=LN55; BY PM_BBS_PGM PN_BBS_PGM_SEQ; RUN;
PROC SORT DATA=RP02; BY PM_BBS_PGM PN_BBS_PGM_SEQ; RUN;
DATA LN55(DROP=PM_BBS_PGM PN_BBS_PGM_SEQ);
	MERGE LN55(IN=A) RP02;
		BY PM_BBS_PGM PN_BBS_PGM_SEQ;
	IF A;
RUN;
%SSN2ACC(LN55,LN_SEQ);

/*******************************************
* REPAYMENT SCHEDULE DATA
********************************************/
PROC SQL;
	CREATE TABLE LN65 AS
	SELECT 
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN66.LN_GRD_RPS_SEQ
		,LN66.LN_RPS_TRM
		,RS10.LD_RPS_1_PAY_DU
		,RS10.LD_SNT_RPD_DIS
		,LN65.LD_CRT_LON65
		,LN65.LC_TYP_SCH_DIS
		,LN66.LA_RPS_ISL
	FROM 
		OLWHRM1.RS10_BR_RPD RS10
		INNER JOIN OLWHRM1.LN65_LON_RPS LN65
			ON RS10.BF_SSN = LN65.BF_SSN
			AND RS10.LN_RPS_SEQ = LN65.LN_RPS_SEQ
		INNER JOIN OLWHRM1.LN66_LON_RPS_SPF LN66
			ON LN65.BF_SSN = LN66.BF_SSN
			AND LN65.LN_SEQ = LN66.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN66.LN_RPS_SEQ
	WHERE
		LN65.LC_STA_LON65 = 'A';
QUIT;
PROC SORT DATA=LN65; 
	BY BF_SSN LN_SEQ LN_GRD_RPS_SEQ; 
RUN;
DATA LN65(DROP= A B C NEXT_SEQ LD_RPS_1_PAY_DU LN_GRD_RPS_SEQ);
	SET LN65;
	FORMAT NEXT_SEQ DATE9.;
	BY BF_SSN LN_SEQ LN_GRD_RPS_SEQ;
	RETAIN NEXT_SEQ A C B;
	IF FIRST.LN_SEQ 
	THEN 
		DO;
			A = .;
			NEXT_SEQ = INTNX('MONTH',LD_RPS_1_PAY_DU,LN_RPS_TRM,'S');
			IF NEXT_SEQ > TODAY() THEN DO;
				A = LN_GRD_RPS_SEQ ;
				C = LA_RPS_ISL ;
		END;
	END;
	ELSE IF A= . 
	THEN 
		DO;
			NEXT_SEQ = INTNX('MONTH',NEXT_SEQ,LN_RPS_TRM,'S');
			IF NEXT_SEQ > TODAY() THEN DO;
				A = LN_GRD_RPS_SEQ ;
				C = LA_RPS_ISL ;
		END;
	END;
	IF FIRST.LN_SEQ THEN B = LN_RPS_TRM;
	ELSE B = B + LN_RPS_TRM;
	IF LAST.LN_SEQ 
	THEN 
		DO;
			LN_RPS_TRM = B;
			LA_RPS_ISL = C;
			LN_GRD_RPS_SEQ = A;
			DAY_DUE = DAY(LD_RPS_1_PAY_DU);
			OUTPUT;
		END;
RUN;
%SSN2ACC(LN65,LN_SEQ);

/*******************************************
* INTEREST RATE DATA
********************************************/
DATA LN72(DROP=LC_STA_LON72 LD_ITR_EFF_BEG LD_ITR_EFF_END LF_LST_DTS_LN72);
	SET OLWHRM1.LN72_INT_RTE_HST(KEEP=BF_SSN LN_SEQ LC_STA_LON72 
		LD_ITR_EFF_BEG LD_ITR_EFF_END LF_LST_DTS_LN72 LR_ITR LR_INT_RDC_PGM_ORG);
	WHERE LC_STA_LON72 = 'A'
		AND LD_ITR_EFF_BEG <= TODAY() 
		AND LD_ITR_EFF_END >= TODAY() 
		AND DATEPART(LF_LST_DTS_LN72) >= &LAST_RUN;
	LR_ITR = COALESCE(LR_ITR,0);
	LR_INT_RDC_PGM_ORG = COALESCE(LR_INT_RDC_PGM_ORG,LR_ITR);
RUN;
%SSN2ACC(LN72,LN_SEQ);

/*********************************************
* ENROLLMENT - LOAN LEVEL
**********************************************/
PROC SQL;
	CREATE TABLE SD10 AS
	SELECT 
		LN10.BF_SSN
		,LN10.LN_SEQ
		,SD10.LN_STU_SPR_SEQ
		,SD10.LD_SCL_SPR
		,SC10.IM_SCL_FUL
	FROM 
		OLWHRM1.SD10_STU_SPR SD10
		INNER JOIN OLWHRM1.SC10_SCH_DMO SC10
			ON SD10.LF_DOE_SCL_ENR_CUR = SC10.IF_DOE_SCL
		INNER JOIN OLWHRM1.LN13_LON_STU_OSD LN13
			ON SD10.LF_STU_SSN = LN13.LF_STU_SSN
			AND SD10.LN_STU_SPR_SEQ = LN13.LN_STU_SPR_SEQ
		INNER JOIN OLWHRM1.LN10_LON LN10
			ON LN13.BF_SSN = LN10.BF_SSN
			AND LN13.LN_SEQ = LN10.LN_SEQ
	WHERE 
		SD10.LC_STA_STU10 = 'A'
		AND LN13.LC_STA_LON13 = 'A'
		AND (DATEPART(SD10.LF_LST_DTS_SD10) >= &LAST_RUN
			OR DATEPART(LN13.LF_CRT_DTS_LN13) >= &LAST_RUN);
QUIT;
PROC SORT DATA=SD10; 
	BY BF_SSN LN_SEQ LN_STU_SPR_SEQ;
RUN;
DATA SD10(DROP=LN_STU_SPR_SEQ);
	SET SD10;
		BY BF_SSN LN_SEQ LN_STU_SPR_SEQ;
	IF LAST.LN_SEQ;
RUN;
%SSN2ACC(SD10,LN_SEQ);

/*********************************************
* EMPLOYER DATA
**********************************************/
PROC SQL;
	CREATE TABLE BR02 AS
	SELECT 
		BR02.BF_SSN
		,IN01.IM_IST_FUL
		,IN01.IX_GEN_STR_ADR_1
		,IN01.IX_GEN_STR_ADR_2
		,IN01.IM_GEN_CT
		,IN01.IC_GEN_ST
		,IN01.IF_GEN_ZIP
		,IN01.IN_GEN_PHN
	FROM 
		OLWHRM1.BR02_BR_EMP BR02
		INNER JOIN OLWHRM1.IN01_LGS_IDM_MST IN01
			ON BR02.BF_EMP_ID_1 = IN01.IF_IST
	WHERE 
		DATEPART(BR02.BF_LST_DTS_BR02) >= &LAST_RUN;
QUIT;
%SSN2ACC(BR02,);

/*********************************************
* AUTOPAY DATA
**********************************************/
DATA BR30(DROP=BF_LST_DTS_BR30 );
	SET OLWHRM1.BR30_BR_EFT(KEEP=BF_SSN BN_EFT_SEQ BF_EFT_ABA BF_EFT_ACC BC_EFT_STA
		BD_EFT_STA BA_EFT_ADD_WDR BN_EFT_NSF_CTR BN_EFT_DAY_DUE BC_EFT_DNL_REA BF_LST_DTS_BR30);
	IF DATEPART(BF_LST_DTS_BR30) >= &LAST_RUN ;
RUN;
PROC SORT DATA=BR30; 
	BY BF_SSN BC_EFT_STA DESCENDING BN_EFT_SEQ; 
	RUN;
DATA BR30; 
	SET BR30; 
	BY BF_SSN BC_EFT_STA DESCENDING BN_EFT_SEQ;
	IF FIRST.BF_SSN OR BC_EFT_STA = 'A';
RUN;
PROC SORT DATA=BR30; 
	BY BF_SSN BN_EFT_SEQ;
RUN;
DATA BR30(DROP=A B BN_EFT_DAY_DUE);
	FORMAT A BN_EFT_DAY_DUE $8.;
	SET BR30;
	BY BF_SSN;
	RETAIN A B;
	IF FIRST.BF_SSN AND LAST.BF_SSN THEN OUTPUT;
	ELSE IF FIRST.BF_SSN AND LAST.BF_SSN = 0 AND BC_EFT_STA = 'A' 
	THEN 
		DO;
			A = BN_EFT_DAY_DUE;
			B = BA_EFT_ADD_WDR;
		END;
	ELSE IF FIRST.BF_SSN = 0 AND BC_EFT_STA = 'A' 
	THEN 
		DO;
			IF A ^= BN_EFT_DAY_DUE THEN A = TRIM(A) || ',' || BN_EFT_DAY_DUE;
			B = B + BA_EFT_ADD_WDR;
		END;
	IF FIRST.BF_SSN = 0 AND LAST.BF_SSN 
	THEN 
		DO;
			BN_EFT_DAY_DUE = A;
			BA_EFT_ADD_WDR = B;
			OUTPUT; 
		END;
RUN;
%SSN2ACC(BR30,);

/*********************************************
* DEMOGRAPHICS
**********************************************/
PROC SQL;
	CREATE TABLE PD10 AS
	SELECT DISTINCT
		PD10.DF_SPE_ACC_ID
		,PD10.DF_PRS_ID AS BF_SSN
		,PD10.DM_PRS_1
		,PD10.DM_PRS_LST
		,PD10.DM_PRS_MID
		,PD10.DD_BRT
	FROM
		OLWHRM1.PD10_PRS_NME PD10
		WHERE SUBSTR(DF_PRS_ID,1,1) ^= 'P'
			AND DATEPART(PD10.DF_LST_DTS_PD10) >= &LAST_RUN;

	CREATE TABLE PD30 AS
	SELECT DISTINCT 
		PD30.DF_PRS_ID AS BF_SSN
		,PD30.DX_STR_ADR_1
		,PD30.DX_STR_ADR_2
		,PD30.DM_CT
		,PD30.DC_DOM_ST
		,PD30.DF_ZIP_CDE
		,PD30.DM_FGN_ST
		,PD30.DM_FGN_CNY
		,PD30.DD_VER_ADR
		,PD30.DI_VLD_ADR
	FROM
		OLWHRM1.PD30_PRS_ADR PD30
		WHERE PD30.DC_ADR = 'L'
			AND DATEPART(PD30.DF_LST_DTS_PD30) >= &LAST_RUN;

	CREATE TABLE PD42 AS
	SELECT DISTINCT 
		PD42.DF_PRS_ID AS BF_SSN
		,PD42.DC_PHN
		,PD42.DC_ALW_ADL_PHN
		,PD42.DD_PHN_VER
		,PD42.DI_PHN_VLD
		,PD42.DN_DOM_PHN_ARA
		,PD42.DN_DOM_PHN_XCH
		,PD42.DN_DOM_PHN_LCL
		,PD42.DN_PHN_XTN
		,PD42.DN_FGN_PHN_CNY
		,PD42.DN_FGN_PHN_CT
		,PD42.DN_FGN_PHN_LCL
	FROM
		OLWHRM1.PD42_PRS_PHN PD42
	WHERE 
		DATEPART(PD42.DF_LST_DTS_PD42) >= &LAST_RUN;

	CREATE TABLE PD32 AS
	SELECT DISTINCT 
		DF_PRS_ID AS BF_SSN,
		DC_ADR_EML,
		DX_ADR_EML,
		DD_VER_ADR_EML,
		DI_VLD_ADR_EML
	FROM 
		OLWHRM1.PD32_PRS_ADR_EML
	WHERE 
		DATEPART(DF_LST_DTS_PD32) >= &LAST_RUN
		AND DC_STA_PD32 = 'A'
	;
QUIT;
PROC SORT DATA=PD32; 
	BY BF_SSN DC_ADR_EML DESCENDING DD_VER_ADR_EML;
RUN;
DATA PD32;
	SET PD32;
	BY BF_SSN DC_ADR_EML;
	IF FIRST.DC_ADR_EML;
RUN;
%SSN2ACC(PD30,);
%SSN2ACC(PD42,DC_PHN);
%SSN2ACC(PD32,DC_ADR_EML);

/*********************************************
* SUSPENSE PAYMENTS
**********************************************/
PROC SQL;
	CREATE TABLE RM31 AS
	SELECT DISTINCT 
		RM31.BF_SSN
		,SUM(RM31.LA_BR_RMT_PST) AS LA_BR_RMT_PST
	FROM
		OLWHRM1.RM31_BR_RMT_PST RM31
	WHERE 
		LC_RMT_STA_PST = 'S'
	GROUP BY 
		BF_SSN;
QUIT;
%SSN2ACC(RM31,);

/*********************************************
* AMOUNTS DUE INFORMATION
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE CUR_DUE AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT DISTINCT
				LN10.BF_SSN
				,SUM(CUR.CUR_DUE) AS CUR_DUE
				,SUM(PST.PAST_DUE) AS PAST_DUE
				,SUM(COALESCE(CUR.CUR_DUE,0) + COALESCE(PST.PAST_DUE,0)) AS TOT_DUE
				,SUM(COALESCE(CUR.CUR_DUE,0) + COALESCE(PST.PAST_DUE,0) + COALESCE(LN10.LA_LTE_FEE_OTS,0)) AS TOT_DUE_FEE
			FROM 
				OLWHRM1.LN10_LON LN10
				LEFT JOIN 
				(/*gets current amount due*/
					SELECT
						LN80.BF_SSN
						,LN80.LN_SEQ
						,SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) AS CUR_DUE
					FROM 
						OLWHRM1.LN80_LON_BIL_CRF LN80
						INNER JOIN 
						(/*gets minimum bill due date*/
							SELECT
								LN80.BF_SSN
								,LN80.LN_SEQ
								,MIN(LN80.LD_BIL_DU_LON) AS LD_BIL_DU_LON
							FROM 
								OLWHRM1.LN80_LON_BIL_CRF LN80
							WHERE
								LN80.LC_STA_LON80 = 'A'
								AND LN80.LC_LON_STA_BIL = '1'
								AND LN80.LD_BIL_DU_LON > CURRENT_DATE
							GROUP BY 
								LN80.BF_SSN
								,LN80.LN_SEQ
						) MIN_DTE
							ON LN80.BF_SSN = MIN_DTE.BF_SSN
							AND LN80.LN_SEQ = MIN_DTE.LN_SEQ
							AND LN80.LD_BIL_DU_LON = MIN_DTE.LD_BIL_DU_LON
					WHERE 
						LN80.LC_STA_LON80 = 'A'
						AND LN80.LC_LON_STA_BIL = '1'
					GROUP BY 
						LN80.BF_SSN
						,LN80.LN_SEQ
				) CUR
					ON LN10.BF_SSN = CUR.BF_SSN
					AND LN10.LN_SEQ = CUR.LN_SEQ
				LEFT JOIN 
				(/*gets past due amounts*/
					SELECT
						LN80.BF_SSN
						,LN80.LN_SEQ
						,SUM(COALESCE(LN80.LA_BIL_CUR_DU,0) - COALESCE(LN80.LA_TOT_BIL_STS,0)) AS PAST_DUE
						,SUM(LN80.LA_BIL_CUR_DU) AS LA_BIL_CUR_DU
						,SUM(LN80.LA_TOT_BIL_STS) AS LA_TOT_BIL_STS
					FROM 
						OLWHRM1.LN80_LON_BIL_CRF LN80
					WHERE
						LN80.LC_STA_LON80 = 'A'
						AND LN80.LC_LON_STA_BIL = '1'
						AND LN80.LD_BIL_DU_LON <= CURRENT_DATE
					GROUP BY 
						LN80.BF_SSN
						,LN80.LN_SEQ
				) PST
					ON LN10.BF_SSN = PST.BF_SSN
					AND LN10.LN_SEQ = PST.LN_SEQ
			WHERE
				LN10.LA_CUR_PRI > 0
				AND LN10.LC_STA_LON10 = 'R'
/*						and	LN10.BF_SSN like '%1111'*/
			GROUP BY 
				LN10.BF_SSN

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
%SSN2ACC(CUR_DUE,);

/*********************************************
* ADDITIONAL LOAN DATA
**********************************************/
PROC SQL;
	CREATE TABLE DW01 AS
	SELECT 
		DW01.BF_SSN
		,DW01.LN_SEQ
		,DW01.WC_DW_LON_STA 
		,DW01.WA_TOT_BRI_OTS 
		,DW01.WD_LON_RPD_SR 
		,DW01.WX_OVR_DW_LON_STA
	FROM 
		OLWHRM1.DW01_DW_CLC_CLU DW01
		INNER JOIN OLWHRM1.LN10_LON LN10
			ON DW01.BF_SSN = LN10.BF_SSN
			AND DW01.LN_SEQ = LN10.LN_SEQ
	WHERE 
		DATEPART(LF_LST_DTS_LN10) >= &LAST_RUN
		OR LN10.LA_CUR_PRI > 0;
QUIT;
%SSN2ACC(DW01,LN_SEQ);

/*********************************************
* CREDIT REPORTING INFORMATION
**********************************************/
PROC SQL;
	CREATE TABLE LN56 AS
	SELECT 
		LN56.BF_SSN 
		,LN56.LN_SEQ
		,LN56.LC_RPT_STA_CRB
		,LN56.LD_RPT_CRB
		,LN56B.LD_STA_LN56 AS DT_ADJ
	FROM 
		OLWHRM1.LN56_LON_CRB_RPT LN56
		LEFT JOIN OLWHRM1.LN56_LON_CRB_RPT LN56B
			ON LN56.BF_SSN = LN56B.BF_SSN
			AND LN56.LN_SEQ = LN56B.LN_SEQ
			AND LN56.LD_RPT_CRB = LN56B.LD_RPT_CRB
			AND SUBSTR(LN56.LF_LST_USR_LN56,1,2) = 'UT'
			AND LN56B.LC_STA_LN56 = 'I'
	WHERE 
		LN56.LD_RPT_CRB > INTNX('YEAR',TODAY(),-1,'S')
		AND LN56.LC_STA_LN56 = 'A'
		AND DATEPART(LN56.LF_LST_DTS_LN56) >= &LAST_RUN;
QUIT;
%SSN2ACC(LN56,LN_SEQ);

/*********************************************
* ACTIVITY HISTORY
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE ARCS AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT AY10.BF_SSN
				,AY10.LN_ATY_SEQ
				,AY10.PF_REQ_ACT
				,AY10.LC_STA_ACTY10
				,LX_ATY
			FROM 
				OLWHRM1.AY10_BR_LON_ATY AY10
				LEFT JOIN OLWHRM1.AY15_ATY_CMT AY15
					ON AY10.BF_SSN = AY15.BF_SSN 
					AND AY10.LN_ATY_SEQ = AY15.LN_ATY_SEQ
					AND AY15.LN_ATY_CMT_SEQ = 1
			 	LEFT JOIN OLWHRM1.AY20_ATY_TXT AY20
					ON AY15.BF_SSN = AY20.BF_SSN 
					AND AY15.LN_ATY_SEQ = AY20.LN_ATY_SEQ
					AND AY15.LN_ATY_CMT_SEQ = AY20.LN_ATY_CMT_SEQ
			WHERE 
				AY10.PF_REQ_ACT IN ('DRLFA','K0ADD','K0PHN','M1411')
				AND (AY10.LF_LST_DTS_AY10 >= &LAST_RUNPASS OR AY10.PF_REQ_ACT = 'DRLFA')
		FOR READ ONLY WITH UR
		);

	CREATE TABLE ARC_IND AS
	SELECT
		*
	FROM
		CONNECTION TO DB2 
		(
			SELECT 
				AY10.BF_SSN
				,AY10.LN_ATY_SEQ
				,AY10.PF_REQ_ACT
				,AY10.LC_STA_ACTY10
			FROM 
				OLWHRM1.AY10_BR_LON_ATY AY10
			WHERE 
				AY10.PF_REQ_ACT IN ('SPHAE','VIPSS')
				AND AY10.LF_LST_DTS_AY10 >= &LAST_RUNPASS
		FOR READ ONLY WITH UR
		);

	CREATE TABLE DL200 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT 
				AY10.BF_SSN
				,AY10.LN_ATY_SEQ
				,AY10.LD_ATY_REQ_RCV
				,AY10.LC_STA_ACTY10
			FROM
				OLWHRM1.AY10_BR_LON_ATY AY10
			WHERE 
				AY10.PF_REQ_ACT = 'DL200'
				AND AY10.LF_LST_DTS_AY10 >= &LAST_RUNPASS
		)
	;

	CREATE TABLE ARCHIST AS
	SELECT *
	FROM 
		CONNECTION TO DB2 
		(
			SELECT 
				AY10.BF_SSN
				,AY10.LN_ATY_SEQ
				,AY10.LC_STA_ACTY10
				,AY10.PF_REQ_ACT
				,AY10.PF_RSP_ACT
				,AY10.LD_ATY_REQ_RCV
				,AY10.LD_ATY_RSP
				,AY10.LF_USR_REQ_ATY
				,AY10.LT_ATY_RSP
				,AY20.LX_ATY
				,AC10.PX_ACT_DSC_REQ
			FROM 
				OLWHRM1.AY10_BR_LON_ATY AY10
			 	LEFT JOIN OLWHRM1.AY20_ATY_TXT AY20
					ON AY10.BF_SSN = AY20.BF_SSN 
					AND AY10.LN_ATY_SEQ = AY20.LN_ATY_SEQ
					AND AY20.LN_ATY_CMT_SEQ = 1
					AND AY20.LN_ATY_TXT_SEQ = 1
				LEFT JOIN OLWHRM1.AC10_ACT_REQ AC10
					ON AY10.PF_REQ_ACT = AC10.PF_REQ_ACT
			WHERE 
				AY10.LC_ATY_RCP = 'B'
				AND AY10.LF_LST_DTS_AY10 >= &LAST_RUNPASS
		)
	;
DISCONNECT FROM DB2;
QUIT;

DATA DRLFA ARCS(DROP=DOL) ;
	SET ARCS;
	IF PF_REQ_ACT = 'DRLFA' THEN DO;
		IF SUBSTR(LX_ATY,1,1) = '{' AND LC_STA_ACTY10 = 'A'
		THEN 
			DO;
				DOL = INPUT(SCAN(LX_ATY,1,'{}'),DOLLAR8.2);
				OUTPUT DRLFA;
			END;
	END;
	ELSE OUTPUT ARCS;
RUN;
PROC SORT DATA=DRLFA; 
	BY BF_SSN;
RUN;
DATA DRLFA (KEEP=BF_SSN FEE_WAV_DOL FEE_WAV_CT);
	SET DRLFA;
	RETAIN FEE_WAV_DOL FEE_WAV_CT;
	BY BF_SSN;
	IF FIRST.BF_SSN 
	THEN 
		DO;
			FEE_WAV_DOL = DOL;
			FEE_WAV_CT = 1;
		END;
	ELSE 
		DO;
			FEE_WAV_DOL + DOL;
			FEE_WAV_CT + 1;
		END;
	IF LAST.BF_SSN THEN OUTPUT;	
RUN;

DATA K0ADD(KEEP=BF_SSN LN_ATY_SEQ LC_STA_ACTY10 DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DC_DOM_ST DF_ZIP_CDE DM_FGN_CNY COMMENTS)
	K0PHN(KEEP=BF_SSN LN_ATY_SEQ LC_STA_ACTY10 PHN1 PHN2 PHN3 COMMENTS)
	ARC_M1411(KEEP=BF_SSN LN_ATY_SEQ LC_STA_ACTY10 LX_ATY);
	SET ARCS;
	LENGTH DX_STR_ADR_1 $30. DX_STR_ADR_2 $30. DM_CT $20. DC_DOM_ST $2. DF_ZIP_CDE $17. DM_FGN_CNY $25. COMMENTS $300.;
	LENGTH  PHN1 PHN2 PHN3 $25.;
	ARRAY ADR{7} $ DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DC_DOM_ST DF_ZIP_CDE DM_FGN_CNY COMMENTS;
	ARRAY PHN{4} $ PHN1 PHN2 PHN3 COMMENTS;
	IF PF_REQ_ACT = 'K0ADD' 
	THEN 
		DO;
			DO I = 1 TO 7;
				ADR(I) = SCAN(LX_ATY,I,',');
			END;
			OUTPUT K0ADD;
		END;
	ELSE if pf_req_act = 'K0PHN' 
	THEN 
		DO;
			DO I = 1 TO 4;
				PHN(I) = SCAN(LX_ATY,I,',');
			END;
			OUTPUT K0PHN;
		END;
	ELSE IF PF_REQ_ACT = 'M1411' THEN OUTPUT ARC_M1411;
RUN;

%SSN2ACC(K0ADD,LN_ATY_SEQ);
%SSN2ACC(K0PHN,LN_ATY_SEQ);
%SSN2ACC(DL200,LN_ATY_SEQ);
%SSN2ACC(DRLFA,);
%SSN2ACC(ARCHIST,LN_ATY_SEQ); 
%SSN2ACC(ARC_M1411,LN_ATY_SEQ);
%SSN2ACC(ARC_IND,LN_ATY_SEQ);

/*********************************************
* DISBURSEMENT
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE LN15_DISB AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				LN15.BF_SSN,
				LN15.LN_BR_DSB_SEQ,
				LN15.LA_DSB - COALESCE(LN15.LA_DSB_CAN,0) AS LA_DSB,
				LN15.LD_DSB,
				LN15.LC_DSB_TYP,
				LN15.LC_STA_LON15,
				LN15.LN_SEQ,
				COALESCE(LN15.LA_DL_DSB_REB,0) - COALESCE(LN15.LA_DSB_REB_CAN,0) AS LA_DL_REBATE
			FROM
				OLWHRM1.LN15_DSB LN15
			WHERE
				LN15.LF_LST_DTS_LN15 >= &LAST_RUNPASS

			FOR READ ONLY WITH UR
		)
	;

	DISCONNECT FROM DB2;
QUIT;
%SSN2ACC(LN15_DISB,LN_BR_DSB_SEQ);

/*********************************************
* AD20
**********************************************/
PROC SQL;
	CREATE TABLE AD20 AS
	SELECT 
		AD20.BF_SSN,
		AD20.LD_FAT_ADJ_REQ,
		AD20.LN_SEQ_FAT_ADJ_REQ, 
		AD20.LC_TYP_FAT_ADJ_REQ, 
		AD20.LC_STA_FAT_ADJ_REQ	
	FROM 
		OLWHRM1.AD20_PCV_ATY_ADJ AD20
	WHERE 
		DATEPART(AD20.LF_LST_DTS_AD20) >= &LAST_RUN
;
QUIT;
%SSN2ACC(AD20,);

/*********************************************
* Master Application
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE AP03 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				AF_APL_ID,
				BF_SSN,
				AN_SEQ,
				LF_STU_SSN,
				IC_LON_PGM,
				AD_CRT_APL,
				AC_STA_ORG_PRC,
				AD_STA_ORG_PRC,
				AC_APL_SCR_STA,
				AC_APL_PRC_TYP,
				AI_BR_DLQ_FED_DET,
				CASE WHEN AI_BR_DET = 'Y' THEN 1 ELSE 0 END AS AI_BR_DET,
				CASE WHEN AC_BR_INT_OPT = 'Y' THEN 1 ELSE 0 END AS AC_BR_INT_OPT,
				AC_BR_RPD_OPT,
				CASE WHEN AI_BR_NED_ORG_FEE = 'Y' THEN 1 ELSE 0 END AS AI_BR_NED_ORG_FEE,
				CASE WHEN AI_BR_ATH_DSB_EFT = 'Y' THEN 1 ELSE 0 END AS AI_BR_ATH_DSB_EFT,
				CASE WHEN AI_EDS_XST_ON_APL = 'Y' THEN 1 ELSE 0 END AS AI_EDS_XST_ON_APL,
				CASE WHEN AI_RFR_XST_ON_APL = 'Y' THEN 1 ELSE 0 END AS AI_RFR_XST_ON_APL,
				AD_STU_LON_TRM_BEG,
				AD_STU_LON_TRM_END,
				AD_STU_GRD_XPC,
				AI_STU_FGN_CNY_STY,
				AC_STU_MAJ_STY,
				AX_STU_CNL_MAJ_STY,
				AC_STU_SCL_ENR_STA,
				CASE WHEN AI_STU_DFR_REQ = 'Y' THEN 1 ELSE 0 END AS AI_STU_DFR_REQ,
				AA_STU_REQ,
				AF_DOE_SCL,
				AF_CNL_NON_EDU_BRH,
				AD_SCL_LON_TRM_BEG,
				AD_SCL_LON_TRM_END,
				AD_SCL_ACA_TRM_BEG,
				AD_SCL_ACA_TRM_END,
				AD_SCL_GRD_XPC,
				AC_SCL_STA_STU_ENR,
				AC_SCL_ACA_GDE_LEV,
				AC_SCL_ACA_PGS,
				AA_SCL_EDU_CST,
				AA_SCL_EDU_AID_TOT,
				AA_SCL_EFC,
				AA_SCL_REQ,
				AI_SCL_CNF_MPN_OVR,
				CASE WHEN AI_SCL_STU_PAS_DU = 'Y' THEN 1 ELSE 0 END AS AI_SCL_STU_PAS_DU,
				AN_SCL_AMT_CLC_MLT,
				AF_DOE_LDR,
				AF_LDR_NON_EDU_BRH,
				AF_LDR_APL_FIL,
				AA_LDR_APV,
				AC_LDR_PGM_YR,
				AI_LDR_CNF_MPN_OVR,
				AF_LDR_BND_ISS,
				AF_LDR_FEE_TIR,
				AI_LDR_NO_FEE_OVR,
				AF_LDR_ITR_TIR,
				AI_LDR_NO_ITR_OVR,
				AD_LDR_APL_REJ,
				AF_LDR_ORG,
				AI_LDR_MAT_SLL_LON,
				AF_LDR_LST_RST,
				IF_GTR,
				AF_GTR_RFR,
				AA_GTR_LON,
				AD_GTR_LON_REQ,
				AD_GTR_ORG,
				AR_GTR_INT,
				AC_GTR_ITR_TYP,
				AR_GTR_FEE,
				AI_GTR_TL4_PIO_787,
				AI_GTR_DSB_LTE_AZ,
				AD_GTR_DSB_MAX_LTE,
				AA_GTR_RSC,
				AD_GTR_RSC,
				AC_GTR_DFR_REQ,
				AC_GTR_INT_BIL_OPT,
				AC_GTR_REA_RDC,
				AA_GTR_TOT_SFD_BAL,
				AA_GTR_TOT_PLS_BAL,
				AI_GTR_RSC,
				AC_SRC_APL,
				AC_VRS_ALT_APL,
				AC_SER_RUE,
				AD_PNT_SIG,
				CASE WHEN AI_PNT_VER = 'Y' THEN 1 ELSE 0 END AS AI_PNT_VER,
				AF_PNT_VER_BY,
				AD_PNT_VER,
				CASE WHEN AI_ESC = 'Y' THEN 1 ELSE 0 END AS AI_ESC,
				AC_APL_HLD,
				AD_APL_HLD,
				AA_STF_APV,
				AA_ESM_RPD,
				AD_ESM_RPD_SR,
				AD_ESM_POF,
				AC_SYS_CLC_DFR,
				AA_ANL_INC,
				AA_MTH_CLC_RPD,
				AA_MTH_CMB_DET,
				AA_MTH_CMB_INC,
				AR_CMB_DET_INC_RTO,
				AA_TOT_SFD_BAL,
				AA_TOT_PLS_BAL,
				AA_TOT_SLS_BAL,
				AA_TOT_PRK_BAL,
				AA_TOT_HEA_BAL,
				AA_OTH_EDU_LON_BAL,
				AA_TOT_STU_LN_BAL,
				AA_ORG_FEE_PD,
				AA_GTR_FEE_PD,
				AC_REA_CPY_AP03,
				AF_APL_ID_CPY,
				CASE WHEN AI_EXT_CVN = 'Y' THEN 1 ELSE 0 END AS AI_EXT_CVN,
				AF_APL_ID_CPY_ORG,
				AN_SEQ_CVN,
				AN_SIG_ON_PNT,
				AF_RGL_CAT_LP06,
				AF_RGL_CAT_LP09,
				AF_RGL_CAT_LP10,
				AF_RGL_CAT_LP12,
				AF_RGL_CAT_LP20,
				AD_LON_1_DSB,
				AC_ORG_DPT,
				AR_LP_TB_ITR_MGN,
				AD_AMR_BEG,
				AR_SCL_SUB,
				AC_PNT_DEL,
				AD_PNT_SNT,
				AC_SCL_NTF_STA_CHG,
				CASE WHEN AI_DSB_REJ_ACK_FIL = 'Y' THEN 1 ELSE 0 END AS AI_DSB_REJ_ACK_FIL,
				AC_PIO_ORG_STA,
				AC_MN_TYP,
				AC_MN_SRL_LON,
				AI_MN_PSD_BS,
				AC_MN_CNF,
				AC_MN_BR_CNF,
				AD_MN_EXP,
				AI_MN_NOG,
				AI_MN_LN_OF_CRD,
				AC_MN_SRL_LON_ORG,
				AD_MN_BR_CNF_SNT,
				AD_MN_BR_CNF_RCV,
				AA_MN_BR_CNF,
				AC_MN_REV_REA,
				AF_MN_MST_NTE,
				AN_MN_MST_NTE_SEQ,
				CASE WHEN AI_MN_ORG_RGT_SLD = 'Y' THEN 1 ELSE 0 END AS AI_MN_ORG_RGT_SLD,
				AF_MN_RGT_SLD_TO,
				AF_CNL,
				AF_CNL_SFX,
				AX_CNL_GTR_USE,
				AC_CNL_GTR_STA,
				AD_CNL_GTR_STA,
				AF_CNL_GTR_TRT_DTS,
				AX_CNL_LDR_USE,
				AC_CNL_LDR_SER_STA,
				AD_CNL_LDR_SER_STA,
				AF_CNL_LDR_TRT_DTS,
				AX_CNL_SCL_USE,
				AA_CNL_ACL_RTD,
				AA_CNL_WDR_GR_RFD,
				AA_CNL_AVL_RNS,
				AC_CNL_MTD_FUD_RTD,
				AI_CNL_DSB_CNS,
				AC_CNL_PRC_TYP_APL,
				AC_CNL_RPT_STA,
				AC_CNL_SRV_TYP,
				AC_CNL_ITL_RSP,
				AC_FLW_TYP,
				AC_FLW_STA,
				AD_FLW_STA,
				AD_FLW_APV,
				AF_LST_USR_AP03,
				AF_LST_DTS_AP03,
				AD_LON_1_PAY_DU,
				CASE WHEN AI_STA_ORG_PRC_CHG = 'Y' THEN 1 ELSE 0 END AS AI_STA_ORG_PRC_CHG,
				CASE WHEN AI_PNT_PRT = 'Y' THEN 1 ELSE 0 END AS AI_PNT_PRT,
				AD_TO_SER_CMP,
				AI_LDR_RGT_SLD_CHG,
				AC_MN_MST_NTE_ASG,
				AC_CRD_WOR_RED,
				AI_FEE_MNL_CLC,
				AC_BR_ST_DSB_1,
				AC_SCL_ST_DSB_1,
				AC_FIL_TYP_REQ,
				AC_FIL_RCP,
				AC_PNT_YR,
				AC_STP_PUR,
				AI_PIO_APL_LDR,
				AI_SCL_ENT_CCL,
				AI_DEG_SKG,
				AA_BS_POI,
				AF_CUR_POR,
				AF_DTS_APL_ELG_CER,
				AD_DTR_APL_CER_CMP,
				AF_USR_CER_CLG,
				AC_EDU_LEV_TYP,
				AA_LST_CTR_OFR,
				AD_LST_CTR_OFR,
				AC_BR_CTR_OFR_RSP,
				AN_BR_PIO_ALT_DNL,
				AF_ALT_LON_APL,
				AC_ALT_APL_ELG_STA,
				AC_ALT_APL_ACT_STA,
				AF_APL_SLC_DIS,
				AI_TLX_APL,
				AF_PNT_VRS,
				AD_APL_EXP,
				AC_APL_EXP_EVT,
				AC_APL_RVW,
				AC_CNL_TRN_REA,
				AC_ALT_APL_FLW
			FROM
				OLWHRM1.AP03_MASTER_APL AP03
			WHERE
				AP03.AF_LST_DTS_AP03 >= &LAST_RUNPASS

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(AP03,);*/

/*********************************************
* LN80A
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE LN80A AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				LN80.*
			FROM
				OLWHRM1.LN80_LON_BIL_CRF LN80
			WHERE
				LN80.LD_LST_DTS_LN80 >= &LAST_RUNPASS
/*						and bf_ssn like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(LN80,);*/

/*********************************************
* PD20
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE PD20 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				PD20.*
			FROM
				OLWHRM1.PD20_PRS_DTH PD20
			WHERE
				PD20.PF_LST_DTS_PD20 >= &LAST_RUNPASS
/*						and df_prs_id like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(PD20,);*/

/*********************************************
* PD21
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE PD21 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				PD21.*
			FROM
				OLWHRM1.PD21_GTR_DTH PD21
			WHERE
				PD21.DF_LST_DTS_PD21 >= &LAST_RUNPASS
/*						and df_prs_id like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(PD21,);*/

/*********************************************
* PD22
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE PD22 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				PD22.*
			FROM
				OLWHRM1.PD22_PRS_DSA PD22
			WHERE
				PD22.DF_LST_DTS_PD22 >= &LAST_RUNPASS
/*						and df_prs_id like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(PD22,);*/

/*********************************************
* PD23
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE PD23 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				PD23.*
			FROM
				OLWHRM1.PD23_GTR_DSA PD23
			WHERE
				PD23.DF_LST_DTS_PD23 >= &LAST_RUNPASS
/*						and df_prs_id like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(PD23,);*/

/*********************************************
* PD24
**********************************************/
/*PROC SQL;*/
/*	CONNECT TO DB2 (DATABASE=&DB);*/
/*	CREATE TABLE PD24 AS*/
/*	SELECT */
/*		**/
/*	FROM */
/*		CONNECTION TO DB2 */
/*		(*/
/*			SELECT*/
/*				PD24.**/
/*			FROM*/
/*				OLWHRM1.PD24_PRS_BKR PD24*/
/*			WHERE*/
/*				PD24.DF_LST_DTS_PD24 >= &LAST_RUNPASS*/
/*/*						and df_prs_id like '%11'*/*/
/**/
/*			FOR READ ONLY WITH UR*/
/*		)*/
/*	;*/
/*	DISCONNECT FROM DB2;*/
/*QUIT;*/
/*%SSN2ACC(PD24,);*/
;
/*********************************************
* MR01
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE MR01 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				BF_SSN ,  
				LN_SEQ ,  
				LA_CUR_PRI ,  
				WA_ACR_BRI_RUN_DTE ,  
				WD_RUN ,  
				WN_DAY_DLQ_INT ,  
				WD_DCO_INT ,  
				WA_PSS_DU_INT ,  
				WA_CUR_INT_DU ,  
				WN_DAY_DLQ_ISL ,  
				WD_DCO_ISL ,  
				WA_PSS_DU_ISL ,  
				WA_CUR_DU_ISL ,  
				IC_LON_PGM ,  
				WX_LON_PGM ,  
				IF_BND_ISS ,  
				LD_LON_1_DSB ,  
				LD_LON_EFF_ADD ,  
				LF_STU_SSN ,  
				LD_STA_STU10 ,  
				LD_SCL_SPR ,  
				LD_DFR_BEG ,  
				LD_DFR_END ,  
				LD_DFR_GRC_END ,  
				LC_DFR_RSP ,  
				WX_DFR_RSP ,  
				LD_DFR_APL ,  
				LD_FOR_BEG ,  
				LD_FOR_END ,  
				LC_FOR_RSP ,  
				WX_FOR_RSP ,  
				LD_FOR_APL ,  
				WA_RPS_ISL_1 ,  
				WN_RPS_TRM_1 ,  
				WA_RPS_ISL_2 ,  
				WN_RPS_TRM_2 ,  
				WA_RPS_ISL_3 ,  
				WN_RPS_TRM_3 ,  
				WA_RPS_ISL_4 ,  
				WN_RPS_TRM_4 ,  
				WA_RPS_ISL_5 ,  
				WN_RPS_TRM_5 ,  
				WA_RPS_ISL_6 ,  
				WN_RPS_TRM_6 ,  
				WA_RPS_ISL_7 ,  
				WN_RPS_TRM_7 ,  
				LD_RPS_1_PAY_DU ,  
				WC_ITR_TYP_1 ,  
				WX_ITR_TYP_1 ,  
				WR_ITR_1 ,  
				WD_ITR_EFF_BEG_1 ,  
				WC_ITR_TYP_2 ,  
				WX_ITR_TYP_2 ,  
				WR_ITR_2 ,  
				WD_ITR_EFF_BEG_2 ,  
				DM_PRS_1 ,  
				DM_PRS_MID ,  
				DM_PRS_LST ,  
				DM_PRS_LST_SFX ,  
				CASE WHEN DI_PHN_VLD = 'Y' THEN 1 ELSE 0 END AS DI_PHN_VLD ,
				DN_DOM_PHN_ARA ,  
				IF_GTR ,  
				LF_LON_OWN_CUR ,  
				LF_DOE_SCL_ORG ,  
				LF_DOE_SCL_ENR_CUR ,  
				LF_GTR_RFR ,  
				LD_END_GRC_PRD ,  
				CASE WHEN LC_ELG_SIN = 'Y' THEN 1 ELSE 0 END AS LC_ELG_SIN ,
				WX_ELG_SIN ,  
				LF_CUR_POR ,  
				LF_OWN_ORG_POR ,  
				LC_LOC_PNT ,  
				WX_LOC_PNT ,  
				LD_OWN_EFF_SR ,  
				WC_ISL_DLQ_CAT ,  
				WX_ISL_DLQ_CAT ,  
				WC_INT_DLQ_CAT ,  
				WX_INT_DLQ_CAT ,  
				WA_ORG_PRI ,  
				WN_ATV_DSB ,  
				WN_ACL_DSB ,  
				WN_ANT_DSB ,  
				WC_LON_STA ,  
				WX_LON_STA ,  
				WC_LON_SUB_STA ,  
				WX_LON_SUB_STA ,  
				WC_LON_CLM_STA ,  
				WX_LON_CLM_STA ,  
				WC_BR_PRS_STA ,  
				WX_BR_PRS_STA ,  
				LC_DFR_TYP ,  
				WX_DFR_TYP ,  
				LC_FOR_TYP ,  
				WX_FOR_TYP ,  
				LC_FOR_SUB_TYP ,  
				WX_FOR_SUB_TYP ,  
				LC_TYP_SCH_DIS ,  
				WX_TYP_SCH_DIS ,  
				LD_NTF_SCL_SPR ,  
				LD_SPA_STP ,  
				LD_SPA_STP_ENT ,  
				LD_SPA_RTT ,  
				LD_SPA_RTT_ENT ,  
				WA_ACR_BRI_MTT ,  
				WA_CUR_LTE_FEE ,  
				WA_PRV_LTE_FEE ,  
				LC_ST_BR_RSD_APL ,  
				LC_STA_NEW_BR ,  
				WF_NON_PR_ACT_REQ ,  
				WD_FNL_DMD_BR ,  
				WD_FNL_DMD_EDS ,  
				LC_IND_BIL_SNT ,  
				LC_BIL_MTD ,  
				LD_DSB ,  
				WA_LST_DSB_WK ,  
				CASE WHEN WI_LON_FUL_DSB_WK = 'Y' THEN 1 ELSE 0 END AS WI_LON_FUL_DSB_WK
			FROM
				OLWHRM1.MR01_MGT_RPT_LON MR01
			WHERE
				MR01.WD_RUN >= &LAST_RUNPASS
/*						and bf_ssn like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(MR01,);*/

/*********************************************
* LN90A
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE LN90A AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				*
			FROM
				OLWHRM1.LN90_FIN_ATY LN90
			WHERE
				LN90.LF_LST_DTS_LN90 >= &LAST_RUNPASS
/*						and bf_ssn like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(LN90,);*/

/*********************************************
* GU10
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE GU10 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				IF_GTR ,
				IF_ACC_EFT_GTR ,
				IF_ABA_EFT_GTR ,
				IM_GTR_SHO ,
				IM_GTR_FUL ,
				CASE WHEN II_RPT_GTR_SCL = 'Y' THEN 1 ELSE 0 END AS II_RPT_GTR_SCL,
				CASE WHEN II_RPT_GTR_LDR = 'Y' THEN 1 ELSE 0 END AS II_RPT_GTR_LDR,
				CASE WHEN II_ASN_RFR_NUM = 'Y' THEN 1 ELSE 0 END AS II_ASN_RFR_NUM,
				IC_RPT_DSB_TYP ,
				II_GTR_NAT_PTC ,
				IF_LST_USR_GU10 ,
				IF_LST_DTS_GU10 ,
				IF_GTR_PRN ,
				IC_GTR_TYP ,
				II_GTR_PRE_DSB_M ,
				II_GTR_NOG_REQ ,
				II_GTR_CNL_PTC ,
				II_GTR_MNF_DSB_RSN ,
				IC_GTR_FEE_RPT_MTH ,
				II_RAL_SCY_OVR ,
				II_GTR_ALW_PSB_MPN ,
				II_GTR_CHS_PTC ,
				II_GTR_VER_FEE_RQR ,
				II_GTR_WHL_DOL_DSB 
			FROM
				OLWHRM1.GU10_GTR GU10
			WHERE
				GU10.IF_LST_DTS_GU10 >= &LAST_RUNPASS

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(GU10,);*/

/*********************************************
* RP30
**********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=&DB);
	CREATE TABLE RP30 AS
	SELECT 
		*
	FROM 
		CONNECTION TO DB2 
		(
			SELECT
				RP30.IF_OWN ,
				RP30.PN_EFT_RIR_OWN_SEQ ,
				RP30.IC_LON_PGM ,
				RP30.IF_GTR ,
				RP30.PD_LON_1_DSB ,
				RP30.PF_DOE_SCL_ORG ,
				RP30.PC_ST_BR_RSD_APL ,
				RP30.PD_EFT_RIR_EFF_BEG ,
				RP30.PD_EFT_RIR_EFF_END ,
				RP30.PC_EFT_RIR_STA ,
				RP30.PD_EFT_RIR_STA ,
				RP30.PI_EFT_RIR_PRC ,
				RP30.PC_EFT_NSF_LTR_REQ ,
				RP30.PR_EFT_RIR ,
				RP30.PF_LST_USR_RP30 ,
				RP30.PF_LST_DTS_RP30 ,
				RP30.PC_EFT_RIR_PNT_YR ,
				RP30.PD_EFT_BBS_LOT_BEG ,
				RP30.PD_EFT_BBS_GTE_DTE ,
				RP30.PD_EFT_BBS_RPD_SR ,
				RP30.PD_EFT_BBS_LCO_RCV ,
				RP30.PN_EFT_BBS_NSF_LMT ,
				RP30.PC_EFT_BBS_NSF_PRC ,
				RP30.PN_EFT_BBS_NSF_MTH ,
				RP30.PC_EFT_BBS_FED ,
				RP30.PI_EFT_RIR_RPY_0 
			FROM
				OLWHRM1.RP30_EFT_RIR_PAR RP30
			WHERE
				RP30.PF_LST_DTS_RP30 >= &LAST_RUNPASS
/*						and bf_ssn like '%11'*/

			FOR READ ONLY WITH UR
		)
	;
	DISCONNECT FROM DB2;
QUIT;
/*%SSN2ACC(RP30,);*/

/*uncomment to update data set in prod*/
/*DATA SAS_TAB.LASTRUN_JOBS;
SET SAS_TAB.LASTRUN_JOBS;
IF JOB = 'UTLWDW1' THEN LAST_RUN = TODAY();
RUN;*/

ENDRSUBMIT;

LIBNAME DUSTER 'T:\SAS\';

DATA _NULL_;
	call symput('endrsub',put(time(),time9.));
RUN;

DATA LN20; SET DUSTER.LN20; RUN; *2;
DATA BR03; SET DUSTER.BR03; RUN; *3;
DATA LN80; SET DUSTER.LN80; RUN; *4;
DATA LN90; SET DUSTER.LN90; RUN; *5;
DATA DF10; SET DUSTER.DF10; RUN; *6;
DATA FB10; SET DUSTER.FB10; RUN; *7;
DATA PD10; SET DUSTER.PD10; RUN; *8;
DATA K0PHN; SET DUSTER.K0PHN; RUN; *9;
DATA DRLFA; SET DUSTER.DRLFA; RUN; *10;
DATA LN10; SET DUSTER.LN10; RUN; *11;
DATA LN83; SET DUSTER.LN83; RUN; *12;
DATA LN09; SET DUSTER.LN09; RUN; *13;
DATA CALLFWD; SET DUSTER.CALLFWD; RUN; *14;
DATA LN54; SET DUSTER.LN54; RUN; *15;
DATA LN55; SET DUSTER.LN55; RUN; *16;
DATA LN65; SET DUSTER.LN65; RUN; *17;
DATA LN72; SET DUSTER.LN72; RUN; *18;
DATA SD10; SET DUSTER.SD10; RUN; *19;
DATA LN16; SET DUSTER.LN16; RUN; *20;
DATA BR02; SET DUSTER.BR02; RUN; *21;
DATA BR30; SET DUSTER.BR30; RUN; *22;
DATA PD32; SET DUSTER.PD32; RUN; *23;
DATA RM31; SET DUSTER.RM31; RUN; *24;
DATA PD30; SET DUSTER.PD30; RUN; *25;
DATA PD42; SET DUSTER.PD42; RUN; *26;
DATA K0ADD; SET DUSTER.K0ADD; RUN; *27;
DATA ARCHIST; SET DUSTER.ARCHIST; RUN; *28;
DATA DW01; SET DUSTER.DW01; RUN; *29;
DATA LN56; SET DUSTER.LN56; RUN; *30;
DATA CUR_DUE; SET DUSTER.CUR_DUE; RUN; *31;
DATA DL200; SET DUSTER.DL200; RUN; *32;
DATA ARC_M1411; SET DUSTER.ARC_M1411; RUN; *33;
DATA ARC_IND; SET DUSTER.ARC_IND; RUN; *34;
DATA LN15_DISB; SET DUSTER.LN15_DISB; RUN; *35; 
DATA AD20; SET DUSTER.AD20; RUN; *36;
DATA AP03; SET DUSTER.AP03; RUN; *37;
DATA LN80A; SET DUSTER.LN80A; RUN; *40;
DATA PD20; SET DUSTER.PD20;	RUN; *42;
DATA PD21; SET DUSTER.PD21; RUN; *43;
DATA PD22; SET DUSTER.PD22; RUN; *44;
DATA PD23; SET DUSTER.PD23; RUN; *45;
/*DATA PD24; SET DUSTER.PD24; RUN; *46;*/
DATA MR01; SET DUSTER.MR01; RUN; *48;
DATA LN90A; SET DUSTER.LN90A; RUN; *51;
DATA GU10; SET DUSTER.GU10; RUN; *53;
DATA RP30; SET DUSTER.RP30; RUN; *63;

DATA _NULL_;
	call symput('FILETRAN',put(time(),time9.));
RUN;
DATA _NULL_;
	SET LN20 end = eof;
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LC_STA_LON20 $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET BR03 end = eof;
	FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LST_CNC LST_ATT MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT DF_PRS_ID_RFR @;
		PUT BC_STA_BR03 @;
		PUT BI_ATH_3_PTY @;
		PUT BC_RFR_REL_BR @;
		PUT BM_RFR_1 @;
		PUT BM_RFR_LST @;
		PUT LST_CNC @;
		PUT LST_ATT $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN80 end = eof;
	FILE REPORT4 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_BIL_CRT LD_FAT_EFF LD_BIL_DU_LON MMDDYY10. ;
	FORMAT 	LA_BIL_CUR_DU LA_BIL_PAS_DU	LA_TOT_BIL_STS 9.2;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LD_BIL_CRT @;
		PUT LN_SEQ_BIL_WI_DTE @;
		PUT LD_FAT_EFF @;
		PUT LD_BIL_DU_LON @;
		PUT LC_STA_LON80 @;
		PUT LA_BIL_CUR_DU @;
		PUT LA_BIL_PAS_DU @;
		PUT LC_BIL_MTD @;
		PUT LC_IND_BIL_SNT @;
		PUT LC_STA_BIL10 @;
		PUT LA_TOT_BIL_STS $;
	END;
	if eof then put "-End-";
RUN; 

DATA _NULL_;
	SET LN90 end = eof;
	FILE REPORT5 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_FAT_PST LD_FAT_EFF MMDDYY10. ;
	FORMAT LA_FAT_CUR_PRI LA_FAT_LTE_FEE 10.2 ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LN_FAT_SEQ @;
		PUT LD_FAT_PST @;
		PUT LD_FAT_EFF @;
		PUT LC_STA_LON90 @;
		PUT LA_FAT_CUR_PRI @;
		PUT LA_FAT_LTE_FEE @;
		PUT PC_FAT_TYP @;
		PUT PC_FAT_SUB_TYP @;
		PUT LA_FAT_NSI @;
		PUT LC_FAT_REV_REA $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET DF10 end = eof;
	FILE REPORT6 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_DFR_INF_CER LD_DFR_BEG LD_DFR_END MMDDYY10. ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LF_DFR_CTL_NUM @;
		PUT LN_DFR_OCC_SEQ @;
		PUT LC_DFR_TYP @;
		PUT LD_DFR_INF_CER @;
		PUT LD_DFR_BEG @;
		PUT LD_DFR_END @;
		PUT LC_LON_LEV_DFR_CAP @;
		PUT LC_STA_LON50 @;
		PUT LC_DFR_STA @;
		PUT LC_STA_DFR10 $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET FB10 end = eof;
	FILE REPORT7 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_FOR_INF_CER LD_FOR_BEG LD_FOR_END MMDDYY10. LA_REQ_RDC_PAY 9.2;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LF_FOR_CTL_NUM @;
		PUT LN_FOR_OCC_SEQ @;
		PUT LC_FOR_TYP @;
		PUT LD_FOR_INF_CER @;
		PUT LD_FOR_BEG @;
		PUT LD_FOR_END @;
		PUT LC_LON_LEV_FOR_CAP @;
		PUT LC_STA_LON60 @;
		PUT LC_FOR_STA @;
		PUT LC_STA_FOR10 @;
		PUT LA_REQ_RDC_PAY $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET PD10 end = eof;
	FILE REPORT8 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DD_BRT MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT BF_SSN @;
		PUT DM_PRS_1 @;
		PUT DM_PRS_LST @;
		PUT DM_PRS_MID @;
		PUT DD_BRT $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET K0PHN end = eof;
	FILE REPORT9 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;	
		PUT DF_SPE_ACC_ID @;
		PUT LN_ATY_SEQ @;
		PUT LC_STA_ACTY10 @;
		PUT PHN1 @;
		PUT PHN2 @;
		PUT PHN3 @;
		PUT COMMENTS $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET DRLFA end = eof;
	FILE REPORT10 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT FEE_WAV_DOL @;
		PUT FEE_WAV_CT $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN10 end = eof;
	FILE REPORT11 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_END_GRC_PRD LD_LON_1_DSB  LD_PIF_RPT MMDDYY10. ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LC_STA_LON10 @;
		PUT LA_CUR_PRI @;
		PUT LA_LON_AMT_GTR @;
		PUT LD_END_GRC_PRD @;
		PUT IC_LON_PGM @;
		PUT LD_LON_1_DSB @;
		PUT LD_PIF_RPT @;
		PUT IF_GTR $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN83 end = eof;
	FILE REPORT12 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT BN_EFT_SEQ @;
		PUT LC_STA_LN83 $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN09 end = eof;
	FILE REPORT13 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_LON_RHB_PCV MMDDYY10. ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LD_LON_RHB_PCV $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET CALLFWD end = eof;
	FILE REPORT14 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT BF_SSN @;
		PUT CLUID @;
		PUT LN_SEQ @;
		PUT FORWARDING $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN54 end = eof;
	FILE REPORT15 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_BBS_DSQ MMDDYY10. ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LD_BBS_DSQ @;
		PUT LC_BBS_ELG $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN55 end = eof;
	FILE REPORT16 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LN_LON_BBT_PAY @;
		PUT PN_BBT_PAY_ICV $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN65 end = eof;
	FILE REPORT17 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_CRT_LON65 LD_SNT_RPD_DIS MMDDYY10. ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LD_CRT_LON65 @;	
		PUT LC_TYP_SCH_DIS @; 
		PUT LD_SNT_RPD_DIS @;
		PUT LA_RPS_ISL @;
		PUT DAY_DUE @;
		PUT LN_RPS_TRM $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN72 end = eof;
	FILE REPORT18 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LR_ITR @;
		PUT LR_INT_RDC_PGM_ORG $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET SD10 end = eof;
	FILE REPORT19 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_SCL_SPR MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LD_SCL_SPR @;
		PUT IM_SCL_FUL $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN16 end = eof;
	FILE REPORT20 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_DLQ_OCC LD_DLQ_MAX MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LD_DLQ_OCC @;
		PUT LN_DLQ_MAX @;
		PUT LD_DLQ_MAX $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET BR02 end = eof;
	FILE REPORT21 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT IM_IST_FUL @;
		PUT IX_GEN_STR_ADR_1 @;
		PUT IX_GEN_STR_ADR_2 @;
		PUT IM_GEN_CT @;
		PUT IC_GEN_ST @;
		PUT IF_GEN_ZIP @;
		PUT IN_GEN_PHN $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET BR30 end = eof;
	FILE REPORT22 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT BD_EFT_STA MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT BN_EFT_SEQ @;
		PUT BF_EFT_ABA @;
		PUT BF_EFT_ACC @;
		PUT BC_EFT_STA @;
		PUT BD_EFT_STA @;
		PUT BA_EFT_ADD_WDR @;
		PUT BN_EFT_NSF_CTR @;
		PUT BC_EFT_DNL_REA $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET PD32 end = eof;
	FILE REPORT23 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DD_VER_ADR_EML MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT DC_ADR_EML @;
		PUT DX_ADR_EML @;
		PUT DD_VER_ADR_EML @;
		PUT DI_VLD_ADR_EML $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET RM31 end = eof;
	FILE REPORT24 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LA_BR_RMT_PST 10.2 ;

	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LA_BR_RMT_PST $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET PD30 end = eof;
	FILE REPORT25 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DD_VER_ADR MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT DX_STR_ADR_1 @;
		PUT DX_STR_ADR_2 @;
		PUT DM_CT @;
		PUT DC_DOM_ST @;
		PUT DF_ZIP_CDE @;
		PUT DM_FGN_ST @;
		PUT DM_FGN_CNY @;
		PUT DD_VER_ADR @;
		PUT DI_VLD_ADR $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET PD42 end = eof;
	FILE REPORT26 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DD_PHN_VER MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT DC_PHN @;
		PUT DC_ALW_ADL_PHN @;
		PUT DD_PHN_VER @;
		PUT DI_PHN_VLD @;
		PUT DN_DOM_PHN_ARA @;
		PUT DN_DOM_PHN_XCH @;
		PUT DN_DOM_PHN_LCL @;
		PUT DN_PHN_XTN @;
		PUT DN_FGN_PHN_CNY @;
		PUT DN_FGN_PHN_CT @;
		PUT DN_FGN_PHN_LCL $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET K0ADD end = eof;
	FILE REPORT27 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_ATY_SEQ @;
		PUT LC_STA_ACTY10 @;
		PUT DX_STR_ADR_1 @;
		PUT DX_STR_ADR_2 @;
		PUT DM_CT @;
		PUT DC_DOM_ST @;
		PUT DF_ZIP_CDE @;
		PUT DM_FGN_CNY @;
		PUT COMMENTS $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET ARCHIST end = eof;
	FILE REPORT28 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_ATY_REQ_RCV LD_ATY_RSP MMDDYY10.;
	FORMAT LT_ATY_RSP TIME8.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_ATY_SEQ @;
		PUT LC_STA_ACTY10 @;
		PUT PF_REQ_ACT @;
		PUT PF_RSP_ACT @;
		PUT PX_ACT_DSC_REQ @;
		PUT LD_ATY_REQ_RCV @;
		PUT LD_ATY_RSP @;
		PUT LF_USR_REQ_ATY @;
		PUT LT_ATY_RSP @;
		PUT LX_ATY $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET DW01 end = eof;
	FILE REPORT29 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT WA_TOT_BRI_OTS 9.2 WD_LON_RPD_SR mmddyy10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT WC_DW_LON_STA @;
		PUT WA_TOT_BRI_OTS @;
		PUT WD_LON_RPD_SR @;
		PUT WX_OVR_DW_LON_STA $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET LN56 end = eof;
	FILE REPORT30 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT DT_ADJ LD_RPT_CRB MMDDYY10. ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_SEQ @;
		PUT LC_RPT_STA_CRB @;
		PUT LD_RPT_CRB @;
		PUT DT_ADJ $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET CUR_DUE end = eof;
	FILE REPORT31 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT cur_due past_due tot_due tot_due_fee 9.2 ;
	IF _N_ = 1 THEN put "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT cur_due @;
		PUT past_due @;
		PUT tot_due @;
		PUT tot_due_fee $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET DL200 end = eof;
	FILE REPORT32 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_ATY_REQ_RCV MMDDYY10.;
	IF _N_ = 1 THEN put "-Begin-";
	DO;	
		PUT DF_SPE_ACC_ID @;
		PUT LN_ATY_SEQ @;
		PUT LC_STA_ACTY10 @;
		PUT LD_ATY_REQ_RCV $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET ARC_M1411 end = eof;
	FILE REPORT33 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;	
		PUT DF_SPE_ACC_ID @;
		PUT LN_ATY_SEQ @;
		PUT LC_STA_ACTY10 @;
		PUT LX_ATY $;
	end;
	if eof then put "-End-";
RUN;

DATA _NULL_;
	SET ARC_IND end = eof;
	FILE REPORT34 DELIMITER=',' DSD DROPOVER LRECL=32767;
	IF _N_ = 1 THEN put "-Begin-";
	DO;	
		PUT DF_SPE_ACC_ID @;
		PUT LN_ATY_SEQ @;
		PUT PF_REQ_ACT @;
		PUT LC_STA_ACTY10 $;
	end;
	if eof then put "-End-";
RUN;
%PUT &rsub &ENDRSUB &FILETRAN ;

DATA _NULL_;
	SET LN15_DISB END = EOF;
	FILE REPORT35 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LD_DSB MMDDYY10.;
	FORMAT LA_DSB LA_DL_REBATE 9.2;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LN_BR_DSB_SEQ @;
		PUT LA_DSB @;
		PUT LD_DSB @;
		PUT LC_DSB_TYP @;
		PUT LC_STA_LON15 @;
		PUT LN_SEQ @;
		PUT LA_DL_REBATE $;
	END;
	IF EOF THEN PUT "-End-";
RUN;


DATA _NULL_;
	SET AD20 END = EOF;
	FILE REPORT36 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT DF_SPE_ACC_ID @;
		PUT LD_FAT_ADJ_REQ @;
		PUT LN_SEQ_FAT_ADJ_REQ @;
		PUT LC_TYP_FAT_ADJ_REQ @;
		PUT LC_STA_FAT_ADJ_REQ $;
	END;
	IF EOF THEN PUT "-End-";
RUN;


DATA _NULL_;
	SET AP03 END = EOF;
	FILE REPORT37 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT AF_APL_ID @;
		PUT BF_SSN @;
		PUT AN_SEQ @;
		PUT LF_STU_SSN @;
		PUT IC_LON_PGM @;
		PUT AD_CRT_APL @;
		PUT AC_STA_ORG_PRC @;
		PUT AD_STA_ORG_PRC @;
		PUT AC_APL_SCR_STA @;
		PUT AC_APL_PRC_TYP @;
		PUT AI_BR_DLQ_FED_DET @;
		PUT AI_BR_DET @;
		PUT AC_BR_INT_OPT @;
		PUT AC_BR_RPD_OPT @;
		PUT AI_BR_NED_ORG_FEE @;
		PUT AI_BR_ATH_DSB_EFT @;
		PUT AI_EDS_XST_ON_APL @;
		PUT AI_RFR_XST_ON_APL @;
		PUT AD_STU_LON_TRM_BEG @;
		PUT AD_STU_LON_TRM_END @;
		PUT AD_STU_GRD_XPC @;
		PUT AI_STU_FGN_CNY_STY @;
		PUT AC_STU_MAJ_STY @;
		PUT AX_STU_CNL_MAJ_STY @;
		PUT AC_STU_SCL_ENR_STA @;
		PUT AI_STU_DFR_REQ @;
		PUT AA_STU_REQ @;
		PUT AF_DOE_SCL @;
		PUT AF_CNL_NON_EDU_BRH @;
		PUT AD_SCL_LON_TRM_BEG @;
		PUT AD_SCL_LON_TRM_END @;
		PUT AD_SCL_ACA_TRM_BEG @;
		PUT AD_SCL_ACA_TRM_END @;
		PUT AD_SCL_GRD_XPC @;
		PUT AC_SCL_STA_STU_ENR @;
		PUT AC_SCL_ACA_GDE_LEV @;
		PUT AC_SCL_ACA_PGS @;
		PUT AA_SCL_EDU_CST @;
		PUT AA_SCL_EDU_AID_TOT @;
		PUT AA_SCL_EFC @;
		PUT AA_SCL_REQ @;
		PUT AI_SCL_CNF_MPN_OVR @;
		PUT AI_SCL_STU_PAS_DU @;
		PUT AN_SCL_AMT_CLC_MLT @;
		PUT AF_DOE_LDR @;
		PUT AF_LDR_NON_EDU_BRH @;
		PUT AF_LDR_APL_FIL @;
		PUT AA_LDR_APV @;
		PUT AC_LDR_PGM_YR @;
		PUT AI_LDR_CNF_MPN_OVR @;
		PUT AF_LDR_BND_ISS @;
		PUT AF_LDR_FEE_TIR @;
		PUT AI_LDR_NO_FEE_OVR @;
		PUT AF_LDR_ITR_TIR @;
		PUT AI_LDR_NO_ITR_OVR @;
		PUT AD_LDR_APL_REJ @;
		PUT AF_LDR_ORG @;
		PUT AI_LDR_MAT_SLL_LON @;
		PUT AF_LDR_LST_RST @;
		PUT IF_GTR @;
		PUT AF_GTR_RFR @;
		PUT AA_GTR_LON @;
		PUT AD_GTR_LON_REQ @;
		PUT AD_GTR_ORG @;
		PUT AR_GTR_INT @;
		PUT AC_GTR_ITR_TYP @;
		PUT AR_GTR_FEE @;
		PUT AI_GTR_TL4_PIO_787 @;
		PUT AI_GTR_DSB_LTE_AZ @;
		PUT AD_GTR_DSB_MAX_LTE @;
		PUT AA_GTR_RSC @;
		PUT AD_GTR_RSC @;
		PUT AC_GTR_DFR_REQ @;
		PUT AC_GTR_INT_BIL_OPT @;
		PUT AC_GTR_REA_RDC @;
		PUT AA_GTR_TOT_SFD_BAL @;
		PUT AA_GTR_TOT_PLS_BAL @;
		PUT AI_GTR_RSC @;
		PUT AC_SRC_APL @;
		PUT AC_VRS_ALT_APL @;
		PUT AC_SER_RUE @;
		PUT AD_PNT_SIG @;
		PUT AI_PNT_VER @;
		PUT AF_PNT_VER_BY @;
		PUT AD_PNT_VER @;
		PUT AI_ESC @;
		PUT AC_APL_HLD @;
		PUT AD_APL_HLD @;
		PUT AA_STF_APV @;
		PUT AA_ESM_RPD @;
		PUT AD_ESM_RPD_SR @;
		PUT AD_ESM_POF @;
		PUT AC_SYS_CLC_DFR @;
		PUT AA_ANL_INC @;
		PUT AA_MTH_CLC_RPD @;
		PUT AA_MTH_CMB_DET @;
		PUT AA_MTH_CMB_INC @;
		PUT AR_CMB_DET_INC_RTO @;
		PUT AA_TOT_SFD_BAL @;
		PUT AA_TOT_PLS_BAL @;
		PUT AA_TOT_SLS_BAL @;
		PUT AA_TOT_PRK_BAL @;
		PUT AA_TOT_HEA_BAL @;
		PUT AA_OTH_EDU_LON_BAL @;
		PUT AA_TOT_STU_LN_BAL @;
		PUT AA_ORG_FEE_PD @;
		PUT AA_GTR_FEE_PD @;
		PUT AC_REA_CPY_AP03 @;
		PUT AF_APL_ID_CPY @;
		PUT AI_EXT_CVN @;
		PUT AF_APL_ID_CPY_ORG @;
		PUT AN_SEQ_CVN @;
		PUT AN_SIG_ON_PNT @;
		PUT AF_RGL_CAT_LP06 @;
		PUT AF_RGL_CAT_LP09 @;
		PUT AF_RGL_CAT_LP10 @;
		PUT AF_RGL_CAT_LP12 @;
		PUT AF_RGL_CAT_LP20 @;
		PUT AD_LON_1_DSB @;
		PUT AC_ORG_DPT @;
		PUT AR_LP_TB_ITR_MGN @;
		PUT AD_AMR_BEG @;
		PUT AR_SCL_SUB @;
		PUT AC_PNT_DEL @;
		PUT AD_PNT_SNT @;
		PUT AC_SCL_NTF_STA_CHG @;
		PUT AI_DSB_REJ_ACK_FIL @;
		PUT AC_PIO_ORG_STA @;
		PUT AC_MN_TYP @;
		PUT AC_MN_SRL_LON @;
		PUT AI_MN_PSD_BS @;
		PUT AC_MN_CNF @;
		PUT AC_MN_BR_CNF @;
		PUT AD_MN_EXP @;
		PUT AI_MN_NOG @;
		PUT AI_MN_LN_OF_CRD @;
		PUT AC_MN_SRL_LON_ORG @;
		PUT AD_MN_BR_CNF_SNT @;
		PUT AD_MN_BR_CNF_RCV @;
		PUT AA_MN_BR_CNF @;
		PUT AC_MN_REV_REA @;
		PUT AF_MN_MST_NTE @;
		PUT AN_MN_MST_NTE_SEQ @;
		PUT AI_MN_ORG_RGT_SLD @;
		PUT AF_MN_RGT_SLD_TO @;
		PUT AF_CNL @;
		PUT AF_CNL_SFX @;
		PUT AX_CNL_GTR_USE @;
		PUT AC_CNL_GTR_STA @;
		PUT AD_CNL_GTR_STA @;
		PUT AF_CNL_GTR_TRT_DTS @;
		PUT AX_CNL_LDR_USE @;
		PUT AC_CNL_LDR_SER_STA @;
		PUT AD_CNL_LDR_SER_STA @;
		PUT AF_CNL_LDR_TRT_DTS @;
		PUT AX_CNL_SCL_USE @;
		PUT AA_CNL_ACL_RTD @;
		PUT AA_CNL_WDR_GR_RFD @;
		PUT AA_CNL_AVL_RNS @;
		PUT AC_CNL_MTD_FUD_RTD @;
		PUT AI_CNL_DSB_CNS @;
		PUT AC_CNL_PRC_TYP_APL @;
		PUT AC_CNL_RPT_STA @;
		PUT AC_CNL_SRV_TYP @;
		PUT AC_CNL_ITL_RSP @;
		PUT AC_FLW_TYP @;
		PUT AC_FLW_STA @;
		PUT AD_FLW_STA @;
		PUT AD_FLW_APV @;
		PUT AF_LST_USR_AP03 @;
		PUT AF_LST_DTS_AP03 @;
		PUT AD_LON_1_PAY_DU @;
		PUT AI_STA_ORG_PRC_CHG @;
		PUT AI_PNT_PRT @;
		PUT AD_TO_SER_CMP @;
		PUT AI_LDR_RGT_SLD_CHG @;
		PUT AC_MN_MST_NTE_ASG @;
		PUT AC_CRD_WOR_RED @;
		PUT AI_FEE_MNL_CLC @;
		PUT AC_BR_ST_DSB_1 @;
		PUT AC_SCL_ST_DSB_1 @;
		PUT AC_FIL_TYP_REQ @;
		PUT AC_FIL_RCP @;
		PUT AC_PNT_YR @;
		PUT AC_STP_PUR @;
		PUT AI_PIO_APL_LDR @;
		PUT AI_SCL_ENT_CCL @;
		PUT AI_DEG_SKG @;
		PUT AA_BS_POI @;
		PUT AF_CUR_POR @;
		PUT AF_DTS_APL_ELG_CER @;
		PUT AD_DTR_APL_CER_CMP @;
		PUT AF_USR_CER_CLG @;
		PUT AC_EDU_LEV_TYP @;
		PUT AA_LST_CTR_OFR @;
		PUT AD_LST_CTR_OFR @;
		PUT AC_BR_CTR_OFR_RSP @;
		PUT AN_BR_PIO_ALT_DNL @;
		PUT AF_ALT_LON_APL @;
		PUT AC_ALT_APL_ELG_STA @;
		PUT AC_ALT_APL_ACT_STA @;
		PUT AF_APL_SLC_DIS @;
		PUT AI_TLX_APL @;
		PUT AF_PNT_VRS @;
		PUT AD_APL_EXP @;
		PUT AC_APL_EXP_EVT @;
		PUT AC_APL_RVW @;
		PUT AC_CNL_TRN_REA @;
		PUT AC_ALT_APL_FLW $;
	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET LN80A END = EOF;
	FILE REPORT40 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT BF_SSN @ ;
		PUT LN_SEQ @ ;
		PUT LD_BIL_CRT @ ;
		PUT LN_SEQ_BIL_WI_DTE @ ;
		PUT LN_BIL_OCC_SEQ @ ;
		PUT LA_BIL_CUR_DU @ ;
		PUT LA_BIL_PAS_DU @ ;
		PUT LC_STA_LON80 @ ;
		PUT LA_NSI_BIL @ ;
		PUT LA_CUR_PRN_BIL @ ;
		PUT LC_LON_STA_BIL @ ;
		PUT LR_INT_BIL @ ;
		PUT LD_LST_DTS_LN80 @ ;
		PUT LI_PSB @ ;
		PUT LD_BIL_DU_LON @ ;
		PUT LC_BIL_TYP_LON @ ;
		PUT LI_FNL_BIL_LON @ ;
		PUT LD_STA_LON80 @ ;
		PUT LA_BIL_DU_PRT @ ;
		PUT LA_TOT_BIL_STS @ ;
		PUT LA_PCV_BIL_STS @ ;
		PUT LF_DFR_CTL_NUM @ ;
		PUT LF_FOR_CTL_NUM @ ;
		PUT LD_LTE_FEE_ASS @ ;
		PUT LA_LTE_FEE_ASS @ ;
		PUT LI_LTE_FEE_OVR @ ;
		PUT LC_LTE_FEE_WAV_REA @ ;
		PUT LD_BIL_STS_RIR_TOL @ ;
		PUT LI_BIL_DLQ_OVR_RIR @ ;
		PUT LF_USR_DLQ_OVR_RIR @ ;
		PUT LA_LTE_FEE_OTS_PRT @ ;
		PUT LD_LTE_FEE_WAV @ ;
		PUT LD_RP_RTE_2B_DTR @ ;
		PUT LC_RPY_OPT_AWD_BIL @ ;
		PUT LN_CU_SEQ @ ;
		PUT LC_RPD_RLF_ETR @ ;
		PUT LA_LTE_FEE_EST_BIL @ ;
		PUT LN_DAY_FEE_GRC_BIL @ ;
		PUT LA_INT_PD_2DT_BIL @ ;
		PUT LA_FEE_PD_2DT_BIL @ ;
		PUT LA_PRI_PD_2DT_BIL @ ;
		PUT LI_PSV_FGV_BIL_OVR @ ;
		PUT LA_PIO_BIL_PFH $ ;
	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET PD20 END = EOF;
	FILE REPORT42 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT DF_PRS_ID @ ;
		PUT DD_DTH_NTF @ ;
		PUT DD_DTH @ ;
		PUT DM_DTH_CT @ ;
		PUT DM_DTH_CTY @ ;
		PUT DC_DTH_ST @ ;
		PUT DF_SUR_PRS_ID @ ;
		PUT DM_DTH_FGN_CNY @ ;
		PUT PF_LST_DTS_PD20 @ ;
		PUT IF_IST $ ;
	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET PD21 END = EOF;
	FILE REPORT43 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT DF_PRS_ID @ ;
		PUT DD_DTH_NTF @ ;
		PUT IF_GTR @ ;
		PUT DD_DTH_VER @ ;
		PUT DC_DTH_STA @ ;
		PUT DC_DTH_CER @ ;
		PUT DF_LST_DTS_PD21 @ ;
		PUT DD_DTH_STA $ ;
	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET PD22 END = EOF;
	FILE REPORT44 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT DF_PRS_ID @ ;
		PUT DD_DSA_RPT @ ;
		PUT DD_DSA @ ;
		PUT DF_DR @ ;
		PUT DC_DSA_NEW_WRS @ ;
		PUT DF_LST_DTS_PD22 @ ;
		PUT DI_DSA_VET @ ;
		PUT DD_PRS_DSA_SPS_SR @ ;
		PUT DD_PRS_DSA_SPS_END @ ;
		PUT DF_CRT_USR_PD22 @ ;
		PUT DF_LST_USR_PD22 @ ;
		PUT DD_REC_LST_UPD @ ;
		PUT DX_PRS_DSA_TPD_REA $ ;
	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET PD23 END = EOF;
	FILE REPORT45 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT DF_PRS_ID @ ;
		PUT DD_DSA_RPT @ ;
		PUT IF_GTR @ ;
		PUT DD_DSA_VER @ ;
		PUT DD_SBM_CLM_REQ @ ;
		PUT DD_DSA_APV @ ;
		PUT DI_DSA_XTN_REQ @ ;
		PUT DI_DSA_APV @ ;
		PUT DC_DSA_STA @ ;
		PUT DF_LST_DTS_PD23 @ ;
		PUT DD_DSA_STA $ ;
	END;
	IF EOF THEN PUT "-End-";
RUN;

/*DATA _NULL_;*/
/*	SET PD24 END = EOF;*/
/*	FILE REPORT46 DELIMITER=',' DSD DROPOVER LRECL=32767;*/
/**/
/*	IF _N_ = 1 THEN PUT "-Begin-";*/
/*	DO;*/
/*		PUT DF_PRS_ID @ ;*/
/*		PUT DD_BKR_NTF @ ;*/
/*		PUT DD_BKR_FIL @ ;*/
/*		PUT DC_BKR_TYP @ ;*/
/*		PUT DF_ATT @ ;*/
/*		PUT DF_COU_DKT @ ;*/
/*		PUT DD_BKR_VER @ ;*/
/*		PUT DC_BKR_DCH_NDC @ ;*/
/*		PUT DM_BKR_CT @ ;*/
/*		PUT DC_BKR_ST @ ;*/
/*		PUT DD_BKR_COR_1_RCV @ ;*/
/*		PUT DA_BKR_DCH @ ;*/
/*		PUT DD_BKR_STA @ ;*/
/*		PUT DD_BKR_POO_ACK @ ;*/
/*		PUT DD_BKR_POO @ ;*/
/*		PUT DD_BKR_DCH_RCV @ ;*/
/*		PUT DD_BKR_CDR_RCV @ ;*/
/*		PUT DD_BKR_ADS_RCV @ ;*/
/*		PUT DN_BKR_ADS @ ;*/
/*		PUT DC_BKR_STA @ ;*/
/*		PUT DF_LST_DTS_PD24 @ ;*/
/*		PUT IF_IST @ ;*/
/*		PUT DM_FGN_CNY_BKR_FIL @ ;*/
/*		PUT DM_FGN_ST_BKR_FIL @ ;*/
/*		PUT DD_BKR_RAF @ ;*/
/*		PUT DD_COU_LST_CNC @ ;*/
/*		PUT DD_BKR_CAE_CLO @ ;*/
/*		PUT DD_BKR_CHP_CVN @ ;*/
/*		PUT DD_BKR_COR_LST_RCV $ ;*/
/*	END;*/
/*	IF EOF THEN PUT "-End-";*/
/*RUN;*/

DATA _NULL_;
	SET MR01 END = EOF;
	FILE REPORT48 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT BF_SSN @ ;
		PUT LN_SEQ @ ;
		PUT LA_CUR_PRI @ ;
		PUT WA_ACR_BRI_RUN_DTE @ ;
		PUT WD_RUN @ ;
		PUT WN_DAY_DLQ_INT @ ;
		PUT WD_DCO_INT @ ;
		PUT WA_PSS_DU_INT @ ;
		PUT WA_CUR_INT_DU @ ;
		PUT WN_DAY_DLQ_ISL @ ;
		PUT WD_DCO_ISL @ ;
		PUT WA_PSS_DU_ISL @ ;
		PUT WA_CUR_DU_ISL @ ;
		PUT IC_LON_PGM @ ;
		PUT WX_LON_PGM @ ;
		PUT IF_BND_ISS @ ;
		PUT LD_LON_1_DSB @ ;
		PUT LD_LON_EFF_ADD @ ;
		PUT LF_STU_SSN @ ;
		PUT LD_STA_STU10 @ ;
		PUT LD_SCL_SPR @ ;
		PUT LD_DFR_BEG @ ;
		PUT LD_DFR_END @ ;
		PUT LD_DFR_GRC_END @ ;
		PUT LC_DFR_RSP @ ;
		PUT WX_DFR_RSP @ ;
		PUT LD_DFR_APL @ ;
		PUT LD_FOR_BEG @ ;
		PUT LD_FOR_END @ ;
		PUT LC_FOR_RSP @ ;
		PUT WX_FOR_RSP @ ;
		PUT LD_FOR_APL @ ;
		PUT WA_RPS_ISL_1 @ ;
		PUT WN_RPS_TRM_1 @ ;
		PUT WA_RPS_ISL_2 @ ;
		PUT WN_RPS_TRM_2 @ ;
		PUT WA_RPS_ISL_3 @ ;
		PUT WN_RPS_TRM_3 @ ;
		PUT WA_RPS_ISL_4 @ ;
		PUT WN_RPS_TRM_4 @ ;
		PUT WA_RPS_ISL_5 @ ;
		PUT WN_RPS_TRM_5 @ ;
		PUT WA_RPS_ISL_6 @ ;
		PUT WN_RPS_TRM_6 @ ;
		PUT WA_RPS_ISL_7 @ ;
		PUT WN_RPS_TRM_7 @ ;
		PUT LD_RPS_1_PAY_DU @ ;
		PUT WC_ITR_TYP_1 @ ;
		PUT WX_ITR_TYP_1 @ ;
		PUT WR_ITR_1 @ ;
		PUT WD_ITR_EFF_BEG_1 @ ;
		PUT WC_ITR_TYP_2 @ ;
		PUT WX_ITR_TYP_2 @ ;
		PUT WR_ITR_2 @ ;
		PUT WD_ITR_EFF_BEG_2 @ ;
		PUT DM_PRS_1 @ ;
		PUT DM_PRS_MID @ ;
		PUT DM_PRS_LST @ ;
		PUT DM_PRS_LST_SFX @ ;
		PUT DI_PHN_VLD @ ;
		PUT DN_DOM_PHN_ARA @ ;
		PUT IF_GTR @ ;
		PUT LF_LON_OWN_CUR @ ;
		PUT LF_DOE_SCL_ORG @ ;
		PUT LF_DOE_SCL_ENR_CUR @ ;
		PUT LF_GTR_RFR @ ;
		PUT LD_END_GRC_PRD @ ;
		PUT LC_ELG_SIN @ ;
		PUT WX_ELG_SIN @ ;
		PUT LF_CUR_POR @ ;
		PUT LF_OWN_ORG_POR @ ;
		PUT LC_LOC_PNT @ ;
		PUT WX_LOC_PNT @ ;
		PUT LD_OWN_EFF_SR @ ;
		PUT WC_ISL_DLQ_CAT @ ;
		PUT WX_ISL_DLQ_CAT @ ;
		PUT WC_INT_DLQ_CAT @ ;
		PUT WX_INT_DLQ_CAT @ ;
		PUT WA_ORG_PRI @ ;
		PUT WN_ATV_DSB @ ;
		PUT WN_ACL_DSB @ ;
		PUT WN_ANT_DSB @ ;
		PUT WC_LON_STA @ ;
		PUT WX_LON_STA @ ;
		PUT WC_LON_SUB_STA @ ;
		PUT WX_LON_SUB_STA @ ;
		PUT WC_LON_CLM_STA @ ;
		PUT WX_LON_CLM_STA @ ;
		PUT WC_BR_PRS_STA @ ;
		PUT WX_BR_PRS_STA @ ;
		PUT LC_DFR_TYP @ ;
		PUT WX_DFR_TYP @ ;
		PUT LC_FOR_TYP @ ;
		PUT WX_FOR_TYP @ ;
		PUT LC_FOR_SUB_TYP @ ;
		PUT WX_FOR_SUB_TYP @ ;
		PUT LC_TYP_SCH_DIS @ ;
		PUT WX_TYP_SCH_DIS @ ;
		PUT LD_NTF_SCL_SPR @ ;
		PUT LD_SPA_STP @ ;
		PUT LD_SPA_STP_ENT @ ;
		PUT LD_SPA_RTT @ ;
		PUT LD_SPA_RTT_ENT @ ;
		PUT WA_ACR_BRI_MTT @ ;
		PUT WA_CUR_LTE_FEE @ ;
		PUT WA_PRV_LTE_FEE @ ;
		PUT LC_ST_BR_RSD_APL @ ;
		PUT LC_STA_NEW_BR @ ;
		PUT WF_NON_PR_ACT_REQ @ ;
		PUT WD_FNL_DMD_BR @ ;
		PUT WD_FNL_DMD_EDS @ ;
		PUT LC_IND_BIL_SNT @ ;
		PUT LC_BIL_MTD @ ;
		PUT LD_DSB @ ;
		PUT WA_LST_DSB_WK @ ;
		PUT WI_LON_FUL_DSB_WK $ ;
	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET LN90A END = EOF;
	FILE REPORT51 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT BF_SSN @ ;
		PUT LN_SEQ @ ;
		PUT LN_FAT_SEQ @ ;
		PUT LC_FAT_REV_REA @ ;
		PUT LD_FAT_APL @ ;
		PUT LD_FAT_PST @ ;
		PUT LD_FAT_EFF @ ;
		PUT LD_FAT_DPS @ ;
		PUT LC_CSH_ADV @ ;
		PUT LD_STA_LON90 @ ;
		PUT LC_STA_LON90 @ ;
		PUT LA_FAT_PCL_FEE @ ;
		PUT LA_FAT_NSI @ ;
		PUT LA_FAT_LTE_FEE @ ;
		PUT LA_FAT_ILG_PRI @ ;
		PUT LA_FAT_CUR_PRI @ ;
		PUT LF_LST_DTS_LN90 @ ;
		PUT PC_FAT_TYP @ ;
		PUT PC_FAT_SUB_TYP @ ;
		PUT LA_FAT_NSI_ACR @ ;
		PUT LI_FAT_RAP @ ;
		PUT LN_FAT_SEQ_REV @ ;
		PUT LI_EFT_NSF_OVR @ ;
		PUT LF_USR_EFT_NSF_OVR @ ;
		PUT LA_FAT_MSC_FEE @ ;
		PUT LA_FAT_MSC_FEE_PCV @ ;
		PUT LA_FAT_DL_REB $ ;
	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET GU10 END = EOF;
	FILE REPORT53 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT IF_GTR @ ;
		PUT IF_ACC_EFT_GTR @ ;
		PUT IF_ABA_EFT_GTR @ ;
		PUT IM_GTR_SHO @ ;
		PUT IM_GTR_FUL @ ;
		PUT II_RPT_GTR_SCL @ ;
		PUT II_RPT_GTR_LDR @ ;
		PUT II_ASN_RFR_NUM @ ;
		PUT IC_RPT_DSB_TYP @ ;
		PUT II_GTR_NAT_PTC @ ;
		PUT IF_LST_USR_GU10 @ ;
		PUT IF_LST_DTS_GU10 @ ;
		PUT IF_GTR_PRN @ ;
		PUT IC_GTR_TYP @ ;
		PUT II_GTR_PRE_DSB_M @ ;
		PUT II_GTR_NOG_REQ @ ;
		PUT II_GTR_CNL_PTC @ ;
		PUT II_GTR_MNF_DSB_RSN @ ;
		PUT IC_GTR_FEE_RPT_MTH @ ;
		PUT II_RAL_SCY_OVR @ ;
		PUT II_GTR_ALW_PSB_MPN @ ;
		PUT II_GTR_CHS_PTC @ ;
		PUT II_GTR_VER_FEE_RQR @ ;
		PUT II_GTR_WHL_DOL_DSB $ ;

	END;
	IF EOF THEN PUT "-End-";
RUN;

DATA _NULL_;
	SET RP30 END = EOF;
	FILE REPORT63 DELIMITER=',' DSD DROPOVER LRECL=32767;

	IF _N_ = 1 THEN PUT "-Begin-";
	DO;
		PUT IF_OWN @;
		PUT PN_EFT_RIR_OWN_SEQ @;
		PUT IC_LON_PGM @;
		PUT IF_GTR @;
		PUT PD_LON_1_DSB @;
		PUT PF_DOE_SCL_ORG @;
		PUT PC_ST_BR_RSD_APL @;
		PUT PD_EFT_RIR_EFF_BEG @;
		PUT PD_EFT_RIR_EFF_END @;
		PUT PC_EFT_RIR_STA @;
		PUT PD_EFT_RIR_STA @;
		PUT PI_EFT_RIR_PRC @;
		PUT PC_EFT_NSF_LTR_REQ @;
		PUT PR_EFT_RIR @;
		PUT PF_LST_USR_RP30 @;
		PUT PF_LST_DTS_RP30 @;
		PUT PC_EFT_RIR_PNT_YR @;
		PUT PD_EFT_BBS_LOT_BEG @;
		PUT PD_EFT_BBS_GTE_DTE @;
		PUT PD_EFT_BBS_RPD_SR @;
		PUT PD_EFT_BBS_LCO_RCV @;
		PUT PN_EFT_BBS_NSF_LMT @;
		PUT PC_EFT_BBS_NSF_PRC @;
		PUT PN_EFT_BBS_NSF_MTH @;
		PUT PC_EFT_BBS_FED @;
		PUT PI_EFT_RIR_RPY_0 $;
	END;
	IF EOF THEN PUT "-End-";
RUN;
