%LET RPTLIB = T:\SAS;
FILENAME REPORT4 "&RPTLIB/ULWDW1.LWDW1R4.&sysdate";

LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;

DATA DUSTER.NOPD30 (DROP=DF_SPE_ACC_ID); SET NOPD30; RUN;

RSUBMIT;  
LIBNAME OLWHRM1 DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
LIBNAME SESSION DB2 DATABASE=DLGSUTWH SCHEMA=SESSION CONNECTION=GLOBAL;

/*******************************************
* BORROWER DATA
********************************************/
PROC SQL;
	CREATE TABLE SSN2ACC AS
		SELECT DISTINCT 
			A.DF_SPE_ACC_ID
			,B.BF_SSN
		FROM 
			NOPD30 NO
			JOIN OLWHRM1.PD10_PRS_NME A
				ON NO.ACC_ID = A.DF_SPE_ACC_ID
			JOIN OLWHRM1.LN10_LON B
				ON A.DF_PRS_ID = B.BF_SSN
		ORDER BY 
			BF_SSN
	;
QUIT;
/*PROC SORT DATA=SSN2ACC; BY BF_SSN; RUN;*/
endrsubmit;

rsubmit;

/*******************************************
* MOVE PRIMER DATA SET TO DB2
********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=DLGSUTWH CONNECTION=GLOBAL);
	EXECUTE ( DECLARE GLOBAL TEMPORARY TABLE SESSION.NOPD30_LOANS
	          ( ACC_ID  CHAR(10)
	          )
			  ON COMMIT PRESERVE ROWS
	        ) BY DB2;
	INSERT INTO SESSION.NOPD30_LOANS
	SELECT * 
	FROM NOPD30; /* THIS IS WHAT LOADS THE RECORDS FROM NOPD30 INTO THE GLOBAL TEMP TABLE */
	;
	DISCONNECT FROM DB2;
QUIT;
endrsubmit;

rsubmit;
/*******************************************
* BILLING DATA
********************************************/
PROC SQL;
	CONNECT TO DB2 (DATABASE=DLGSUTWH CONNECTION=GLOBAL);
	CREATE TABLE LN80 AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT B.BF_SSN
			,B.LN_SEQ
			,B.LD_BIL_CRT
			,B.LN_SEQ_BIL_WI_DTE
			,B.LN_BIL_OCC_SEQ
			,B.LD_BIL_DU_LON
			,B.LC_STA_LON80
			,COALESCE(b.la_bil_cur_du,0) AS LA_BIL_CUR_DU
			,COALESCE(b.la_bil_pas_du,0) AS la_bil_pas_du
			,COALESCE(b.la_tot_bil_sts,0) AS la_tot_bil_sts
			,LC_BIL_MTD
			,LC_IND_BIL_SNT
			,LC_STA_BIL10
			,E.LN_FAT_SEQ
			,E.LD_FAT_EFF
		FROM 
			SESSION.NOPD30_LOANS NOPD30
			JOIN OLWHRM1.PD10_PRS_NME PD10
				ON NOPD30.ACC_ID = PD10.DF_SPE_ACC_ID
			JOIN OLWHRM1.LN10_LON LN10
				ON PD10.DF_PRS_ID = LN10.BF_SSN
			JOIN OLWHRM1.BL10_BR_BIL C
				ON PD10.DF_PRS_ID = C.BF_SSN
			INNER JOIN OLWHRM1.LN80_LON_BIL_CRF B
				ON B.BF_SSN = C.BF_SSN
				AND B.LD_BIL_CRT = C.LD_BIL_CRT
				AND B.LN_SEQ_BIL_WI_DTE = C.LN_SEQ_BIL_WI_DTE
			LEFT OUTER JOIN OLWHRM1.LN75_BIL_LON_FAT D
				ON D.BF_SSN = B.BF_SSN
				AND D.LN_SEQ = B.LN_SEQ
				AND D.LD_BIL_CRT = B.LD_BIL_CRT
				AND D.LN_SEQ_BIL_WI_DTE = B.LN_SEQ_BIL_WI_DTE
				AND D.LN_BIL_OCC_SEQ = B.LN_BIL_OCC_SEQ
				AND B.LA_BIL_CUR_DU = B.LA_TOT_BIL_STS
			LEFT OUTER JOIN OLWHRM1.LN90_FIN_ATY E
				ON D.BF_SSN = E.BF_SSN
				AND D.LN_SEQ = E.LN_SEQ
				AND D.LN_FAT_SEQ = E.LN_FAT_SEQ
			WHERE 
				B.LC_BIL_TYP_LON = 'P' 
			ORDER BY
				B.bf_ssn, B.ln_seq, B.LD_BIL_CRT, B.LN_SEQ_BIL_WI_DTE, B.LN_BIL_OCC_SEQ, D.LN_FAT_SEQ
		)
	;
	DISCONNECT FROM DB2;
QUIT; 
endrsubmit;

rsubmit;
/*proc sort data=ln80; by bf_ssn ln_seq LD_BIL_CRT LN_SEQ_BIL_WI_DTE LN_BIL_OCC_SEQ LN_FAT_SEQ; run;*/
data ln80(drop=LN_BIL_OCC_SEQ LN_FAT_SEQ); 
set ln80;
by bf_ssn ln_seq LD_BIL_CRT LN_SEQ_BIL_WI_DTE ;
if last.ln_seq_bil_wi_dte;
run;

/*THE TABLES ARE GOING TO HAVE THE ACCOUNT NUMBER RATHER THAN SSN AS A PRIMARY KEY*/
/*THE ACCOUNT NUMBER IS BEING TAKEN FROM THE PD10 TABLE WHILE SSN IS DROPPED*/
%MACRO SSN2ACC(TBL,ADKEY);
PROC SORT DATA=&TBL; BY BF_SSN &ADKEY; RUN;
DATA &TBL(DROP=BF_SSN);
MERGE SSN2ACC(IN=B) &TBL(IN=A);
BY BF_SSN;
IF A AND B;
RUN;
PROC SORT DATA=&TBL; BY DF_SPE_ACC_ID &ADKEY; RUN;
%MEND;
%SSN2ACC(LN80,LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE);
endrsubmit;

DATA LN80; SET DUSTER.LN80; RUN; *4;

DATA _NULL_;
SET LN80 end = eof;
FILE REPORT4 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_BIL_CRT LD_FAT_EFF LD_BIL_DU_LON MMDDYY10. ;
FORMAT 	LA_BIL_CUR_DU LA_BIL_PAS_DU	LA_TOT_BIL_STS 9.2;
IF _N_ = 1 THEN put "-Begin-";
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LD_BIL_CRT @;
	PUT LN_SEQ_BIL_WI_DTE @;
	PUT LD_FAT_EFF @;
	PUT LD_BIL_DU_LON @;
	PUT LC_STA_LON80 @;
	PUT LA_BIL_CUR_DU @;
	PUT LA_BIL_PAS_DU @;
	PUT LC_BIL_MTD @;
	PUT LC_IND_BIL_SNT @;
	PUT LC_STA_BIL10 @;
	PUT LA_TOT_BIL_STS $;
END;
if eof then put "-End-";
RUN;
