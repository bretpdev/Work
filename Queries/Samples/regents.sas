LIBNAME REGENTS ODBC REQUIRED="FILEDSN=X:\PADR\ODBC\REGENTS.dsn;" ;
/*LIBNAME REGENTS ODBC REQUIRED="FILEDSN=X:\PADR\ODBC\TESTREGENTS.dsn;" ;*/
%LET INLIB = T:\REGENTS;
FILENAME GPA08 "&INLIB\GPA.08.*";
FILENAME GPA09 "&INLIB\GPA.09.*";
/*FILENAME manual "&INLIB\manual.*";*/
FILENAME GPA10 "&INLIB\GPA10.*";
filename fix "&inlib\fix.csv";

DATA fix ;
INFILE fix DSD DLM = ',' FIRSTOBS=2 MISSOVER;
INPUT RS_ACC :$16. SEQ_NO :1. BATCH_DT :MMDDYY10.; 
batch_dt = dhms(batch_dt,0,0,0);
run;
DATA new8 ;
INFILE GPA08 DSD DLM = ',' FIRSTOBS=2 MISSOVER;
INPUT RS_ACC :$16. SSN :$11. DEF_LOA :$45. LNAME :$35. FNAME :$25.
IST_NAME :$35. YR :$4. TERM :$12. HRS_ENR :BEST8. HRS_CMPL :BEST8. GPA :BEST8. HRS_REM :BEST8.
BASE_AWD_AMT :DOLLAR12. UESP_AWD_AMT :DOLLAR12.2 EXEMPLARY_AWD_AMT :DOLLAR12.2 
TOT_PAY_AMT :DOLLAR12. BATCH_DT :MMDDYY10. CHK_DT :MMDDYY10. CHK_NUM :$5.;
IF SUBSTR(RS_ACC,1,1) = '0' THEN DO;
	STATESTUDENTID = TRIM(LEFT(PUT(INPUT(RS_ACC,16.0),16.)));
	RS_ACC = STATESTUDENTID;
END;
YEAR = 2008;
RUN;
DATA new9 ;
INFILE GPA09 DSD DLM = ',' FIRSTOBS=2 MISSOVER;
INPUT RS_ACC :$16. SSN :$11. DEF_LOA :$45. LNAME :$35. FNAME :$25.
IST_NAME :$35. YR :$4. TERM :$12. HRS_ENR :BEST8. HRS_CMPL :BEST8. GPA :BEST8. HRS_REM :BEST8.
BASE_AWD_AMT :DOLLAR12. UESP_AWD_AMT :DOLLAR12. EXEMPLARY_AWD_AMT :DOLLAR12. 
TOT_PAY_AMT :DOLLAR12. BATCH_DT :MMDDYY10. CHK_DT :MMDDYY10. CHK_NUM :$5.;
IF SUBSTR(RS_ACC,1,1) = '0' THEN DO;
	STATESTUDENTID = TRIM(LEFT(PUT(INPUT(RS_ACC,16.0),16.)));
	RS_ACC = STATESTUDENTID;
END;
YEAR = 2009;
RUN;
DATA new10 ;
INFILE GPA10 DSD DLM = ',' FIRSTOBS=2 MISSOVER;
INPUT RS_ACC :$16. SSN :$11. DEF_LOA :$45. LNAME :$35. FNAME :$25.
ADDRESS1 :$35. ADDRESS2 :$35. CITY :$25. STATE :$2. ZIP :$9.
IST_NAME :$35. YR :$4. TERM :$12. HRS_ENR :BEST8. HRS_CMPL :BEST8. GPA :5.3 HRS_REM :BEST8.
BASE_AWD_AMT :DOLLAR12. UESP_AWD_AMT :DOLLAR12. EXEMPLARY_AWD_AMT :DOLLAR12. 
TOT_PAY_AMT :DOLLAR12. BATCH_DT :MMDDYY10. CHK_DT :MMDDYY10. CHK_NUM :$5.;
RS_ACC = trim(left(rs_acc));
YEAR=2010;
RUN;
DATA NEW;
SET NEW8 NEW9 NEW10;
RUN;

PROC SORT DATA=new ;
BY RS_ACC BATCH_DT;
RUN;
DATA NEW(DROP=BASE_AWD_AMT UESP_AWD_AMT EXEMPLARY_AWD_AMT TOT_PAY_AMT);
SET NEW;
BY RS_ACC;
RETAIN SEQ_NO;
IF FIRST.RS_ACC THEN SEQ_NO = 1;
GRD_REC = .;
GPA_OVR = 0;
BCH_NUM = '';
DEN_REA = '';
if GPA = . then gpa = 0.0;
STATUS = 'APPROVED';
CREDITOVERRIDE = 0;
HRS = COALESCE(HRS_ENR,0);
SEMESTEROVERRIDE = 0;
TERMYEAR = INPUT(YR,4.0);
IF IST_NAME = 'Brigham Young Univeristy' THEN IST_NAME = 'Brigham Young University';
ELSE IF IST_NAME IN ('Dixie State College of Utah','Dixie State University')
			THEN IST_NAME = 'Dixie State College';
ELSE IF IST_NAME = 'Souther Utah University' THEN IST_NAME ='Southern Utah University';
ELSE IF IST_NAME = 'Univeristy of Utah' THEN IST_NAME = 'University of Utah';
ELSE IF IST_NAME = 'Westminster' THEN IST_NAME = 'Westminster College';
IF BATCH_DT = . THEN BATCH_DT = TODAY();
batch_dt = dhms(batch_dt,0,0,0);
IF HRS_CMPL > 0 THEN DO;
	IF HRS_CMPL NE HRS_ENR THEN DO;
		CREDITOVERRIDE = 1;
		HRS = HRS_CMPL;
	END;
END;
IF HRS = . THEN DELETE;
IF EXEMPLARY_AWD_AMT > 0 THEN DO;
	PAY_TYPE = 'Exemplary';
	AMOUNT = EXEMPLARY_AWD_AMT;
	OUTPUT;
	SEQ_NO + 1;
END;
IF BASE_AWD_AMT > 0 THEN DO;
	PAY_TYPE = 'Base';
	AMOUNT = BASE_AWD_AMT;
	OUTPUT;
	SEQ_NO + 1;
END;
IF UESP_AWD_AMT > 0 THEN DO;
	PAY_TYPE = 'UESP';
	AMOUNT = UESP_AWD_AMT;
	OUTPUT;
	SEQ_NO + 1;
END;
RUN;
proc sql; 
create table repair as
SELECT a.RS_ACC AS STATESTUDENTID
	,a.SEQ_NO	AS SEQUENCENO
	,IST_NAME AS COLLEGE
	,TERM
	,TERMYEAR
	,HRS AS CREDITSENROLLED
	,GPA 
	,PAY_TYPE AS PAYMENTTYPE
	,AMOUNT
	,STATUS 
	,coalesce(b.BATCH_DT,a.batch_dt)	AS STATUSDATE
	,coalesce(b.BATCH_DT,a.batch_dt) AS SCHEDULERECEIVEDDATE
	,GRD_REC AS GRADESRECEIVEDDATE
	,CREDITOVERRIDE	
	,GPA_OVR AS GPAOVERRIDE
	,SEMESTEROVERRIDE
	,DEN_REA AS DENIALREASONS
	,BCH_NUM AS BATCHNUMBER
FROM WORK.NEW 
left outer join work.fix b
	on a.rs_acc = b.rs_acc
	and a.seq_no = b.seq_no;
quit;

PROC SQL;
CREATE TABLE DEFRAG AS
SELECT DISTINCT RS_ACC
FROM NEW A
WHERE RS_ACC not IN (SELECT STATESTUDENTID
				FROM REGENTS.student B
/*				WHERE A.SEQ_NO = B.SEQUENCENO*/
				);
QUIT;

/*PROC SQL;*/
/*INSERT INTO REGENTS.PAYMENT*/
/*SELECT RS_ACC AS STATESTUDENTID*/
/*	,SEQ_NO	AS SEQUENCENO*/
/*	,IST_NAME AS COLLEGE*/
/*	,TERM*/
/*	,TERMYEAR*/
/*	,HRS AS CREDITSENROLLED*/
/*	,GPA */
/*	,PAY_TYPE AS PAYMENTTYPE*/
/*	,AMOUNT*/
/*	,STATUS */
/*	,BATCH_DT	AS STATUSDATE*/
/*	,BATCH_DT AS SCHEDULERECEIVEDDATE*/
/*	,GRD_REC AS GRADESRECEIVEDDATE*/
/*	,CREDITOVERRIDE	*/
/*	,GPA_OVR AS GPAOVERRIDE*/
/*	,SEMESTEROVERRIDE*/
/*	,DEN_REA AS DENIALREASONS*/
/*	,BCH_NUM AS BATCHNUMBER*/
/*FROM WORK.NEW ;*/
/*QUIT;*/
/*PROC SQL;*/
/*update REGENTS.PAYMENT*/
/*set status = propcase(status);*/
/*QUIT;*/

PROC SORT DATA=NEW OUT=DETAIL;
BY YEAR IST_NAME;
RUN;

proc sql;
create table report as
select distinct rS_acc
	,lname
	,fname
FROM NEW
where year = 2009
;
QUIT;
PROC SORT DATA=REPORT; BY RS_ACC; RUN;
DATA FEJI; SET REPORT; BY RS_ACC; IF FIRST.RS_ACC = 0 OR LAST.RS_ACC = 0; RUN;

PROC PRINTTO PRINT='T:\REGENTS\SUMMARY.TXT' NEW;
RUN;
TITLE 'SUMMARY OF REGENTS DISBURSEMENTS';
TITLE2 'THE YEAR IS DETERMINED BY WHICH EXCEL FILE';
TITLE3 'THE SCHOOL IS DETERMINED BY THE FIELD - NOT BY THE TAB';
PROC PRINT DATA=DETAIL;
BY YEAR IST_NAME;
/*WHERE YEAR = 2009 AND IST_NAME IN ('Westminster','Westminster College');*/
VAR RS_ACC SSN LNAME FNAME YR TERM SEQ_NO PAY_TYPE AMOUNT;
RUN;
PROC PRINT DATA=REPORT LABEL;
FORMAT TOT_AMT DOLLAR12.2 NUM_PMNT COMMA8.;
LABEL TOT_AMT = 'TOTAL AMOUNT'
	NUM_PMNT = 'DISBURSEMENTS';
RUN;
TITLE;
PROC PRINTTO;
RUN;
