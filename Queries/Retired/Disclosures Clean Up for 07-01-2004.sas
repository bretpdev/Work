/*QSASL01 7/1/04 DISCLOSURES CLEAN UP*/

/*THIS JOB HAD TO BE BROKEN DOWN INTO THREE SEPERATE REMOTE SUBMIT QUERIES.*/
/*IF THIS JOB NEEDS TO BE RUN AGAIN OR REFERENCED - THE RUN TIME ON THIS JOB IS */
/*AROUND AN HOUR AND TWENTY MINUTES. THE REPORTS THAT THIS JOB PRODUCES ARE NAMED*/
/*THE SAME AS THE PRODUCTION JOB FILES BECAUSE THE OUTPUT WILL HAVE TO BE RUN THROUGH */
/*A SCIPRT. THE PRINTED REPORTS HOWEVER REFERENCE THIS JOBS ACTUAL NAME.*/

FILENAME REPORT2 "T:\SAS\ULWO01.LWO01R2";
FILENAME REPORT3 "T:\SAS\ULWO01.LWO01R3";
FILENAME REPORT4 "T:\SAS\ULWO01.LWO01R4";
FILENAME REPORT5 "T:\SAS\ULWO01.LWO01R5";
FILENAME REPORT6 "T:\SAS\ULWO01.LWO01R6";
FILENAME REPORT7 "T:\SAS\ULWO01.LWO01R7";
FILENAME REPORT10 "T:\SAS\ULWO01.LWO01R10";
FILENAME REPORT11 "T:\SAS\ULWO01.LWO01R11";

/*HERE IS THE FIRST RSUBMIT STATEMENT THIS IDENTIFIES A LARGE POPULATION */
/*OF BORROWERS AND LOANS THAT WILL BE REDUCED BY SAS*/

libname  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=work  ;
RSUBMIT;
PROC SQL ;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE POS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.DF_PRS_ID_BR
	,RTRIM(B.AF_APL_ID)||B.AF_APL_ID_SFX AS CLUID
FROM OLWHRM1.GA01_APP A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.GA11_LON_DSB_ATY C 
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
WHERE B.AD_PRC < '07/01/2004'
AND C.AD_DSB_ADJ >= '07/01/2004'
AND B.AC_PRC_STA = 'A'
AND C.AN_DSB_SEQ = 1
AND NOT EXISTS
	(SELECT *
	 FROM OLWHRM1.AY01_BR_ATY X
	 WHERE X.AF_APL_ID = B.AF_APL_ID
	 AND X.AF_APL_ID_SFX = B.AF_APL_ID_SFX
	 AND X.PF_ACT = 'GDSST')
);

CREATE TABLE TEST AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DF_PRS_ID
	,BX_CMT
FROM OLWHRM1.AY01_BR_ATY 
WHERE PF_ACT = 'GDSST'
AND BD_ATY_PRF > '01/01/2003'
);
DISCONNECT FROM DB2;
/*ENDRSUBMIT;*/
/*DATA POS; SET WORKLOCL.POS; RUN;*/
/*DATA TEST; SET WORKLOCL.TEST; RUN;*/
PROC SORT DATA=POS NODUPREC;
BY DF_PRS_ID_BR CLUID;
RUN;
PROC SORT DATA=TEST;
BY DF_PRS_ID;
RUN;

DATA TEST;
SET TEST;
X = LENGTH(BX_CMT);
RUN;

/*USED IN DEVELOPMENT*/
/*PROC SQL;*/
/*CREATE TABLE X AS */
/*SELECT **/
/*FROM TEST*/
/*WHERE X NOT IN (76,95,97);*/
/*QUIT;*/
/*RUN;*/

DATA TEST;
SET TEST;
WHERE X IN (76,95,97,125);
RUN;

DATA TEST76;
SET TEST;
WHERE X = 76;
RUN;

DATA TEST76;
SET TEST76;
LENGTH CTEST1 $ 1;
IF LENGTH(BX_CMT) = 76 THEN CTEST1 = SUBSTR(BX_CMT,32,1);
RUN;

DATA TEST76;
SET TEST76;
LENGTH C1 $ 19;
IF CTEST1 = ' ' THEN C1 = SUBSTR(BX_CMT,33,19);
ELSE IF CTEST1 = '0' THEN C1 = SUBSTR(BX_CMT,32,19);
RUN;

DATA TEST1;
SET TEST;
LENGTH C1 $ 19;
IF LENGTH(BX_CMT) = 76 THEN DELETE;
ELSE IF LENGTH(BX_CMT) = 95 THEN C1 = SUBSTR(BX_CMT,32,19);
ELSE IF LENGTH(BX_CMT) = 97 THEN C1 = SUBSTR(BX_CMT,54,19);
ELSE IF LENGTH(BX_CMT) = 125 THEN C1 = SUBSTR(BX_CMT,32,19); 
RUN;

DATA TEST1 (DROP=CTEST1);
SET TEST76 TEST1;
RUN;

DATA TEST1;
SET TEST1;
LENGTH C2 $ 19;
IF LENGTH(BX_CMT) = 76 THEN C2 = 'NONE';
ELSE IF LENGTH(BX_CMT) = 95 THEN C2 = SUBSTR(BX_CMT,52,19);
ELSE IF LENGTH(BX_CMT) = 97 THEN C2 = 'NONE ';
RUN;

DATA TESTCONT (DROP= BX_CMT DF_PRS_ID X);
SET TEST1;
DF_PRS_ID_BR=DF_PRS_ID;
RUN;

PROC SORT DATA=TESTCONT;
BY DF_PRS_ID_BR;
RUN;

DATA CID1 (DROP=C2 C1);
SET TESTCONT;
CLUID=C1;
RUN;

DATA CID2 (DROP=C1 C2);
SET TESTCONT;
CLUID=C2;
RUN;

DATA CID2;
SET CID2;
IF CLUID = 'NONE' THEN DELETE;
RUN;

PROC SORT DATA=CID1;
BY DF_PRS_ID_BR CLUID;
RUN;

PROC SORT DATA=CID2;
BY DF_PRS_ID_BR CLUID;
RUN;

PROC SORT DATA=POS;
BY DF_PRS_ID_BR CLUID;
RUN;

DATA BOTH DERR GRB1;
MERGE POS (IN=A) CID1(IN=B);
BY DF_PRS_ID_BR CLUID;
IF A AND B THEN OUTPUT BOTH;
ELSE IF A THEN OUTPUT DERR;
ELSE IF B THEN OUTPUT GRB1;
RUN;

DATA BOTH2 DERR2 GRB2;
MERGE DERR (IN=A) CID2(IN=B);
BY DF_PRS_ID_BR CLUID;
IF A AND B THEN OUTPUT BOTH2;
ELSE IF A THEN OUTPUT DERR2;
ELSE IF B THEN OUTPUT GRB2;
RUN;
ENDRSUBMIT;
/*** THE FIRST RSUBMIT ENDS HERE AND THE CONSOLIDATED***/
/*** DATASET IS BROUGHT DOWN TO THE LOCAL MACHINE***/

/***THIS DATA SET IS THE "MASTER" DATASET FOR THIS ONE TIME QUERY***/
/***IT CONTAINS ALL THE LOANS THAT NEED TO BE DISCLOSED ON***/

DATA DERR2;
SET WORKLOCL.DERR2;
RUN;

/***********SECOND RSUBMIT STATEMENT BEGINS HERE*************/
libname  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=work  ;
RSUBMIT;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE Q1 AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT	A.DF_PRS_ID_BR
	,B.AF_APL_ID||B.AF_APL_ID_SFX	as CLUID
	,COALESCE(D1.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D2.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D3.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D4.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D5.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D6.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D7.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D8.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D9.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D10.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D11.AA_ORG_FEE_ADJ,0)
	+ COALESCE(D12.AA_ORG_FEE_ADJ,0)	AS AA_ORG_TOT
	,B.AA_GTE_LON_AMT 
	- COALESCE(B.AA_TOT_CAN,0) 
	- B.AA_TOT_RFD
	- COALESCE(D1.AA_ORG_FEE_ADJ,0)
	- COALESCE(D2.AA_ORG_FEE_ADJ,0)
	- COALESCE(D3.AA_ORG_FEE_ADJ,0)
	- COALESCE(D4.AA_ORG_FEE_ADJ,0)
	- COALESCE(D5.AA_ORG_FEE_ADJ,0)
	- COALESCE(D6.AA_ORG_FEE_ADJ,0)
	- COALESCE(D7.AA_ORG_FEE_ADJ,0)
	- COALESCE(D8.AA_ORG_FEE_ADJ,0)
	- COALESCE(D9.AA_ORG_FEE_ADJ,0)
	- COALESCE(D10.AA_ORG_FEE_ADJ,0)
	- COALESCE(D11.AA_ORG_FEE_ADJ,0)
	- COALESCE(D12.AA_ORG_FEE_ADJ,0)	AS NETLONAMT
/**** DISBURSEMENT INFO ****/
	,D1.AD_DSB_ADJ			AS AD_DSB_ADJ1
	,D1.AA_DSB_ADJ			AS AA_DSB_ADJ1
	,D1.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ1
	,D1.AA_DSB_ADJ
	- D1.AA_ORG_FEE_ADJ		AS NETDSB1
	,D2.AD_DSB_ADJ			AS AD_DSB_ADJ2
	,D2.AA_DSB_ADJ			AS AA_DSB_ADJ2
	,D2.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ2
	,D2.AA_DSB_ADJ
	- D2.AA_ORG_FEE_ADJ		AS NETDSB2
	,D3.AD_DSB_ADJ			AS AD_DSB_ADJ3
	,D3.AA_DSB_ADJ			AS AA_DSB_ADJ3
	,D3.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ3
	,D3.AA_DSB_ADJ
	- D3.AA_ORG_FEE_ADJ		AS NETDSB3
	,D4.AD_DSB_ADJ			AS AD_DSB_ADJ4
	,D4.AA_DSB_ADJ			AS AA_DSB_ADJ4
	,D4.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ4
	,D4.AA_DSB_ADJ
	- D4.AA_ORG_FEE_ADJ		AS NETDSB4
	,D5.AD_DSB_ADJ			AS AD_DSB_ADJ5
	,D5.AA_DSB_ADJ			AS AA_DSB_ADJ5
	,D5.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ5
	,D5.AA_DSB_ADJ
	- D5.AA_ORG_FEE_ADJ		AS NETDSB5
	,D6.AD_DSB_ADJ			AS AD_DSB_ADJ6
	,D6.AA_DSB_ADJ			AS AA_DSB_ADJ6
	,D6.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ6
	,D6.AA_DSB_ADJ
	- D6.AA_ORG_FEE_ADJ		AS NETDSB6
	,D7.AD_DSB_ADJ			AS AD_DSB_ADJ7
	,D7.AA_DSB_ADJ			AS AA_DSB_ADJ7
	,D7.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ7
	,D7.AA_DSB_ADJ
	- D7.AA_ORG_FEE_ADJ		AS NETDSB7
	,D8.AD_DSB_ADJ			AS AD_DSB_ADJ8
	,D8.AA_DSB_ADJ			AS AA_DSB_ADJ8
	,D8.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ8
	,D8.AA_DSB_ADJ
	- D8.AA_ORG_FEE_ADJ		AS NETDSB8
	,D9.AD_DSB_ADJ			AS AD_DSB_ADJ9
	,D9.AA_DSB_ADJ			AS AA_DSB_ADJ9
	,D9.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ9
	,D9.AA_DSB_ADJ
	- D9.AA_ORG_FEE_ADJ		AS NETDSB9
	,D10.AD_DSB_ADJ			AS AD_DSB_ADJ10
	,D10.AA_DSB_ADJ			AS AA_DSB_ADJ10
	,D10.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ10
	,D10.AA_DSB_ADJ
	- D10.AA_ORG_FEE_ADJ	AS NETDSB10
	,D11.AD_DSB_ADJ			AS AD_DSB_ADJ11
	,D11.AA_DSB_ADJ			AS AA_DSB_ADJ11
	,D11.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ11
	,D11.AA_DSB_ADJ
	- D11.AA_ORG_FEE_ADJ	AS NETDSB11
	,D12.AD_DSB_ADJ			AS AD_DSB_ADJ12
	,D12.AA_DSB_ADJ			AS AA_DSB_ADJ12
	,D12.AA_ORG_FEE_ADJ		AS AA_ORG_FEE_ADJ12
	,D12.AA_DSB_ADJ
	- D12.AA_ORG_FEE_ADJ	AS NETDSB12

FROM OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
	AND B.AC_PRC_STA = 'A' /*APPROVED LOAN*/
INNER JOIN OLWHRM1.GA11_LON_DSB_ATY C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
/***** DISBURSEMENT TABLES ******/
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E' /*ESTIMATED DISBS ONLY*/
	AND AC_DSB_ADJ_STA = 'A' /*ACTIVE ROW*/
	AND AN_DSB_SEQ = 1) D1
	ON D1.AF_APL_ID = B.AF_APL_ID
	AND D1.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E' /*ESTIMATED DISBS ONLY*/
	AND AC_DSB_ADJ_STA = 'A' /*ACTIVE ROW*/
	AND AN_DSB_SEQ = 2) D2
	ON D2.AF_APL_ID = B.AF_APL_ID
	AND D2.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E' /*ESTIMATED DISBS ONLY*/
	AND AC_DSB_ADJ_STA = 'A' /*ACTIVE ROW*/
	AND AN_DSB_SEQ = 3) D3
	ON D3.AF_APL_ID = B.AF_APL_ID
	AND D3.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E' /*ESTIMATED DISBS ONLY*/
	AND AC_DSB_ADJ_STA = 'A' /*ACTIVE ROW*/
	AND AN_DSB_SEQ = 4) D4
	ON D4.AF_APL_ID = B.AF_APL_ID
	AND D4.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E' /*ESTIMATED DISBS ONLY*/
	AND AC_DSB_ADJ_STA = 'A' /*ACTIVE ROW*/
	AND AN_DSB_SEQ = 5) D5
	ON D5.AF_APL_ID = B.AF_APL_ID
	AND D5.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	AND AN_DSB_SEQ = 6) D6
	ON D6.AF_APL_ID = B.AF_APL_ID
	AND D6.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	AND AN_DSB_SEQ = 7) D7
	ON D7.AF_APL_ID = B.AF_APL_ID
	AND D7.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	AND AN_DSB_SEQ = 8) D8
	ON D8.AF_APL_ID = B.AF_APL_ID
	AND D8.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	AND AN_DSB_SEQ = 9) D9
	ON D9.AF_APL_ID = B.AF_APL_ID
	AND D9.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	AND AN_DSB_SEQ = 10) D10
	ON D10.AF_APL_ID = B.AF_APL_ID
	AND D10.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	AND AN_DSB_SEQ = 11) D11
	ON D11.AF_APL_ID = B.AF_APL_ID
	AND D11.AF_APL_ID_SFX = B.AF_APL_ID_SFX
LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	AND AN_DSB_SEQ = 12) D12
	ON D12.AF_APL_ID = B.AF_APL_ID
	AND D12.AF_APL_ID_SFX = B.AF_APL_ID_SFX
WHERE B.AD_PRC < '07/01/2004'
AND C.AD_DSB_ADJ >= '07/01/2004'
AND B.AC_PRC_STA = 'A'
AND C.AN_DSB_SEQ = 1
);
DISCONNECT FROM DB2;
ENDRSUBMIT;
/*** THE SECOND RSUBMIT ENDS HERE AND THE DATASET***/
/*** IS BROUGHT DOWN TO THE LOCAL MACHINE***/
DATA Q1; 
SET WORKLOCL.Q1; 
RUN; 

/***********THE THIRD AND FINAL RSUBMIT BEGINS HERE***********/
libname  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=work  ;
RSUBMIT;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE Q2 AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT	A.DF_PRS_ID_BR
	,INTEGER(A.DF_PRS_ID_BR)	as SSN
	,B.AF_APL_ID
	,B.AF_APL_ID||B.AF_APL_ID_SFX	as CLUID
	,B.AD_PRC
	,B.AC_LON_TYP
	,CASE when RTRIM(C.DM_PRS_MID) <> ' ' 
		then RTRIM(C.DM_PRS_1)||' '||RTRIM(C.DM_PRS_MID)||' '||RTRIM(C.DM_PRS_LST)
		when RTRIM(C.DM_PRS_MID) = ' ' 
		then RTRIM(C.DM_PRS_1)||' '||RTRIM(C.DM_PRS_LST)
	END						AS BWRNAME
	,C.DX_STR_ADR_1
	,C.DX_STR_ADR_2
	,C.DM_CT
	,C.DC_DOM_ST
	,C.DF_ZIP
	,C.DM_FGN_CNY
	,C.DC_ADR
	,C.DI_VLD_ADR
	,A.DF_PRS_ID_STU
	,CASE when RTRIM(G.DM_PRS_MID) <> ' ' 
		then RTRIM(G.DM_PRS_1)||' '||RTRIM(G.DM_PRS_MID)||' '||RTRIM(G.DM_PRS_LST)
		when RTRIM(G.DM_PRS_MID) = ' ' 
		then RTRIM(G.DM_PRS_1)||' '||RTRIM(G.DM_PRS_LST)
	END						AS STUNAME
	,A.AF_CUR_APL_OPS_LDR 	AS LDR_ID
	,D.IM_IST_FUL 			AS LDR_NAME
	,D.IX_GEN_STR_ADR_1 	AS LDR_ADR_1
	,D.IX_GEN_STR_ADR_2		AS LDR_ADR_2
	,D.IX_GEN_STR_ADR_3		AS LDR_ADR_3
	,D.IM_GEN_CT			AS LDR_CT
	,D.IC_GEN_ST			AS LDR_ST
	,D.IF_GEN_ZIP			AS LDR_ZIP
	,A.AF_APL_OPS_SCL		AS SCL_ID
	,E.IM_IST_FUL			AS SCL_NAME
	,E.IX_GEN_STR_ADR_1		AS SCL_ADR1
	,E.IX_GEN_STR_ADR_2		AS SCL_ADR2
	,E.IX_GEN_STR_ADR_3		AS SCL_ADR3
	,E.IM_GEN_CT			AS SCL_CITY
	,E.IC_GEN_ST			AS SCL_ST
	,E.IF_GEN_ZIP			AS SCL_ZIP
	,A.AD_XPC_GRD
	,B.AA_GTE_LON_AMT 
	- COALESCE(B.AA_TOT_CAN,0) 
	- B.AA_TOT_RFD 			AS NETGTYAMT	
	,RG.PR_RPD_FOR_ITR
	,CASE B.AC_LON_TYP 
		WHEN 'SF' THEN INTEGER(A.AX_SCL_SUB_CER_IAA )
		WHEN 'SU' THEN INTEGER(A.AX_SCL_USB_CER_IAA)
		WHEN 'PL' THEN INTEGER(A.AX_SCL_PS_CER_IAA)
		ELSE 0
	END									AS SCL_CERT_AMT
	,A.AD_IST_TRM_BEG
	,A.AD_IST_TRM_END
	,F.NETGTYSUM
	,DL.LST_AD_DSB_ADJ
	,CHAR(PHBR.DF_SPE_ID)	AS DF_SPE_ID_BR
	,CHAR(PHST.DF_SPE_ID)	AS DF_SPE_ID_STU
	,A.AF_BS_MPN_APL_ID		AS BASEID
	,A.AC_ELS_LON			AS ELSIND


FROM OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
	AND B.AC_PRC_STA = 'A' /*APPROVED LOAN*/
INNER JOIN OLWHRM1.PD01_PDM_INF C
	ON A.DF_PRS_ID_BR = C.DF_PRS_ID
	AND C.DC_ADR = 'L' /*LEGAL ADDRESS*/
INNER JOIN OLWHRM1.PD01_PDM_INF G
	ON A.DF_PRS_ID_STU = G.DF_PRS_ID
/*	AND G.DC_ADR = 'L' *//*LEGAL ADDRESS*/
INNER JOIN OLWHRM1.LR01_LGS_LDR_INF D
	ON D.IF_IST = A.AF_CUR_APL_OPS_LDR
INNER JOIN 
	(SELECT DISTINCT 
		IF_IST
		,IM_IST_FUL
		,IX_GEN_STR_ADR_1
		,IX_GEN_STR_ADR_2
		,IX_GEN_STR_ADR_3
		,IM_GEN_CT
		,IC_GEN_ST
		,IF_GEN_ZIP
	FROM OLWHRM1.SC01_LGS_SCL_INF) E
	ON E.IF_IST = A.AF_APL_OPS_SCL
/*THIS JOIN SLOWS THE JOB DOWN BY SEVERAL MINUTES*/
INNER JOIN
	(SELECT X.DF_PRS_ID_BR
		,SUM(Y.AA_GTE_LON_AMT 
		- COALESCE(Y.AA_TOT_CAN,0) 
		- Y.AA_TOT_RFD) 			AS NETGTYSUM
	FROM OLWHRM1.GA01_APP X
	INNER JOIN OLWHRM1.GA10_LON_APP Y
		ON Y.AF_APL_ID = X.AF_APL_ID
	INNER JOIN OLWHRM1.GA14_LON_STA Z
		ON Z.AF_APL_ID = Y.AF_APL_ID
		AND Z.AF_APL_ID_SFX = Y.AF_APL_ID_SFX
		AND Z.AC_STA_GA14 = 'A'
	WHERE Z.AC_LON_STA_TYP IN 
		('IA','ID','IM','IG','RP','DA','FB','UC','CR')
	GROUP BY X.DF_PRS_ID_BR) F
	ON F.DF_PRS_ID_BR = A.DF_PRS_ID_BR
INNER JOIN OLWHRM1.PH01_SUPER_ID PHBR
	ON PHBR.DF_PRS_ID = A.DF_PRS_ID_BR
	AND PHBR.DC_STA_PH01 = 'A'
	AND PHBR.DF_SBS = 'LGS'
	AND PHBR.DF_RGN = '749'
INNER JOIN OLWHRM1.PH01_SUPER_ID PHST
	ON PHST.DF_PRS_ID = A.DF_PRS_ID_STU
	AND PHST.DC_STA_PH01 = 'A'
	AND PHST.DF_SBS = 'LGS'
	AND PHST.DF_RGN = '749'

LEFT OUTER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,AD_DSB_ADJ
		,AA_DSB_ADJ
		,AA_ORG_FEE_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E' /*ESTIMATED DISBS ONLY*/
	AND AC_DSB_ADJ_STA = 'A' /*ACTIVE ROW*/
	AND AN_DSB_SEQ = 1) D1
	ON D1.AF_APL_ID = B.AF_APL_ID
	AND D1.AF_APL_ID_SFX = B.AF_APL_ID_SFX

/*Select last disbursement date*/
INNER JOIN 
	(SELECT AF_APL_ID
		,AF_APL_ID_SFX
		,MAX(AD_DSB_ADJ) AS LST_AD_DSB_ADJ
	FROM OLWHRM1.GA11_LON_DSB_ATY
	WHERE AC_DSB_ADJ = 'E'
	AND AC_DSB_ADJ_STA = 'A'
	GROUP BY AF_APL_ID, AF_APL_ID_SFX) DL
	ON DL.AF_APL_ID = B.AF_APL_ID
	AND DL.AF_APL_ID_SFX = B.AF_APL_ID_SFX

/*Select Interest Rates based on Reg Cat for */
INNER JOIN 
	(	(SELECT 'SF' AS RG_LONTYP
			,PR_RPD_FOR_ITR
			,PD_ITR_EFF_BEG
			,PD_ITR_EFF_END
		FROM OLWHRM1.RG02_ITR_DFN
		WHERE PF_RGL_CAT = '0000018')
	UNION ALL
		(SELECT 'SU' AS RG_LONTYP
			,PR_RPD_FOR_ITR
			,PD_ITR_EFF_BEG
			,PD_ITR_EFF_END
		FROM OLWHRM1.RG02_ITR_DFN
		WHERE PF_RGL_CAT = '0000018')
	UNION ALL
		(SELECT 'PL' AS RG_LONTYP
			,PR_RPD_FOR_ITR
			,PD_ITR_EFF_BEG
			,PD_ITR_EFF_END
		FROM OLWHRM1.RG02_ITR_DFN
		WHERE PF_RGL_CAT = '0000020')	)RG
	ON B.AC_LON_TYP = RG.RG_LONTYP
	AND D1.AD_DSB_ADJ BETWEEN RG.PD_ITR_EFF_BEG AND RG.PD_ITR_EFF_END
INNER JOIN OLWHRM1.GA11_LON_DSB_ATY Q
	ON B.AF_APL_ID = Q.AF_APL_ID
	AND B.AF_APL_ID_SFX = Q.AF_APL_ID_SFX

WHERE B.AD_PRC < '07/01/2004'
AND Q.AD_DSB_ADJ >= '07/01/2004'
AND B.AC_PRC_STA = 'A'
AND Q.AN_DSB_SEQ = 1
);
DISCONNECT FROM DB2;
ENDRSUBMIT  ;
/*** THE THIRD RSUBMIT ENDS HERE AND THE DATASET***/
/*** IS BROUGHT DOWN TO THE LOCAL MACHINE***/
DATA Q2; 
SET WORKLOCL.Q2; 
RUN;

/*AT THIS POINT THERE SHOULD BE THREE DATASETS ON THE LOCAL DRIVE*/
/*DERR2 - THE MASTER DATASET*/
/*Q1 - ATTRIBUTES FOR DISCLOSURE PROCESSING*/
/*Q2 - ATTRIBUTES FOR DISCLOSURE PROCESSING*/

/*PUT FILES TOGETHER*/
PROC SQL;
CREATE TABLE YEST AS
SELECT A.DF_PRS_ID_BR
	,A.CLUID
	,B.DF_PRS_ID_BR AS B_DF_PRS_ID_BR
	,B.CLUID AS B_CLUID
	,B.AA_ORG_TOT
	,B.NETLONAMT
/**** DISBURSEMENT INFO ****/
	,B.AD_DSB_ADJ1
	,B.AA_DSB_ADJ1
	,B.AA_ORG_FEE_ADJ1
	,B.NETDSB1
	,B.AD_DSB_ADJ2
	,B.AA_DSB_ADJ2
	,B.AA_ORG_FEE_ADJ2
	,B.NETDSB2
	,B.AD_DSB_ADJ3
	,B.AA_DSB_ADJ3
	,B.AA_ORG_FEE_ADJ3
	,B.NETDSB3
	,B.AD_DSB_ADJ4
	,B.AA_DSB_ADJ4
	,B.AA_ORG_FEE_ADJ4
	,B.NETDSB4
	,B.AD_DSB_ADJ5
	,B.AA_DSB_ADJ5
	,B.AA_ORG_FEE_ADJ5
	,B.NETDSB5
	,B.AD_DSB_ADJ6
	,B.AA_DSB_ADJ6
	,B.AA_ORG_FEE_ADJ6
	,B.NETDSB6
	,B.AD_DSB_ADJ7
	,B.AA_DSB_ADJ7
	,B.AA_ORG_FEE_ADJ7
	,B.NETDSB7
	,B.AD_DSB_ADJ8
	,B.AA_DSB_ADJ8
	,B.AA_ORG_FEE_ADJ8
	,B.NETDSB8
	,B.AD_DSB_ADJ9
	,B.AA_DSB_ADJ9
	,B.AA_ORG_FEE_ADJ9
	,B.NETDSB9
	,B.AD_DSB_ADJ10
	,B.AA_DSB_ADJ10
	,B.AA_ORG_FEE_ADJ10
	,B.NETDSB10
	,B.AD_DSB_ADJ11
	,B.AA_DSB_ADJ11
	,B.AA_ORG_FEE_ADJ11
	,B.NETDSB11
	,B.AD_DSB_ADJ12
	,B.AA_DSB_ADJ12
	,B.AA_ORG_FEE_ADJ12
	,B.NETDSB12
FROM DERR2 A
INNER JOIN Q1 B
	ON A.DF_PRS_ID_BR = B.DF_PRS_ID_BR
	AND A.CLUID = B.CLUID;
QUIT;
RUN;

PROC SQL;
CREATE TABLE XEST AS 
SELECT A.DF_PRS_ID_BR
	,A.CLUID
	,B.DF_PRS_ID_BR AS B_DF_PRS_ID_BR
	,B.SSN
	,B.CLUID AS B_CLUID
	,B.AF_APL_ID
	,B.AD_PRC
	,B.AC_LON_TYP
	,B.BWRNAME
	,B.DX_STR_ADR_1
	,B.DX_STR_ADR_2
	,B.DM_CT
	,B.DC_DOM_ST
	,B.DF_ZIP
	,B.DM_FGN_CNY
	,B.DC_ADR
	,B.DI_VLD_ADR
	,B.DF_PRS_ID_STU
	,B.STUNAME
	,B.LDR_ID
	,B.LDR_NAME
	,B.LDR_ADR_1
	,B.LDR_ADR_2
	,B.LDR_ADR_3
	,B.LDR_CT
	,B.LDR_ST
	,B.LDR_ZIP
	,B.SCL_ID
	,B.SCL_NAME
	,B.SCL_ADR1
	,B.SCL_ADR2
	,B.SCL_ADR3
	,B.SCL_CITY
	,B.SCL_ST
	,B.SCL_ZIP
	,B.AD_XPC_GRD
	,B.NETGTYAMT	
	,B.PR_RPD_FOR_ITR
	,B.SCL_CERT_AMT
	,B.AD_IST_TRM_BEG
	,B.AD_IST_TRM_END
	,B.NETGTYSUM
	,B.LST_AD_DSB_ADJ
	,B.DF_SPE_ID_BR
	,B.DF_SPE_ID_STU
	,B.BASEID
	,B.ELSIND
FROM DERR2 A
INNER JOIN Q2 B
	ON A.DF_PRS_ID_BR = B.DF_PRS_ID_BR
	AND A.CLUID = B.CLUID;
QUIT;
RUN;

PROC SORT DATA=XEST NODUPREC;
BY DF_PRS_ID_BR CLUID;
RUN;

PROC SORT DATA=YEST NODUPREC;
BY DF_PRS_ID_BR CLUID;
RUN;

/***MERGE DATASETS AND PREPARE FOR DISCLOSURE PROCESSING***/

DATA QSASL01 (DROP=B_DF_PRS_ID_BR B_CLUID);
MERGE XEST (IN=A) YEST (IN=B);
BY DF_PRS_ID_BR CLUID;
IF A AND B THEN OUTPUT QSASL01;
ELSE DELETE;
RUN;

/************************************************************************/
/****CREATE DATASET NAMED THE SAME AS THE REGULAR DISCLOUSRE JOB USES****/
/**THIS IS WHERE THE ONE TIME QUERY JOB ENDS AND THE REGULAR JOB STARTS**/
/************************************************************************/

DATA DISC;
SET QSASL01;
RUN;

/*********************REGULAR JOB PROCESSING BEGINS*********************/

PROC SORT DATA=DISC;
BY LDR_ID DF_PRS_ID_BR CLUID;
RUN;

*ASSIGN LOANS AS BASE/SERIAL;
DATA DISC ;*(DROP=BASEID);
SET DISC;
LENGTH MPN_TYPE $ 6;
IF (BASEID = ' ' OR BASEID EQ AF_APL_ID) THEN MPN_TYPE = 'BASE';
ELSE IF (BASEID NE ' ' AND BASEID NE AF_APL_ID) THEN MPN_TYPE = 'SERIAL';
ELSE MPN_TYPE = 'ERROR';		/*ERROR DETECTION VALUE*/
RUN;

*CALCULATE KEYLINE;
DATA DISC (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I 
	CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
SET DISC;
KEYSSN = TRANSLATE(DF_PRS_ID_BR,'MYLAUGHTER','0987654321');
MODAY = PUT(DATE(),MMDDYYN4.);
KEYLINE = "P"||KEYSSN||MODAY||DC_ADR;
CHKDIG = 0;
LENGTH DIG $2.;
DO I = 1 TO LENGTH(KEYLINE);
	IF I/2 NE ROUND(I/2,1) 
		THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
	ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
	IF SUBSTR(DIG,1,1) = " " 
		THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
		ELSE DO;
			CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
			CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
			IF CHK1 + CHK2 >= 10
				THEN DO;
					CHK3 = PUT(CHK1 + CHK2,2.);
					CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
					CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
				END;
			CHKDIG = CHKDIG + CHK1 + CHK2;
		END;
END;
CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
CHECK = PUT(CHKDIGIT,1.);
ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;

DATA DISCPL; SET DISC; WHERE AC_LON_TYP = 'PL'; RUN;

*Repayment calculations for all PLUS loans;
DATA DISCPL (DROP = CAP_INT1-CAP_INT12 INTEREST P2P WPA);
SET DISCPL;
CAP_INT1 = SUM(NETDSB1,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ1,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT2 = SUM(NETDSB2,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ2,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT3 = SUM(NETDSB3,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ3,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT4 = SUM(NETDSB4,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ4,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT5 = SUM(NETDSB5,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ5,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT6 = SUM(NETDSB6,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ6,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT7 = SUM(NETDSB7,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ7,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT8 = SUM(NETDSB8,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ8,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT9 = SUM(NETDSB9,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ9,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT10 = SUM(NETDSB10,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ10,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT11 = SUM(NETDSB11,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ11,0)) * (PR_RPD_FOR_ITR*0.01/365);
CAP_INT12 = SUM(NETDSB12,0) * (LST_AD_DSB_ADJ - SUM(AD_DSB_ADJ12,0)) * (PR_RPD_FOR_ITR*0.01/365);
TOT_CAP_INT = SUM(OF CAP_INT1-CAP_INT12);
REPAY_PRIN = NETGTYAMT + TOT_CAP_INT;
PMT = MORT(REPAY_PRIN, ., PR_RPD_FOR_ITR*0.01/12, 10*12);
IF PMT < 50 THEN PMT = 50;
WPA = REPAY_PRIN;
TOT_REPAY_AMT = 0;
NUM_PAY = 0;
DO UNTIL (WPA < (1.5 * PMT));
	INTEREST = WPA * PR_RPD_FOR_ITR*0.01/12;
	P2P = PMT - INTEREST;
	WPA = WPA - P2P;
	NUM_PAY + 1;
	TOT_REPAY_AMT = TOT_REPAY_AMT + PMT;
END;
INTEREST = WPA * (PR_RPD_FOR_ITR * 0.01 / 12);
LAST_PMT = WPA + INTEREST;
TOT_REPAY_AMT = TOT_REPAY_AMT + LAST_PMT;
REPAY_INT = TOT_REPAY_AMT - REPAY_PRIN;
FORMAT TOT_CAP_INT 10.2 REPAY_PRIN 10.2 PMT 10.2 INTEREST 10.2 
P2P 10.2 LAST_PMT 10.2 TOT_REPAY_AMT 10.2 REPAY_INT 10.2;
*INT_EFF_TO = PUT(INTNX('YEAR.7',TODAY(),0,'end'), MMDDYY10.);
INT_EFF_TO = PUT(INTNX('YEAR.7',AD_DSB_ADJ1,0,'end'), MMDDYY10.);
PMT_DT = PUT(INTNX('MONTH',LST_AD_DSB_ADJ,1,'beginning') + DAY(LST_AD_DSB_ADJ) -1,MMDDYY10.);
LAST_PMT_DT = PUT(INTNX('MONTH',LST_AD_DSB_ADJ,NUM_PAY + 1,'beginning') + DAY(LST_AD_DSB_ADJ) -1,MMDDYY10.);
RUN;

*Master mergefile for all Stafford loans;
DATA DISCSTAF (KEEP = SSN AF_APL_ID BWRNAME DX_STR_ADR_1 DX_STR_ADR_2 DM_CT DC_DOM_ST DF_ZIP
DM_FGN_CNY DC_ADR DI_VLD_ADR DF_PRS_ID_STU STUNAME LDR_ID LDR_NAME LDR_ADR_1 LDR_ADR_2
LDR_ADR_3 LDR_CT LDR_ST LDR_ZIP SCL_ID SCL_NAME SCL_ADR1 SCL_ADR2 SCL_ADR3 SCL_CITY
SCL_ST SCL_ZIP AD_XPC_GRD AD_IST_TRM_BEG AD_IST_TRM_END NETGTYSUM ACSKEY DF_SPE_ID_BR
DF_SPE_ID_STU AD_PRC MPN_TYPE);
SET DISC;
WHERE AC_LON_TYP IN ('SF','SU');
RUN;

PROC SORT DATA=DISCSTAF NODUPREC;
BY LDR_ID SSN AF_APL_ID;
RUN;

*Mergefile for subsidized Stafford loans;
DATA DISCSF (KEEP = SSN AF_APL_ID LDR_ID CLUID AC_LON_TYP NETGTYAMT AA_ORG_TOT NETLONAMT
PR_RPD_FOR_ITR SCL_CERT_AMT AD_DSB_ADJ1 AA_DSB_ADJ1 AA_ORG_FEE_ADJ1 NETDSB1 AD_DSB_ADJ2
AA_DSB_ADJ2 AA_ORG_FEE_ADJ2 NETDSB2 AD_DSB_ADJ3 AA_DSB_ADJ3 AA_ORG_FEE_ADJ3 NETDSB3
AD_DSB_ADJ4 AA_DSB_ADJ4 AA_ORG_FEE_ADJ4 NETDSB4 AD_DSB_ADJ5 AA_DSB_ADJ5 AA_ORG_FEE_ADJ5
NETDSB5 AD_DSB_ADJ6 AA_DSB_ADJ6 AA_ORG_FEE_ADJ6 NETDSB6 AD_DSB_ADJ7 AA_DSB_ADJ7
AA_ORG_FEE_ADJ7 NETDSB7 AD_DSB_ADJ8 AA_DSB_ADJ8 AA_ORG_FEE_ADJ8 NETDSB8 AD_DSB_ADJ9
AA_DSB_ADJ9 AA_ORG_FEE_ADJ9 NETDSB9 AD_DSB_ADJ10 AA_DSB_ADJ10 AA_ORG_FEE_ADJ10
NETDSB10 AD_DSB_ADJ11 AA_DSB_ADJ11 AA_ORG_FEE_ADJ11 NETDSB11 AD_DSB_ADJ12
AA_DSB_ADJ12 AA_ORG_FEE_ADJ12 NETDSB12); 
SET DISC; 
WHERE AC_LON_TYP = 'SF'; 
RUN;

*Mergefile for unsubsidized Stafford loans;
DATA DISCSU (KEEP = SSN AF_APL_ID LDR_ID SU_CLUID SU_AC_LON_TYP SU_NETGTYAMT SU_AA_ORG_TOT
SU_NETLONAMT SU_PR_RPD_FOR_ITR SU_SCL_CERT_AMT SU_AD_DSB_ADJ1 SU_AA_DSB_ADJ1 SU_AA_ORG_FEE_ADJ1
SU_NETDSB1 SU_AD_DSB_ADJ2 SU_AA_DSB_ADJ2 SU_AA_ORG_FEE_ADJ2 SU_NETDSB2 SU_AD_DSB_ADJ3
SU_AA_DSB_ADJ3 SU_AA_ORG_FEE_ADJ3 SU_NETDSB3 SU_AD_DSB_ADJ4 SU_AA_DSB_ADJ4 SU_AA_ORG_FEE_ADJ4
SU_NETDSB4 SU_AD_DSB_ADJ5 SU_AA_DSB_ADJ5 SU_AA_ORG_FEE_ADJ5 SU_NETDSB5 SU_AD_DSB_ADJ6
SU_AA_DSB_ADJ6 SU_AA_ORG_FEE_ADJ6 SU_NETDSB6 SU_AD_DSB_ADJ7 SU_AA_DSB_ADJ7 SU_AA_ORG_FEE_ADJ7
SU_NETDSB7 SU_AD_DSB_ADJ8 SU_AA_DSB_ADJ8 SU_AA_ORG_FEE_ADJ8 SU_NETDSB8 SU_AD_DSB_ADJ9
SU_AA_DSB_ADJ9 SU_AA_ORG_FEE_ADJ9 SU_NETDSB9 SU_AD_DSB_ADJ10 SU_AA_DSB_ADJ10 
SU_AA_ORG_FEE_ADJ10 SU_NETDSB10 SU_AD_DSB_ADJ11 SU_AA_DSB_ADJ11 SU_AA_ORG_FEE_ADJ11
SU_NETDSB11 SU_AD_DSB_ADJ12 SU_AA_DSB_ADJ12 SU_AA_ORG_FEE_ADJ12 SU_NETDSB12); 
SET DISC; 
WHERE AC_LON_TYP = 'SU'; 
SU_CLUID = CLUID;
SU_AC_LON_TYP = AC_LON_TYP;
SU_NETGTYAMT = NETGTYAMT;
SU_AA_ORG_TOT = AA_ORG_TOT;
SU_NETLONAMT = NETLONAMT;
SU_PR_RPD_FOR_ITR = PR_RPD_FOR_ITR;
SU_SCL_CERT_AMT = SCL_CERT_AMT;
SU_AD_DSB_ADJ1 = AD_DSB_ADJ1;
SU_AA_DSB_ADJ1 = AA_DSB_ADJ1;
SU_AA_ORG_FEE_ADJ1 = AA_ORG_FEE_ADJ1;
SU_NETDSB1 = NETDSB1;
SU_AD_DSB_ADJ2 = AD_DSB_ADJ2;
SU_AA_DSB_ADJ2 = AA_DSB_ADJ2;
SU_AA_ORG_FEE_ADJ2 = AA_ORG_FEE_ADJ2;
SU_NETDSB2 = NETDSB2;
SU_AD_DSB_ADJ3 = AD_DSB_ADJ3;
SU_AA_DSB_ADJ3 = AA_DSB_ADJ3;
SU_AA_ORG_FEE_ADJ3 = AA_ORG_FEE_ADJ3;
SU_NETDSB3 = NETDSB3;
SU_AD_DSB_ADJ4 = AD_DSB_ADJ4;
SU_AA_DSB_ADJ4 = AA_DSB_ADJ4;
SU_AA_ORG_FEE_ADJ4 = AA_ORG_FEE_ADJ4;
SU_NETDSB4 = NETDSB4;
SU_AD_DSB_ADJ5 = AD_DSB_ADJ5;
SU_AA_DSB_ADJ5 = AA_DSB_ADJ5;
SU_AA_ORG_FEE_ADJ5 = AA_ORG_FEE_ADJ5;
SU_NETDSB5 = NETDSB5;
SU_AD_DSB_ADJ6 = AD_DSB_ADJ6;
SU_AA_DSB_ADJ6 = AA_DSB_ADJ6;
SU_AA_ORG_FEE_ADJ6 = AA_ORG_FEE_ADJ6;
SU_NETDSB6 = NETDSB6;
SU_AD_DSB_ADJ7 = AD_DSB_ADJ7;
SU_AA_DSB_ADJ7 = AA_DSB_ADJ7;
SU_AA_ORG_FEE_ADJ7 = AA_ORG_FEE_ADJ7;
SU_NETDSB7 = NETDSB7;
SU_AD_DSB_ADJ8 = AD_DSB_ADJ8;
SU_AA_DSB_ADJ8 = AA_DSB_ADJ8;
SU_AA_ORG_FEE_ADJ8 = AA_ORG_FEE_ADJ8;
SU_NETDSB8 = NETDSB8;
SU_AD_DSB_ADJ9 = AD_DSB_ADJ9;
SU_AA_DSB_ADJ9 = AA_DSB_ADJ9;
SU_AA_ORG_FEE_ADJ9 = AA_ORG_FEE_ADJ9;
SU_NETDSB9 = NETDSB9;
SU_AD_DSB_ADJ10 = AD_DSB_ADJ10;
SU_AA_DSB_ADJ10 = AA_DSB_ADJ10;
SU_AA_ORG_FEE_ADJ10 = AA_ORG_FEE_ADJ10;
SU_NETDSB10 = NETDSB10;
SU_AD_DSB_ADJ11 = AD_DSB_ADJ11;
SU_AA_DSB_ADJ11 = AA_DSB_ADJ11;
SU_AA_ORG_FEE_ADJ11 = AA_ORG_FEE_ADJ11;
SU_NETDSB11 = NETDSB11;
SU_AD_DSB_ADJ12 = AD_DSB_ADJ12;
SU_AA_DSB_ADJ12 = AA_DSB_ADJ12;
SU_AA_ORG_FEE_ADJ12 = AA_ORG_FEE_ADJ12;
SU_NETDSB12 = NETDSB12;
RUN;

*All Stafford loans;
DATA DISCGL (DROP = AF_APL_ID);
MERGE DISCSTAF DISCSF DISCSU;
BY LDR_ID SSN AF_APL_ID;
RUN;

DATA DISCGL;
SET DISCGL;
FORMAT APP_CRT_AMT 10.2;
APP_CRT_AMT = SUM(SU_SCL_CERT_AMT, SCL_CERT_AMT);
*INT_EFF_TO = PUT(INTNX('YEAR.7',TODAY(),0,'end'), MMDDYY10.);
IF AD_DSB_ADJ1 NE . 
	THEN INT_EFF_TO = PUT(INTNX('YEAR.7',AD_DSB_ADJ1,0,'end'), MMDDYY10.);
	ELSE INT_EFF_TO = PUT(INTNX('YEAR.7',SU_AD_DSB_ADJ1,0,'end'), MMDDYY10.);
RUN;

%MACRO STAF(DS, OUT, COND);
data _null_ ;
set  &DS end=EFIEOD;
&COND;
%let _EFIERR_ = 0; /* set the ERROR detection macro variable */
%let _EFIREC_ = 0;     /* clear export record count macro variable */
file &OUT delimiter=',' DSD DROPOVER lrecl=32767;
	format SSN SSN11. ;
	format BWRNAME $50. ;
	format DX_STR_ADR_1 $35. ;
	format DX_STR_ADR_2 $35. ;
	format DM_CT $30. ;
	format DC_DOM_ST $2. ;
	format DF_ZIP $14. ;
	format DM_FGN_CNY $25. ;
	format DC_ADR $1. ;
	format DI_VLD_ADR $1. ;
	format DF_PRS_ID_STU $9. ;
	format STUNAME $50. ;
	format LDR_ID $8. ;
	format LDR_NAME $40. ;
	format LDR_ADR_1 $40. ;
	format LDR_ADR_2 $40. ;
	format LDR_ADR_3 $40. ;
	format LDR_CT $30. ;
	format LDR_ST $2. ;
	format LDR_ZIP $14. ;
	format SCL_ID $8. ;
	format SCL_NAME $40. ;
	format SCL_ADR1 $40. ;
	format SCL_ADR2 $40. ;
	format SCL_ADR3 $40. ;
	format SCL_CITY $30. ;
	format SCL_ST $2. ;
	format SCL_ZIP $14. ;
	format AD_XPC_GRD MMDDYY10. ;
	format AD_IST_TRM_BEG MMDDYY10. ;
	format AD_IST_TRM_END MMDDYY10. ;
	format NETGTYSUM DOLLAR12.2 ;
	FORMAT MPN_TYPE $6.;
	format ACSKEY $18. ;

	format CLUID 			$19. ;
	format AD_PRC 			MMDDYY10. ;
	format AC_LON_TYP 		$2. ;
	format NETGTYAMT		DOLLAR17.2 ;
	format AA_ORG_TOT 		DOLLAR26.2 ;
	format NETLONAMT 		DOLLAR29.2 ;
	format PR_RPD_FOR_ITR 	8.3 ;
	format SCL_CERT_AMT 	DOLLAR12.2 ;
	format AD_DSB_ADJ1 		MMDDYY10. ;
	format AA_DSB_ADJ1 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ1 	DOLLAR9.2 ;
	format NETDSB1 			DOLLAR11.2 ;
	format AD_DSB_ADJ2 		MMDDYY10. ;
	format AA_DSB_ADJ2 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ2 	DOLLAR9.2 ;
	format NETDSB2 			DOLLAR11.2 ;
	format AD_DSB_ADJ3 		MMDDYY10. ;
	format AA_DSB_ADJ3 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ3 	DOLLAR9.2 ;
	format NETDSB3 			DOLLAR11.2 ;
	format AD_DSB_ADJ4 		MMDDYY10. ;
	format AA_DSB_ADJ4 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ4 	DOLLAR9.2 ;
	format NETDSB4 			DOLLAR11.2 ;
	format AD_DSB_ADJ5 		MMDDYY10. ;
	format AA_DSB_ADJ5 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ5 	DOLLAR9.2 ;
	format NETDSB5 			DOLLAR11.2 ;
	format AD_DSB_ADJ6 		MMDDYY10. ;
	format AA_DSB_ADJ6 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ6	DOLLAR9.2 ;
	format NETDSB6 			DOLLAR11.2 ;
	format AD_DSB_ADJ7 		MMDDYY10. ;
	format AA_DSB_ADJ7 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ7 	DOLLAR9.2 ;
	format NETDSB7 			DOLLAR11.2 ;
	format AD_DSB_ADJ8 		MMDDYY10. ;
	format AA_DSB_ADJ8 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ8 	DOLLAR9.2 ;
	format NETDSB8 			DOLLAR11.2 ;
	format AD_DSB_ADJ9 		MMDDYY10. ;
	format AA_DSB_ADJ9 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ9 	DOLLAR9.2 ;
	format NETDSB9 			DOLLAR11.2 ;
	format AD_DSB_ADJ10 		MMDDYY10. ;
	format AA_DSB_ADJ10 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ10 	DOLLAR9.2 ;
	format NETDSB10 			DOLLAR11.2 ;
	format AD_DSB_ADJ11 		MMDDYY10. ;
	format AA_DSB_ADJ11 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ11 	DOLLAR9.2 ;
	format NETDSB11 			DOLLAR11.2 ;
	format AD_DSB_ADJ12 		MMDDYY10. ;
	format AA_DSB_ADJ12 		DOLLAR10.2 ;
	format AA_ORG_FEE_ADJ12 	DOLLAR9.2 ;
	format NETDSB12 			DOLLAR11.2 ;

	format SU_CLUID 			$19. ;
	format SU_AC_LON_TYP 		$2. ;
	format SU_NETGTYAMT 		DOLLAR17.2 ;
	format SU_AA_ORG_TOT 		DOLLAR26.2 ;
	format SU_NETLONAMT 		DOLLAR29.2 ;
	format SU_PR_RPD_FOR_ITR 	8.3 ;
	format SU_SCL_CERT_AMT 		DOLLAR12.2 ;
	format SU_AD_DSB_ADJ1 		MMDDYY10. ;
	format SU_AA_DSB_ADJ1 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ1 	DOLLAR9.2 ;
	format SU_NETDSB1 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ2 		MMDDYY10. ;
	format SU_AA_DSB_ADJ2 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ2	DOLLAR9.2 ;
	format SU_NETDSB2			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ3 		MMDDYY10. ;
	format SU_AA_DSB_ADJ3 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ3 	DOLLAR9.2 ;
	format SU_NETDSB3 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ4 		MMDDYY10. ;
	format SU_AA_DSB_ADJ4 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ4 	DOLLAR9.2 ;
	format SU_NETDSB4 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ5 		MMDDYY10. ;
	format SU_AA_DSB_ADJ5 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ5 	DOLLAR9.2 ;
	format SU_NETDSB5 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ6 		MMDDYY10. ;
	format SU_AA_DSB_ADJ6 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ6 	DOLLAR9.2 ;
	format SU_NETDSB6 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ7 		MMDDYY10. ;
	format SU_AA_DSB_ADJ7 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ7 	DOLLAR9.2 ;
	format SU_NETDSB7 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ8 		MMDDYY10. ;
	format SU_AA_DSB_ADJ8 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ8 	DOLLAR9.2 ;
	format SU_NETDSB8 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ9 		MMDDYY10. ;
	format SU_AA_DSB_ADJ9 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ9 	DOLLAR9.2 ;
	format SU_NETDSB9 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ10 		MMDDYY10. ;
	format SU_AA_DSB_ADJ10 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ10 	DOLLAR9.2 ;
	format SU_NETDSB10 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ11 		MMDDYY10. ;
	format SU_AA_DSB_ADJ11 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ11 	DOLLAR9.2 ;
	format SU_NETDSB11 			DOLLAR11.2 ;
	format SU_AD_DSB_ADJ12 		MMDDYY10. ;
	format SU_AA_DSB_ADJ12 		DOLLAR10.2 ;
	format SU_AA_ORG_FEE_ADJ12 	DOLLAR9.2 ;
	format SU_NETDSB12 			DOLLAR11.2 ;
	FORMAT APP_CRT_AMT			DOLLAR11.2;
	FORMAT DF_SPE_ID_BR			$10.;
	FORMAT DF_SPE_ID_STU		$10.;
	format INT_EFF_TO 			$10. ;
if _n_ = 1 then        /* write column names */
 do;
   	put
   	'SSN'
   	','
   	'BWRNAME'
   	','
   	'DX_STR_ADR_1'
   	','
   	'DX_STR_ADR_2'
   	','
   	'DM_CT'
   	','
   	'DC_DOM_ST'
   	','
   	'DF_ZIP'
   	','
   	'DM_FGN_CNY'
   	','
   	'DC_ADR'
   	','
   	'DI_VLD_ADR'
   	','
   	'DF_PRS_ID_STU'
   	','
   	'STUNAME'
   	','
   	'LDR_ID'
   	','
   	'LDR_NAME'
   	','
   	'LDR_ADR_1'
   	','
   	'LDR_ADR_2'
   	','
   	'LDR_ADR_3'
   	','
   	'LDR_CT'
   	','
   	'LDR_ST'
   	','
   	'LDR_ZIP'
   	','
   	'SCL_ID'
   	','
   	'SCL_NAME'
   	','
   	'SCL_ADR1'
   	','
   	'SCL_ADR2'
   	','
   	'SCL_ADR3'
   	','
   	'SCL_CITY'
   	','
   	'SCL_ST'
   	','
   	'SCL_ZIP'
   	','
   	'AD_XPC_GRD'
   	','
   	'AD_IST_TRM_BEG'
   	','
   	'AD_IST_TRM_END'
   	','
   	'NETGTYSUM'
   	','
   	'ACSKEY'
   	','
   	'CLUID'
   	','
   	'AD_PRC'
   	','
   	'AC_LON_TYP'
   	','
   	'NETGTYAMT'
   	','
   	'AA_ORG_TOT'
   	','
   	'NETLONAMT'
   	','
   	'PR_RPD_FOR_ITR'
   	','
   	'SCL_CERT_AMT'
   	','
   	'AD_DSB_ADJ1'
   	','
   	'AA_DSB_ADJ1'
   	','
   	'AA_ORG_FEE_ADJ1'
   	','
   	'NETDSB1'
   	','
   	'AD_DSB_ADJ2'
   	','
   	'AA_DSB_ADJ2'
   	','
   	'AA_ORG_FEE_ADJ2'
   	','
   	'NETDSB2'
   	','
   	'AD_DSB_ADJ3'
   	','
   	'AA_DSB_ADJ3'
   	','
   	'AA_ORG_FEE_ADJ3'
   	','
   	'NETDSB3'
   	','
   	'AD_DSB_ADJ4'
   	','
   	'AA_DSB_ADJ4'
   	','
   	'AA_ORG_FEE_ADJ4'
   	','
   	'NETDSB4'
   	','
   	'AD_DSB_ADJ5'
   	','
   	'AA_DSB_ADJ5'
   	','
   	'AA_ORG_FEE_ADJ5'
   	','
   	'NETDSB5'
   	','
   	'AD_DSB_ADJ6'
   	','
   	'AA_DSB_ADJ6'
   	','
   	'AA_ORG_FEE_ADJ6'
   	','
   	'NETDSB6'
   	','
   	'AD_DSB_ADJ7'
   	','
   	'AA_DSB_ADJ7'
   	','
   	'AA_ORG_FEE_ADJ7'
   	','
   	'NETDSB7'
   	','
   	'AD_DSB_ADJ8'
   	','
   	'AA_DSB_ADJ8'
   	','
   	'AA_ORG_FEE_ADJ8'
   	','
   	'NETDSB8'
   	','
   	'AD_DSB_ADJ9'
   	','
   	'AA_DSB_ADJ9'
   	','
   	'AA_ORG_FEE_ADJ9'
   	','
   	'NETDSB9'
   	','
   	'AD_DSB_ADJ10'
   	','
   	'AA_DSB_ADJ10'
   	','
   	'AA_ORG_FEE_ADJ10'
   	','
   	'NETDSB10'
   	','
   	'AD_DSB_ADJ11'
   	','
   	'AA_DSB_ADJ11'
   	','
   	'AA_ORG_FEE_ADJ11'
   	','
   	'NETDSB11'
   	','
   	'AD_DSB_ADJ12'
   	','
   	'AA_DSB_ADJ12'
   	','
   	'AA_ORG_FEE_ADJ12'
   	','
   	'NETDSB12'
   	','
   	'SU_CLUID'
   	','
   	'SU_AC_LON_TYP'
   	','
   	'SU_NETGTYAMT'
   	','
   	'SU_AA_ORG_TOT'
   	','
   	'SU_NETLONAMT'
   	','
   	'SU_PR_RPD_FOR_ITR'
   	','
   	'SU_SCL_CERT_AMT'
   	','
   	'SU_AD_DSB_ADJ1'
   	','
   	'SU_AA_DSB_ADJ1'
   	','
   	'SU_AA_ORG_FEE_ADJ1'
   	','
   	'SU_NETDSB1'
   	','
   	'SU_AD_DSB_ADJ2'
   	','
   	'SU_AA_DSB_ADJ2'
   	','
   	'SU_AA_ORG_FEE_ADJ2'
   	','
   	'SU_NETDSB2'
   	','
   	'SU_AD_DSB_ADJ3'
   	','
   	'SU_AA_DSB_ADJ3'
   	','
   	'SU_AA_ORG_FEE_ADJ3'
   	','
   	'SU_NETDSB3'
   	','
   	'SU_AD_DSB_ADJ4'
   	','
   	'SU_AA_DSB_ADJ4'
   	','
   	'SU_AA_ORG_FEE_ADJ4'
   	','
   	'SU_NETDSB4'
   	','
   	'SU_AD_DSB_ADJ5'
   	','
   	'SU_AA_DSB_ADJ5'
   	','
   	'SU_AA_ORG_FEE_ADJ5'
   	','
   	'SU_NETDSB5'
   	','
   	'SU_AD_DSB_ADJ6'
   	','
   	'SU_AA_DSB_ADJ6'
   	','
   	'SU_AA_ORG_FEE_ADJ6'
   	','
   	'SU_NETDSB6'
   	','
   	'SU_AD_DSB_ADJ7'
   	','
   	'SU_AA_DSB_ADJ7'
   	','
   	'SU_AA_ORG_FEE_ADJ7'
   	','
   	'SU_NETDSB7'
   	','
   	'SU_AD_DSB_ADJ8'
   	','
   	'SU_AA_DSB_ADJ8'
   	','
   	'SU_AA_ORG_FEE_ADJ8'
   	','
   	'SU_NETDSB8'
   	','
   	'SU_AD_DSB_ADJ9'
   	','
   	'SU_AA_DSB_ADJ9'
   	','
   	'SU_AA_ORG_FEE_ADJ9'
   	','
   	'SU_NETDSB9'
   	','
   	'SU_AD_DSB_ADJ10'
   	','
   	'SU_AA_DSB_ADJ10'
   	','
   	'SU_AA_ORG_FEE_ADJ10'
   	','
   	'SU_NETDSB10'
   	','
   	'SU_AD_DSB_ADJ11'
   	','
   	'SU_AA_DSB_ADJ11'
   	','
   	'SU_AA_ORG_FEE_ADJ11'
   	','
   	'SU_NETDSB11'
   	','
   	'SU_AD_DSB_ADJ12'
   	','
   	'SU_AA_DSB_ADJ12'
   	','
   	'SU_AA_ORG_FEE_ADJ12'
   	','
   	'SU_NETDSB12'
	','
	'APP_CRT_AMT'
	','
	'DF_SPE_ID_BR'
	','
	'DF_SPE_ID_STU'
	','
	'INT_EFF_TO'
	','
	'MPN_TYPE'
   	;
 end;
 do;
   	EFIOUT + 1;
   	put SSN @;
   	put BWRNAME $ @;
   	put DX_STR_ADR_1 $ @;
   	put DX_STR_ADR_2 $ @;
   	put DM_CT $ @;
   	put DC_DOM_ST $ @;
   	put DF_ZIP $ @;
   	put DM_FGN_CNY $ @;
   	put DC_ADR $ @;
   	put DI_VLD_ADR $ @;
   	put DF_PRS_ID_STU $ @;
   	put STUNAME $ @;
   	put LDR_ID $ @;
   	put LDR_NAME $ @;
   	put LDR_ADR_1 $ @;
   	put LDR_ADR_2 $ @;
   	put LDR_ADR_3 $ @;
   	put LDR_CT $ @;
   	put LDR_ST $ @;
   	put LDR_ZIP $ @;
   	put SCL_ID $ @;
   	put SCL_NAME $ @;
   	put SCL_ADR1 $ @;
   	put SCL_ADR2 $ @;
   	put SCL_ADR3 $ @;
   	put SCL_CITY $ @;
   	put SCL_ST $ @;
   	put SCL_ZIP $ @;
   	put AD_XPC_GRD @;
   	put AD_IST_TRM_BEG @;
   	put AD_IST_TRM_END @;
   	put NETGTYSUM @;
   	put ACSKEY $ @;
   	put CLUID $ @;
   	put AD_PRC @;
   	put AC_LON_TYP $ @;
   	put NETGTYAMT @;
   	put AA_ORG_TOT @;
   	put NETLONAMT @;
   	put PR_RPD_FOR_ITR @;
   	put SCL_CERT_AMT @;
   	put AD_DSB_ADJ1 @;
   	put AA_DSB_ADJ1 @;
   	put AA_ORG_FEE_ADJ1 @;
   	put NETDSB1 @;
   	put AD_DSB_ADJ2 @;
   	put AA_DSB_ADJ2 @;
   	put AA_ORG_FEE_ADJ2 @;
   	put NETDSB2 @;
   	put AD_DSB_ADJ3 @;
   	put AA_DSB_ADJ3 @;
   	put AA_ORG_FEE_ADJ3 @;
   	put NETDSB3 @;
   	put AD_DSB_ADJ4 @;
   	put AA_DSB_ADJ4 @;
   	put AA_ORG_FEE_ADJ4 @;
   	put NETDSB4 @;
   	put AD_DSB_ADJ5 @;
   	put AA_DSB_ADJ5 @;
   	put AA_ORG_FEE_ADJ5 @;
   	put NETDSB5 @;
   	put AD_DSB_ADJ6 @;
   	put AA_DSB_ADJ6 @;
   	put AA_ORG_FEE_ADJ6 @;
   	put NETDSB6 @;
   	put AD_DSB_ADJ7 @;
   	put AA_DSB_ADJ7 @;
   	put AA_ORG_FEE_ADJ7 @;
   	put NETDSB7 @;
   	put AD_DSB_ADJ8 @;
   	put AA_DSB_ADJ8 @;
   	put AA_ORG_FEE_ADJ8 @;
   	put NETDSB8 @;
   	put AD_DSB_ADJ9 @;
   	put AA_DSB_ADJ9 @;
   	put AA_ORG_FEE_ADJ9 @;
   	put NETDSB9 @;
   	put AD_DSB_ADJ10 @;
   	put AA_DSB_ADJ10 @;
   	put AA_ORG_FEE_ADJ10 @;
   	put NETDSB10 @;
   	put AD_DSB_ADJ11 @;
   	put AA_DSB_ADJ11 @;
   	put AA_ORG_FEE_ADJ11 @;
   	put NETDSB11 @;
   	put AD_DSB_ADJ12 @;
   	put AA_DSB_ADJ12 @;
   	put AA_ORG_FEE_ADJ12 @;
   	put NETDSB12 @;
   	put SU_CLUID $ @;
   	put SU_AC_LON_TYP $ @;
   	put SU_NETGTYAMT @;
   	put SU_AA_ORG_TOT @;
   	put SU_NETLONAMT @;
   	put SU_PR_RPD_FOR_ITR @;
   	put SU_SCL_CERT_AMT @;
   	put SU_AD_DSB_ADJ1 @;
   	put SU_AA_DSB_ADJ1 @;
   	put SU_AA_ORG_FEE_ADJ1 @;
   	put SU_NETDSB1 @;
   	put SU_AD_DSB_ADJ2 @;
   	put SU_AA_DSB_ADJ2 @;
   	put SU_AA_ORG_FEE_ADJ2 @;
   	put SU_NETDSB2 @;
   	put SU_AD_DSB_ADJ3 @;
   	put SU_AA_DSB_ADJ3 @;
   	put SU_AA_ORG_FEE_ADJ3 @;
   	put SU_NETDSB3 @;
   	put SU_AD_DSB_ADJ4 @;
   	put SU_AA_DSB_ADJ4 @;
   	put SU_AA_ORG_FEE_ADJ4 @;
   	put SU_NETDSB4 @;
   	put SU_AD_DSB_ADJ5 @;
   	put SU_AA_DSB_ADJ5 @;
   	put SU_AA_ORG_FEE_ADJ5 @;
   	put SU_NETDSB5 @;
   	put SU_AD_DSB_ADJ6 @;
   	put SU_AA_DSB_ADJ6 @;
   	put SU_AA_ORG_FEE_ADJ6 @;
   	put SU_NETDSB6 @;
   	put SU_AD_DSB_ADJ7 @;
   	put SU_AA_DSB_ADJ7 @;
   	put SU_AA_ORG_FEE_ADJ7 @;
   	put SU_NETDSB7 @;
   	put SU_AD_DSB_ADJ8 @;
   	put SU_AA_DSB_ADJ8 @;
   	put SU_AA_ORG_FEE_ADJ8 @;
   	put SU_NETDSB8 @;
   	put SU_AD_DSB_ADJ9 @;
   	put SU_AA_DSB_ADJ9 @;
   	put SU_AA_ORG_FEE_ADJ9 @;
   	put SU_NETDSB9 @;
   	put SU_AD_DSB_ADJ10 @;
   	put SU_AA_DSB_ADJ10 @;
   	put SU_AA_ORG_FEE_ADJ10 @;
   	put SU_NETDSB10 @;
   	put SU_AD_DSB_ADJ11 @;
   	put SU_AA_DSB_ADJ11 @;
   	put SU_AA_ORG_FEE_ADJ11 @;
   	put SU_NETDSB11 @;
   	put SU_AD_DSB_ADJ12 @;
   	put SU_AA_DSB_ADJ12 @;
   	put SU_AA_ORG_FEE_ADJ12 @;
   	put SU_NETDSB12 @;
	PUT APP_CRT_AMT @;
	PUT DF_SPE_ID_BR $ @;
	PUT DF_SPE_ID_STU $ @;
	PUT INT_EFF_TO $ @;
	PUT MPN_TYPE $;
   	;
end;
if _ERROR_ then call symput('_EFIERR_',1);  /* set ERROR detection macro variable */
If EFIEOD then
   call symput('_EFIREC_',EFIOUT);
run;
%MEND;

*All Stafford Loans with valid address;
%STAF(DISCGL, REPORT2, %STR(WHERE DI_VLD_ADR = "Y"));
*All Stafford Loans with invalid address;
%STAF(DISCGL, REPORT3, %STR(WHERE DI_VLD_ADR = "N"));
*All Westminster loans;
%STAF(DISCGL, REPORT4, %STR(WHERE SCL_ID = '00368100'));
PROC SORT DATA=DISCGL;
BY SCL_ID SSN;
RUN;
%STAF(DISCGL, REPORT10,
	%STR(WHERE SCL_ID IN('03030600','03030601','03030603','03030604','03030605','03030606')));

%MACRO PLUS(DS, OUT, COND);
data _null_;
set  &DS end=EFIEOD;
&COND;
%let _EFIERR_ = 0; /* set the ERROR detection macro variable */
%let _EFIREC_ = 0;     /* clear export record count macro variable */
file &OUT delimiter=',' DSD DROPOVER lrecl=32767;
   format SSN SSN11. ;
   format AF_APL_ID $17. ;
   format CLUID $19. ;
   format AD_PRC MMDDYY10. ;
   format AC_LON_TYP $2. ;
   format BWRNAME $50. ;
   format DX_STR_ADR_1 $35. ;
   format DX_STR_ADR_2 $35. ;
   format DM_CT $30. ;
   format DC_DOM_ST $2. ;
   format DF_ZIP $14. ;
   format DM_FGN_CNY $25. ;
   format DC_ADR $1. ;
   format DI_VLD_ADR $1. ;
   format DF_PRS_ID_STU $9. ;
   format STUNAME $50. ;
   format LDR_ID $8. ;
   format LDR_NAME $40. ;
   format LDR_ADR_1 $40. ;
   format LDR_ADR_2 $40. ;
   format LDR_ADR_3 $40. ;
   format LDR_CT $30. ;
   format LDR_ST $2. ;
   format LDR_ZIP $14. ;
   format SCL_ID $8. ;
   format SCL_NAME $40. ;
   format SCL_ADR1 $40. ;
   format SCL_ADR2 $40. ;
   format SCL_ADR3 $40. ;
   format SCL_CITY $30. ;
   format SCL_ST $2. ;
   format SCL_ZIP $14. ;
   format AD_XPC_GRD MMDDYY10. ;
   format NETGTYAMT COMMA17.2 ;
   format AA_ORG_TOT DOLLAR12.2 ;
   format NETLONAMT DOLLAR29.2 ;
   format PR_RPD_FOR_ITR 8.3 ;
   format SCL_CERT_AMT DOLLAR12.2 ;
   format AD_IST_TRM_BEG MMDDYY10. ;
   format AD_IST_TRM_END MMDDYY10. ;
   format NETGTYSUM DOLLAR12.2 ;
   format AD_DSB_ADJ1 MMDDYY10. ;
   format AA_DSB_ADJ1 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ1 DOLLAR9.2 ;
   format NETDSB1 DOLLAR11.2 ;
   format AD_DSB_ADJ2 MMDDYY10. ;
   format AA_DSB_ADJ2 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ2 DOLLAR9.2 ;
   format NETDSB2 DOLLAR11.2 ;
   format AD_DSB_ADJ3 MMDDYY10. ;
   format AA_DSB_ADJ3 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ3 DOLLAR9.2 ;
   format NETDSB3 DOLLAR11.2 ;
   format AD_DSB_ADJ4 MMDDYY10. ;
   format AA_DSB_ADJ4 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ4 DOLLAR9.2 ;
   format NETDSB4 DOLLAR11.2 ;
   format AD_DSB_ADJ5 MMDDYY10. ;
   format AA_DSB_ADJ5 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ5 DOLLAR9.2 ;
   format NETDSB5 DOLLAR11.2 ;
   format AD_DSB_ADJ6 MMDDYY10. ;
   format AA_DSB_ADJ6 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ6 DOLLAR9.2 ;
   format NETDSB6 DOLLAR11.2 ;
   format AD_DSB_ADJ7 MMDDYY10. ;
   format AA_DSB_ADJ7 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ7 DOLLAR9.2 ;
   format NETDSB7 DOLLAR11.2 ;
   format AD_DSB_ADJ8 MMDDYY10. ;
   format AA_DSB_ADJ8 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ8 DOLLAR9.2 ;
   format NETDSB8 DOLLAR11.2 ;
   format AD_DSB_ADJ9 MMDDYY10. ;
   format AA_DSB_ADJ9 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ9 DOLLAR9.2 ;
   format NETDSB9 DOLLAR11.2 ;
   format AD_DSB_ADJ10 MMDDYY10. ;
   format AA_DSB_ADJ10 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ10 DOLLAR9.2 ;
   format NETDSB10 DOLLAR11.2 ;
   format AD_DSB_ADJ11 MMDDYY10. ;
   format AA_DSB_ADJ11 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ11 DOLLAR9.2 ;
   format NETDSB11 DOLLAR11.2 ;
   format AD_DSB_ADJ12 MMDDYY10. ;
   format AA_DSB_ADJ12 DOLLAR10.2 ;
   format AA_ORG_FEE_ADJ12 DOLLAR9.2 ;
   format NETDSB12 DOLLAR11.2 ;
   format LST_AD_DSB_ADJ MMDDYY10. ;
   format ACSKEY $18. ;
   format TOT_CAP_INT COMMA10.2 ;
   format REPAY_PRIN DOLLAR10.2 ;
   format PMT DOLLAR10.2 ;
   format TOT_REPAY_AMT COMMA10.2 ;
   format NUM_PAY best12. ;
   format LAST_PMT DOLLAR10.2 ;
   format REPAY_INT COMMA10.2 ;
   format INT_EFF_TO $10. ;
   format PMT_DT $10. ;
   format LAST_PMT_DT $10. ;
	FORMAT DF_SPE_ID_BR			$10.;
	FORMAT DF_SPE_ID_STU		$10.;
	FORMAT MPN_TYPE $6.;

if _n_ = 1 then        /* write column names */
 do;
   put
   'SSN'
   ','
   'AF_APL_ID'
   ','
   'CLUID'
   ','
   'AD_PRC'
   ','
   'AC_LON_TYP'
   ','
   'BWRNAME'
   ','
   'DX_STR_ADR_1'
   ','
   'DX_STR_ADR_2'
   ','
   'DM_CT'
   ','
   'DC_DOM_ST'
   ','
   'DF_ZIP'
   ','
   'DM_FGN_CNY'
   ','
   'DC_ADR'
   ','
   'DI_VLD_ADR'
   ','
   'DF_PRS_ID_STU'
   ','
   'STUNAME'
   ','
   'LDR_ID'
   ','
   'LDR_NAME'
   ','
   'LDR_ADR_1'
   ','
   'LDR_ADR_2'
   ','
   'LDR_ADR_3'
   ','
   'LDR_CT'
   ','
   'LDR_ST'
   ','
   'LDR_ZIP'
   ','
   'SCL_ID'
   ','
   'SCL_NAME'
   ','
   'SCL_ADR1'
   ','
   'SCL_ADR2'
   ','
   'SCL_ADR3'
   ','
   'SCL_CITY'
   ','
   'SCL_ST'
   ','
   'SCL_ZIP'
   ','
   'AD_XPC_GRD'
   ','
   'NETGTYAMT'
   ','
   'AA_ORG_TOT'
   ','
   'NETLONAMT'
   ','
   'PR_RPD_FOR_ITR'
   ','
   'SCL_CERT_AMT'
   ','
   'AD_IST_TRM_BEG'
   ','
   'AD_IST_TRM_END'
   ','
   'NETGTYSUM'
   ','
   'AD_DSB_ADJ1'
   ','
   'AA_DSB_ADJ1'
   ','
   'AA_ORG_FEE_ADJ1'
   ','
   'NETDSB1'
   ','
   'AD_DSB_ADJ2'
   ','
   'AA_DSB_ADJ2'
   ','
   'AA_ORG_FEE_ADJ2'
   ','
   'NETDSB2'
   ','
   'AD_DSB_ADJ3'
   ','
   'AA_DSB_ADJ3'
   ','
   'AA_ORG_FEE_ADJ3'
   ','
   'NETDSB3'
   ','
   'AD_DSB_ADJ4'
   ','
   'AA_DSB_ADJ4'
   ','
   'AA_ORG_FEE_ADJ4'
   ','
   'NETDSB4'
   ','
   'AD_DSB_ADJ5'
   ','
   'AA_DSB_ADJ5'
   ','
   'AA_ORG_FEE_ADJ5'
   ','
   'NETDSB5'
   ','
   'AD_DSB_ADJ6'
   ','
   'AA_DSB_ADJ6'
   ','
   'AA_ORG_FEE_ADJ6'
   ','
   'NETDSB6'
   ','
   'AD_DSB_ADJ7'
   ','
   'AA_DSB_ADJ7'
   ','
   'AA_ORG_FEE_ADJ7'
   ','
   'NETDSB7'
   ','
   'AD_DSB_ADJ8'
   ','
   'AA_DSB_ADJ8'
   ','
   'AA_ORG_FEE_ADJ8'
   ','
   'NETDSB8'
   ','
   'AD_DSB_ADJ9'
   ','
   'AA_DSB_ADJ9'
   ','
   'AA_ORG_FEE_ADJ9'
   ','
   'NETDSB9'
   ','
   'AD_DSB_ADJ10'
   ','
   'AA_DSB_ADJ10'
   ','
   'AA_ORG_FEE_ADJ10'
   ','
   'NETDSB10'
   ','
   'AD_DSB_ADJ11'
   ','
   'AA_DSB_ADJ11'
   ','
   'AA_ORG_FEE_ADJ11'
   ','
   'NETDSB11'
   ','
   'AD_DSB_ADJ12'
   ','
   'AA_DSB_ADJ12'
   ','
   'AA_ORG_FEE_ADJ12'
   ','
   'NETDSB12'
   ','
   'LST_AD_DSB_ADJ'
   ','
   'ACSKEY'
   ','
   'TOT_CAP_INT'
   ','
   'REPAY_PRIN'
   ','
   'PMT'
   ','
   'TOT_REPAY_AMT'
   ','
   'NUM_PAY'
   ','
   'LAST_PMT'
   ','
   'REPAY_INT'
   ','
   'INT_EFF_TO'
   ','
   'PMT_DT'
   ','
   'LAST_PMT_DT'
	','
	'DF_SPE_ID_BR'
	','
	'DF_SPE_ID_STU'
	','
	'MPN_TYPE'
   ;
 end;
 do;
   EFIOUT + 1;
   put SSN @;
   put AF_APL_ID $ @;
   put CLUID $ @;
   put AD_PRC @;
   put AC_LON_TYP $ @;
   put BWRNAME $ @;
   put DX_STR_ADR_1 $ @;
   put DX_STR_ADR_2 $ @;
   put DM_CT $ @;
   put DC_DOM_ST $ @;
   put DF_ZIP $ @;
   put DM_FGN_CNY $ @;
   put DC_ADR $ @;
   put DI_VLD_ADR $ @;
   put DF_PRS_ID_STU $ @;
   put STUNAME $ @;
   put LDR_ID $ @;
   put LDR_NAME $ @;
   put LDR_ADR_1 $ @;
   put LDR_ADR_2 $ @;
   put LDR_ADR_3 $ @;
   put LDR_CT $ @;
   put LDR_ST $ @;
   put LDR_ZIP $ @;
   put SCL_ID $ @;
   put SCL_NAME $ @;
   put SCL_ADR1 $ @;
   put SCL_ADR2 $ @;
   put SCL_ADR3 $ @;
   put SCL_CITY $ @;
   put SCL_ST $ @;
   put SCL_ZIP $ @;
   put AD_XPC_GRD @;
   put NETGTYAMT @;
   put AA_ORG_TOT @;
   put NETLONAMT @;
   put PR_RPD_FOR_ITR @;
   put SCL_CERT_AMT $ @;
   put AD_IST_TRM_BEG @;
   put AD_IST_TRM_END @;
   put NETGTYSUM @;
   put AD_DSB_ADJ1 @;
   put AA_DSB_ADJ1 @;
   put AA_ORG_FEE_ADJ1 @;
   put NETDSB1 @;
   put AD_DSB_ADJ2 @;
   put AA_DSB_ADJ2 @;
   put AA_ORG_FEE_ADJ2 @;
   put NETDSB2 @;
   put AD_DSB_ADJ3 @;
   put AA_DSB_ADJ3 @;
   put AA_ORG_FEE_ADJ3 @;
   put NETDSB3 @;
   put AD_DSB_ADJ4 @;
   put AA_DSB_ADJ4 @;
   put AA_ORG_FEE_ADJ4 @;
   put NETDSB4 @;
   put AD_DSB_ADJ5 @;
   put AA_DSB_ADJ5 @;
   put AA_ORG_FEE_ADJ5 @;
   put NETDSB5 @;
   put AD_DSB_ADJ6 @;
   put AA_DSB_ADJ6 @;
   put AA_ORG_FEE_ADJ6 @;
   put NETDSB6 @;
   put AD_DSB_ADJ7 @;
   put AA_DSB_ADJ7 @;
   put AA_ORG_FEE_ADJ7 @;
   put NETDSB7 @;
   put AD_DSB_ADJ8 @;
   put AA_DSB_ADJ8 @;
   put AA_ORG_FEE_ADJ8 @;
   put NETDSB8 @;
   put AD_DSB_ADJ9 @;
   put AA_DSB_ADJ9 @;
   put AA_ORG_FEE_ADJ9 @;
   put NETDSB9 @;
   put AD_DSB_ADJ10 @;
   put AA_DSB_ADJ10 @;
   put AA_ORG_FEE_ADJ10 @;
   put NETDSB10 @;
   put AD_DSB_ADJ11 @;
   put AA_DSB_ADJ11 @;
   put AA_ORG_FEE_ADJ11 @;
   put NETDSB11 @;
   put AD_DSB_ADJ12 @;
   put AA_DSB_ADJ12 @;
   put AA_ORG_FEE_ADJ12 @;
   put NETDSB12 @;
   put LST_AD_DSB_ADJ @;
   put ACSKEY $ @;
   put TOT_CAP_INT @;
   put REPAY_PRIN @;
   put PMT @;
   put TOT_REPAY_AMT @;
   put NUM_PAY @;
   put LAST_PMT @;
   put REPAY_INT @;
   put INT_EFF_TO $ @;
   put PMT_DT $ @;
   put LAST_PMT_DT $ @;
	PUT DF_SPE_ID_BR $ @;
	PUT DF_SPE_ID_STU $ @;
	PUT MPN_TYPE $;
   ;
 end;
if _ERROR_ then call symput('_EFIERR_',1);  /* set ERROR detection macro variable */
If EFIEOD then
   call symput('_EFIREC_',EFIOUT);
run;
%MEND;

*All Plus loans with valid address;
%PLUS(DISCPL, REPORT5, %STR(WHERE DI_VLD_ADR = "Y"));
*All Plus loans with invalid address;
%PLUS(DISCPL, REPORT6, %STR(WHERE DI_VLD_ADR = "N"));
*Westminster Plus loans regardless of valid address;
%PLUS(DISCPL, REPORT7, %STR(WHERE SCL_ID = '00368100'));
PROC SORT DATA=DISCPL;
BY SCL_ID SSN;
RUN;
*UCMT loans regardless of valid address;
%PLUS(DISCPL, REPORT11,
	%STR(WHERE SCL_ID IN('03030600','03030601','03030603','03030604','03030605','03030606')));

*BAD ADDRESS REPORT;
DATA INVADR (KEEP = SSN CLUID AC_LON_TYP NETGTYAMT);
SET DISC;
WHERE DI_VLD_ADR = 'N';
RUN;

PROC SORT DATA=INVADR;
BY SSN CLUID;
RUN;

DATA _NULL_;
CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'beginning'), MMDDYY10.));
RUN;

/*PROC PRINTTO PRINT=REPORT8;
RUN;*/
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=126;
PROC PRINT NOOBS SPLIT='/' DATA=INVADR WIDTH=UNIFORM WIDTH=MIN N='NUMBER OF LOANS:  ';
VAR SSN CLUID AC_LON_TYP NETGTYAMT;
LABEL SSN='BORROWER SSN' CLUID='COMMONLINE UNIQUE ID' 
AC_LON_TYP='LOAN TYPE' NETGTYAMT='NET GUARANTY AMOUNT';
FORMAT SSN SSN11. NETGTYAMT DOLLAR12.2;
TITLE 'BORROWERS WITH INVALID ADDRESSES - NO DISCLOSURE CREATED';
TITLE2 "DISCLOSURE DATE: &RUNDATE";
FOOTNOTE  'JOB = QSASL01     REPORT = QSASL01.R8';
RUN;

*RE-ASSIGN LOANS AS BASE/SERIAL/ESIGN;
DATA DISC ;
LENGTH AC_LON_TYP $ 10;
FORMAT AC_LON_TYP $10.;
SET DISC;
LENGTH MPN_TYPE $ 6;
IF (BASEID = ' ' OR BASEID EQ AF_APL_ID) AND ELSIND NE 'E' THEN MPN_TYPE = 'NEW';
ELSE IF (BASEID NE ' ' AND BASEID NE AF_APL_ID) THEN MPN_TYPE = 'SERIAL';
ELSE IF (BASEID = ' ' OR BASEID EQ AF_APL_ID) AND ELSIND EQ 'E' THEN MPN_TYPE = 'E-SIGN';
ELSE MPN_TYPE = 'ERROR';		/*ERROR DETECTION VALUE*/
RUN;

/*PROC PRINTTO PRINT=REPORT9;
RUN;*/
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=126;
PROC REPORT DATA=DISC NOWD SPACING=1 /*HEADSKIP*/ HEADLINE SPLIT='/';
TITLE 'DAILY DISCLOSURE TOTALS';
TITLE2 "DATE: &RUNDATE";
FOOTNOTE  'JOB = QSASL01     REPORT = QSASL01.R9';
COLUMN MPN_TYPE AC_LON_TYP N;
DEFINE MPN_TYPE / GROUP "MPN TYPE" WIDTH=10;
DEFINE AC_LON_TYP / GROUP "LOAN TYPE" WIDTH=10;
DEFINE N /  FORMAT=COMMA8. "LOANS";
COMPUTE AFTER MPN_TYPE;
AC_LON_TYP = "SUBTOTAL:";
ENDCOMP;
BREAK AFTER MPN_TYPE / SUMMARIZE SKIP DOL DUL SUPPRESS;
COMPUTE AFTER;
MPN_TYPE = "TOTAL:";
ENDCOMP;
RBREAK AFTER / SUMMARIZE SKIP DOL DUL SUPPRESS;
RUN;