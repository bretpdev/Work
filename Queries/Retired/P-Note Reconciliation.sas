/*DSASI02 - PNOTE RECONCILIATION
THIS JOB CREATES THE VERY LARGE TEXT FILE FORMATTED FOR PORTRAIT 
PRINTING W/ .5 LEFT & RIGHT MARGINS
"C:\WINDOWS\TEMP\DSASI02.R2", plus the comma-delimited text file 
"C:\WINDOWS\TEMP\DSASI02.R3"*/

libname  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=work  ;
RSUBMIT;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);

/*IDENTIFY ALL OPEN LOANS*/
CREATE TABLE PNMAIN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT integer(A.DF_PRS_ID_BR) as SSN
	,A.AF_APL_ID
	,A.AF_BS_MPN_APL_ID AS BASEID
	,CASE 
	 WHEN AC_ELS_LON = 'E'
	 THEN AC_ELS_LON
	 ELSE ' '
	 END AS AI_BR_SIG
	,A.AI_BR_SIG as AI_BR_SIG2
	,AC_ELS_LON
	,C.AC_LON_STA_TYP
FROM  OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.GA14_LON_STA C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
LEFT OUTER JOIN
	/*MOST RECENT CLAIM INFO IF ANY*/
	(SELECT X.BF_SSN
		,X.AF_APL_ID
		,X.AF_APL_ID_SFX
		,X.LC_STA_DC10
		,X.LD_CLM_ASN_DOE
	FROM OLWHRM1.DC01_LON_CLM_INF X
	WHERE X.LD_LDR_POF =
		(SELECT MAX(Y.LD_LDR_POF)
		FROM OLWHRM1.DC01_LON_CLM_INF Y
		WHERE X.BF_SSN = Y.BF_SSN
		AND X.AF_APL_ID = Y.AF_APL_ID
		AND X.AF_APL_ID_SFX = Y.AF_APL_ID_SFX
		)
	)DC01
	ON B.AF_APL_ID = DC01.AF_APL_ID

WHERE B.AC_PRC_STA = 'A'
AND C.AC_STA_GA14 = 'A'
AND B.AF_CUR_LON_SER_AGY <> '700121'
AND (B.AC_LON_TYP IN ('SF','PL','SL','SU')
	OR (B.AC_LON_TYP = 'CL'
		AND B.AF_CUR_LON_SER_AGY = '700126')
	)
AND B.AA_GTE_LON_AMT > 0
AND C.AC_LON_STA_TYP NOT IN ('CA','PC','PF','PM','PN','RF')
AND NOT 
	(C.AC_LON_STA_TYP = 'CP'
	AND ((DC01.LC_STA_DC10 = '04')
		OR
		(DC01.LC_STA_DC10 = '03'
		AND DC01.LD_CLM_ASN_DOE IS NOT NULL)
	)	)


ORDER BY A.DF_PRS_ID_BR, B.AD_PRC
);

/*IDENTIFY ALL BASE/ANNUAL APPLICATIONS*/
CREATE TABLE PNBASE AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT integer(A.DF_PRS_ID_BR) as SSN
	,DF_PRS_ID_BR
	,RTRIM(D.DM_PRS_1) AS DM_PRS_1
	,RTRIM(D.DM_PRS_LST) AS DM_PRS_LST
	,COALESCE(COALESCE(A.AD_STU_SIG,A.AD_BR_SIG),A.AD_APL_RCV) AS STU_SIG
	,A.AF_APL_OPS_SCL
	,A.AF_CUR_APL_OPS_LDR
	,A.AF_APL_ID
FROM  OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.PD01_PDM_INF D
	on A.DF_PRS_ID_BR = D.DF_PRS_ID
WHERE B.AC_PRC_STA = 'A'
AND A.AF_BS_MPN_APL_ID IS NULL

);

/*IDENTIFY ALL BASES PREVIOUSLY RECONCILED*/
CREATE TABLE PNDONE AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT
	integer(A.DF_PRS_ID) as SSN
	,SUBSTR(A.BX_CMT,1,17) AS AF_APL_ID
FROM  OLWHRM1.AY01_BR_ATY A
WHERE A.PF_ACT = 'MPROM'
);

/*IDENTIFY ALL BASE/SERIAL LOANS FOR DATA FILE*/
CREATE TABLE PNLOANS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT
	A.DF_PRS_ID_BR
	,B.AF_APL_ID
	,B.AF_APL_ID||B.AF_APL_ID_SFX AS CLUID
	,A.AF_BS_MPN_APL_ID
FROM  OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
WHERE B.AC_PRC_STA = 'A'
);

/*IDENTIFY AF_APL_IDs WITH A LOAN SALE DATE BEFORE 3/1/03 FOR EXCLUSION*/
CREATE TABLE EX1 AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT INT(C.BF_SSN) AS SSN
	,C.AF_CNL AS AF_APL_ID
FROM OLWHRM1.LN90_FIN_ATY A
INNER JOIN OLWHRM1.LN15_DSB B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
INNER JOIN OLWHRM1.AP03_MASTER_APL C
	ON B.AF_APL_ID = C.AF_APL_ID
WHERE A.PC_FAT_TYP = '04'
AND A.PC_FAT_SUB_TYP = '96'
AND A.LN_FAT_SEQ <> 0

);

/*IDENTIFY NELNET SERVICED LOANS FOR EXCLUSION*/
CREATE TABLE EX2 AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT INT(A.DF_PRS_ID_BR) AS SSN
	,A.AF_APL_ID 
FROM OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.DC02_BAL_INT C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
WHERE ((B.AF_CUR_LON_SER_AGY = '700121'		
		AND B.AD_LON_SLD < '03/01/2003')	
		OR (B.AF_CUR_LON_SER_AGY NOT IN ('700121','700126')
		AND B.AD_LON_SLD < '07/01/2003'))
AND B.AC_PRC_STA = 'A'
);

/*IDENTIFY CANCELLED LOANS OLDER THAN 12 MONTHS FOR EXCLUSION*/
CREATE TABLE EX3 AS 
SELECT *
FROM CONNECTION TO DB2(
SELECT DISTINCT INT(A.DF_PRS_ID_BR) AS SSN
	,A.AF_APL_ID
FROM  OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.GA14_LON_STA C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
WHERE C.AC_STA_GA14 = 'A'
AND C.AC_LON_STA_TYP = 'CA'
AND DAYS(C.AD_LON_STA) < DAYS(CURRENT DATE) - 365
);

DISCONNECT FROM DB2;

/***************CREATE MPN-LEVEL MPN INFO DATASET FOR R2******************/
/*IDENTIFY BASES THAT ARE OPEN LOANS*/
*rsubmit;

PROC SORT DATA=PNMAIN;BY AF_APL_ID;RUN;
PROC SORT DATA=PNBASE;BY AF_APL_ID;RUN;
DATA PNALL1;
MERGE PNMAIN (IN=A) PNBASE (IN=B);
BY AF_APL_ID;
IF A=B;
RUN;

/*IDENTIFY BASES THAT HAVE OPEN SERIAL LOANS*/
PROC SORT DATA=PNMAIN;BY BASEID;RUN;
DATA PNBASE;
SET PNBASE;
BASEID = AF_APL_ID;
RUN;
DATA PNALL2;
MERGE PNMAIN (IN=A KEEP=SSN BASEID) PNBASE (IN=B);
BY BASEID;
IF A=B;
RUN;

/*COMBINE OPEN BASES WITH BASES THAT HAVE OPEN SERIALS*/
DATA PNALL;
SET PNALL1 PNALL2;
PNOTE = '______';
JUMASTER = '______';
BASEID = SUBSTR(AF_APL_ID,13,5);
RUN;

/*REMOVE DUPLICATES WHERE AN OPEN BASE ALSO HAS OPEN SERIALS*/
PROC SORT DATA=PNALL NODUPKEY;
BY SSN AF_APL_ID;
RUN;

/*REMOVE ALL BASES WITH AN MPROM ACTION CODE (ALREADY RECONCILED)*/
PROC SORT DATA=PNDONE NODUPKEY;BY SSN AF_APL_ID;RUN;
DATA PNALL /*(DROP=AF_APL_ID AF_BS_MPN_APL_ID)*/;
MERGE PNALL (IN=A) PNDONE (IN=B);
BY SSN AF_APL_ID;
IF A AND NOT B;
RUN;

/*SORT EX DATA SETS AND MERGE FIRST 2 TO EXCLUDE LOANS*/
PROC SORT DATA=EX1;BY SSN AF_APL_ID;RUN;
PROC SORT DATA=EX2;BY SSN AF_APL_ID;RUN;
PROC SORT DATA=EX3;BY SSN AF_APL_ID;RUN;
DATA EXCLD1;
MERGE EX1 (IN=A) EX2 (IN=B);
BY SSN AF_APL_ID;
IF A = B ;
RUN;

/*EXCLUDE NELNET SERVICED LOANS WITH A LOAN SALE DATE BEFORE 3/1/03*/
DATA PNALL;
MERGE PNALL (IN=A) EXCLD1 (IN=B);
BY SSN AF_APL_ID;
IF A AND NOT B;
RUN;

/*EXCLUDE CANCELLED LOANS OLDER THAN 12 MONTHS*/
DATA PNALL;
MERGE PNALL (IN=X) EX3 (IN=Z);
BY SSN AF_APL_ID;
IF X AND NOT Z;
RUN;

/***************CREATE MPN-LEVEL LOAN INFO DATASET FOR R3******************/
*RSUBMIT;
/*CREATE SEPARATE DATASETS FOR BASE AND SERIAL LOANS*/
PROC SORT DATA=PNLOANS;BY DF_PRS_ID_BR CLUID;RUN;
DATA PNBLOANS PNSLOANS;
SET PNLOANS;
IF AF_BS_MPN_APL_ID = ' ' THEN OUTPUT PNBLOANS;
ELSE OUTPUT PNSLOANS;
RUN;

/*LIMIT BASE LOANS TO ONLY BASE LOANS SELECTED BY MAIN QUERY*/
DATA PNBLOANS (KEEP=DF_PRS_ID_BR BASEID STU_SIG AF_APL_ID CLUID);
MERGE PNALL (IN=A) PNBLOANS (IN=B);
BY DF_PRS_ID_BR AF_APL_ID;
IF A;
RUN;

ENDRSUBMIT  ;
DATA PNALL; SET WORKLOCL.PNALL; RUN;
DATA PNBLOANS; SET WORKLOCL.PNBLOANS; RUN;
DATA PNSLOANS; SET WORKLOCL.PNSLOANS; RUN;

/*TRANSPOSE BASE CLUIDS INTO A SINGLE VARIABLE*/
DATA PNBLOANS (DROP=CLUID);
SET PNBLOANS;
BY DF_PRS_ID_BR AF_APL_ID;
LENGTH BAS_AGG $600;
RETAIN BAS_AGG;
IF FIRST.AF_APL_ID THEN BAS_AGG = CLUID;
ELSE BAS_AGG = TRIM(BAS_AGG)||' '||CLUID;
IF LAST.AF_APL_ID THEN OUTPUT;
RUN;

/*CREATE SERIAL MERGE VARIABLE*/
DATA PNSLOANS (DROP=AF_BS_MPN_APL_ID);
SET PNSLOANS;
AF_APL_ID = AF_BS_MPN_APL_ID;
RUN;
PROC SORT DATA=PNSLOANS;
BY DF_PRS_ID_BR AF_APL_ID;
RUN;
/*LIMIT SERIAL LOANS TO ONLY THOSE WITH BASE LOANS SELECTED BY MAIN QUERY*/
DATA PNSLOANS (KEEP=DF_PRS_ID_BR BASEID STU_SIG AF_APL_ID CLUID);
MERGE PNALL (IN=A) PNSLOANS (IN=B);
BY DF_PRS_ID_BR AF_APL_ID;
IF A;
RUN;
/*TRANSPOSE SERIAL CLUIDS INTO A SINGLE VARIABLE*/
DATA PNSLOANS (DROP=CLUID);
SET PNSLOANS;
BY DF_PRS_ID_BR AF_APL_ID;
LENGTH SER_AGG $600;
RETAIN SER_AGG;
IF FIRST.AF_APL_ID THEN SER_AGG = CLUID;
ELSE SER_AGG = TRIM(SER_AGG)||' '||CLUID;
IF LAST.AF_APL_ID THEN OUTPUT;
RUN;

/*MERGE SERIAL AND BASE LOAN DATASETS*/
DATA PNLOANS (DROP=AF_APL_ID);
MERGE PNBLOANS (IN=A) PNSLOANS (IN=B);
BY DF_PRS_ID_BR AF_APL_ID BASEID STU_SIG;
RUN;


/*CREATE RECONCILIATION REPORT*/
/*PROC PRINTTO PRINT="C:\WINDOWS\TEMP\DSASI02.R2" NEW;*/
/*RUN;*/

/*OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=100 PS=70;*/
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1;
PROC REPORT DATA=PNALL NOWD SPACING=1 HEADSKIP SPLIT='/';
TITLE "PROMISSORY NOTE RECONCILIATION REPORT";
FOOTNOTE  'JOB = ON DEMAND DSASI02    REPORT = PNOTE RECONCILIATION';
COLUMN SSN
DM_PRS_1
DM_PRS_LST
STU_SIG
AF_APL_OPS_SCL
AF_CUR_APL_OPS_LDR
BASEID
AC_LON_STA_TYP
AI_BR_SIG
PNOTE
JUMASTER;
DEFINE SSN / DISPLAY GROUP "SSN" FORMAT=SSN11. LEFT;
DEFINE DM_PRS_1 / DISPLAY GROUP "FIRST NAME" WIDTH=10;
DEFINE DM_PRS_LST / DISPLAY GROUP "LAST NAME" WIDTH=15;
DEFINE STU_SIG / DISPLAY "STD SIGN" FORMAT=MMDDYY10.;
DEFINE AF_APL_OPS_SCL / DISPLAY "SCHOOL";
DEFINE AF_CUR_APL_OPS_LDR / DISPLAY "ORIG/LNDR" WIDTH=6;
DEFINE BASEID / DISPLAY "BASE/MPN ID" WIDTH=6;
DEFINE AC_LON_STA_TYP / DISPLAY "LOAN/STATUS" WIDTH=6;
DEFINE AI_BR_SIG / DISPLAY "E-SIGN" WIDTH=6;
DEFINE PNOTE / DISPLAY "P-NOTE?" WIDTH=7;
DEFINE JUMASTER / DISPLAY "VuMaster" WIDTH=10;

COMPUTE AFTER SSN;
LINE ' ';
ENDCOMP;
RUN;
PROC PRINTTO;
RUN;
OPTIONS PS=54;

/*CREATE SERIALS DATAFILE FOR SCRIPT USE*/
DATA _NULL_;
SET PNLOANS;
FILE 'C:\WINDOWS\TEMP\DSASI02.R3' DELIMITER=',' DSD DROPOVER LRECL=32767;
/*FILE 'X:\PADD\FTP\DSASI02.R3' DELIMITER=',' DSD DROPOVER LRECL=32767;*/
FORMAT DF_PRS_ID_BR $9. ;
FORMAT BASEID $17. ;
FORMAT STU_SIG MMDDYY10.;
FORMAT BAS_AGG $quote. ;
FORMAT SER_AGG $quote. ;
DO;
	PUT DF_PRS_ID_BR $ @;
	PUT BASEID $ @;
	PUT STU_SIG @;
	PUT BAS_AGG $ @;
	PUT SER_AGG $ ;
	;
	END;
RUN;
