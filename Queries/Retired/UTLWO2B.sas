/*UHEAA LOAN SALE TRIGGER FILE PROCESS - DEVELOPMENT VERSION*/

/*THIS CODE USES DIFFERENT SCRIPT-PRODUCED FILES ON LINES 68-70 
THAN THE PRODUCTION LOAN SALE JOB, UTLWO02: utlwo2_1_dev.txt 
INSTEAD OF utlwo2_1.txt . THIS JOB ALSO USES A SEPARATE LOCKDOWN FILE.

UTLWO02 CODE IN DEVELOPMENT MAY BE TESTED USING THIS JOB WITHOUT 
INTERFERING WITH THE PRODUCTION LOAN SALE PROCESS.*/

LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
FILENAME REPORT2 "&RPTLIB/ULWO2B.LWO2BR2";
FILENAME REPORT10 "&RPTLIB/ULWO2B.LWO2BR10";
FILENAME REPORT11 "&RPTLIB/ULWO2B.LWO2BR11";
FILENAME REPORT12 "&RPTLIB/ULWO2B.LWO2BR12";
FILENAME REPORT13 "&RPTLIB/ULWO2B.LWO2BR13";
FILENAME REPORT14 "&RPTLIB/ULWO2B.LWO2BR14";
FILENAME REPORT15 "&RPTLIB/ULWO2B.LWO2BR15";
FILENAME REPORT16 "&RPTLIB/ULWO2B.LWO2BR16";
FILENAME REPORT30 "&RPTLIB/ULWO2B.LWO2BR30";
FILENAME REPORT31 "&RPTLIB/ULWO2B.LWO2BR31";
FILENAME REPORT32 "&RPTLIB/ULWO2B.LWO2BR32";
FILENAME REPORT33 "&RPTLIB/ULWO2B.LWO2BR33";
FILENAME REPORT34 "&RPTLIB/ULWO2B.LWO2BR34";
FILENAME REPORT50 "&RPTLIB/ULWO2B.LWO2BR50";
FILENAME REPORT51 "&RPTLIB/ULWO2B.LWO2BR51";
FILENAME REPORT52 "&RPTLIB/ULWO2B.LWO2BR52";
FILENAME REPORT53 "&RPTLIB/ULWO2B.LWO2BR53";
FILENAME REPORT54 "&RPTLIB/ULWO2B.LWO2BR54";
FILENAME REPORT70 "&RPTLIB/ULWO2B.LWO2BR70";
FILENAME REPORT71 "&RPTLIB/ULWO2B.LWO2BR71";
FILENAME REPORT72 "&RPTLIB/ULWO2B.LWO2BR72";
FILENAME REPORT73 "&RPTLIB/ULWO2B.LWO2BR73";
FILENAME REPORT74 "&RPTLIB/ULWO2B.LWO2BR74";
FILENAME REPORT75 "&RPTLIB/ULWO2B.LWO2BR75";
FILENAME REPORT90 "&RPTLIB/ULWO2B.LWO2BR90";


/************************************************************************************/
/************************VARIABLE AND DATASET INITIALIZATION*************************/
/************************************************************************************/

%LET NELNET = '829769','826717','830248','999775';
%LET SLMA = '888885';
%LET INHOUSE = '828476';

OPTIONS SYMBOLGEN;
DATA _NULL_;
*CALL SYMPUT('EOM4',"'"||PUT(INTNX('MONTH',TODAY(),-4,'end'), MMDDYYD10.)||"'");
CALL SYMPUT('EOM4',"'"||PUT(INTNX('MONTH',TODAY(),-4,'end'), DATE9.)||"'D");
CALL SYMPUT('EOM5',"'"||PUT(INTNX('MONTH',TODAY(),-5,'end'), DATE9.)||"'D");
CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'beginning'), MMDDYY10.));
RUN;

/*LOCAL EXECUTION VARIABLE TRANSLATION - COMMENT FOR PRODUCTION!*/
/*%SYSLPUT EOM4 = &EOM4;*/
/*%SYSLPUT INHOUSE = &INHOUSE;*/
/*%SYSLPUT NELNET = &NELNET;*/
/*%SYSLPUT SLMA = &SLMA;*/

/************************************************************************************/
/**********READ SALE FLAT FILE FOR SALES SCHEDULED FOR TODAY AND THEIR TYPE**********/
/************************************************************************************/

/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK  ;*/
/*RSUBMIT;*/
LIBNAME OLRPLD V8 '/sas/whse/olrp_lookup_directory';
FILENAME SALEFILE "/sas/whse/olrp_lookup_directory/utlwo2_1_dev.txt";
FILENAME SLCRIT2 "/sas/whse/olrp_lookup_directory/utlwo2_2_dev.txt";
FILENAME SLCRIT3 "/sas/whse/olrp_lookup_directory/utlwo2_3_dev.txt";

DATA SLIST;
TODAY = TODAY();
INFILE SALEFILE DLM="," DSD MISSOVER;
INFORMAT P1DATE P2DATE PLDATE FDATE MMDDYY8.;
FORMAT TODAY P1DATE P2DATE PLDATE FDATE MMDDYY10.;
INPUT SALEID $ SELLID $ BUYID $ P1DATE P2DATE PLDATE FDATE ;
IF TODAY = FDATE THEN TYPE = 'F';
ELSE IF TODAY = PLDATE THEN TYPE = 'L';
ELSE IF TODAY = P1DATE OR TODAY = P2DATE THEN TYPE = 'P';
ELSE TYPE = ' ';
IF TYPE NE ' ' THEN OUTPUT;
RUN;

%MACRO ABORTIF;
%LET DSID=%SYSFUNC(OPEN(WORK.SLIST));
%LET HASOBS=%SYSFUNC(ATTRN(&DSID,ANY));
%LET RC=%SYSFUNC(CLOSE(&DSID));
%IF &HASOBS=0 %THEN
	%DO;
    	DATA _NULL_;
			PUT 37*'*';
            PUT "NO LOAN SALES SCHEDULED FOR &SYSDATE9.";
			PUT 37*'*';
			ABORT RETURN;  			/******UNCOMMENT FOR PRODUCTION******/
        RUN;
    %END;
%MEND ABORTIF;
%ABORTIF;

/*COUNT THE NUMBER OF SALES TO PROCESS INTO THE MACRO VAR SALE_CT*/
DATA _NULL_;
SET SLIST;
CALL SYMPUT ('SALE_CT',TRIM(_N_));
RUN;

/*CREATE LIST OF SELLING LENDERS*/
PROC SORT DATA=SLIST  OUT=LDRS (KEEP=SELLID) NODUPKEY;
BY SELLID;
RUN;
DATA _NULL_;
LENGTH LIST $200;
SET LDRS END=LAST;
RETAIN LIST;
IF _N_=1 THEN LIST = "'"||TRIM(SELLID)||"'";
ELSE LIST = TRIM(LIST)||",'"||TRIM(SELLID)||"'";
IF LAST;
CALL SYMPUT ('LDR_LST',LIST);
RUN;

PROC SORT DATA=SLIST;
BY SALEID BUYID;
RUN;

/************************************************************************************/
/*******************SQL PRIMARY DATA SELECTION***************************************/
/************************************************************************************/

*RSUBMIT;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);

CREATE TABLE MAIN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.IF_DOE_LDR
	,A.BF_SSN
	,A.LF_LON_ALT
	,'0'||CHAR(A.LN_LON_ALT_SEQ) AS LN_LON_ALT_SEQ
	,A.LN_SEQ
	,A.LC_STA_LON10
	,A.LA_CUR_PRI
	,COALESCE(A.LA_NSI_OTS,0) AS LA_NSI_OTS
	,A.LD_NSI_ACR_THU
	,LN72.LR_ITR
	,A.IC_LON_PGM
	,A.IF_GTR
	,A.LD_LON_GTR
	,A.LD_TRM_END
	,A.LF_LON_CUR_OWN
	,C.LD_SCL_SPR
	,C.LC_REA_SCL_SPR
	,C.LD_NTF_SCL_SPR
	,C.REPAY_BEG_DT
	,E.MUL_SEP_IND
	,G.MIN_ACT_DSB
	,G.MAX_ACT_DSB
	,DW01.WC_DW_LON_STA
	,F.FUL_DSB_IND
	,AP10.AD_SIG_SCL
	,LN33.LD_CU_END
	,LN33.LC_CU_REA_END
	,PD24.DD_BKR_DCH_RCV
	,A.LA_LON_AMT_GTR
	,DW01.WA_TOT_BRI_OTS
	,A.LD_PNT_SIG
	,A.LD_TRM_BEG
	,A.LC_ACA_GDE_LEV
	,A.LF_DOE_SCL_ORG
	,A.LF_STU_SSN
	,AP10.AD_SIG_BR
	,C.LF_DOE_SCL_ENR_CUR
	,NON.NON_USB_WAMU
	,BRSUM.TOT_PRI_BR
	,BRUSAF.IND_USAF

	,LN20.LF_EDS
	,LN20.LC_EDS_TYP
	,LN20.LC_REL_TO_BR

FROM  OLWHRM1.LN10_LON A 
/*GET LOAN STATUS*/
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
	ON A.BF_SSN = DW01.BF_SSN
	AND A.LN_SEQ = DW01.LN_SEQ

/*GET LAST ACTUAL DISBURSEMENT DATE FOR LATE DISB CHECK*/
INNER JOIN
	(SELECT BF_SSN
		,LN_SEQ
		,MIN(LD_DSB) AS MIN_ACT_DSB
		,MAX(LD_DSB) AS MAX_ACT_DSB
	FROM OLWHRM1.LN15_DSB
	WHERE LC_STA_LON15 IN ('1','3')
	AND LC_DSB_TYP = '2'
	AND COALESCE(LA_DSB_CAN,0) <> LA_DSB
	GROUP BY BF_SSN, LN_SEQ
	) G
	ON A.BF_SSN = G.BF_SSN
	AND A.LN_SEQ = G.LN_SEQ

/*GET BORROWER TOTAL PRINCIPAL BALANCE*/
INNER JOIN
	(SELECT BF_SSN
	,SUM(LA_CUR_PRI) AS TOT_PRI_BR
	FROM OLWHRM1.LN10_LON A
	GROUP BY BF_SSN
	)BRSUM
	ON A.BF_SSN = BRSUM.BF_SSN

/*GET CURRENT INTEREST RATE*/
LEFT OUTER JOIN 
	(SELECT X.BF_SSN
	,X.LN_SEQ
	,X.LR_ITR
	FROM  OLWHRM1.LN72_INT_RTE_HST X
	WHERE X.LC_STA_LON72 = 'A'
	AND X.LD_ITR_EFF_BEG <= CURRENT DATE
	AND X.LD_ITR_EFF_END >= CURRENT DATE
	)LN72
	ON A.BF_SSN = LN72.BF_SSN
	AND A.LN_SEQ = LN72.LN_SEQ

/*SET INDICATOR IF BORROWER HAS OPEN, RELEASED USAF LOANS*/
LEFT OUTER JOIN
	(SELECT DISTINCT BF_SSN
	,'Y' AS IND_USAF
	FROM OLWHRM1.LN10_LON
	WHERE IF_GTR = '000800'
	AND LA_CUR_PRI > 0
	AND LC_STA_LON10 = 'R'
	)BRUSAF
	ON A.BF_SSN = BRUSAF.BF_SSN

/*GET BANKRUPTCY DISCHARGE INFO*/
LEFT OUTER JOIN
	(SELECT DF_PRS_ID
		,MAX(DD_BKR_DCH_RCV) AS DD_BKR_DCH_RCV
	FROM  OLWHRM1.PD24_PRS_BKR
	WHERE DC_BKR_STA = '05'
	GROUP BY DF_PRS_ID) PD24
	ON A.BF_SSN = PD24.DF_PRS_ID

/*GET ANY CURE INFO FOR THE LOAN*/
LEFT OUTER JOIN OLWHRM1.LN33_LON_CU_INF LN33
	ON A.BF_SSN = LN33.BF_SSN
	AND A.LN_SEQ = LN33.LN_SEQ
	AND LN33.LC_CU_CND IN ('R','S')
	AND LN33.LD_CU_END IS NOT NULL
	AND LN33.LC_CU_REA_END IN ('C','F','N')

/*GET SEPARATION DATE & REPAY BEGIN DATE INFO*/
LEFT OUTER JOIN 
	(SELECT C.BF_SSN
		,C.LN_SEQ
		,D.LD_SCL_SPR
		,D.LC_REA_SCL_SPR
		,D.LD_NTF_SCL_SPR
		,DATE(DAYS(C.LD_END_GRC_PRD_ALI) + 1) AS REPAY_BEG_DT
		,D.LF_DOE_SCL_ENR_CUR
	FROM OLWHRM1.LN13_LON_STU_OSD C
	INNER JOIN OLWHRM1.SD10_STU_SPR D
	ON C.LF_STU_SSN = D.LF_STU_SSN
	AND C.LN_STU_SPR_SEQ = D.LN_STU_SPR_SEQ
	AND C.LC_STA_LON13 = 'A'
	AND D.LC_STA_STU10 = 'A'
	)C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
	
/*GET SCHOOL SIGN/CERT DATE FROM LO SIDE AP10 TABLE*/
LEFT OUTER JOIN 
	(SELECT Y.BF_SSN
		,Y.AD_SIG_SCL
		,Y.AD_SIG_BR
		,Z.LN_SEQ
	FROM OLWHRM1.AP10_APL Y
	INNER JOIN OLWHRM1.GR10_RPT_LON_APL Z
		ON Y.BF_SSN = Z.BF_SSN
		AND Y.AN_SEQ = Z.AN_SEQ
	) AP10
	ON A.BF_SSN = AP10.BF_SSN
	AND A.LN_SEQ = AP10.LN_SEQ

/*COUNT NUMBER OF SEPARATION DATES AT BWR LEVEL*/
LEFT OUTER JOIN 
	(SELECT X.BF_SSN
		,COUNT(DISTINCT Y.LD_SCL_SPR) AS MUL_SEP_IND
	FROM OLWHRM1.LN13_LON_STU_OSD X
	INNER JOIN OLWHRM1.SD10_STU_SPR Y
		ON X.LF_STU_SSN = Y.LF_STU_SSN
		AND X.LN_STU_SPR_SEQ = Y.LN_STU_SPR_SEQ
		AND Y.LC_STA_STU10 = 'A'
		AND X.LC_STA_LON13 = 'A'
	INNER JOIN OLWHRM1.LN10_LON Z
		ON X.BF_SSN = Z.BF_SSN
		AND X.LN_SEQ = Z.LN_SEQ
		AND Z.LC_STA_LON10 = 'R'
		AND Z.LA_CUR_PRI > 0
		AND Z.LF_LON_CUR_OWN <> '828476'
	GROUP BY X.BF_SSN
	) E
	ON A.BF_SSN = E.BF_SSN
/*SET INDICATOR FOR FULLY DISBURSED LOANS*/
LEFT OUTER JOIN 
	(SELECT DISTINCT X.BF_SSN
		,X.LN_SEQ
		,'Y' AS FUL_DSB_IND
	FROM OLWHRM1.LN15_DSB X
	WHERE NOT EXISTS
		(SELECT *
		FROM OLWHRM1.LN15_DSB Y
		WHERE X.BF_SSN = Y.BF_SSN
		AND X.LN_SEQ = Y.LN_SEQ
		AND Y.LC_STA_LON15 IN ('1','3')
		AND Y.LC_DSB_TYP = '1'
		AND (Y.LA_DSB_CAN IS NULL
		    OR Y.LA_DSB_CAN <> Y.LA_DSB)
		)
	) F
	ON A.BF_SSN = F.BF_SSN
	AND A.LN_SEQ = F.LN_SEQ
/*SET INDICATOR IF BWR HAS OPEN, RELEASED LOAN AT A LENDER OTHER THAN USB OR WAM*/
LEFT OUTER JOIN
	(SELECT DISTINCT X.BF_SSN
	,'Y' AS NON_USB_WAMU
	FROM OLWHRM1.LN10_LON X
	WHERE X.LC_STA_LON10 = 'R'
	AND X.LA_CUR_PRI > 0
	AND X.LF_LON_CUR_OWN NOT IN ('811698','829505')
	)NON
	ON A.BF_SSN = NON.BF_SSN
/*GATHER ENDORSER INFO - ONE ENDORSER PER LOAN*/
LEFT OUTER JOIN OLWHRM1.LN20_EDS LN20
	ON A.BF_SSN = LN20.BF_SSN
	AND A.LN_SEQ = LN20.LN_SEQ
	AND LN20.LC_STA_LON20 = 'A'

WHERE A.LF_LON_CUR_OWN IN (&LDR_LST)
);

/*RSUBMIT;PROC SQL STIMER;CONNECT TO DB2 (DATABASE=DLGSUTWH);*/
CREATE TABLE ONELINK AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.BF_SSN
	,A.LN_SEQ
	,GA10.AF_CUR_LON_SER_AGY
	,GA10.AF_CUR_LON_OPS_LDR

FROM  OLWHRM1.LN10_LON A 
/*GET ONELINK DATA*/
INNER JOIN OLWHRM1.GA10_LON_APP GA10
	ON A.LF_LON_ALT = GA10.AF_APL_ID
	AND '0'||CHAR(A.LN_LON_ALT_SEQ) = GA10.AF_APL_ID_SFX

WHERE A.LF_LON_CUR_OWN IN (&LDR_LST)
);

/*GET DATA FOR PLUS LOANS WITH CANCELED DISBURSEMENTS*/
CREATE TABLE PLSCAN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT LN15.BF_SSN
	,LN15.LN_SEQ
	,LN15.LD_DSB AS PLS_CAN_LD_DSB
	,LN15.LA_DSB AS PLS_CAN_LA_DSB
	,ARC.PLS_CAN_EFF_DT
FROM OLWHRM1.LN15_DSB LN15
LEFT OUTER JOIN 
	/*GET PLUS CANCELLATION EFFECTIVE DATE FROM ARC, IF ANY*/
	(SELECT LN85.BF_SSN
	,LN85.LN_SEQ
	,SUBSTR(AY20.LX_ATY,1,8) AS PLS_CAN_EFF_DT
	FROM OLWHRM1.LN85_LON_ATY LN85
	INNER JOIN OLWHRM1.AY10_BR_LON_ATY AY10
		ON LN85.BF_SSN = AY10.BF_SSN
		AND LN85.LN_ATY_SEQ = AY10.LN_ATY_SEQ
	INNER JOIN OLWHRM1.AY20_ATY_TXT AY20
		ON AY10.BF_SSN = AY20.BF_SSN
		AND AY10.LN_ATY_SEQ = AY20.LN_ATY_SEQ
	WHERE AY10.LC_STA_ACTY10 = 'A'
	AND AY10.PF_REQ_ACT = 'RPLCA'
	)ARC
	ON LN15.BF_SSN = ARC.BF_SSN
	AND LN15.LN_SEQ = ARC.LN_SEQ
WHERE LN15.LC_STA_LON15 IN ('1','3') /*ACTIVE ROW*/
AND COALESCE(LN15.LA_DSB_CAN,0) = LN15.LA_DSB /*FULLY CANCELED*/
AND LN15.LD_DSB =
	(SELECT MAX(Y.LD_DSB)
	FROM OLWHRM1.LN15_DSB Y
	WHERE LN15.BF_SSN = Y.BF_SSN
	AND LN15.LN_SEQ = Y.LN_SEQ
	AND Y.LC_STA_LON15 IN ('1','3') /*ACTIVE ROW*/)
);


/*SET INDICATOR IF BWR HAS AN OPEN LOAN SERVICED INHOUSE OR NELNET OR SLMA*/
/*SET INDICATOR IF BWR HAS OPEN LOANS SERVICED BY NLN OR SLMA WITH ZERO PRIN+INT*/
CREATE TABLE OTHSVC AS
SELECT DF_PRS_ID_BR
,MAX(OTH_NLN_IND) AS OTH_NLN_IND
,MAX(OTH_SLM_IND) AS OTH_SLM_IND
,MAX(OTH_INH_IND) AS OTH_INH_IND
,MAX(ZRO_NLN_IND) AS ZRO_NLN_IND
,MAX(ZRO_SLM_IND) AS ZRO_SLM_IND
FROM CONNECTION TO DB2 (
SELECT X.DF_PRS_ID_BR
	,CASE WHEN Y.AF_CUR_LON_SER_AGY = '700121'
		THEN 'Y'
		END AS OTH_NLN_IND
	,CASE WHEN Y.AF_CUR_LON_SER_AGY IN ('700191','700004','700789','700190','700079')
		THEN 'Y'
		END AS OTH_SLM_IND
	,CASE WHEN Y.AF_CUR_LON_OPS_LDR = '828476'
		THEN 'Y'
		END AS OTH_INH_IND
	,CASE WHEN COALESCE(Y.AA_CUR_PRI,0) + COALESCE(Y.AA_OTS_ACR_INT,0) = 0
		AND Y.AF_CUR_LON_SER_AGY = '700121'
		THEN 'Y'
		END AS ZRO_NLN_IND
	,CASE WHEN COALESCE(Y.AA_CUR_PRI,0) + COALESCE(Y.AA_OTS_ACR_INT,0) = 0
		AND Y.AF_CUR_LON_SER_AGY IN ('700191','700004','700789','700190','700079')
		THEN 'Y'
		END AS ZRO_SLM_IND
FROM  OLWHRM1.GA01_APP X 
INNER JOIN OLWHRM1.GA10_LON_APP Y
	ON X.AF_APL_ID = Y.AF_APL_ID
INNER JOIN OLWHRM1.GA14_LON_STA Z
	ON Y.AF_APL_ID = Z.AF_APL_ID
	AND Y.AF_APL_ID_SFX = Z.AF_APL_ID_SFX
	AND Z.AC_STA_GA14 = 'A'
WHERE Z.AC_LON_STA_TYP IN ('CR','DA','FB','IA','ID','IG','IM','RF','RP','UA','UB')
AND (Y.AF_CUR_LON_SER_AGY IN ('700121','700191','700004','700789','700190','700079')
	OR Y.AF_CUR_LON_OPS_LDR = '828476')
)
GROUP BY DF_PRS_ID_BR;


/*GET PDEM INFO FOR BWR, STU, EDS*/
CREATE TABLE PDEM AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT B.DF_PRS_ID
,CASE PD10.DM_PRS_LST_SFX
	WHEN ' ' 
	THEN RTRIM(PD10.DM_PRS_LST)||', '||RTRIM(PD10.DM_PRS_1)||' '||PD10.DM_PRS_MID 
	ELSE RTRIM(PD10.DM_PRS_LST)||' '||PD10.DM_PRS_LST_SFX||', '||RTRIM(PD10.DM_PRS_1)||' '||PD10.DM_PRS_MID
	END AS NAME
,PD10.DD_BRT
,B.DC_ADR
,B.DI_VLD_ADR
,B.DX_STR_ADR_1
,B.DX_STR_ADR_2
,B.DX_STR_ADR_3
,B.DM_CT
,B.DC_DOM_ST
,B.DF_ZIP_CDE
,B.DM_FGN_CNY
,B.DM_FGN_ST
,'('||C.DN_DOM_PHN_ARA||') '||C.DN_DOM_PHN_XCH||'-'||C.DN_DOM_PHN_LCL AS H_PHN
,C.DI_PHN_VLD AS H_PHN_VLD
,'('||D.DN_DOM_PHN_ARA||') '||D.DN_DOM_PHN_XCH||'-'||D.DN_DOM_PHN_LCL AS W_PHN
,'('||E.DN_DOM_PHN_ARA||') '||E.DN_DOM_PHN_XCH||'-'||E.DN_DOM_PHN_LCL AS A_PHN

FROM OLWHRM1.PD10_PRS_NME PD10
INNER JOIN OLWHRM1.PD30_PRS_ADR B
	ON PD10.DF_PRS_ID = B.DF_PRS_ID
	AND B.DC_ADR = 'L'
INNER JOIN OLWHRM1.PD42_PRS_PHN C
	ON B.DF_PRS_ID = C.DF_PRS_ID
	AND C.DC_PHN = 'H'
LEFT OUTER JOIN OLWHRM1.PD42_PRS_PHN D
	ON B.DF_PRS_ID = D.DF_PRS_ID
	AND D.DC_PHN = 'W'
LEFT OUTER JOIN OLWHRM1.PD42_PRS_PHN E
	ON B.DF_PRS_ID = E.DF_PRS_ID
	AND E.DC_PHN = 'A'
);


/*GATHER DISBURSEMENT INFO*/
CREATE TABLE DISB AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT D1.BF_SSN
,A.LN_SEQ
,D1.LD_DSB AS LD_DSB1
,D1.LA_DSB AS LA_DSB1
,D1.LD_DSB_CAN AS LD_DSB_CAN1
,D1.LA_DSB_CAN AS LA_DSB_CAN1

,D2.LD_DSB AS LD_DSB2
,D2.LA_DSB AS LA_DSB2
,D2.LD_DSB_CAN AS LD_DSB_CAN2
,D2.LA_DSB_CAN AS LA_DSB_CAN2

,D3.LD_DSB AS LD_DSB3
,D3.LA_DSB AS LA_DSB3
,D3.LD_DSB_CAN AS LD_DSB_CAN3
,D3.LA_DSB_CAN AS LA_DSB_CAN3

,D4.LD_DSB AS LD_DSB4
,D4.LA_DSB AS LA_DSB4
,D4.LD_DSB_CAN AS LD_DSB_CAN4
,D4.LA_DSB_CAN AS LA_DSB_CAN4

,D5.LD_DSB AS LD_DSB5
,D5.LA_DSB AS LA_DSB5
,D5.LD_DSB_CAN AS LD_DSB_CAN5
,D5.LA_DSB_CAN AS LA_DSB_CAN5

,D6.LD_DSB AS LD_DSB6
,D6.LA_DSB AS LA_DSB6
,D6.LD_DSB_CAN AS LD_DSB_CAN6
,D6.LA_DSB_CAN AS LA_DSB_CAN6

FROM OLWHRM1.LN10_LON A 
INNER JOIN OLWHRM1.LN15_DSB D1
	ON A.BF_SSN = D1.BF_SSN
	AND A.LN_SEQ = D1.LN_SEQ
	AND D1.LC_STA_LON15 IN ('1','3')
	AND D1.LN_LON_DSB_SEQ = 1
LEFT OUTER JOIN OLWHRM1.LN15_DSB D2
	ON D1.BF_SSN = D2.BF_SSN
	AND D1.LN_SEQ = D2.LN_SEQ
	AND D2.LC_STA_LON15 IN ('1','3')
	AND D2.LN_LON_DSB_SEQ = 2
LEFT OUTER JOIN OLWHRM1.LN15_DSB D3
	ON D1.BF_SSN = D3.BF_SSN
	AND D1.LN_SEQ = D3.LN_SEQ
	AND D3.LC_STA_LON15 IN ('1','3')
	AND D3.LN_LON_DSB_SEQ = 3
LEFT OUTER JOIN OLWHRM1.LN15_DSB D4
	ON D1.BF_SSN = D4.BF_SSN
	AND D1.LN_SEQ = D4.LN_SEQ
	AND D4.LC_STA_LON15 IN ('1','3')
	AND D4.LN_LON_DSB_SEQ = 4
LEFT OUTER JOIN OLWHRM1.LN15_DSB D5
	ON D1.BF_SSN = D5.BF_SSN
	AND D1.LN_SEQ = D5.LN_SEQ
	AND D5.LC_STA_LON15 IN ('1','3')
	AND D5.LN_LON_DSB_SEQ = 5
LEFT OUTER JOIN OLWHRM1.LN15_DSB D6
	ON D1.BF_SSN = D6.BF_SSN
	AND D1.LN_SEQ = D6.LN_SEQ
	AND D6.LC_STA_LON15 IN ('1','3')
	AND D6.LN_LON_DSB_SEQ = 6

/*KEY BANK LOANS ONLY*/
WHERE A.LF_LON_CUR_OWN = '813760UT'
);

/*GET LOAN SALE IDS*/
CREATE TABLE SALEIDS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT IF_LON_SLE AS SALEID
	,IF_SLL_OWN
	,IF_BUY_OWN
	,ID_LON_SLE
	,IF_BUY_BND_ISS
	,ID_SEL_NXT_PLR
FROM OLWHRM1.OW30_LON_SLE_CTL
WHERE IC_LON_SLE_STA = 'O' /*OPEN LOAN SALES*/
AND IC_SEL_CRI_USR_APV = 'A' /*USER APPROVED SALES*/
AND IC_LON_SLE_TYP IN ('S','T') /*DECONVERSION SALE OR ON-SYSTEM TRANSFER*/
AND IC_LON_SLE_SEL_TYP = 'T' /*TRIGGER SALE*/
ORDER BY IF_LON_SLE
);
DISCONNECT FROM DB2;

*RSUBMIT;
/*merge the sub selects here*/
PROC SQL STIMER;
CREATE TABLE LNSALE_MAST AS
SELECT *
FROM MAIN A
LEFT OUTER JOIN ONELINK B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN PLSCAN C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
	AND A.IC_LON_PGM = 'PLUS'
LEFT OUTER JOIN OTHSVC D
	ON A.BF_SSN = D.DF_PRS_ID_BR
LEFT OUTER JOIN DISB G
	ON A.BF_SSN = G.BF_SSN
	AND A.LN_SEQ = G.LN_SEQ
;

CREATE TABLE LNSALE_MAST AS
SELECT A.*
,B.*
,C.NAME AS NAME_STU
,C.DD_BRT AS DD_BRT_STU
,C.DC_ADR AS DC_ADR_STU
,C.DI_VLD_ADR AS DI_VLD_ADR_STU
,C.DX_STR_ADR_1 AS DX_STR_ADR_1_STU
,C.DX_STR_ADR_2 AS DX_STR_ADR_2_STU
,C.DX_STR_ADR_3 AS DX_STR_ADR_3_STU
,C.DM_CT AS DM_CT_STU
,C.DC_DOM_ST AS DC_DOM_ST_STU
,C.DF_ZIP_CDE AS DF_ZIP_CDE_STU
,C.DM_FGN_CNY AS DM_FGN_CNY_STU
,C.DM_FGN_ST AS DM_FGN_ST_STU
,C.H_PHN AS H_PHN_STU
,C.H_PHN_VLD AS H_PHN_VLD_STU
,C.W_PHN AS W_PHN_STU
,C.A_PHN AS A_PHN_STU
,D.NAME AS NAME_END
,D.DD_BRT AS DD_BRT_END
,D.DC_ADR AS DC_ADR_END
,D.DI_VLD_ADR AS DI_VLD_ADR_END
,D.DX_STR_ADR_1 AS DX_STR_ADR_1_END
,D.DX_STR_ADR_2 AS DX_STR_ADR_2_END
,D.DX_STR_ADR_3 AS DX_STR_ADR_3_END
,D.DM_CT AS DM_CT_END
,D.DC_DOM_ST AS DC_DOM_ST_END
,D.DF_ZIP_CDE AS DF_ZIP_CDE_END
,D.DM_FGN_CNY AS DM_FGN_CNY_END
,D.DM_FGN_ST AS DM_FGN_ST_END
,D.H_PHN AS H_PHN_END
,D.H_PHN_VLD AS H_PHN_VLD_END
,D.W_PHN AS W_PHN_END
,D.A_PHN AS A_PHN_END
FROM LNSALE_MAST A
INNER JOIN PDEM B
	ON A.BF_SSN = B.DF_PRS_ID
LEFT OUTER JOIN PDEM C
	ON A.LF_STU_SSN = C.DF_PRS_ID
LEFT OUTER JOIN PDEM D
	ON A.LF_EDS = D.DF_PRS_ID
;
QUIT;

*RSUBMIT;
/*IDENTIFY SALE DATE INCONSISTENCIES WITH SYSTEM SALE DATA*/
DATA SLIST SLERRS;
MERGE SLIST (IN=A) SALEIDS (IN=B);
BY SALEID;
LENGTH SALE_ERR $60.;
IF A = B THEN DO;
	IF (TYPE = 'P' OR TYPE = 'L')
		AND ID_SEL_NXT_PLR NE P1DATE
		AND ID_SEL_NXT_PLR NE P2DATE
		AND ID_SEL_NXT_PLR NE PLDATE
		THEN DO;
			SALE_ERR = 'TRIGGER CREATED BUT NO SCHEDULED PRELIMINARY SALE ON COMPASS';
			OUTPUT SLIST;
			END;
	ELSE IF TYPE = 'F'
		AND ID_LON_SLE NE FDATE
		THEN DO;
			SALE_ERR = 'TRIGGER CREATED BUT NO SCHEDULED FINAL SALE ON COMPASS';
			OUTPUT SLIST;
			END;
	ELSE OUTPUT SLIST;
	END;
IF A AND NOT B THEN DO;
	SALE_ERR = 'TRIGGER CREATED BUT NO MATCHING SALE ID ON COMPASS';
	OUTPUT SLIST;
	END;
IF B AND NOT A 
	AND (ID_SEL_NXT_PLR = TODAY
	OR ID_LON_SLE = TODAY) 
	THEN DO;
		SALE_ERR = 'SALE SCHEDULED ON COMPASS BUT NO TRIGGER CREATED';
		OUTPUT SLERRS;
	END;
RUN;


/************************************************************************************/
/****************************BEGIN CRITERIA PROCESSING*******************************/
/************************************************************************************/
*RSUBMIT;
/*FILENAME SLCRIT2 "X:\PADD\Compass\Loan_Sales\Working_Files\utlwo2_2.txt";*/
/*FILENAME SLCRIT3 "X:\PADD\Compass\Loan_Sales\Working_Files\utlwo2_3.txt";*/

/*IMPORT CRITERIA GROUP DATA*/
DATA WORK.SCRIT2                                 ;
INFILE SLCRIT2 DELIMITER = ',' MISSOVER DSD LRECL=32767 ;
INFORMAT SALEID $9. ;
INFORMAT GRP_NO 4. ;
INFORMAT GRP_TYP $3. ;
INFORMAT GRP_DESC $50. ;
FORMAT SALEID $9. ;
FORMAT GRP_NO 4. ;
FORMAT GRP_TYP $3. ;
FORMAT GRP_DESC $50. ;
INPUT
SALEID $
GRP_NO 
GRP_TYP $
GRP_DESC $
;
RUN;

/*IMPORT CRITERIA LIST DATA*/
DATA WORK.SCRIT3;
INFILE SLCRIT3 DELIMITER = ',' MISSOVER DSD LRECL=32767 FIRSTOBS=1 ;
INFORMAT SALEID $9. ;
INFORMAT GRP_NO 4. ;
INFORMAT CRIT_NO $5. ;
INFORMAT CRIT_OPR $4. ;
INFORMAT CRIT_ARG $100. ;
FORMAT SALEID $9. ;
FORMAT GRP_NO 4. ;
FORMAT CRIT_NO $5. ;
FORMAT CRIT_OPR $4. ;
FORMAT CRIT_ARG $100. ;
INPUT
SALEID $
GRP_NO 
CRIT_NO $
CRIT_OPR $
CRIT_ARG $
;
RUN;

/*CREATE MASTER CRITERIA TABLE CRIT*/
PROC SQL;
CREATE TABLE CRIT AS
SELECT A.SALEID
,B.GRP_NO
,B.GRP_TYP
,C.CRIT_NO
,C.CRIT_OPR
,C.CRIT_ARG
FROM SLIST A 
INNER JOIN SCRIT2 B
	ON A.SALEID = B.SALEID
INNER JOIN SCRIT3 C
	ON B.SALEID = C.SALEID
	AND B.GRP_NO = C.GRP_NO
;
QUIT;

/*INTERPRET IMPORTED CRITERIA*/
DATA CRIT (DROP=CRIT_ARG_DT);
SET CRIT;
LENGTH CRIT_STM $100;
/*000 - LOAN STATUS*/
IF CRIT_NO = '000' THEN DO;
	IF CRIT_OPR = 'EQ' 
		THEN CRIT_STM = 'WC_DW_LON_STA IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GT'
		THEN CRIT_STM = 'WC_DW_LON_STA NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GE'
		THEN CRIT_STM = 'WC_DW_LON_STA IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LT'
		THEN CRIT_STM = 'WC_DW_LON_STA NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LE'
		THEN CRIT_STM = 'WC_DW_LON_STA IN '||CRIT_ARG;
	END;
/*004 - GUARANTOR CODE*/
ELSE IF CRIT_NO = '004' THEN DO;
	IF CRIT_OPR = 'EQ'
		THEN CRIT_STM = 'IF_GTR IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GT'
		THEN CRIT_STM = 'IF_GTR NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GE'
		THEN CRIT_STM = 'IF_GTR IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LT'
		THEN CRIT_STM = 'IF_GTR NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LE'
		THEN CRIT_STM = 'IF_GTR IN '||CRIT_ARG;
	END;
/*005 - LOAN PROGRAM*/
ELSE IF CRIT_NO = '005' THEN DO;
	IF CRIT_OPR = 'EQ'
		THEN CRIT_STM = 'IC_LON_PGM IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GT'
		THEN CRIT_STM = 'IC_LON_PGM NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GE'
		THEN CRIT_STM = 'IC_LON_PGM IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LT'
		THEN CRIT_STM = 'IC_LON_PGM NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LE'
		THEN CRIT_STM = 'IC_LON_PGM IN '||CRIT_ARG;
	END;
/*006 - CURRENT PRINCIPAL BALANCE*/
ELSE IF CRIT_NO = '006' THEN DO;
	IF CRIT_OPR = 'EQ'
		THEN CRIT_STM = 'LA_CUR_PRI = '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GT'
		THEN CRIT_STM = 'LA_CUR_PRI > '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GE'
		THEN CRIT_STM = 'LA_CUR_PRI >= '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LT'
		THEN CRIT_STM = 'LA_CUR_PRI < '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LE'
		THEN CRIT_STM = 'LA_CUR_PRI <= '||CRIT_ARG;
	END;
/*021 - SCHOOL SEPARATION DATE*/
ELSE IF CRIT_NO = '021' THEN DO;
	CRIT_ARG = SUBSTR(CRIT_ARG,3,10);
	CRIT_ARG_DT = INPUT(CRIT_ARG,MMDDYY10.);
	IF CRIT_OPR = 'EQ'
		THEN CRIT_STM = 'LD_SCL_SPR = '||CRIT_ARG_DT;
	ELSE IF CRIT_OPR = 'GT'
		THEN CRIT_STM = 'LD_SCL_SPR > '||CRIT_ARG_DT;
	ELSE IF CRIT_OPR = 'GE'
		THEN CRIT_STM = 'LD_SCL_SPR >= '||CRIT_ARG_DT;
	ELSE IF CRIT_OPR = 'LT'
		THEN CRIT_STM = 'LD_SCL_SPR < '||CRIT_ARG_DT;
	ELSE IF CRIT_OPR = 'LE'
		THEN CRIT_STM = 'LD_SCL_SPR <= '||CRIT_ARG_DT;
	END;
/*023 - FULLY ORIGINATED INDICATOR*/
ELSE IF CRIT_NO = '023' THEN DO;
	IF CRIT_OPR = 'EQ'
		THEN CRIT_STM = 'FUL_DSB_IND IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GT'
		THEN CRIT_STM = 'FUL_DSB_IND NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GE'
		THEN CRIT_STM = 'FUL_DSB_IND IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LT'
		THEN CRIT_STM = 'FUL_DSB_IND NOT IN '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LE'
		THEN CRIT_STM = 'FUL_DSB_IND IN '||CRIT_ARG;
	END;
/*027 - ELAPSED DAYS SINCE FINAL DISBURSEMENT*/
ELSE IF CRIT_NO = '027' THEN DO;
	IF CRIT_OPR = 'EQ'
		THEN CRIT_STM = 'MAX_ACT_DSB = &I_FDATE - '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GT'
		THEN CRIT_STM = 'MAX_ACT_DSB < &I_FDATE - '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'GE'
		THEN CRIT_STM = 'MAX_ACT_DSB <= &I_FDATE - '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LT'
		THEN CRIT_STM = 'MAX_ACT_DSB > &I_FDATE - '||CRIT_ARG;
	ELSE IF CRIT_OPR = 'LE'
		THEN CRIT_STM = 'MAX_ACT_DSB >= &I_FDATE - '||CRIT_ARG;
	END;
RUN;


/************************************************************************************/
/************************BEGIN ITERATIVE SALE PROCESSING*****************************/
/************************************************************************************/
*RSUBMIT;
/*INITIALIZE MASTER REPORTING DATASETS*/
DATA SLGE50_MAST;
RUN;
DATA EXCLUDE_MAST;
LENGTH EX_CD $10;
RUN;

*RSUBMIT;
%MACRO EXCLUSION;
PROC APPEND BASE=WORK.EXCLUDE DATA=WORK.EXC;
RUN;
%MEND EXCLUSION;

%MACRO SALE_ITER(I_ITER);

/*CREATE MACRO VARIABLES FOR CURRENT SALE*/
*RSUBMIT;
DATA _NULL_;
SET SLIST;
IF _N_ = &I_ITER THEN DO;
	CALL SYMPUT ('I_SALEID',TRIM(SALEID));
	CALL SYMPUT ('I_SELLID',TRIM(SELLID));
	CALL SYMPUT ('I_BUYID',TRIM(BUYID));
	CALL SYMPUT ('I_TYPE',TRIM(TYPE));
	CALL SYMPUT ('I_FDATE',"'"||PUT(FDATE,DATE9.)||"'D");
	END;
RUN;

/************************************************************************************/
/****************************ASSIGN BUYERS TO EACH LOAN******************************/
/************************************************************************************/

DATA LNSALE EXCLUDE;
SALEID = "&I_SALEID";
/*REMOVE LOANS NOT OWNED BY THE SELLER*/
SET LNSALE_MAST (WHERE = (LF_LON_CUR_OWN EQ "&I_SELLID"));
LENGTH EX_CD $10;
/*CALCULATE CURRENT INTEREST*/
IF WA_TOT_BRI_OTS NE .
THEN CUR_INT = 
	ROUND(SUM(((LA_CUR_PRI)*(SUM(LR_ITR,0)/100/365)*(&I_FDATE-DATE())),WA_TOT_BRI_OTS),.01);
ELSE CUR_INT = SUM(LA_NSI_OTS,0);
LENGTH BUYER $ 8.;
/*ASSIGN INHOUSE SALES*/
IF (OTH_INH_IND = ' ' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = ' ')
OR (OTH_INH_IND = 'Y' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = ' ')
OR (OTH_INH_IND = 'Y' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = 'Y')
OR (OTH_INH_IND = ' ' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = 'Y')
THEN BUYER = 'INHOUSE';
/*ASSIGN NELNET SALES*/
ELSE IF (OTH_INH_IND = 'Y' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = ' ')
OR (OTH_INH_IND = 'Y' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = 'Y')
OR (OTH_INH_IND = ' ' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = ' ')
OR (OTH_INH_IND = ' ' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = 'Y')
THEN BUYER = 'NELNET';
/*ASSIGN SLMA SALES*/
ELSE IF (OTH_INH_IND = 'Y' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = ' ')
OR (OTH_INH_IND = 'Y' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = ' ')
OR (OTH_INH_IND = ' ' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = ' ')
OR (OTH_INH_IND = ' ' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = ' ')
THEN BUYER = 'SLMA';
/*SET ASIDE LOANS WITH MULTIPLE SERVICERS*/
ELSE DO; 
	BUYER = 'MULTI'; 
	EX_CD = 'MULTI_SVC';
	OUTPUT EXCLUDE; 
	END;
/*REMOVE LOANS NOT BEING SOLD TO THIS BUYER*/
IF "&I_BUYID" IN (&NELNET) THEN DO;
	IF BUYER EQ "NELNET" THEN OUTPUT LNSALE;
	END;
ELSE IF "&I_BUYID" IN (&INHOUSE) THEN DO;
	IF BUYER EQ "INHOUSE" THEN OUTPUT LNSALE;
	END;
ELSE IF "&I_BUYID" IN (&SLMA) THEN DO;
	IF BUYER EQ "SLMA" THEN OUTPUT LNSALE;
	END;
RUN;


/************************************************************************************/
/**************************APPLY LOAN LEVEL CRITERIA*********************************/
/************************************************************************************/
*RSUBMIT;
/*COUNT THE NUMBER OF GROUPS TO PROCESS AS MACRO VAR &I_GRP_CT*/
PROC SORT DATA=CRIT OUT=I_GRP_CT NODUPKEY;
BY SALEID GRP_NO;
RUN;
DATA _NULL_;
SET I_GRP_CT;
WHERE SALEID = "&I_SALEID";
CALL SYMPUT ('I_GRP_CT',_N_);
RUN;

/*APPLY INCLUSION AND EXCLUSION CRITERIA LISTS*/
/*%MACRO GRP_ITER;*/
%DO N=1 %TO &I_GRP_CT ;
	%PUT GRP_ITER = &N;

	/*CREATE SINGLE CRITERIA STATEMENT FOR CURRENT GROUP*/
	DATA _NULL_;
	SET CRIT END=EOF;
	WHERE SALEID = "&I_SALEID"
	AND GRP_NO = INPUT("&N.",4.);
	LENGTH CRIT_STRING $500.;
	RETAIN CRIT_STRING;
	IF _N_ = 1 THEN CRIT_STRING = CRIT_STM;
	ELSE CRIT_STRING = TRIM(CRIT_STRING) ||' AND '||CRIT_STM;
	IF EOF THEN DO;
		CALL SYMPUT ('I_CRIT_STRING','('||TRIM(CRIT_STRING)||')');
		CALL SYMPUT ('I_GRP_TYP',TRIM(GRP_TYP));
	END;
	RUN;

	DATA _NULL_;
	PUT "&I_CRIT_STRING";
	PUT "&I_GRP_TYP";
	RUN;

	/*INITIALIZE CRITERIA AGGREGATION VARIABLES*/
	%IF &N = 1 %THEN %DO;
		%LET I_CRIT_INIT = 0;
		%LET I_CRIT_I = &I_CRIT_INIT;
		%LET I_CRIT_E = &I_CRIT_INIT;
	%END;

	/*"OR" THE INCLUSION GROUP CRITERIA TOGETHER*/
	%IF &I_GRP_TYP = I %THEN %DO;
		%LET I_CRIT_1 = &I_CRIT_I;
		%IF %BQUOTE(&I_CRIT_I) = %BQUOTE(&I_CRIT_INIT) 
			%THEN %LET I_CRIT_I = &I_CRIT_STRING;
			%ELSE %LET I_CRIT_I = &I_CRIT_1 OR &I_CRIT_STRING;
	%END;

	/*"OR" THE EXCLUSION GROUP CRITERIA TOGETHER*/
	%IF &I_GRP_TYP = E %THEN %DO;
		%LET I_CRIT_1 = &I_CRIT_E;
		%IF %BQUOTE(&I_CRIT_E) = %BQUOTE(&I_CRIT_INIT) 
			%THEN %LET I_CRIT_E = &I_CRIT_STRING;
			%ELSE %LET I_CRIT_E = &I_CRIT_1 OR &I_CRIT_STRING;
	%END;

	/*APPLY AGGREGATE INCLUSION CRITERIA, IF ANY*/
	%IF &N = &I_GRP_CT AND %BQUOTE(&I_CRIT_I) NE %BQUOTE(&I_CRIT_INIT) %THEN %DO;
	/*%PUT "&I_CRIT_I";*/
	DATA LNSALE;
	SET LNSALE;
	WHERE (&I_CRIT_I);
	RUN;
	%END;

	/*APPLY AGGREGATE EXCLUSION CRITERIA, IF ANY*/
	%IF &N = &I_GRP_CT AND %BQUOTE(&I_CRIT_E) NE %BQUOTE(&I_CRIT_INIT) %THEN %DO;
	DATA LNSALE;
	SET LNSALE;
	WHERE NOT (&I_CRIT_E);
	RUN;
	%END;
%END;
/*%MEND GRP_ITER;*/
/*%GRP_ITER;*/

/*APPLY LOAN-LEVEL EDITS & CREATE A REJECTS DATASET*/
DATA SLGE50 EXC;
SET LNSALE;
/*LOAN RECORD STATUS EDIT*/
IF LC_STA_LON10 NE 'R' THEN DO;
	EX_CD = 'REC_STA';
	OUTPUT EXC;
	END;
/*BORROWER PRINCIPAL BALANCE EDIT*/
ELSE IF TOT_PRI_BR < 50 THEN DO;
	EX_CD = 'BWR_PRIN';
	OUTPUT EXC;
	END;
/*BORROWER OTHER USAF LOANS EDIT*/
ELSE IF IND_USAF = 'Y' THEN DO;
	EX_CD = 'BWR_USAF';
	OUTPUT EXC;
	END;
ELSE OUTPUT SLGE50;
RUN;
%EXCLUSION;


/************************************************************************************/
/****************************LOCKDOWN AND LOCKDOWN CHECK*****************************/
/************************************************************************************/
*RSUBMIT;
PROC SORT DATA=SLGE50 NODUPKEY;
BY BF_SSN LN_SEQ;
RUN;

/*IF THE DATASET ISNT THERE, CREATE IT*/
%LET DSNAME=OLRPLD.UTLWO2B;
%IF %SYSFUNC(EXIST(&DSNAME))=0 %THEN %DO;
   DATA &DSNAME;
		LENGTH SALEID $7 BF_SSN $ 9 LN_SEQ 4;
   RUN;
   %END;

/*EXTRACT LOCKED DOWN DATA FOR THIS SALE FROM LD FILE*/
DATA LDSUB;
SET OLRPLD.UTLWO2B;
WHERE SALEID = "&I_SALEID";
RUN;
DATA OLRPLD.UTLWO2B;
SET OLRPLD.UTLWO2B (WHERE=(SALEID NE ' '));
IF SALEID = "&I_SALEID" THEN DELETE;
RUN;

/*%LET I_TYPE = P;OPTIONS SYMBOLGEN;*/
/*PROCESS LOCKDOWN EDITS*/
DATA SLGE50 EXC LDSUB (KEEP = SALEID BF_SSN LN_SEQ);
MERGE SLGE50 (IN=A) LDSUB (IN=B);
BY SALEID BF_SSN LN_SEQ;
IF "&I_TYPE" = 'P' THEN DO;
	IF A THEN OUTPUT SLGE50;
	IF B THEN OUTPUT LDSUB;
	END;
IF "&I_TYPE" = 'L' THEN DO;
	IF A THEN DO;
		OUTPUT SLGE50;
		OUTPUT LDSUB;
		END;
	END;
ELSE IF "&I_TYPE" = 'F' THEN DO;
	IF A AND B THEN OUTPUT SLGE50;
	ELSE IF (A AND NOT B) THEN DO;
		EX_CD = 'LOCKDOWN';
		OUTPUT EXC;
		END;
	IF B THEN OUTPUT LDSUB;
	END;
RUN;
%EXCLUSION;

/*ADD/RE-ADD LOCKDOWN DATA FOR THIS SALE TO LD FILE*/
DATA OLRPLD.UTLWO2B;
SET OLRPLD.UTLWO2B LDSUB;
RUN;
PROC SORT DATA=OLRPLD.UTLWO2B NODUPKEY;
BY SALEID BF_SSN LN_SEQ;
RUN;

/************************************************************************************/
/************************************************************************************/

/*APPEND CURRENT SALE RESULTS & ERRORS TO MASTER LISTS FOR REPORTING*/
DATA SLGE50_MAST (WHERE=(SALEID NE ' '));SET SLGE50_MAST SLGE50;RUN;
DATA EXCLUDE_MAST (WHERE=(SALEID NE ' '));SET EXCLUDE_MAST EXCLUDE;RUN;

%MEND SALE_ITER;

*RSUBMIT;
%MACRO ITER_EXEC;
	%DO I=1 %TO &SALE_CT ;
		%PUT *****************;
		%PUT "SALE_ITER = &I";
		%PUT *****************;
		%SALE_ITER(&I);
    %END;
%MEND ITER_EXEC;
%ITER_EXEC;

/************************************************************************************/
/************************END ITERATIVE PROCESSING************************************/
/************************************************************************************/

/*ENDRSUBMIT;*/
/*DATA SLGE50_MAST;SET WORKLOCL.SLGE50_MAST;RUN;*/
/*DATA EXCLUDE_MAST;SET WORKLOCL.EXCLUDE_MAST (WHERE=(EX_CD NE ' '));RUN;*/
/*DATA SLIST;SET WORKLOCL.SLIST;RUN;*/
/*DATA SLERRS;SET WORKLOCL.SLERRS;RUN;*/

/************************************************************************************/
/*****************************CREATE SALE TRIGGER FILE*******************************/
/************************************************************************************/

/*ENSURE THAT EVERY SALE SCHEDULED FOR TODAY HAS A TRIGGER, EVEN IF NO LOANS*/
PROC DATASETS LIBRARY=WORK NOLIST;
MODIFY SLGE50_MAST;
RENAME SALEID=SALEIDX;
QUIT;
/*ADD SALES SCHEDULED VIA SCRIPT*/
PROC SQL;
CREATE TABLE SLGE50_MAST AS
SELECT A.*, B.*
FROM SLIST A 
LEFT OUTER JOIN SLGE50_MAST B
ON A.SALEID = B.SALEIDX;
QUIT;
/*ADD SALES SCHEDULED VIA COMPASS*/
DATA SLGE50_MAST;
SET SLGE50_MAST SLERRS;
RUN;
PROC SORT DATA=SLGE50_MAST NODUPKEY;
BY SALEID BF_SSN LN_SEQ;
RUN;

DATA TRIGFILE (DROP=LN_SEQ);
SET SLGE50_MAST;
BY SALEID;
IF FIRST.SALEID THEN INDY = 1;
ELSE INDY = 0;
IF LN_SEQ < 10 THEN LN_SEQ_X = '000'||PUT(LN_SEQ,1.);
ELSE LN_SEQ_X = '00'||PUT(LN_SEQ,2.);
RUN;

DATA _NULL_;
SET  WORK.TRIGFILE (RENAME=(LN_SEQ_X = LN_SEQ));
BY SALEID; 
*FILE 'C:\WINDOWS\TEMP\ULWO02.LWO02R2.rw'  LRECL=21;
FILE REPORT2  LRECL=21;
IF INDY = 1 THEN        /* WRITE LOAN SALE IDS */
	PUT SALEID $ ;
IF BF_SSN NE ' ' THEN DO;
	PUT
	@1 BF_SSN $9.
	@10 LN_SEQ $9.
	;
END;
RUN;


/************************************************************************************/
/*********************************REPORTING******************************************/
/************************************************************************************/

%MACRO NODATL(RNO);
PROC CONTENTS DATA=RPX OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
       PUT // 132*'-';
       PUT      ////////
           @51 '**** NO OBSERVATIONS FOUND ****';
       PUT ////////
           @57 '-- END OF REPORT --';
	   PUT ////////////////
			@46 "JOB = UTLWO2B     REPORT = ULWO2B.LWO2B&RNO";
   END;
RETURN;
RUN;
%MEND NODATL;

/*REPORT 11 - MULTIPLE SEP DATES FOR SAME BWR*/
PROC PRINTTO PRINT=REPORT11;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET SLGE50_MAST;
WHERE MUL_SEP_IND > 1;
SSN = INPUT(BF_SSN,9.);
RUN;
PROC SORT DATA=RPX NODUPKEY;
BY BF_SSN;
RUN;
TITLE "LOAN SALE";
TITLE2 "MULTIPLE ENROLLMENT INFORMATION EXISTS FOR SAME BORROWER";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR11';
%NODATL(R11);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SSN;
LABEL SSN="SSN";
FORMAT SSN SSN11.;
RUN;

/*REPORT 30 - LATE NOTIFICATION*/
PROC PRINTTO PRINT=REPORT30;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET SLGE50_MAST;
WHERE BUYER IN ('NELNET')
AND LD_SCL_SPR <= &EOM5
AND LD_SCL_SPR NE .;
SSN = INPUT(BF_SSN,9.);
CLUID = LF_LON_ALT||LN_LON_ALT_SEQ;
RUN;
PROC SORT DATA=RPX;
BY BUYER LF_LON_CUR_OWN BF_SSN LN_SEQ;
RUN;
TITLE "LOAN SALE";
TITLE2 "LATE NOTIFICATION OF ENROLLMENT INFORMATION";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR30';
%NODATL(R30);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SSN NAME CLUID LD_SCL_SPR LD_NTF_SCL_SPR LF_LON_CUR_OWN;
BY BUYER;
*PAGEBY BUYER;
LABEL SSN="SSN" NAME="BORROWER NAME"
CLUID="UNIQUE ID" LD_SCL_SPR="COMPASS ENROLLMENT INFORMATION"
LD_NTF_SCL_SPR="COMPASS NOTIFICATION DATE" LF_LON_CUR_OWN="LENDER";
FORMAT SSN SSN11. LD_SCL_SPR MMDDYY10. LD_NTF_SCL_SPR MMDDYY10.;
RUN;

/*REPORT 31 - BWRS WITH CURE INFO IN REPAYMENT STATUS*/
PROC PRINTTO PRINT=REPORT31;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET SLGE50_MAST;
WHERE BUYER IN ('NELNET')
AND LD_CU_END NE .
AND WC_DW_LON_STA = '03';
SSN = INPUT(BF_SSN,9.);
CLUID = LF_LON_ALT||LN_LON_ALT_SEQ;
RUN;
PROC SORT DATA=RPX;
BY BUYER LF_LON_CUR_OWN BF_SSN LN_SEQ;
RUN;
TITLE "LOAN SALE";
TITLE2 "BORROWERS WITH CURE STATUS INFORMATION";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR31';
%NODATL(R31);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN N="TOTAL: ";
VAR SSN NAME CLUID LD_SCL_SPR LD_NTF_SCL_SPR LD_CU_END LC_CU_REA_END
LF_LON_CUR_OWN;
BY BUYER;
*PAGEBY BUYER;
LABEL SSN="SSN" NAME="BORROWER NAME" LD_SCL_SPR="COMPASS ENROLLMENT INFORMATION"
LD_NTF_SCL_SPR="COMPASS NOTIFICATION DATE" CLUID="UNIQUE ID" 
LD_CU_END="COMPASS CURE END DATE"
LC_CU_REA_END="CURE END REASON" LF_LON_CUR_OWN="LENDER";
FORMAT LD_CU_END LD_SCL_SPR LD_NTF_SCL_SPR MMDDYY10.;
FORMAT SSN SSN11.;
RUN;

/*REPORT 32 - BWRS WITH BANKRUPTCY DISCHARGE INFO*/
PROC PRINTTO PRINT=REPORT32;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET SLGE50_MAST;
WHERE BUYER IN ('NELNET')
AND DD_BKR_DCH_RCV NE .;
SSN = INPUT(BF_SSN,9.);
CLUID = LF_LON_ALT||LN_LON_ALT_SEQ;
RUN;
PROC SORT DATA=RPX;
BY BUYER LF_LON_CUR_OWN BF_SSN LN_SEQ;
RUN;
TITLE "LOAN SALE";
TITLE2 "BORROWERS WITH BANKRUPTCY DISCHARGE INFORMATION";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR32';
%NODATL(R32);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN N="TOTAL: ";
VAR SSN NAME CLUID DD_BKR_DCH_RCV LF_LON_CUR_OWN;
BY BUYER;
LABEL SSN="SSN" NAME="BORROWER NAME" CLUID="UNIQUE ID" 
DD_BKR_DCH_RCV="COMPASS BANKRUPTCY DISCHARGE DATE" LF_LON_CUR_OWN="LENDER";
FORMAT LD_SCL_SPR LD_NTF_SCL_SPR DD_BKR_DCH_RCV MMDDYY10.;
FORMAT SSN SSN11.;
RUN;

/*REPORT 50 - PLUS WITH CANCELED DISBS*/
PROC PRINTTO PRINT=REPORT50;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET SLGE50_MAST;
WHERE BUYER IN ('NELNET')
AND PLS_CAN_LD_DSB NE .;
SSN = INPUT(BF_SSN,9.);
CLUID = LF_LON_ALT||LN_LON_ALT_SEQ;
RUN;
PROC SORT DATA=RPX;
BY BUYER LF_LON_CUR_OWN BF_SSN LN_SEQ;
RUN;
TITLE "LOAN SALE";
TITLE2 "PLUS LOANS WITH CANCELED DISBURSEMENTS";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR50';
%NODATL(R50);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SSN NAME CLUID PLS_CAN_LD_DSB PLS_CAN_LA_DSB PLS_CAN_EFF_DT
LF_LON_CUR_OWN;
BY BUYER;
*PAGEBY BUYER;
LABEL SSN="SSN" NAME="BORROWER NAME"
CLUID="UNIQUE ID" PLS_CAN_LD_DSB="DISB DATE"
PLS_CAN_LA_DSB="DISB AMOUNT" PLS_CAN_EFF_DT="EFFECTIVE DATE OF TRANSACTION"
LF_LON_CUR_OWN="LENDER";
FORMAT SSN SSN11. PLS_CAN_LD_DSB MMDDYY10. PLS_CAN_LA_DSB DOLLAR12.2 ;
RUN;

/*REPORT 52 - LOANS EXCLUDED FROM FINAL SALE DUE TO BECOMING ELIGIBLE FOR SALE TOO RECENTLY*/
PROC PRINTTO PRINT=REPORT52;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET EXCLUDE_MAST;
WHERE EX_CD = 'LOCKDOWN';
SSN = INPUT(BF_SSN,9.);
RUN;
PROC SORT DATA=RPX;
BY LF_LON_CUR_OWN BF_SSN LN_SEQ;
RUN;
TITLE "LOAN SALE";
TITLE2 "LOANS NOT ADDED TO FINAL SALE PROCESS DUE TO LOCKDOWN EDITS";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR52';
%NODATL(R52);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SSN LN_SEQ LF_LON_CUR_OWN;
LABEL SSN="SSN" LN_SEQ="LOAN SEQ #" LF_LON_CUR_OWN="OWNER ID";
FORMAT SSN SSN11.;
RUN;

/*REPORT 53 - USAF EXCLUSION*/
PROC PRINTTO PRINT=REPORT53;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET EXCLUDE_MAST;
WHERE EX_CD = 'BWR_USAF';
SSN = INPUT(BF_SSN,9.);
CLUID = LF_LON_ALT||LN_LON_ALT_SEQ;
RUN;
PROC SORT DATA=RPX;
BY BF_SSN LN_SEQ;
RUN;
TITLE "LOAN SALE";
TITLE2 "BORROWERS WITH USAF GUARANTEES";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR53';
%NODATL(R53);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SSN LN_SEQ CLUID LF_LON_CUR_OWN IF_GTR;
LABEL SSN="SSN" LN_SEQ="LOAN SEQ #" CLUID="UNIQUE ID" 
LF_LON_CUR_OWN="COMPASS/OWNER ID" IF_GTR="GUARANTOR";
FORMAT SSN SSN11.;
RUN;

/*REPORT 54 - MULTI SERVICER EXCLUSION*/
PROC PRINTTO PRINT=REPORT54;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET EXCLUDE_MAST;
WHERE EX_CD = 'MULTI_SVC';
SSN = INPUT(BF_SSN,9.);
CLUID = LF_LON_ALT||LN_LON_ALT_SEQ;
RUN;
PROC SORT DATA=RPX;
BY BF_SSN LN_SEQ;
RUN;
TITLE "LOAN SALE";
TITLE2 "BORROWERS WITH LOANS SERVICED BY MULTIPLE SERVICERS";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR54';
%NODATL(R54);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SSN CLUID LF_LON_CUR_OWN AF_CUR_LON_SER_AGY AF_CUR_LON_OPS_LDR;
LABEL SSN="SSN" CLUID="UNIQUE ID" LF_LON_CUR_OWN="COMPASS/OWNER ID"
AF_CUR_LON_SER_AGY="ONELINK/SERVICER ID" AF_CUR_LON_OPS_LDR="ONELINK/HOLDER CODE";
FORMAT SSN SSN11.;
RUN;


/*REPORT 70 - BWRS WITH ZERO BALANCES ON ONELINK WITH OPEN LOAN STATUS*/
PROC PRINTTO PRINT=REPORT70;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET SLGE50_MAST;
WHERE IF_GTR = '000749'
AND ZRO_NLN_IND = 'Y'
OR ZRO_SLM_IND = 'Y';
SSN = INPUT(BF_SSN,9.);
RUN;
PROC SORT DATA=RPX NODUPKEY;
BY BF_SSN;
RUN;
TITLE "LOAN SALE";
TITLE2 "BORROWERS WITH ZERO BALANCE LOANS IN OPEN STATUS ON ONELINK";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR70';
%NODATL(R70);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SSN;
LABEL SSN="SSN";
FORMAT SSN SSN11.;
RUN;


/*REPORT 75 - SALES IMPROPERLY SCHEDULED IN SCRIPT OR COMPASS*/
PROC PRINTTO PRINT=REPORT75;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132;
DATA RPX;
SET SLIST SLERRS;
WHERE SALE_ERR NE ' ';
RUN;
PROC SORT DATA=RPX NODUPKEY;
BY TYPE SALE_ERR SALEID;
RUN;
TITLE "LOAN SALE";
TITLE2 "SALES IMPROPERLY SCHEDULED IN SCRIPT OR COMPASS";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR75';
%NODATL(R75);
PROC PRINT NOOBS SPLIT='/' DATA=RPX WIDTH=UNIFORM WIDTH=MIN;
VAR SALEID SALE_ERR;
LABEL SALEID='SALE ID' SALE_ERR='ERROR DESCRIPTION';
RUN;


/*REPORT 90 - SUMMARY REPORT*/
PROC PRINTTO PRINT=REPORT90;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=132 NOBYLINE;
DATA RPX;
SET SLGE50_MAST (WHERE=(BUYER NE ' '));
IF TYPE = 'L' THEN TYPENAME = 'PRELIMINARY SALES - (LOCKDOWN)';
ELSE IF TYPE = 'P' THEN TYPENAME ='PRELIMINARY SALES';
ELSE IF TYPE = 'F' THEN TYPENAME = 'FINAL SALES';
RUN;
PROC SORT DATA=RPX;
BY BF_SSN;
RUN;
DATA RPX;
FORMAT SALEID $9.;
SET RPX;
BY BF_SSN;
IF FIRST.BF_SSN THEN BWR_CT = 1;
ELSE BWR_CT = 0;
RUN;
PROC SORT DATA=RPX;
BY TYPENAME BUYER BUYID;
RUN;
PROC FORMAT;
VALUE $SALETYP
'P'='PRELIMINARY SALES'
'L'='PRELIMINARY SALES - (LOCKDOWN)'
'F'='FINAL SALES';
QUIT;

TITLE "LOAN SALE";
TITLE2 "SALE STATISTICS SUMMARY";
TITLE3 #BYVAL1;
TITLE4 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR90';

PROC REPORT DATA=RPX NOWD /*SPACING=1*/ HEADSKIP SPLIT='/' MISSING;
BY TYPENAME;* BUYER IF_BUY_OWN;
COLUMN TYPENAME BUYER SALEID SELLID BUYID IF_BUY_BND_ISS BWR_CT N
LA_CUR_PRI CUR_INT TOTAL;
DEFINE TYPENAME / GROUP NOPRINT;
DEFINE BUYER / GROUP NOPRINT;
DEFINE BUYID / GROUP "SERVICER/ID" WIDTH=8;
DEFINE SALEID / GROUP "LOAN/SALE ID";
DEFINE SELLID / GROUP "SELLER/ID" ;
DEFINE IF_BUY_BND_ISS / GROUP "BOND ID";
DEFINE BWR_CT / ANALYSIS SUM NOPRINT "BORROWERS" FORMAT=COMMA6. WIDTH=9;
DEFINE N / "LOANS" FORMAT=COMMA6.;
DEFINE LA_CUR_PRI / ANALYSIS SUM "TOTAL/PRINCIPAL/AMOUNT" FORMAT=DOLLAR18.2;
DEFINE CUR_INT / ANALYSIS SUM "TOTAL/INTEREST/AMOUNT" FORMAT=DOLLAR18.2;
DEFINE TOTAL / COMPUTED "TOTAL PRINCIPAL AND INTEREST AMOUNT" FORMAT=DOLLAR18.2;

COMPUTE TOTAL;
TOTAL = LA_CUR_PRI.SUM + CUR_INT.SUM;
ENDCOMP;

COMPUTE BEFORE BUYER;
*LINE @1 ' ';
LINE @1 "***BUYER = " BUYER $10.;
LINE @1 ' ';
ENDCOMP;

BREAK AFTER BUYER / OL SUMMARIZE SUPPRESS SKIP;

COMPUTE AFTER BUYER;
SALEID = 'SUBTOTAL:';
LINE @1 ' ';
LINE @13 "BORROWERS WITH LOANS SOLD TO THIS SERVICER:  " BWR_CT.SUM COMMA6.;
LINE @1 ' ';
ENDCOMP;

COMPUTE AFTER TYPENAME;
SALEID = 'TOTAL:';
LINE @1 ' ';
LINE @13 "TOTAL BORROWERS WITH LOANS SOLD:  " BWR_CT.SUM COMMA6.;
LINE _PAGE_;
ENDCOMP;

BREAK AFTER TYPENAME / DOL DUL SUMMARIZE SUPPRESS SKIP;
RUN;





/*REPORT 34 - KEY BANK LOAN SALE INFORMATION*/
PROC PRINTTO PRINT=REPORT34;
RUN;
OPTIONS CENTER NODATE NONUMBER PAGENO=1 LS=90 PS=54;
DATA RPX;
SET SLGE50_MAST;
WHERE BUYER IN ('NELNET')
AND IF_DOE_LDR = '813760UT';
SSN = INPUT(BF_SSN,9.);
STUSSN = INPUT(LF_STU_SSN,9.);
CLUID = LF_LON_ALT||LN_LON_ALT_SEQ;
CTSTZP = TRIM(DM_CT)||", "||TRIM(DC_DOM_ST)||" "||TRIM(DF_ZIP_CDE);
CTSTZP_STU = TRIM(DM_CT_STU)||", "||TRIM(DC_DOM_ST_STU)||" "||TRIM(DF_ZIP_CDE_STU);
CTSTZP_END = TRIM(DM_CT_END)||", "||TRIM(DC_DOM_ST_END)||" "||TRIM(DF_ZIP_CDE_END);

LENGTH FGN FGN_STU $20.;
LENGTH FGN FGN_END $20.;
IF DM_FGN_ST = ' ' AND DM_FGN_CNY = ' ' THEN FGN = ' ';
ELSE IF DM_FGN_ST NE ' ' AND DM_FGN_CNY = ' ' THEN FGN = TRIM(DM_FGN_ST);
ELSE IF DM_FGN_ST = ' ' AND DM_FGN_CNY NE ' ' THEN FGN = TRIM(DM_FGN_CNY);
ELSE IF DM_FGN_ST NE ' ' AND DM_FGN_CNY NE ' ' THEN FGN = TRIM(DM_FGN_ST)||", "||TRIM(DM_FGN_CNY);

IF DM_FGN_ST_STU = ' ' AND DM_FGN_CNY_STU = ' ' THEN FGN_STU = ' ';
ELSE IF DM_FGN_ST_STU NE ' ' AND DM_FGN_CNY_STU = ' ' THEN FGN_STU = TRIM(DM_FGN_ST_STU);
ELSE IF DM_FGN_ST_STU = ' ' AND DM_FGN_CNY_STU NE ' ' THEN FGN_STU = TRIM(DM_FGN_CNY_STU);
ELSE IF DM_FGN_ST_STU NE ' ' AND DM_FGN_CNY_STU NE ' ' THEN FGN_STU = TRIM(DM_FGN_ST_STU)||", "||TRIM(DM_FGN_CNY_STU);

IF DM_FGN_ST_END = ' ' AND DM_FGN_CNY_END = ' ' THEN FGN_END = ' ';
ELSE IF DM_FGN_ST_END NE ' ' AND DM_FGN_CNY_END = ' ' THEN FGN_END = TRIM(DM_FGN_ST_END);
ELSE IF DM_FGN_ST_END = ' ' AND DM_FGN_CNY_END NE ' ' THEN FGN_END = TRIM(DM_FGN_CNY_END);
ELSE IF DM_FGN_ST_END NE ' ' AND DM_FGN_CNY_END NE ' ' THEN FGN_END = TRIM(DM_FGN_ST_END)||", "||TRIM(DM_FGN_CNY_END);

IF WA_TOT_BRI_OTS = . THEN WA_TOT_BRI_OTS = 0;
GTY_ID = SUBSTR(LF_LON_ALT,3,15)||LN_LON_ALT_SEQ;
RUN;
PROC SORT DATA=RPX;
BY SSN LD_LON_GTR;
RUN;
PROC FORMAT LIBRARY=WORK;
VALUE $LNTYP
'STFFRD'='SUBSIDIZED FEDERAL STAFFORD LOAN'
'UNSTFD'='UNSUBSIDIZED FEDERAL STAFFORD LOAN'
'PLUS'='FEDERAL PLUS LOAN'
'SLS'='FEDERAL SLS LOAN';
VALUE $EDSTYP
'M'='CO-MAKER'
'S'='CO-SIGNER';
VALUE $EDSREL
'01'='UNKNOWN'
'02'='PARENT'
'03'='RELATIVE'
'04'='NON-RELATIVE'
'05'='EMPLOYER'
'06'='SPOUSE'
'07'='SIBLING'
'08'='ROOM MATE'
'09'='NEIGHBOR'
'10'='CHILD'
'11'='LEGAL GUARDIAN'
'12'='FRIEND';
RUN;

TITLE "LOAN SALE";
TITLE2 "KEY BANK LOAN SALE INFORMATION";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR34';
PROC CONTENTS DATA=RPX OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
   PUT // 90*'-';
   PUT      ////////
       @31 '**** NO OBSERVATIONS FOUND ****';
   PUT ////////
       @37 '-- END OF REPORT --';
   PUT /////////////////////////////
   		@26 "JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR32";
   END;
RETURN;
run;

DATA _NULL_;
SET RPX;
	*FILE REPORT34 PRINT n=pagesize MOD;
	FILE PRINT n=pagesize;
	TITLE;
	FOOTNOTE;
	PUT @31 "KEY BANK LOAN SALE INFORMATION"
		/@40 "&RUNDATE"
		/
		/
		/@1 "BORROWER INFORMATION:"
		/@1 "SSN:" @18 SSN SSN11.
		/@1 "NAME:" @18 NAME $25.
		/@1 "DATE OF BIRTH:" @18 DD_BRT MMDDYY10.
		/
		/@1 "BORROWER LEGAL ADDRESS  (VALID: " DI_VLD_ADR +(-1) "):"
		/@1 DX_STR_ADR_1 $40.
		;
	IF DX_STR_ADR_2 NE " " THEN	PUT @1 DX_STR_ADR_2 $40.;
	IF DX_STR_ADR_3 NE " " THEN	PUT @1 DX_STR_ADR_3 $40.;
	PUT @1 CTSTZP $40.;
	IF FGN NE " " THEN PUT @1 FGN;

	PUT #17 "BORROWER TELEPHONE NUMBER(S):";
	PUT "H " H_PHN;
	IF W_PHN NE " " THEN PUT "W " W_PHN;
	IF A_PHN NE " " THEN PUT "A " A_PHN;

	IF IC_LON_PGM = "PLUS" THEN DO;
		PUT	#5 @45 "PLUS LOAN STUDENT INFORMATION:"
			/@45 "SSN:" @62 STUSSN SSN11.
			/@45 "NAME:" @62 NAME_STU $25.
			/@45 "DATE OF BIRTH:" @62 DD_BRT_STU MMDDYY10.
			/
			/@45 "STUDENT LEGAL ADDRESS  (VALID: " DI_VLD_ADR_STU +(-1) "):"
			/@45 DX_STR_ADR_1_STU $40.;
		IF DX_STR_ADR_2_STU NE " " THEN PUT	@45 DX_STR_ADR_2_STU $40.; 
		IF DX_STR_ADR_3_STU NE " " THEN PUT	@45 DX_STR_ADR_3_STU $40.;
		PUT	@45 CTSTZP_STU $40.;
		IF FGN_STU NE " " THEN PUT @45 FGN_STU;

		PUT #17 @45 "STUDENT TELEPHONE NUMBER(S):";
		PUT @45 "H " H_PHN_STU;
		IF W_PHN_STU NE " " THEN PUT @45 "W " W_PHN_STU;
		IF A_PHN_STU NE " " THEN PUT @45 "A " A_PHN_STU;
		END;

	PUT #22 "COMMONLINE UNIQUE ID:  " @45 LF_LON_ALT $17. "-" LN_LON_ALT_SEQ
		/"GUARANTY DATE:  " @45 LD_LON_GTR MMDDYY10.
		/"ORIGINAL LOAN AMOUNT:  " @45 LA_LON_AMT_GTR
		/"CURRENT LENDER ID:  " @45 IF_BUY_OWN $6.
		/"PREVIOUS LENDER ID:  " @45 LF_LON_CUR_OWN $6.
		/"GUARANTY AGENCY:  " @45 IF_GTR
		/"CURRENT PRINCIPAL BALANCE:  " @45 LA_CUR_PRI
		/"CURRENT INTEREST BALANCE:  " @45 WA_TOT_BRI_OTS
		/"P-NOTE SIGN DATE:  " @;

	IF IC_LON_PGM NE 'PLUS' THEN PUT @45 LD_PNT_SIG MMDDYY10.;
	ELSE PUT @45 AD_SIG_BR MMDDYY10.;

	PUT	"LOAN TYPE:  " @45 IC_LON_PGM $LNTYP.
		/"GUARANTY ID NUMBER:  " @45 GTY_ID
		/"LOAN PERIOD BEGIN/END DATE:  " @45 LD_TRM_BEG MMDDYY10. " - " LD_TRM_END MMDDYY10.
		/"GRADE LEVEL:  " @45 LC_ACA_GDE_LEV
		/"SEPARATION DATE:  " @;
	IF LD_SCL_SPR NE . THEN PUT @45 LD_SCL_SPR MMDDYY10.;
	ELSE PUT;
	PUT "ORIGINAL SCHOOL ID:  " @45 LF_DOE_SCL_ORG
		/"BORROWER'S CURRENT SCHOOL ID:  " @45 LF_DOE_SCL_ENR_CUR
		/
		/"DISBURSEMENT INFORMATION:"
		/;
	PUT #40 "DISB NO:"
		/"DISB DATE:"
		/"DISB AMT:"
		/"CANCEL AMT:"
		/"CANCEL DATE:";

	PUT #40 @22 "DISB 01"
		/@22 LD_DSB1 MMDDYY10.
		/@22 LA_DSB1;
	IF LA_DSB_CAN1 EQ . AND LD_DSB_CAN1 EQ . THEN 
		PUT @22 "0.00";
	ELSE DO; 
		PUT @22 LA_DSB_CAN1;
		PUT @22 LD_DSB_CAN1 MMDDYY10.;
		END;

	IF LD_DSB2 NE . THEN DO;
		PUT #40 @45 "DISB 02"
			/@45 LD_DSB2 MMDDYY10.
			/@45 LA_DSB2;
		IF LA_DSB_CAN2 EQ . AND LD_DSB_CAN2 EQ . THEN 
			PUT @45 "0.00";
		ELSE DO; 
			PUT @45 LA_DSB_CAN2;
			PUT @45 LD_DSB_CAN2 MMDDYY10.;
			END;
		END;

	IF LD_DSB3 NE . THEN DO;
		PUT #40 @67 "DISB 03"
			/@67 LD_DSB3 MMDDYY10.
			/@67 LA_DSB3;
		IF LA_DSB_CAN3 EQ . AND LD_DSB_CAN3 EQ . THEN 
			PUT @67 "0.00";
		ELSE DO; 
			PUT @67 LA_DSB_CAN2;
			PUT @67 LD_DSB_CAN2 MMDDYY10.;
			END;
		END;

	IF LD_DSB4 NE . THEN
		PUT #47 "DISB NO:"
			/"DISB DATE:"
			/"DISB AMT:"
			/"CANCEL AMT:"
			/"CANCEL DATE:";

	IF LD_DSB4 NE . THEN DO;
		PUT #47 @22 "DISB 04"
			/@22 LD_DSB4 MMDDYY10.
			/@22 LA_DSB4;
		IF LA_DSB_CAN4 EQ . AND LD_DSB_CAN4 EQ . THEN 
			PUT @22 "0.00";
		ELSE DO; 
			PUT @22 LA_DSB_CAN4;
			PUT @22 LD_DSB_CAN4 MMDDYY10.;
			END;
		END;

	IF LD_DSB5 NE . THEN DO;
		PUT #47 @45 "DISB 05"
			/@45 LD_DSB5 MMDDYY10.
			/@45 LA_DSB5;
		IF LA_DSB_CAN5 EQ . AND LD_DSB_CAN5 EQ . THEN 
			PUT @45 "0.00";
		ELSE DO; 
			PUT @45 LA_DSB_CAN5;
			PUT @45 LD_DSB_CAN5 MMDDYY10.;
			END;
		END;

	IF LD_DSB6 NE . THEN DO;
		PUT #47 @67 "DISB 06"
			/@67 LD_DSB6 MMDDYY10.
			/@67 LA_DSB6;
		IF LA_DSB_CAN6 EQ . AND LD_DSB_CAN6 EQ . THEN 
			PUT @67 "0.00";
		ELSE DO; 
			PUT @67 LA_DSB_CAN6;
			PUT @67 LD_DSB_CAN6 MMDDYY10.;
			END;
		END;
	PUT #53 @26 "JOB = UTLWO2B     REPORT = ULWO2B.LWO2BR34";
	;
	PUT _PAGE_;

	IF LF_EDS NE ' ' THEN DO;
		PUT @31 "KEY BANK LOAN SALE INFORMATION"
			/@33  "ENDORSER INFORMATION SHEET"
			/@40 "&RUNDATE"
			/
			/@1 "BORROWER INFORMATION:"
			/@1 "ENDORSER ID:" @30 SSN SSN11.
			/@1 "NAME:" @30 NAME $25.
			/@1 "DATE OF BIRTH:" @30 DD_BRT MMDDYY10.
			;

		PUT	#10 @1 "ENDORSER INFORMATION:"
			/@1 "SSN:" @30 LF_EDS $9.
			/@1 "NAME:" @30 NAME_END $25.
			/@1 "DATE OF BIRTH:" @30 DD_BRT_END MMDDYY10.
			/@1 "ENDORSER TYPE:" @30 LC_EDS_TYP $EDSTYP.
			/@1 "RELATIONSHIP TO BORROWER:" @30 LC_REL_TO_BR $EDSREL.
			/
			/@1 "ENDORSER LEGAL ADDRESS  (VALID: " DI_VLD_ADR_END +(-1) "):"
			/@1 DX_STR_ADR_1_END $40.;
		IF DX_STR_ADR_2_END NE " " THEN PUT	@1 DX_STR_ADR_2_END $40.; 
		IF DX_STR_ADR_3_END NE " " THEN PUT	@1 DX_STR_ADR_3_END $40.;
		PUT	@1 CTSTZP_END $40.;
		IF FGN_END NE " " THEN PUT @1 FGN_END;

		PUT #24 @1 "ENDORSER TELEPHONE NUMBER  (VALID: " H_PHN_VLD_END +(-1) "):";
		PUT @1 "H " H_PHN_END;
		PUT _PAGE_;
	END;

RUN;
