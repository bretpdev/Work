/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWN09.LWN09R2";
FILENAME REPORT3 "&RPTLIB/ULWN09.LWN09R3";
FILENAME REPORT4 "&RPTLIB/ULWN09.LWN09R4";
FILENAME REPORT5 "&RPTLIB/ULWN09.LWN09R5";
FILENAME REPORT6 "&RPTLIB/ULWN09.LWN09R6";
FILENAME REPORT7 "&RPTLIB/ULWN09.LWN09R7";
FILENAME REPORT8 "&RPTLIB/ULWN09.LWN09R8";
FILENAME REPORT9 "&RPTLIB/ULWN09.LWN09R9";
FILENAME REPORT10 "&RPTLIB/ULWN09.LWN09R10";
FILENAME REPORT11 "&RPTLIB/ULWN09.LWN09R11";
FILENAME REPORT12 "&RPTLIB/ULWN09.LWN09R12";
FILENAME REPORT13 "&RPTLIB/ULWN09.LWN09R13";
FILENAME REPORT14 "&RPTLIB/ULWN09.LWN09R14";
FILENAME REPORT15 "&RPTLIB/ULWN09.LWN09R15";
FILENAME REPORT16 "&RPTLIB/ULWN09.LWN09R16";
FILENAME REPORT17 "&RPTLIB/ULWN09.LWN09R17";
FILENAME REPORT18 "&RPTLIB/ULWN09.LWN09R18";
FILENAME REPORT19 "&RPTLIB/ULWN09.LWN09R19";
FILENAME REPORT20 "&RPTLIB/ULWN09.LWN09R20";
FILENAME REPORT21 "&RPTLIB/ULWN09.LWN09R21";
FILENAME REPORT22 "&RPTLIB/ULWN09.LWN09R22";
FILENAME REPORT23 "&RPTLIB/ULWN09.LWN09R23";
FILENAME REPORT24 "&RPTLIB/ULWN09.LWN09R24";
FILENAME REPORT25 "&RPTLIB/ULWN09.LWN09R25";
FILENAME REPORT26 "&RPTLIB/ULWN09.LWN09R26";
FILENAME REPORT27 "&RPTLIB/ULWN09.LWN09R27";
FILENAME REPORT28 "&RPTLIB/ULWN09.LWN09R28";
FILENAME REPORTZ "&RPTLIB/ULWN09.LWN09RZ";

OPTIONS SYMBOLGEN NOCENTER NODATE NONUMBER LS=132;
DATA _NULL_;	
    CALL SYMPUT('RUNDATE',put(TODAY(),MMDDYY10.));
	CALL SYMPUT('BEGIN',"'"||PUT(INTNX('YEAR',TODAY()-1,-0,'BEGINNING'), MMDDYYD10.)||"'"); /*beginning of previous month*/
RUN;
%SYSLPUT BEGIN = &BEGIN;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;

%macro sqlcheck ;
  %if  &sqlxrc ne 0  %then  %do  ;
    data _null_  ;
            file reportz notitles  ;
            put @01 " ********************************************************************* "
              / @01 " ****  The SQL code above has experienced an error.               **** "
              / @01 " ****  The SAS should be reviewed.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  The SQL error code is  &sqlxrc  and the SQL error message  **** "
              / @01 " ****  &sqlxmsg   **** "
              / @01 " ********************************************************************* "
            ;
         run  ;
  %end  ;
%mend  ;


PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE LNSALE AS
SELECT *
FROM CONNECTION TO DB2 (

SELECT distinct LN10.BF_SSN
,RTRIM(PD10.DM_PRS_1) || ' ' || RTRIM(PD10.DM_PRS_LST) AS NAME
,LN10.LN_SEQ
,LN10.IC_LON_PGM
,LN10.LD_LON_1_DSB
,LN90_TRAN.PC_FAT_TYP 
,LN90_TRAN.PC_FAT_SUB_TYP
,LN90_TRAN.LA_FAT_CUR_PRI
,LN90_TRAN.LA_FAT_LTE_FEE
,CASE 
	WHEN LN99.IF_SLL_OWN_SLD = '813760UT' THEN '813760'
	ELSE LN99.IF_SLL_OWN_SLD
END AS IF_SLL_OWN_SLD
,LN99.IF_BUY_OWN_SLD
,AP03.AF_RGL_CAT_LP20

,CASE 
	 WHEN LN10.LF_RGL_CAT_LP20 <= '1999030'
	 THEN .03 * LN15.LA_DSB
	 WHEN LN10.LF_RGL_CAT_LP20 = '2006020' AND (LN10.IC_LON_PGM = 'PLUSGB' or LN10.IC_LON_PGM = 'PLUS') AND LN10.LD_LON_1_DSB >= '07/01/2006' AND LN10.LD_LON_1_DSB < '08/07/2006'
	 THEN .02 * LN15.LA_DSB
	 WHEN LN10.LF_RGL_CAT_LP20 = '2006020'
	 THEN .03 * LN15.LA_DSB
	 WHEN LN10.LF_RGL_CAT_LP20 = '2007020'
	 THEN .015 * LN15.LA_DSB
	 END AS LENDER_ORIG_FEE
,LN15.LA_DSB

,CASE 
	 WHEN AP03.AF_RGL_CAT_LP20 <= '1999030'
	 THEN '3%'
	 WHEN AP03.AF_RGL_CAT_LP20 = '2006020' AND (LN10.IC_LON_PGM = 'PLUSGB' or LN10.IC_LON_PGM = 'PLUS') AND LN10.LD_LON_1_DSB >= '08/08/2006'
	 THEN '3%'
	 WHEN AP03.AF_RGL_CAT_LP20 = '2006020'
	 THEN '2%'
	 END AS ED_ORIG_FEE

,LN90.LD_FAT_EFF
,LN10.LF_RGL_CAT_LP20
,LN90.LA_FAT_LTE_FEE
,LR10.IF_DOE_LDR
,LR10.IF_LDR_MRG_TO
,LR10.IC_LDR_MRG_TYP

FROM OLWHRM1.LN10_LON LN10
INNER JOIN OLWHRM1.LN90_FIN_ATY LN90
	ON LN10.BF_SSN = LN90.BF_SSN
	AND LN10.LN_SEQ = LN90.LN_SEQ
INNER JOIN OLWHRM1.LN99_LON_SLE_FAT LN99
	ON LN10.BF_SSN = LN99.BF_SSN
	AND LN10.LN_SEQ = LN99.LN_SEQ
INNER JOIN OLWHRM1.PD10_PRS_NME PD10
	ON LN90.BF_SSN = PD10.DF_PRS_ID
LEFT OUTER JOIN (SELECT Z.BF_SSN, Z.LN_SEQ, SUM(Z.LA_FAT_CUR_PRI ) AS LA_FAT_CUR_PRI, SUM(LA_FAT_LTE_FEE) AS LA_FAT_LTE_FEE
			,Z.PC_FAT_TYP ,Z.PC_FAT_SUB_TYP
			FROM OLWHRM1.LN90_FIN_ATY Z
			WHERE (Z.PC_FAT_TYP = '10' AND Z.PC_FAT_SUB_TYP = '10')
			OR (Z.PC_FAT_TYP = '10' AND Z.PC_FAT_SUB_TYP = '12')
			OR (Z.PC_FAT_TYP = '70' AND Z.PC_FAT_SUB_TYP = '01')
			OR (Z.PC_FAT_TYP = '26' AND Z.PC_FAT_SUB_TYP = '01')
			OR (Z.PC_FAT_TYP = '03' AND Z.PC_FAT_SUB_TYP = '95')
			OR (Z.PC_FAT_TYP = '04' AND Z.PC_FAT_SUB_TYP = '95')
			GROUP BY Z.BF_SSN, Z.LN_SEQ, Z.PC_FAT_TYP ,Z.PC_FAT_SUB_TYP
			) LN90_TRAN
	ON LN10.BF_SSN = LN90_TRAN.BF_SSN
	AND LN10.LN_SEQ = LN90_TRAN.LN_SEQ
INNER JOIN (SELECT TB.BF_SSN, TB.LN_SEQ, SUM(TB.LA_DSB) AS LA_DSB ,TB.AF_APL_ID 
			FROM OLWHRM1.LN15_DSB TB
			WHERE TB.LC_STA_LON15 IN ('1','3')
			AND COALESCE(TB.LA_DSB_CAN,0) <> COALESCE(TB.LA_DSB,0)
			GROUP BY TB.BF_SSN, TB.LN_SEQ, TB.AF_APL_ID
			) LN15
	ON LN15.BF_SSN = LN10.BF_SSN
	AND LN15.LN_SEQ = LN10.LN_SEQ
INNER JOIN OLWHRM1.AP03_MASTER_APL AP03
	ON AP03.AF_APL_ID = LN15.AF_APL_ID
LEFT OUTER JOIN OLWHRM1.LR10_LDR_DMO LR10
	ON LN99.IF_SLL_OWN_SLD = LR10.IF_DOE_LDR
	AND LN99.IF_BUY_OWN_SLD = LR10.IF_LDR_MRG_TO
WHERE LN90.PC_FAT_TYP IN ('03','04')
	AND LN90.PC_FAT_SUB_TYP = '95'
	AND LN90.LD_FAT_EFF >= &BEGIN
FOR READ ONLY WITH UR

);
DISCONNECT FROM DB2;

/*%put  sqlxrc= >>> &sqlxrc <<< ||| sqlxmsg= >>> &sqlxmsg >>> ;  ** includes error messages to SAS log  ;*/
/*%sqlcheck;*/
/*quit;*/

ENDRSUBMIT;

DATA LNSALE; SET WORKLOCL.LNSALE; RUN;

DATA LNSALE2;
SET LNSALE; 
IF IF_SLL_OWN_SLD = '828476' AND IF_BUY_OWN_SLD = '828476' THEN DELETE; /*EXCLUDE BOND SWAP*/
ELSE IF IC_LDR_MRG_TYP IN ('F','1') THEN DELETE; /*EXCLUDE LENDER MERGE*/
ELSE OUTPUT;
RUN;

/*PRINCIPAL AMOUNT SOLD*/
PROC SQL;
CREATE TABLE AMT_SOLD AS
SELECT distinct BF_SSN
,LN_SEQ
,SUM(LA_FAT_CUR_PRI) as LA_FAT_CUR_PRI
FROM LNSALE2
WHERE PC_FAT_TYP IN ('03', '04') 
AND PC_FAT_SUB_TYP = '95'
GROUP BY BF_SSN,LN_SEQ
;
QUIT;
/*BORROWER PAYMENT*/
PROC SQL;
CREATE TABLE BOR_PAY AS
SELECT BF_SSN
,LN_SEQ
,SUM(LA_FAT_CUR_PRI) as LA_FAT_CUR_PRI
FROM LNSALE2
WHERE PC_FAT_TYP = '10' 
AND PC_FAT_SUB_TYP IN ('10','12')
GROUP BY BF_SSN,LN_SEQ
;
QUIT;
/*CAPPED INTEREST*/
PROC SQL;
CREATE TABLE CAP_INT AS
SELECT BF_SSN
,LN_SEQ
,SUM(LA_FAT_CUR_PRI) as LA_FAT_CUR_PRI
FROM LNSALE2
WHERE PC_FAT_TYP = '70' 
AND PC_FAT_SUB_TYP = '01'
GROUP BY BF_SSN,LN_SEQ
;
QUIT;
/*LATE FEES*/
PROC SQL;
CREATE TABLE LATE_FEE AS
SELECT BF_SSN
,LN_SEQ
,SUM(LA_FAT_LTE_FEE) as LA_FAT_LTE_FEE
FROM LNSALE2
WHERE PC_FAT_TYP = '26' 
AND PC_FAT_SUB_TYP = '01'
GROUP BY BF_SSN,LN_SEQ
;
QUIT;


PROC SQL;
CREATE TABLE LNSALE3 AS
SELECT DISTINCT LNSALE2.BF_SSN
,LNSALE2.NAME
,LNSALE2.LN_SEQ
,LNSALE2.IC_LON_PGM
,LNSALE2.LD_LON_1_DSB
,ABS(COALESCE(AMT_SOLD.LA_FAT_CUR_PRI,0)) AS AMT_SOLDT
,ABS(COALESCE(AMT_SOLD.LA_FAT_CUR_PRI,0)) + ABS(COALESCE(BOR_PAY.LA_FAT_CUR_PRI,0)) - ABS(COALESCE(CAP_INT.LA_FAT_CUR_PRI,0)) - ABS(COALESCE(LATE_FEE.LA_FAT_LTE_FEE,0)) AS PRIN_DISC
,LNSALE2.LENDER_ORIG_FEE
,LNSALE2.ED_ORIG_FEE


,LNSALE2.IF_SLL_OWN_SLD
,LNSALE2.IF_BUY_OWN_SLD


FROM LNSALE2
LEFT OUTER JOIN AMT_SOLD
	ON LNSALE2.BF_SSN = AMT_SOLD.BF_SSN
	AND LNSALE2.LN_SEQ = AMT_SOLD.LN_SEQ
LEFT OUTER JOIN BOR_PAY
	ON LNSALE2.BF_SSN = BOR_PAY.BF_SSN
	AND LNSALE2.LN_SEQ = BOR_PAY.LN_SEQ
LEFT OUTER JOIN CAP_INT
	ON LNSALE2.BF_SSN = CAP_INT.BF_SSN
	AND LNSALE2.LN_SEQ = CAP_INT.LN_SEQ
LEFT OUTER JOIN LATE_FEE
	ON LNSALE2.BF_SSN = LATE_FEE.BF_SSN
	AND LNSALE2.LN_SEQ = LATE_FEE.LN_SEQ

;
QUIT;


%MACRO CRTDS(DS,LEND);
DATA &DS;
SET LNSALE3;
WHERE IF_SLL_OWN_SLD = "&LEND";
RUN;

PROC SORT DATA=&DS;BY BF_SSN;RUN;

PROC SQL;
CREATE TABLE COUNTS1 AS 
SELECT IF_SLL_OWN_SLD
	,COUNT(*) AS LCOUNT
FROM &DS
GROUP BY IF_SLL_OWN_SLD
;
QUIT;
RUN;

DATA &DS;
MERGE &DS COUNTS1;
BY IF_SLL_OWN_SLD;
RUN;

DATA &DS (KEEP=BF_SSN NAME LN_SEQ IC_LON_PGM LD_LON_1_DSB AMT_SOLDT PRIN_DISC LENDER_ORIG_FEE ED_ORIG_FEE);
FORMAT LCOUNTX $15.;
FORMAT LCOUNTZ 15.;
SET &DS;
LCOUNTX = TRIM(LEFT(PUT(LCOUNT,BEST12.)));
LCOUNTZ = 1;

RUN;

%MEND CRTDS;

%MACRO REP(LENDER,LENDER_NAME,REPNO);
%LET TTL = ;

/*------ CREATE DATA SETS FOR REPORTING SEE CRTDS MACRO DEFINITION FOR DETAILS ------*/
%CRTDS(REPDS1,&LENDER);

data _null_;
set  WORK.Repds1;
file REPORT&REPNO delimiter=',' DSD DROPOVER lrecl=32767;
   format BF_SSN $9. ;
   format NAME $37. ;
   format LN_SEQ 6. ;
   format IC_LON_PGM $6. ;
   format LD_LON_1_DSB MMDDYY10. ;
   format AMT_SOLDT 12.2 ;
   format PRIN_DISC 12.2 ;
   format LENDER_ORIG_FEE 12.2 ;
   format ED_ORIG_FEE $2. ;
if _n_ = 1 then        /* write column names */
 do;
   put
   'BF_SSN'
   ','
   'NAME'
   ','
   'LN_SEQ'
   ','
   'IC_LON_PGM'
   ','
   'LD_LON_1_DSB'
   ','
   'AMT_SOLDT'
   ','
   'PRIN_DISC'
   ','
   'LENDER_ORIG_FEE'
   ','
   'ED_ORIG_FEE'
   ;
 end;
 do;
   EFIOUT + 1;
   put BF_SSN $ @;
   put NAME $ @;
   put LN_SEQ @;
   put IC_LON_PGM $ @;
   put LD_LON_1_DSB @;
   put AMT_SOLDT @;
   put PRIN_DISC @;
   put LENDER_ORIG_FEE $ @;
   put ED_ORIG_FEE $ ;
   ;
 end;
run;

PROC PRINTTO;
RUN;

%MEND REP;


%REP(817575,Alliance Credit Union,2);
%REP(822373,American First Credit Union,3);
%REP(835577,American United Family of Credit Unions FCU,4);
%REP(828476,Beehive Federal Credit Union (Idaho)/UHEAA,5);
%REP(819628,Chase Bank,6);
%REP(833828,Deseret First Credit Union,7);
%REP(817440,Family First Credit Union,8);
%REP(828476,Golden West Federal Credit Union /UHEAA,9);
%REP(817545,Granite Credit Union,10);
%REP(834265,Intermountain Credit Union,11);
%REP(830791,Jordan Credit Union,12);
%REP(813760,KeyBank NA,13);
%REP(834370,Liberty Bank Inc,14);
%REP(817546,Mountain America Credit Union,15);
%REP(834122,Mountain High Federal Credit Union,16);
%REP(832241,Salt Lake City Credit Union,17);
%REP(820200,Tooele Federal Credit Union,18);
%REP(830132,University of Utah Credit Union,19);
%REP(829123,Utah Community Credit Union,20);
%REP(811698,US Bank,21);
%REP(830146,USU Charter Credit Union,22);
%REP(829158,Weber State Credit Union,23);
%REP(813894,Wells Fargo,24);
%REP(817455,Zions First National Bank,25);
%REP(834437,Custodian,26);
%REP(834396,UHEAA non ECASLA,27);
%REP(82847601,UHEAA non ECASLA II,28);
