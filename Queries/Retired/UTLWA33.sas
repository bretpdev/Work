*------------------------------------------*
| UTLWA33 LOAN REDEMPTION ELIGIBLE FOR PUT |
*------------------------------------------*;
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
/*%LET RPTLIB = T:\SAS;*/
FILENAME REPORT2 "&RPTLIB/ULWA33.LWA33R2";
FILENAME REPORT3 "&RPTLIB/ULWA33.LWA33R3";
FILENAME REPORTZ "&RPTLIB/ULWA33.LWA33RZ";
/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;*/
/*RSUBMIT;*/
LIBNAME PROGREVW V8 '/sas/whse/progrevw';
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
/*OVERWIRTE BASE DATA SET IF NECESSARY*/
DATA _NULL_;
	SET PROGREVW.UTLWA33_DT;
	CALL SYMPUT('OD',OVERWRITE_DATE);
	CALL SYMPUT('CUR_DATE',TODAY());
RUN;
%PUT &OD;
%PUT &CUR_DATE;
%MACRO NEW_BASE();
%IF &OD EQ &CUR_DATE %THEN %DO;
	PROC SQL;
		CONNECT TO DB2 (DATABASE=DLGSUTWH);
		CREATE PROGREVW.UTLWA33_BASE AS
		SELECT *
		FROM CONNECTION TO DB2 (
		SELECT DISTINCT A.BF_SSN
			,A.LN_SEQ
			,B.WC_DW_LON_STA
			,D.LA_CUR_PRI
			,C.IF_BND_ISS
			,A.LF_ECA_PGM_YR
		FROM OLWHRM1.LNEC_LON_ECA A
		INNER JOIN OLWHRM1.DW01_DW_CLC_CLU B
			ON A.BF_SSN = B.BF_SSN 
			AND A.LN_SEQ = B.LN_SEQ
		INNER JOIN OLWHRM1.LN10_LON D
			ON B.BF_SSN = D.BF_SSN 
			AND B.LN_SEQ = D.LN_SEQ
		LEFT OUTER JOIN OLWHRM1.LN35_LON_OWN C
			ON B.BF_SSN = C.BF_SSN
			AND B.LN_SEQ = C.LN_SEQ
			AND C.LC_STA_LON35 = 'A'
			AND C.LD_OWN_EFF_END IS NULL
		WHERE A.LC_ECA_PTC_STA = 'RD'
			AND A.LN_ECA_SEQ = 1
			AND B.WC_DW_LON_STA NOT IN 
				(
					'06','07','08','10','11','12','16',
					'17','18','19','20','21','22'
				)
		ORDER BY A.BF_SSN
			,A.LN_SEQ
		FOR READ ONLY WITH UR
	);
	DISCONNECT FROM DB2;
	QUIT;
%END;
%MEND NEW_BASE;
%NEW_BASE;
/*STANDARD DAILY QUERIES*/
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE LREFP AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,A.LN_SEQ
	,B.WC_DW_LON_STA
	,D.LA_CUR_PRI
	,C.IF_BND_ISS
	,A.LF_ECA_PGM_YR
FROM OLWHRM1.LNEC_LON_ECA A
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU B
	ON A.BF_SSN = B.BF_SSN 
	AND A.LN_SEQ = B.LN_SEQ
INNER JOIN OLWHRM1.LN10_LON D
	ON B.BF_SSN = D.BF_SSN 
	AND B.LN_SEQ = D.LN_SEQ
LEFT OUTER JOIN OLWHRM1.LN35_LON_OWN C
	ON B.BF_SSN = C.BF_SSN
	AND B.LN_SEQ = C.LN_SEQ
	AND C.LC_STA_LON35 = 'A'
	AND C.LD_OWN_EFF_END IS NULL
WHERE A.LC_ECA_PTC_STA = 'RD'
	AND A.LN_ECA_SEQ = 1
	AND B.WC_DW_LON_STA NOT IN 
		(
			'06','07','08','10','11','12','16',
			'17','18','19','20','21','22'
		)
ORDER BY A.BF_SSN
	,A.LN_SEQ
FOR READ ONLY WITH UR
);

CREATE TABLE TEMP_BASE AS
SELECT A.BF_SSN
	,A.LN_SEQ
	,B.WC_DW_LON_STA
	,B.LA_CUR_PRI
	,B.IF_BND_ISS
	,B.LF_ECA_PGM_YR
FROM PROGREVW.UTLWA33_BASE A
INNER JOIN CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,A.LN_SEQ
	,B.WC_DW_LON_STA
	,A.LA_CUR_PRI
	,C.IF_BND_ISS
	,D.LF_ECA_PGM_YR
FROM OLWHRM1.LN10_LON A
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU B
	ON A.BF_SSN = B.BF_SSN 
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN OLWHRM1.LN35_LON_OWN C
	ON B.BF_SSN = C.BF_SSN
	AND B.LN_SEQ = C.LN_SEQ
	AND C.LC_STA_LON35 = 'A'
	AND C.LD_OWN_EFF_END IS NULL
LEFT OUTER JOIN OLWHRM1.LNEC_LON_ECA D
	ON A.BF_SSN = D.BF_SSN 
	AND A.LN_SEQ = D.LN_SEQ
	AND D.LN_ECA_SEQ = 1
FOR READ ONLY WITH UR
) B
ON A.BF_SSN = B.BF_SSN
AND A.LN_SEQ = B.LN_SEQ
;
DISCONNECT FROM DB2;
%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;
%SQLCHECK (SQLRPT=ULWA33.LWA33RZ);
QUIT;
PROC SQL;
CREATE TABLE UTLWA33_R3 AS
	SELECT A.*
		,'NEW' AS RTYP
	FROM LREFP A
	WHERE NOT EXISTS
	(
		SELECT 1
		FROM PROGREVW.UTLWA33_BASE X
		WHERE X.BF_SSN = A.BF_SSN
			AND X.LN_SEQ = A.LN_SEQ
	) 
UNION
	SELECT A.BF_SSN
		,A.LN_SEQ
		,A.WC_DW_LON_STA
		,B.LA_CUR_PRI
		,B.IF_BND_ISS
		,B.LF_ECA_PGM_YR
		,'DRP' AS RTYP
	FROM PROGREVW.UTLWA33_BASE A
	LEFT OUTER JOIN TEMP_BASE B
		ON A.BF_SSN = B.BF_SSN
		AND A.LN_SEQ = B.LN_SEQ
	WHERE NOT EXISTS
	(
		SELECT 1
		FROM LREFP X
		WHERE X.BF_SSN = A.BF_SSN
			AND X.LN_SEQ = A.LN_SEQ
	) 
;
QUIT;
/*ENDRSUBMIT;*/
/*DATA UTLWA33_R3;*/
/*	SET WORKLOCL.UTLWA33_R3;*/
/*RUN;*/
DATA UTLWA33_R3;
	SET UTLWA33_R3;
	IF LF_ECA_PGM_YR = '' THEN 
		LF_ECA_PGM_YR = 'NONE';
	ELSE 
		LF_ECA_PGM_YR = LF_ECA_PGM_YR;	
RUN;
PROC SORT DATA=UTLWA33_R3;
	BY LF_ECA_PGM_YR IF_BND_ISS BF_SSN LN_SEQ;
RUN;
/***********************************************************************************
* R2 FILE - THE DATA SET WILL NEED TO BE PULLED MANUALLY FOR DEVELOPMENT/LOCAL RUNS
************************************************************************************/
%MACRO NEW_R2();
%IF &OD EQ &CUR_DATE %THEN %DO;
	PROC SORT DATA=UTLWA33_BASE NODUPKEY;
		BY IF_BND_ISS BF_SSN LN_SEQ;
	RUN;
	DATA UTLWA33_BASE;
		SET UTLWA33_BASE;
		IF LN_SEQ < 10 THEN 
			LN_SEQ_X = '000'||PUT(LN_SEQ,1.);
		ELSE 
			LN_SEQ_X = '00'||PUT(LN_SEQ,2.);
		LID = BF_SSN||LN_SEQ_X;
	RUN;
	DATA _NULL_;
	SET  WORK.UTLWA33_BASE;
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT IF_BND_ISS $8. ;
	   FORMAT LID $13. ;
	DO;
		PUT LID $ @;
		PUT IF_BND_ISS $ ;
	END;
	RUN;
%END;
%MEND NEW_R2;
%NEW_R2;
PROC FORMAT;
	VALUE $RSEC	
		'NEW' = 'NEW ELIGIBLE LOANS ADD TO LOAN SALE'
		'DRP' = 'LOANS REMOVED FROM ELIGIBILITY';
	VALUE $LNSTA 
		'01' = 'IN GRACE' 
		'02' = 'IN SCHOOL' 
		'03' = 'IN REPAYMENT' 
		'04' = 'IN DEFERMENT' 
		'05' = 'IN FORBEARANCE' 
		'06' = 'IN CURE' 
		'07' = 'CLAIM PENDING'  
		'08' = 'CLAIM SUBMITTED'  
		'09' = 'CLAIM CANCLED' 
		'10' = 'CLAIM REJECT'  
		'11' = 'CLAIM RETURNED'  
		'12' = 'CLAIM PAID'  
		'13' = 'PRE-CLAIM PENDING'  
		'14' = 'PRE-CLAIM SUBMITTED' 
		'15' = 'PRE-CLAIM CANCELLED'  
		'16' = 'DEATH ALLEGED'  
		'17' = 'DEATH VERIFIED'  
		'18' = 'DISABILITY ALLEGED'  
		'19' = 'DISABILITY VERIFIED'  
		'20' = 'BANKRUPTCY ALLEGED'  
		'21' = 'BANKRUPTCY VERIFIED'  
		'22' = 'PAID IN FULL'  
		'23' = 'NOT FULLY ORIGINATED' ;
QUIT;
PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1;
TITLE 'LOAN REDEMPTION ELIGIBLE FOR PUT';
FOOTNOTE   'JOB = UTLWA33  	 REPORT = ULWA33.LWA33R3';
PROC CONTENTS DATA=UTLWA33_R3 OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ = 1 THEN DO;
	PUT // 128 * '-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWA33  	 REPORT = ULWA33.LWA33R3";
	END;
RETURN;
RUN;
PROC REPORT DATA=UTLWA33_R3 NOWD SPLIT='~' HEADSKIP;
	COLUMN RTYP LF_ECA_PGM_YR IF_BND_ISS BF_SSN LN_SEQ LA_CUR_PRI WC_DW_LON_STA;
	DEFINE RTYP / GROUP '~' FORMAT=$RSEC. ;
	DEFINE LF_ECA_PGM_YR / GROUP 'LOAN~PROGRAM~YEAR' WIDTH=7;
	DEFINE IF_BND_ISS / GROUP 'BOND ID';
	DEFINE BF_SSN / DISPLAY 'SSN' WIDTH=9 ;
	DEFINE LN_SEQ /	DISPLAY 'LOAN SEQ' WIDTH=9;
	DEFINE LA_CUR_PRI / DISPLAY 'BALANCE' WIDTH=14 FORMAT=12.2;
	DEFINE WC_DW_LON_STA / DISPLAY 'LOAN STATUS' FORMAT=$LNSTA. WIDTH=20 LEFT;
RUN;
PROC PRINTTO;
RUN;
