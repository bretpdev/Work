/*UTLWM35 - AMNESTY HIGH BALANCE*/
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
/*%LET RPTLIB = C:\WINDOWS\TEMP;*/
FILENAME REPORTZ "&RPTLIB/ULWM35.LWM35RZ";
FILENAME REPORT2 "&RPTLIB/ULWM35.LWM35R2";
FILENAME REPORT3 "&RPTLIB/ULWM35.LWM35R3";

/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;*/
/*RSUBMIT;*/

%macro sqlcheck ;
  %if  &sqlxrc ne 0  %then  %do  ;
    data _null_  ;
            file reportz notitles  ;
            put @01 " ********************************************************************* "
              / @01 " ****  The SQL code above has experienced an error.               **** "
              / @01 " ****  The SAS should be reviewed.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  The SQL error code is  &sqlxrc  and the SQL error message  **** "
              / @01 " ****  &sqlxmsg   **** "
              / @01 " ********************************************************************* "
            ;
         run  ;
  %end  ;
%mend  ;


PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE QUERY AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT
	A.DF_PRS_ID,
	A.DF_SPE_ACC_ID,
	F.AF_APL_ID||F.AF_APL_ID_SFX AS CLUID,
	A.DM_PRS_1,
	A.DM_PRS_LST,
	A.DX_STR_ADR_1,
	A.DX_STR_ADR_2,
	A.DM_CT,
	A.DC_DOM_ST,
	A.DF_ZIP,
	A.DM_FGN_CNY,
	A.DC_ADR,
	E.DI_VLD_ADR,
	E.DI_PHN_VLD,
	C.LA_CLM_PRI,
	C.LA_CLM_INT,
	C.LA_PRI_COL,
	C.LA_INT_ACR,
	D.LA_CLM_INT_ACR,
	C.LA_INT_COL,
	C.LA_LEG_CST_ACR,
	C.LA_LEG_CST_COL,
	C.LA_OTH_CHR_ACR,
	C.LA_OTH_CHR_COL,
	C.LA_COL_CST_ACR,
	C.LA_COL_CST_COL,
	D.LA_CLM_PRJ_COL_CST
FROM	OLWHRM1.PD01_PDM_INF A
	INNER JOIN OLWHRM1.GA01_APP B
		ON A.DF_PRS_ID = B.DF_PRS_ID_BR
	INNER JOIN OLWHRM1.GA10_LON_APP F
		ON B.AF_APL_ID = F.AF_APL_ID
	INNER JOIN OLWHRM1.DC01_LON_CLM_INF C
		ON F.AF_APL_ID = C.AF_APL_ID
		AND F.AF_APL_ID_SFX = C.AF_APL_ID_SFX
	INNER JOIN OLWHRM1.DC02_BAL_INT D
		ON C.AF_APL_ID = D.AF_APL_ID
		AND C.AF_APL_ID_SFX = D.AF_APL_ID_SFX
	INNER JOIN OLWHRM1.PD03_PRS_ADR_PHN E
		ON A.DF_PRS_ID = E.DF_PRS_ID
		AND A.DC_ADR = E.DC_ADR
WHERE	C.LC_STA_DC10 = '03'
	AND (C.LC_AUX_STA IS NULL OR C.LC_AUX_STA = '')
	AND C.LC_PCL_REA NOT IN ('BC', 'BH', 'BO', 'DI', 'DE', 'CS', 'FC')
	AND C.LD_CLM_ASN_DOE IS NULL
	AND A.DC_ADR = 'L'
	AND A.DF_PRS_ID NOT IN
		(
			SELECT DISTINCT DF_PRS_ID_BR
			FROM OLWHRM1.LA11_LEG_ACT_ATY
			WHERE BC_LEG_ACT_ATY_TYP = 'JD'
		)
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;

%put  sqlxrc= >>> &sqlxrc <<< ||| sqlxmsg= >>> &sqlxmsg >>> ;  ** includes error messages to SAS log  ;
%sqlcheck;
quit;

/*ENDRSUBMIT;*/
/*DATA QUERY;*/
/*SET WORKLOCL.QUERY;*/
/*RUN;*/

DATA QUERY;
SET QUERY;
AMOUNT_OWED = LA_CLM_PRI
			+ LA_CLM_INT
			- LA_PRI_COL
			+ LA_INT_ACR
			+ LA_CLM_INT_ACR
			- LA_INT_COL
			+ LA_LEG_CST_ACR
			- LA_LEG_CST_COL
			+ LA_OTH_CHR_ACR
			- LA_OTH_CHR_COL
			+ LA_COL_CST_ACR
			- LA_COL_CST_COL
			+ LA_CLM_PRJ_COL_CST;
COLLECTION_COSTS = LA_COL_CST_ACR
				- LA_COL_CST_COL
				+ LA_CLM_PRJ_COL_CST;
PPLUSI = LA_CLM_PRI 
	+ LA_CLM_INT 
	- LA_PRI_COL 
	+ LA_INT_ACR 
	+ LA_CLM_INT_ACR 
	- LA_INT_COL;
RUN;

PROC SQL;
CREATE TABLE TOTALED AS
SELECT DISTINCT A.*
FROM (
	SELECT DF_PRS_ID,
		DF_SPE_ACC_ID,
		DM_PRS_1,
		DM_PRS_LST,
		DX_STR_ADR_1,
		DX_STR_ADR_2,
		DM_CT,
		CASE 
			WHEN DM_FGN_CNY ^= '' THEN ''
			ELSE DC_DOM_ST
		END AS DC_DOM_ST,
		DF_ZIP,
		DM_FGN_CNY,
		DC_ADR,
		DI_VLD_ADR,
		DI_PHN_VLD,
		SUM(PPLUSI) AS PRIN_INT,
		SUM(AMOUNT_OWED) AS TOTAL_OWED,
		SUM(COLLECTION_COSTS) AS COLLECTION_COSTS
	FROM QUERY
	GROUP BY 
		DF_PRS_ID,
		DF_SPE_ACC_ID,
		DM_PRS_1,
		DM_PRS_LST,
		DX_STR_ADR_1,
		DX_STR_ADR_2,
		DM_CT,
		DC_DOM_ST,
		DF_ZIP,
		DM_FGN_CNY,
		DC_ADR,
		DI_VLD_ADR,
		DI_PHN_VLD
	) A
WHERE A.TOTAL_OWED > 30000
	AND A.COLLECTION_COSTS > 0
;
QUIT;

*CALCULATE KEYLINE;
%MACRO KEY_CLC(TBL);
DATA &TBL (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I 
	CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
SET &TBL;
KEYSSN = TRANSLATE(DF_PRS_ID,'MYLAUGHTER','0987654321');
MODAY = PUT(DATE(),MMDDYYN4.);
KEYLINE = "P"||KEYSSN||MODAY||DC_ADR;
CHKDIG = 0;
LENGTH DIG $2.;
DO I = 1 TO LENGTH(KEYLINE);
	IF I/2 NE ROUND(I/2,1) 
		THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
	ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
	IF SUBSTR(DIG,1,1) = " " 
		THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
		ELSE DO;
			CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
			CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
			IF CHK1 + CHK2 >= 10
				THEN DO;
					CHK3 = PUT(CHK1 + CHK2,2.);
					CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
					CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
				END;
			CHKDIG = CHKDIG + CHK1 + CHK2;
		END;
END;
CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
CHECK = PUT(CHKDIGIT,1.);
ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;
%MEND KEY_CLC;
%KEY_CLC(TOTALED);

PROC SORT DATA=TOTALED;
BY DESCENDING DM_FGN_CNY DC_DOM_ST DF_PRS_ID;
RUN;

DATA _NULL_;
SET  WORK.TOTALED;
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
   FORMAT DF_PRS_ID $9. ;
   FORMAT DF_SPE_ACC_ID $10. ;
   FORMAT DM_PRS_1 $12. ;
   FORMAT DM_PRS_LST $35. ;
   FORMAT DX_STR_ADR_1 $35. ;
   FORMAT DX_STR_ADR_2 $35. ;
   FORMAT DM_CT $30. ;
   FORMAT DC_DOM_ST $2. ;
   FORMAT DF_ZIP $14.;
   FORMAT DM_FGN_CNY $25.;
   FORMAT ACSKEY $18.;
   FORMAT PRIN_INT 9.2;
   FORMAT COLLECTION_COSTS 9.2;
/*CREATE THE HEADER ROW*/
IF _N_ = 1 THEN
 DO;
	PUT
	'SSN,'
	'ACCT,'
	'FIRSTNAME,'
	'LASTNAME,'
	'ADDRESS1,'
	'ADDRESS2,'
	'CITY,'
	'STATE,'
	'ZIP,'
	'COUNTRY,'
	'KEYLINE,'
	'PRIN_INT,'
	'COL_COST,'
	'STATE_IND,'
	'COST_CENTER'
	;
END;
/*ONLY OUTPUT IF THE ADDRESS IS VALID*/
IF DI_VLD_ADR = 'Y' THEN
 DO;
   PUT DF_PRS_ID $ @;
   PUT DF_SPE_ACC_ID $ @;
   PUT DM_PRS_1 $ @;
   PUT DM_PRS_LST $ @;
   PUT DX_STR_ADR_1 $ @;
   PUT DX_STR_ADR_2 $ @;
   PUT DM_CT $ @;
   PUT DC_DOM_ST $ @;
   PUT DF_ZIP $ @;
   PUT DM_FGN_CNY $ @;
   PUT ACSKEY $ @;
   PUT PRIN_INT @;
   PUT COLLECTION_COSTS @;
   PUT DC_DOM_ST $ @;
   PUT 'MA2329';
 END;
RUN;

PROC SORT DATA = TOTALED;
BY DF_PRS_ID;
RUN;

DATA _NULL_;
SET  WORK.TOTALED;
FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
   FORMAT DF_PRS_ID $9. ;
/*ONLY OUTPUT IF THE PHONE IS VALID*/
IF DI_PHN_VLD = 'Y' THEN
 DO;
   PUT DF_PRS_ID $ @;
   PUT 'AMNESTY' @;
   PUT ',,,,,';
 END;
RUN;
