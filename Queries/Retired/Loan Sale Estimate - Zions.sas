/*sale estimates for zions bank special sales, oct and nov 2003*/
/*specify sep date limits here:*/

%LET ZBSEP = if LD_SCL_SPR <= '31DEC2003'D;




/*UHEAA LOAN SALE TRIGGER FILE PROCESS*/

/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
FILENAME REPORT2 "&RPTLIB/ULWO02.LWO02R2";
FILENAME REPORT10 "&RPTLIB/ULWO02.LWO02R10";
FILENAME REPORT11 "&RPTLIB/ULWO02.LWO02R11";
FILENAME REPORT12 "&RPTLIB/ULWO02.LWO02R12";
FILENAME REPORT13 "&RPTLIB/ULWO02.LWO02R13";
FILENAME REPORT14 "&RPTLIB/ULWO02.LWO02R14";
FILENAME REPORT15 "&RPTLIB/ULWO02.LWO02R15";
FILENAME REPORT16 "&RPTLIB/ULWO02.LWO02R16";
FILENAME REPORT30 "&RPTLIB/ULWO02.LWO02R30";
FILENAME REPORT31 "&RPTLIB/ULWO02.LWO02R31";
FILENAME REPORT32 "&RPTLIB/ULWO02.LWO02R32";
FILENAME REPORT33 "&RPTLIB/ULWO02.LWO02R33";
FILENAME REPORT34 "&RPTLIB/ULWO02.LWO02R34";
FILENAME REPORT50 "&RPTLIB/ULWO02.LWO02R50";
FILENAME REPORT51 "&RPTLIB/ULWO02.LWO02R51";
FILENAME REPORT52 "&RPTLIB/ULWO02.LWO02R52";
FILENAME REPORT53 "&RPTLIB/ULWO02.LWO02R53";
FILENAME REPORT54 "&RPTLIB/ULWO02.LWO02R54";
FILENAME REPORT70 "&RPTLIB/ULWO02.LWO02R70";
FILENAME REPORT71 "&RPTLIB/ULWO02.LWO02R71";
FILENAME REPORT72 "&RPTLIB/ULWO02.LWO02R72";
FILENAME REPORT73 "&RPTLIB/ULWO02.LWO02R73";
FILENAME REPORT74 "&RPTLIB/ULWO02.LWO02R74";
FILENAME REPORT75 "&RPTLIB/ULWO02.LWO02R75";
FILENAME REPORT90 "&RPTLIB/ULWO02.LWO02R90";
*/

/************************************************************************************/
/************************VARIABLE AND DATASET INITIALIZATION*************************/
/************************************************************************************/

%LET NELNET = '829769','826717','830248','999775';
%LET SLMA = '888885';
%LET INHOUSE = '828476';

OPTIONS SYMBOLGEN;
DATA _NULL_;
*CALL SYMPUT('EOM4',"'"||PUT(INTNX('MONTH',TODAY(),-4,'end'), MMDDYYD10.)||"'");
CALL SYMPUT('EOM4',"'"||PUT(INTNX('MONTH',TODAY(),-4,'end'), DATE9.)||"'D");
CALL SYMPUT('EOM5',"'"||PUT(INTNX('MONTH',TODAY(),-5,'end'), DATE9.)||"'D");
CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'beginning'), MMDDYY10.));
RUN;

/*LOCAL EXECUTION VARIABLE TRANSLATION - COMMENT FOR PRODUCTION!*/
%SYSLPUT EOM4 = &EOM4;
%SYSLPUT INHOUSE = &INHOUSE;
%SYSLPUT NELNET = &NELNET;
%SYSLPUT SLMA = &SLMA;

/************************************************************************************/
/**********READ SALE FLAT FILE FOR SALES SCHEDULED FOR TODAY AND THEIR TYPE**********/
/************************************************************************************/

LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK  ;
RSUBMIT;
LIBNAME OLRPLD V8 '/uheaa/whse/olrp_lookup_directory';
FILENAME SALEFILE "/uheaa/whse/olrp_lookup_directory/utlwo2_1.txt";

DATA SLIST;
TODAY = TODAY();
INFILE SALEFILE DLM="," DSD MISSOVER;
INFORMAT P1DATE P2DATE PLDATE FDATE MMDDYY8.;
FORMAT TODAY P1DATE P2DATE PLDATE FDATE MMDDYY10.;
INPUT SALEID $ SELLER $ BUYER $ P1DATE P2DATE PLDATE FDATE ;
IF TODAY = FDATE THEN TYPE = 'F';
ELSE IF TODAY = PLDATE THEN TYPE = 'L';
ELSE IF TODAY = P1DATE OR TODAY = P2DATE THEN TYPE = 'P';
ELSE TYPE = ' ';
IF TYPE NE ' ' THEN OUTPUT;
RUN;

%MACRO ABORTIF;
%LET DSID=%SYSFUNC(OPEN(WORK.SLIST));
%LET HASOBS=%SYSFUNC(ATTRN(&DSID,ANY));
%LET RC=%SYSFUNC(CLOSE(&DSID));
%IF &HASOBS=0 %THEN
	%DO;
    	DATA _NULL_;
			PUT 37*'*';
            PUT "NO LOAN SALES SCHEDULED FOR &SYSDATE9.";
			PUT 37*'*';
			*ABORT RETURN;  			/******UNCOMMENT FOR PRODUCTION******/
        RUN;
    %END;
%MEND ABORTIF;
%ABORTIF;

/*COUNT THE NUMBER OF SALES TO PROCESS INTO THE MACRO VAR SALE_CT*/
DATA _NULL_;
SET SLIST;
CALL SYMPUT ('SALE_CT',TRIM(_N_));
RUN;

/*CREATE LIST OF SELLING LENDERS*/
PROC SORT DATA=SLIST  OUT=LDRS (KEEP=SELLER) NODUPKEY;
BY SELLER;
RUN;
DATA _NULL_;
LENGTH LIST $200;
SET LDRS END=LAST;
RETAIN LIST;
IF _N_=1 THEN LIST = "'"||TRIM(SELLER)||"'";
ELSE LIST = TRIM(LIST)||",'"||TRIM(SELLER)||"'";
IF LAST;
CALL SYMPUT ('LDR_LST',LIST);
RUN;

/*INITIALIZE MASTER REPORTING DATASETS*/
DATA SLGE50_MAST;
RUN;
DATA EXCLUDE_MAST;
RUN;


/************************************************************************************/
/*******************SQL PRIMARY DATA SELECTION***************************************/
/************************************************************************************/

*RSUBMIT;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);

CREATE TABLE MAIN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.IF_DOE_LDR
	,A.BF_SSN
	,A.LF_LON_ALT
	,'0'||CHAR(A.LN_LON_ALT_SEQ) AS LN_LON_ALT_SEQ
	,A.LN_SEQ
	,A.LC_STA_LON10
	,A.LA_CUR_PRI
	,COALESCE(A.LA_NSI_OTS,0) AS LA_NSI_OTS
	,A.IC_LON_PGM
	,A.IF_GTR
	,A.LD_LON_GTR
	,A.LD_TRM_END
	,A.LF_LON_CUR_OWN
	,C.LD_SCL_SPR
	,C.LC_REA_SCL_SPR
	,C.LD_NTF_SCL_SPR
	,C.REPAY_BEG_DT
/*	,E.MUL_SEP_IND*/
	,G.MIN_ACT_DSB
	,G.MAX_ACT_DSB
	,DW01.WC_DW_LON_STA
	,F.FUL_DSB_IND
	,AP10.AD_SIG_SCL
	,LN33.LD_CU_END
	,LN33.LC_CU_REA_END
	,PD24.DD_BKR_DCH_RCV
	,A.LA_LON_AMT_GTR
	,DW01.WA_TOT_BRI_OTS
	,A.LD_PNT_SIG
	,A.LD_TRM_BEG
	,A.LC_ACA_GDE_LEV
	,A.LF_DOE_SCL_ORG
	,A.LF_STU_SSN
	,AP10.AD_SIG_BR
	,C.LF_DOE_SCL_ENR_CUR
	,NON.NON_USB_WAMU
	,BRSUM.TOT_PRI_BR
	,BRUSAF.IND_USAF

	,LN20.LF_EDS
	,LN20.LC_EDS_TYP
	,LN20.LC_REL_TO_BR

FROM  OLWHRM1.LN10_LON A 
/*GET LAST ACTUAL DISBURSEMENT DATE FOR LATE DISB CHECK*/
INNER JOIN
	(SELECT BF_SSN
		,LN_SEQ
		,MIN(LD_DSB) AS MIN_ACT_DSB
		,MAX(LD_DSB) AS MAX_ACT_DSB
	FROM OLWHRM1.LN15_DSB
	WHERE LC_STA_LON15 IN ('1','3')
	AND LC_DSB_TYP = '2'
	AND COALESCE(LA_DSB_CAN,0) <> LA_DSB
	GROUP BY BF_SSN, LN_SEQ
	) G
	ON A.BF_SSN = G.BF_SSN
	AND A.LN_SEQ = G.LN_SEQ

/*GET LOAN STATUS*/
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
	ON A.BF_SSN = DW01.BF_SSN
	AND A.LN_SEQ = DW01.LN_SEQ

/*GET BORROWER TOTAL PRINCIPAL BALANCE*/
LEFT OUTER JOIN
	(SELECT BF_SSN
	,SUM(LA_CUR_PRI) AS TOT_PRI_BR
	FROM OLWHRM1.LN10_LON A
	GROUP BY BF_SSN
	)BRSUM
	ON A.BF_SSN = BRSUM.BF_SSN

/*SET INDICATOR IF BORROWER HAS OPEN, RELEASED USAF LOANS*/
LEFT OUTER JOIN
	(SELECT DISTINCT BF_SSN
	,'Y' AS IND_USAF
	FROM OLWHRM1.LN10_LON
	WHERE IF_GTR = '000800'
	AND LA_CUR_PRI > 0
	AND LC_STA_LON10 = 'R'
	)BRUSAF
	ON A.BF_SSN = BRUSAF.BF_SSN

/*GET BANKRUPTCY DISCHARGE INFO*/
LEFT OUTER JOIN
	(SELECT DF_PRS_ID
		,MAX(DD_BKR_DCH_RCV) AS DD_BKR_DCH_RCV
	FROM  OLWHRM1.PD24_PRS_BKR
	WHERE DC_BKR_STA = '05'
	GROUP BY DF_PRS_ID) PD24
	ON A.BF_SSN = PD24.DF_PRS_ID

/*GET ANY CURE INFO FOR THE LOAN*/
LEFT OUTER JOIN OLWHRM1.LN33_LON_CU_INF LN33
	ON A.BF_SSN = LN33.BF_SSN
	AND A.LN_SEQ = LN33.LN_SEQ
	AND LN33.LC_CU_CND IN ('R','S')
	AND LN33.LD_CU_END IS NOT NULL
	AND LN33.LC_CU_REA_END IN ('C','F','N')

/*GET SEPARATION DATE & REPAY BEGIN DATE INFO*/
LEFT OUTER JOIN 
	(SELECT C.BF_SSN
		,C.LN_SEQ
		,D.LD_SCL_SPR
		,D.LC_REA_SCL_SPR
		,D.LD_NTF_SCL_SPR
		,DATE(DAYS(C.LD_END_GRC_PRD_ALI) + 1) AS REPAY_BEG_DT
		,D.LF_DOE_SCL_ENR_CUR
	FROM OLWHRM1.LN13_LON_STU_OSD C
	INNER JOIN OLWHRM1.SD10_STU_SPR D
	ON C.LF_STU_SSN = D.LF_STU_SSN
	AND C.LN_STU_SPR_SEQ = D.LN_STU_SPR_SEQ
	AND C.LC_STA_LON13 = 'A'
	AND D.LC_STA_STU10 = 'A'
	)C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
	
/*GET SCHOOL SIGN/CERT DATE FROM LO SIDE AP10 TABLE*/
LEFT OUTER JOIN 
	(SELECT Y.BF_SSN
		,Y.AD_SIG_SCL
		,Y.AD_SIG_BR
		,Z.LN_SEQ
	FROM OLWHRM1.AP10_APL Y
	INNER JOIN OLWHRM1.GR10_RPT_LON_APL Z
		ON Y.BF_SSN = Z.BF_SSN
		AND Y.AN_SEQ = Z.AN_SEQ
	) AP10
	ON A.BF_SSN = AP10.BF_SSN
	AND A.LN_SEQ = AP10.LN_SEQ

/*COUNT NUMBER OF SEPARATION DATES AT BWR LEVEL*/
/*LEFT OUTER JOIN */
/*	(SELECT X.BF_SSN*/
/*		,COUNT(DISTINCT Y.LD_SCL_SPR) AS MUL_SEP_IND*/
/*	FROM OLWHRM1.LN13_LON_STU_OSD X*/
/*	INNER JOIN OLWHRM1.SD10_STU_SPR Y*/
/*		ON X.LF_STU_SSN = Y.LF_STU_SSN*/
/*		AND X.LN_STU_SPR_SEQ = Y.LN_STU_SPR_SEQ*/
/*		AND Y.LC_STA_STU10 = 'A'*/
/*		AND X.LC_STA_LON13 = 'A'*/
/*	INNER JOIN OLWHRM1.LN10_LON Z*/
/*		ON X.BF_SSN = Z.BF_SSN*/
/*		AND X.LN_SEQ = Z.LN_SEQ*/
/*		AND Z.LC_STA_LON10 = 'R'*/
/*		AND Z.LA_CUR_PRI > 0*/
/*		AND Z.LF_LON_CUR_OWN <> '828476'*/
/*	GROUP BY X.BF_SSN*/
/*	) E*/
/*	ON A.BF_SSN = E.BF_SSN*/
/*SET INDICATOR FOR FULLY DISBURSED LOANS*/
LEFT OUTER JOIN 
	(SELECT DISTINCT X.BF_SSN
		,X.LN_SEQ
		,'Y' AS FUL_DSB_IND
	FROM OLWHRM1.LN15_DSB X
	WHERE NOT EXISTS
		(SELECT *
		FROM OLWHRM1.LN15_DSB Y
		WHERE X.BF_SSN = Y.BF_SSN
		AND X.LN_SEQ = Y.LN_SEQ
		AND Y.LC_STA_LON15 IN ('1','3')
		AND Y.LC_DSB_TYP = '1'
		AND (Y.LA_DSB_CAN IS NULL
		    OR Y.LA_DSB_CAN <> Y.LA_DSB)
		)
	) F
	ON A.BF_SSN = F.BF_SSN
	AND A.LN_SEQ = F.LN_SEQ
/*SET INDICATOR IF BWR HAS OPEN, RELEASED LOAN AT A LENDER OTHER THAN USB OR WAM*/
LEFT OUTER JOIN
	(SELECT DISTINCT X.BF_SSN
	,'Y' AS NON_USB_WAMU
	FROM OLWHRM1.LN10_LON X
	WHERE X.LC_STA_LON10 = 'R'
	AND X.LA_CUR_PRI > 0
	AND X.LF_LON_CUR_OWN NOT IN ('811698','829505')
	)NON
	ON A.BF_SSN = NON.BF_SSN
/*GATHER ENDORSER INFO - ONE ENDORSER PER LOAN*/
LEFT OUTER JOIN OLWHRM1.LN20_EDS LN20
	ON A.BF_SSN = LN20.BF_SSN
	AND A.LN_SEQ = LN20.LN_SEQ
	AND LN20.LC_STA_LON20 = 'A'

WHERE A.LF_LON_CUR_OWN IN (&LDR_LST)
);

/*RSUBMIT;PROC SQL STIMER;CONNECT TO DB2 (DATABASE=DLGSUTWH);*/
CREATE TABLE ONELINK AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.BF_SSN
	,A.LN_SEQ
	,GA10.AF_CUR_LON_SER_AGY
	,GA10.AF_CUR_LON_OPS_LDR

FROM  OLWHRM1.LN10_LON A 
/*GET ONELINK DATA*/
INNER JOIN OLWHRM1.GA10_LON_APP GA10
	ON A.LF_LON_ALT = GA10.AF_APL_ID
	AND '0'||CHAR(A.LN_LON_ALT_SEQ) = GA10.AF_APL_ID_SFX

WHERE A.LF_LON_CUR_OWN IN (&LDR_LST)
);

/*GET DATA FOR PLUS LOANS WITH CANCELED DISBURSEMENTS*/
CREATE TABLE PLSCAN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT LN15.BF_SSN
	,LN15.LN_SEQ
	,LN15.LD_DSB AS PLS_CAN_LD_DSB
	,LN15.LA_DSB AS PLS_CAN_LA_DSB
	,ARC.PLS_CAN_EFF_DT
FROM OLWHRM1.LN15_DSB LN15
LEFT OUTER JOIN 
	/*GET PLUS CANCELLATION EFFECTIVE DATE FROM ARC, IF ANY*/
	(SELECT LN85.BF_SSN
	,LN85.LN_SEQ
	,SUBSTR(AY20.LX_ATY,1,8) AS PLS_CAN_EFF_DT
	FROM OLWHRM1.LN85_LON_ATY LN85
	INNER JOIN OLWHRM1.AY10_BR_LON_ATY AY10
		ON LN85.BF_SSN = AY10.BF_SSN
		AND LN85.LN_ATY_SEQ = AY10.LN_ATY_SEQ
	INNER JOIN OLWHRM1.AY20_ATY_TXT AY20
		ON AY10.BF_SSN = AY20.BF_SSN
		AND AY10.LN_ATY_SEQ = AY20.LN_ATY_SEQ
	WHERE AY10.LC_STA_ACTY10 = 'A'
	AND AY10.PF_REQ_ACT = 'RPLCA'
	)ARC
	ON LN15.BF_SSN = ARC.BF_SSN
	AND LN15.LN_SEQ = ARC.LN_SEQ
WHERE LN15.LC_STA_LON15 IN ('1','3') /*ACTIVE ROW*/
AND COALESCE(LN15.LA_DSB_CAN,0) = LN15.LA_DSB /*FULLY CANCELED*/
AND LN15.LD_DSB =
	(SELECT MAX(Y.LD_DSB)
	FROM OLWHRM1.LN15_DSB Y
	WHERE LN15.BF_SSN = Y.BF_SSN
	AND LN15.LN_SEQ = Y.LN_SEQ
	AND Y.LC_STA_LON15 IN ('1','3') /*ACTIVE ROW*/)
);


/*SET INDICATOR IF BWR HAS AN OPEN LOAN SERVICED INHOUSE OR NELNET OR SLMA*/
/*SET INDICATOR IF BWR HAS OPEN LOANS SERVICED BY NLN OR SLMA WITH ZERO PRIN+INT*/
CREATE TABLE OTHSVC AS
SELECT DF_PRS_ID_BR
,MAX(OTH_NLN_IND) AS OTH_NLN_IND
,MAX(OTH_SLM_IND) AS OTH_SLM_IND
,MAX(OTH_INH_IND) AS OTH_INH_IND
,MAX(ZRO_NLN_IND) AS ZRO_NLN_IND
,MAX(ZRO_SLM_IND) AS ZRO_SLM_IND
FROM CONNECTION TO DB2 (
SELECT X.DF_PRS_ID_BR
	,CASE WHEN Y.AF_CUR_LON_SER_AGY = '700121'
		THEN 'Y'
		END AS OTH_NLN_IND
	,CASE WHEN Y.AF_CUR_LON_SER_AGY IN ('700191','700004','700789','700190','700079')
		THEN 'Y'
		END AS OTH_SLM_IND
	,CASE WHEN Y.AF_CUR_LON_OPS_LDR = '828476'
		THEN 'Y'
		END AS OTH_INH_IND
	,CASE WHEN COALESCE(Y.AA_CUR_PRI,0) + COALESCE(Y.AA_OTS_ACR_INT,0) = 0
		AND Y.AF_CUR_LON_SER_AGY = '700121'
		THEN 'Y'
		END AS ZRO_NLN_IND
	,CASE WHEN COALESCE(Y.AA_CUR_PRI,0) + COALESCE(Y.AA_OTS_ACR_INT,0) = 0
		AND Y.AF_CUR_LON_SER_AGY IN ('700191','700004','700789','700190','700079')
		THEN 'Y'
		END AS ZRO_SLM_IND
FROM  OLWHRM1.GA01_APP X 
INNER JOIN OLWHRM1.GA10_LON_APP Y
	ON X.AF_APL_ID = Y.AF_APL_ID
INNER JOIN OLWHRM1.GA14_LON_STA Z
	ON Y.AF_APL_ID = Z.AF_APL_ID
	AND Y.AF_APL_ID_SFX = Z.AF_APL_ID_SFX
	AND Z.AC_STA_GA14 = 'A'
WHERE Z.AC_LON_STA_TYP IN ('CR','DA','FB','IA','ID','IG','IM','RF','RP','UA','UB')
AND (Y.AF_CUR_LON_SER_AGY IN ('700121','700191','700004','700789','700190','700079')
	OR Y.AF_CUR_LON_OPS_LDR = '828476')
)
GROUP BY DF_PRS_ID_BR;


/*GET PDEM INFO FOR BWR, STU, EDS*/
CREATE TABLE PDEM AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT B.DF_PRS_ID
,CASE PD10.DM_PRS_LST_SFX
	WHEN ' ' 
	THEN RTRIM(PD10.DM_PRS_LST)||', '||RTRIM(PD10.DM_PRS_1)||' '||PD10.DM_PRS_MID 
	ELSE RTRIM(PD10.DM_PRS_LST)||' '||PD10.DM_PRS_LST_SFX||', '||RTRIM(PD10.DM_PRS_1)||' '||PD10.DM_PRS_MID
	END AS NAME
,PD10.DD_BRT
,B.DC_ADR
,B.DI_VLD_ADR
,B.DX_STR_ADR_1
,B.DX_STR_ADR_2
,B.DX_STR_ADR_3
,B.DM_CT
,B.DC_DOM_ST
,B.DF_ZIP_CDE
,B.DM_FGN_CNY
,B.DM_FGN_ST
,'('||C.DN_DOM_PHN_ARA||') '||C.DN_DOM_PHN_XCH||'-'||C.DN_DOM_PHN_LCL AS H_PHN
,C.DI_PHN_VLD AS H_PHN_VLD
,'('||D.DN_DOM_PHN_ARA||') '||D.DN_DOM_PHN_XCH||'-'||D.DN_DOM_PHN_LCL AS W_PHN
,'('||E.DN_DOM_PHN_ARA||') '||E.DN_DOM_PHN_XCH||'-'||E.DN_DOM_PHN_LCL AS A_PHN

FROM OLWHRM1.PD10_PRS_NME PD10
INNER JOIN OLWHRM1.PD30_PRS_ADR B
	ON PD10.DF_PRS_ID = B.DF_PRS_ID
	AND B.DC_ADR = 'L'
INNER JOIN OLWHRM1.PD42_PRS_PHN C
	ON B.DF_PRS_ID = C.DF_PRS_ID
	AND C.DC_PHN = 'H'
LEFT OUTER JOIN OLWHRM1.PD42_PRS_PHN D
	ON B.DF_PRS_ID = D.DF_PRS_ID
	AND D.DC_PHN = 'W'
LEFT OUTER JOIN OLWHRM1.PD42_PRS_PHN E
	ON B.DF_PRS_ID = E.DF_PRS_ID
	AND E.DC_PHN = 'A'
);


/*GATHER DISBURSEMENT INFO*/
CREATE TABLE DISB AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT D1.BF_SSN
,A.LN_SEQ
,D1.LD_DSB AS LD_DSB1
,D1.LA_DSB AS LA_DSB1
,D1.LD_DSB_CAN AS LD_DSB_CAN1
,D1.LA_DSB_CAN AS LA_DSB_CAN1

,D2.LD_DSB AS LD_DSB2
,D2.LA_DSB AS LA_DSB2
,D2.LD_DSB_CAN AS LD_DSB_CAN2
,D2.LA_DSB_CAN AS LA_DSB_CAN2

,D3.LD_DSB AS LD_DSB3
,D3.LA_DSB AS LA_DSB3
,D3.LD_DSB_CAN AS LD_DSB_CAN3
,D3.LA_DSB_CAN AS LA_DSB_CAN3

,D4.LD_DSB AS LD_DSB4
,D4.LA_DSB AS LA_DSB4
,D4.LD_DSB_CAN AS LD_DSB_CAN4
,D4.LA_DSB_CAN AS LA_DSB_CAN4

,D5.LD_DSB AS LD_DSB5
,D5.LA_DSB AS LA_DSB5
,D5.LD_DSB_CAN AS LD_DSB_CAN5
,D5.LA_DSB_CAN AS LA_DSB_CAN5

,D6.LD_DSB AS LD_DSB6
,D6.LA_DSB AS LA_DSB6
,D6.LD_DSB_CAN AS LD_DSB_CAN6
,D6.LA_DSB_CAN AS LA_DSB_CAN6

FROM OLWHRM1.LN10_LON A 
INNER JOIN OLWHRM1.LN15_DSB D1
	ON A.BF_SSN = D1.BF_SSN
	AND A.LN_SEQ = D1.LN_SEQ
	AND D1.LC_STA_LON15 IN ('1','3')
	AND D1.LN_LON_DSB_SEQ = 1
LEFT OUTER JOIN OLWHRM1.LN15_DSB D2
	ON D1.BF_SSN = D2.BF_SSN
	AND D1.LN_SEQ = D2.LN_SEQ
	AND D2.LC_STA_LON15 IN ('1','3')
	AND D2.LN_LON_DSB_SEQ = 2
LEFT OUTER JOIN OLWHRM1.LN15_DSB D3
	ON D1.BF_SSN = D3.BF_SSN
	AND D1.LN_SEQ = D3.LN_SEQ
	AND D3.LC_STA_LON15 IN ('1','3')
	AND D3.LN_LON_DSB_SEQ = 3
LEFT OUTER JOIN OLWHRM1.LN15_DSB D4
	ON D1.BF_SSN = D4.BF_SSN
	AND D1.LN_SEQ = D4.LN_SEQ
	AND D4.LC_STA_LON15 IN ('1','3')
	AND D4.LN_LON_DSB_SEQ = 4
LEFT OUTER JOIN OLWHRM1.LN15_DSB D5
	ON D1.BF_SSN = D5.BF_SSN
	AND D1.LN_SEQ = D5.LN_SEQ
	AND D5.LC_STA_LON15 IN ('1','3')
	AND D5.LN_LON_DSB_SEQ = 5
LEFT OUTER JOIN OLWHRM1.LN15_DSB D6
	ON D1.BF_SSN = D6.BF_SSN
	AND D1.LN_SEQ = D6.LN_SEQ
	AND D6.LC_STA_LON15 IN ('1','3')
	AND D6.LN_LON_DSB_SEQ = 6

/*KEY BANK LOANS ONLY*/
WHERE A.LF_LON_CUR_OWN = '813760UT'
);
DISCONNECT FROM DB2;

*RSUBMIT;
/*merge the sub selects here*/
PROC SQL STIMER;
CREATE TABLE LNSALE_MAST AS
SELECT *
FROM MAIN A
LEFT OUTER JOIN ONELINK B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN PLSCAN C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
	AND A.IC_LON_PGM = 'PLUS'
LEFT OUTER JOIN OTHSVC D
	ON A.BF_SSN = D.DF_PRS_ID_BR
LEFT OUTER JOIN DISB G
	ON A.BF_SSN = G.BF_SSN
	AND A.LN_SEQ = G.LN_SEQ
;

CREATE TABLE LNSALE_MAST AS
SELECT A.*
,B.*
,C.NAME AS NAME_STU
,C.DD_BRT AS DD_BRT_STU
,C.DC_ADR AS DC_ADR_STU
,C.DI_VLD_ADR AS DI_VLD_ADR_STU
,C.DX_STR_ADR_1 AS DX_STR_ADR_1_STU
,C.DX_STR_ADR_2 AS DX_STR_ADR_2_STU
,C.DX_STR_ADR_3 AS DX_STR_ADR_3_STU
,C.DM_CT AS DM_CT_STU
,C.DC_DOM_ST AS DC_DOM_ST_STU
,C.DF_ZIP_CDE AS DF_ZIP_CDE_STU
,C.DM_FGN_CNY AS DM_FGN_CNY_STU
,C.DM_FGN_ST AS DM_FGN_ST_STU
,C.H_PHN AS H_PHN_STU
,C.H_PHN_VLD AS H_PHN_VLD_STU
,C.W_PHN AS W_PHN_STU
,C.A_PHN AS A_PHN_STU
,D.NAME AS NAME_END
,D.DD_BRT AS DD_BRT_END
,D.DC_ADR AS DC_ADR_END
,D.DI_VLD_ADR AS DI_VLD_ADR_END
,D.DX_STR_ADR_1 AS DX_STR_ADR_1_END
,D.DX_STR_ADR_2 AS DX_STR_ADR_2_END
,D.DX_STR_ADR_3 AS DX_STR_ADR_3_END
,D.DM_CT AS DM_CT_END
,D.DC_DOM_ST AS DC_DOM_ST_END
,D.DF_ZIP_CDE AS DF_ZIP_CDE_END
,D.DM_FGN_CNY AS DM_FGN_CNY_END
,D.DM_FGN_ST AS DM_FGN_ST_END
,D.H_PHN AS H_PHN_END
,D.H_PHN_VLD AS H_PHN_VLD_END
,D.W_PHN AS W_PHN_END
,D.A_PHN AS A_PHN_END
FROM LNSALE_MAST A
INNER JOIN PDEM B
	ON A.BF_SSN = B.DF_PRS_ID
LEFT OUTER JOIN PDEM C
	ON A.LF_STU_SSN = C.DF_PRS_ID
LEFT OUTER JOIN PDEM D
	ON A.LF_EDS = D.DF_PRS_ID
;
QUIT;


/************************************************************************************/
/****************************ITERATIVE SALE PROCESSING*******************************/
/************************************************************************************/
*RSUBMIT;
%MACRO SALE_ITER(I_ITER);

/*CREATE MACRO VARIABLES FOR CURRENT SALE*/
*RSUBMIT;
DATA _NULL_;
SET SLIST;
IF _N_ = &I_ITER THEN DO;
	CALL SYMPUT ('I_SALEID',TRIM(SALEID));
	CALL SYMPUT ('I_SELLER',TRIM(SELLER));
	CALL SYMPUT ('I_BUYER',TRIM(BUYER));
	CALL SYMPUT ('I_TYPE',TRIM(TYPE));
	CALL SYMPUT ('I_FDATE',"'"||PUT(FDATE,DATE9.)||"'D");
	END;
RUN;

/************************************************************************************/
/****************************ASSIGN BUYERS TO EACH LOAN******************************/
/************************************************************************************/

DATA LNSALE EXCLUDE1;
SALEID = "&I_SALEID";
/*REMOVE LOANS NOT OWNED BY THE SELLER*/
SET LNSALE_MAST (WHERE = (LF_LON_CUR_OWN EQ "&I_SELLER"));
LENGTH BUYER $ 8.;
/*ASSIGN INHOUSE SALES*/
IF (OTH_INH_IND = ' ' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = ' ')
OR (OTH_INH_IND = 'Y' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = ' ')
OR (OTH_INH_IND = 'Y' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = 'Y')
OR (OTH_INH_IND = ' ' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = 'Y')
THEN BUYER = 'INHOUSE';
/*ASSIGN NELNET SALES*/
ELSE IF (OTH_INH_IND = ' ' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = ' ')
OR (OTH_INH_IND = ' ' AND OTH_NLN_IND = 'Y' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = 'Y')
THEN BUYER = 'NELNET';
/*ASSIGN SLMA SALES*/
ELSE IF (OTH_INH_IND = ' ' AND OTH_NLN_IND = ' ' AND OTH_SLM_IND = 'Y' AND NON_USB_WAMU = ' ')
THEN BUYER = 'SLMA';
/*SET ASIDE LOANS WITH MULTIPLE SERVICERS*/
ELSE DO; 
	BUYER = 'MULTI'; 
	EX_CD = 'MULTI_SVC';
	OUTPUT EXCLUDE1; 
	END;
/*REMOVE LOANS NOT BEING SOLD TO THIS BUYER*/
IF "&I_BUYER" IN (&NELNET) THEN DO;
	IF BUYER EQ "NELNET" THEN OUTPUT LNSALE;
	END;
ELSE IF "&I_BUYER" IN (&INHOUSE) THEN DO;
	IF BUYER EQ "INHOUSE" THEN OUTPUT LNSALE;
	END;
ELSE IF "&I_BUYER" IN (&SLMA) THEN DO;
	IF BUYER EQ "SLMA" THEN OUTPUT LNSALE;
	END;
RUN;


*RSUBMIT;
/************************************************************************************/
/*****************************APPLY LOAN LEVEL EDITS*********************************/
/************************************************************************************/
DATA LNSALEX;
SET LNSALE;

/*STATUS EDIT*/
IF WC_DW_LON_STA IN ('01','02','03','04','05','10','13','14','15');

/*LOAN RECORD STATUS EDIT*/
IF LC_STA_LON10 = 'R';

/*GUARANTOR CODE EDIT*/
IF IF_GTR IN ('000749','000800');

/*CURRENT PRINCIPAL BALANCE EDIT*/
IF LA_CUR_PRI > 0;

/*SEPARATION DATE CRITERIA EDIT*/
/*IF (IC_LON_PGM NOT IN ('STFFRD','UNSTFD')*/
/*	OR */
/*	(IC_LON_PGM IN ('STFFRD','UNSTFD')*/
/*	AND (LF_LON_CUR_OWN = '819628'*/
/*		OR LD_SCL_SPR <= &EOM4)));*/

&ZBSEP ; 								/*ZIONS BANK ONETIME CODE*/

/*FULLY ORIGINATED EDIT*/
IF FUL_DSB_IND NE 'Y' THEN DELETE;

/*FULLY ORIGINATED DATE EDIT*/
IF LF_LON_CUR_OWN = '819628'
	AND IC_LON_PGM IN ('STFFRD','UNSTFD')
	AND MAX_ACT_DSB > &I_FDATE - 30
	THEN DELETE;
RUN;
/*APPLY LOAN-LEVEL EDITS & CREATE A REJECTS DATASET*/
DATA SLGE50 EXCLUDE2;
SET LNSALEX;

/*BORROWER PRINCIPAL BALANCE EDIT*/
IF TOT_PRI_BR < 50 THEN DO;
	EX_CD = 'BWR PRIN';
	OUTPUT EXCLUDE2;
	END;

/*BORROWER OTHER USAF LOANS EDIT*/
ELSE IF IND_USAF = 'Y' THEN DO;
	EX_CD = 'BWR USAF';
	OUTPUT EXCLUDE2;
	END;

ELSE OUTPUT SLGE50;
RUN;


/************************************************************************************/
/****************************LOCKDOWN AND LOCKDOWN CHECK*****************************/
/************************************************************************************/
*RSUBMIT;
PROC SORT DATA=SLGE50 NODUPKEY;
BY BF_SSN LN_SEQ;
RUN;

/*IF THE DATASET ISNT THERE, CREATE IT*/
/*%MACRO BLAH;*/
%LET DSNAME=OLRPLD.UTLWO02B;
%IF %SYSFUNC(EXIST(&DSNAME))=0 %THEN %DO;
   DATA &DSNAME;
		LENGTH SALEID $7 BF_SSN $ 9 LN_SEQ 4;
   RUN;
   %END;
/*%MEND BLAH;*/
/*%BLAH;*/

/*EXTRACT LOCKED DOWN DATA FOR THIS SALE FROM LD FILE*/
DATA LDSUB;
SET OLRPLD.UTLWO02B;
WHERE SALEID = "&I_SALEID";
RUN;
DATA OLRPLD.UTLWO02B;
SET OLRPLD.UTLWO02B (WHERE=(SALEID NE ' '));
IF SALEID = "&I_SALEID" THEN DELETE;
RUN;

/*%LET I_TYPE = P;OPTIONS SYMBOLGEN;*/
/*PROCESS LOCKDOWN EDITS*/
DATA SLGE50 EXCLUDE3 LDSUB (KEEP = SALEID BF_SSN LN_SEQ);
MERGE SLGE50 (IN=A) LDSUB (IN=B);
BY SALEID BF_SSN LN_SEQ;
IF "&I_TYPE" = 'P' THEN DO;
	IF A THEN OUTPUT SLGE50;
	IF B THEN OUTPUT LDSUB;
	END;

IF "&I_TYPE" = 'L' THEN DO;
	IF A THEN DO;
		OUTPUT SLGE50;
		OUTPUT LDSUB;
		END;
	END;

ELSE IF "&I_TYPE" = 'F' THEN DO;
	IF A AND B THEN OUTPUT SLGE50;
	ELSE IF (A AND NOT B) THEN DO;
		EX_CD = 'LOCKDOWN';
		OUTPUT EXCLUDE3;
		END;
	IF B THEN OUTPUT LDSUB;
	END;
RUN;

/*ADD/RE-ADD LOCKDOWN DATA FOR THIS SALE TO LD FILE*/
DATA OLRPLD.UTLWO02B;
SET OLRPLD.UTLWO02B LDSUB;
RUN;
PROC SORT DATA=OLRPLD.UTLWO02B NODUPKEY;
BY SALEID BF_SSN LN_SEQ;
RUN;


/************************************************************************************/
/************************************************************************************/

/*COMBINE EXLUSION RECORDS FOR LATER REPORTING*/
DATA EXCLUDE;SET EXCLUDE1 EXCLUDE2 EXCLUDE3;RUN;

/*APPEND CURRENT SALE RESULTS & ERRORS TO MASTER LISTS FOR REPORTING*/
/*RSUBMIT;DATA SLGE50_MAST;RUN;DATA EXCLUDE_MAST;RUN;*/
DATA SLGE50_MAST (WHERE=(SALEID NE ' '));SET SLGE50_MAST SLGE50;RUN;
DATA EXCLUDE_MAST (WHERE=(SALEID NE ' '));SET EXCLUDE_MAST EXCLUDE;RUN;

%MEND SALE_ITER;

*RSUBMIT;
%MACRO ITER_EXEC;
	%DO I=1 %TO &SALE_CT ;
		%PUT *****************;
		%PUT "SALE_ITER = &I";
		%PUT *****************;
		%SALE_ITER(&I);
    %END;
%MEND ITER_EXEC;
%ITER_EXEC;

/************************************************************************************/
/************************END ITERATIVE PROCESSING************************************/
/************************************************************************************/

ENDRSUBMIT;
DATA SLGE50_MAST;SET WORKLOCL.SLGE50_MAST;RUN;
DATA EXCLUDE_MAST;SET WORKLOCL.EXCLUDE_MAST;RUN;
DATA SLIST;SET WORKLOCL.SLIST;RUN;

/************************************************************************************/
/*****************************CREATE SALE TRIGGER FILE*******************************/
/************************************************************************************/

/*ENSURE THAT EVERY SALE SCHEDULED FOR TODAY HAS A TRIGGER, EVEN IF NO LOANS*/
PROC DATASETS LIBRARY=WORK NOLIST;
MODIFY SLGE50_MAST;
RENAME SALEID=SALEIDX;
QUIT;
PROC SQL;
CREATE TABLE SLGE50_MAST AS
SELECT A.SALEID
,A.SELLER AS IF_SLL_OWN
,A.BUYER AS IF_BUY_OWN
,A.FDATE AS ID_LON_SLE
, B.*
FROM SLIST A 
LEFT OUTER JOIN SLGE50_MAST B
ON A.SALEID = B.SALEIDX;
QUIT;
PROC SORT DATA=SLGE50_MAST NODUPKEY;
BY SALEID BF_SSN LN_SEQ;
RUN;

DATA TRIGFILE (DROP=LN_SEQ);
SET SLGE50_MAST;
BY SALEID;
IF FIRST.SALEID THEN INDY = 1;
ELSE INDY = 0;
IF LN_SEQ < 10 THEN LN_SEQ_X = '000'||PUT(LN_SEQ,1.);
ELSE LN_SEQ_X = '00'||PUT(LN_SEQ,2.);
RUN;

DATA _NULL_;
SET  WORK.TRIGFILE (RENAME=(LN_SEQ_X = LN_SEQ));
BY SALEID; 
FILE 'C:\WINDOWS\TEMP\ULWO02.LWO02R2.rw'  LRECL=21;
*FILE REPORT2  LRECL=21;
IF INDY = 1 THEN        /* WRITE LOAN SALE IDS */
	PUT SALEID $ ;
IF BF_SSN NE ' ' THEN DO;
	PUT
	@1 BF_SSN $9.
	@10 LN_SEQ $9.
	;
END;
RUN;


/************************************************************************************/
/*********************************REPORTING******************************************/
/************************************************************************************/

/*REPORT 90 - SUMMARY REPORT*/
/*PROC PRINTTO PRINT=REPORT90;
RUN;*/
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=126;
DATA RPX;
SET SLGE50_MAST;
WHERE BUYER NE ' ';
RUN;
PROC SORT DATA=RPX;
BY BF_SSN;
RUN;
DATA RPX;
FORMAT SALEID $9.;
SET RPX;
BY BF_SSN;
IF FIRST.BF_SSN THEN BWR_CT = 1;
ELSE BWR_CT = 0;
RUN;
PROC SORT DATA=RPX;
BY BUYER IF_BUY_OWN;
RUN;

TITLE "LOAN SALE";
TITLE2 "SALE STATISTICS SUMMARY";
TITLE3 "&RUNDATE";
FOOTNOTE  'JOB = UTLWO02     REPORT = ULWO02.LWO02R90';

PROC REPORT DATA=RPX NOWD /*SPACING=1*/ HEADSKIP SPLIT='/' MISSING;
COLUMN BUYER SALEID IF_SLL_OWN IF_BUY_OWN /*IF_BUY_BND_ISS*/ BWR_CT N
LA_CUR_PRI LA_NSI_OTS TOTAL;
DEFINE BUYER / GROUP NOPRINT;
DEFINE IF_BUY_OWN / GROUP "SERVICER/ID" WIDTH=8;
DEFINE SALEID / GROUP "LOAN/SALE ID";
DEFINE IF_SLL_OWN / GROUP "SELLER/ID" ;
*DEFINE IF_BUY_BND_ISS / GROUP "BOND ID";
DEFINE BWR_CT / ANALYSIS SUM NOPRINT "BORROWERS" FORMAT=COMMA6. WIDTH=9;
DEFINE N / "LOANS" FORMAT=COMMA6.;
DEFINE LA_CUR_PRI / ANALYSIS SUM "TOTAL/PRINCIPAL/AMOUNT" FORMAT=DOLLAR18.2;
DEFINE LA_NSI_OTS / ANALYSIS SUM "TOTAL/INTEREST/AMOUNT" FORMAT=DOLLAR18.2;
DEFINE TOTAL / COMPUTED "TOTAL PRINCIPAL AND INTEREST AMOUNT" FORMAT=DOLLAR18.2;

COMPUTE TOTAL;
TOTAL = LA_CUR_PRI.SUM + LA_NSI_OTS.SUM;
ENDCOMP;

COMPUTE BEFORE BUYER;
LINE @1 ' ';
LINE @1 "BUYER = " BUYER $10.;
LINE @1 ' ';
ENDCOMP;

BREAK AFTER BUYER / OL SUMMARIZE SUPPRESS SKIP;

COMPUTE AFTER BUYER;
SALEID = 'SUBTOTAL:';
LINE @1 ' ';
LINE @10 "BORROWERS WITH LOANS SOLD TO THIS SERVICER:  " BWR_CT.SUM COMMA6.;
LINE @1 ' ';
ENDCOMP;

COMPUTE AFTER;
SALEID = 'TOTAL:';
LINE @1 ' ';
LINE @10 "TOTAL BORROWERS WITH LOANS SOLD:  " BWR_CT.SUM COMMA6.;
LINE @1 ' ';
ENDCOMP;

RBREAK AFTER / DOL DUL SUMMARIZE SUPPRESS SKIP;
RUN;