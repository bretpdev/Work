*-------------------------------------------*
| UTLWR19 ECASLA Redeemed Loans Repurchased |
*-------------------------------------------*;
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
/*%LET RPTLIB = T:\SAS;*/
FILENAME REPORT2 "&RPTLIB/ULWR19.LWR19R2";
FILENAME REPORTZ "&RPTLIB/ULWR19.LWR19RZ";
/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;*/
/*RSUBMIT;*/
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE ERLR AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,A.LN_SEQ
	,A.LC_ECA_PTC_STA 
	,C.LF_LON_ALT||'0'||CHAR(C.LN_LON_ALT_SEQ) AS CLUID
	,C.LN_SEQ AS LN_SEQ2
FROM OLWHRM1.LNEC_LON_ECA A
INNER JOIN OLWHRM1.LN10_LON B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN OLWHRM1.LN10_LON C
	ON B.LF_LON_ALT = C.LF_LON_ALT
	AND B.LN_LON_ALT_SEQ = C.LN_LON_ALT_SEQ
	AND C.LC_STA_LON10 = 'R' 
WHERE A.LN_ECA_SEQ = 1
	AND A.LC_ECA_PTC_STA = 'RD'
	AND A.LF_ECA_PGM_YR = '0910'
	AND B.LC_STA_LON10 = 'R' 
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;
%SQLCHECK (SQLRPT=ULWR19.LWR19RZ);
QUIT;
/*ENDRSUBMIT;*/
/*DATA ERLR  ;*/
/*	SET WORKLOCL.ERLR ;*/
/*RUN;*/
PROC SQL;
CREATE TABLE E1 AS 
	SELECT CLUID
		,COUNT(*) AS C
	FROM ERLR
	GROUP BY CLUID
	HAVING COUNT(*) > 1
;
CREATE TABLE E2 AS 
	SELECT A.*
	FROM ERLR A
	INNER JOIN E1
		ON A.CLUID = E1.CLUID
	ORDER BY A.CLUID;
QUIT;
PROC SORT DATA=E2 OUT=HAS_RD(KEEP=BF_SSN CLUID LN_SEQ LC_ECA_PTC_STA) NODUPKEY;
	BY CLUID LN_SEQ;
RUN;
PROC SORT DATA=E2 OUT=NO_RD(KEEP=BF_SSN CLUID LN_SEQ2) NODUPKEY;
	BY CLUID LN_SEQ2;
RUN;
PROC SQL;
CREATE TABLE NO_RD2 AS
SELECT A.BF_SSN
	,A.CLUID
	,A.LN_SEQ2 AS LN_SEQ
	,' ' length=2 AS LC_ECA_PTC_STA 
FROM NO_RD A
WHERE NOT EXISTS (
	SELECT 1
	FROM HAS_RD B
	WHERE B.CLUID = A.CLUID
		AND B.LN_SEQ = A.LN_SEQ2
	);
CREATE TABLE NO_RD3 AS
SELECT A.BF_SSN
	,A.CLUID
	,A.LN_SEQ
	,A.LC_ECA_PTC_STA 
FROM HAS_RD A
INNER JOIN NO_RD2 B
	ON A.CLUID = B.CLUID
;
QUIT;
PROC DATASETS ;
	APPEND BASE=NO_RD2 DATA=NO_RD3;
	DELETE ERLR;
	CHANGE NO_RD2 = ERLR;
	DELETE NO_RD3 NO_RD	HAS_RD E1 E2;
QUIT;
PROC SORT DATA=ERLR NODUPKEY;
	BY BF_SSN LN_SEQ CLUID;
RUN;
PROC TRANSPOSE DATA=ERLR OUT=SEQS PREFIX=SEQ;
	VAR LN_SEQ ;
	BY BF_SSN;
RUN;
PROC TRANSPOSE DATA=ERLR OUT=STATS PREFIX=STA;
	VAR LC_ECA_PTC_STA;
	BY BF_SSN;
RUN;
DATA ERLR;
	MERGE SEQS (DROP=_NAME_ _LABEL_) STATS (DROP=_NAME_);
	BY BF_SSN;
RUN;
%MACRO R19_OUTPUT(MAX_NUM);
DATA _NULL_;
	SET  WORK.ERLR   END=EFIEOD;
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT BF_SSN $9. ;
	FORMAT SEQ1-SEQ&MAX_NUM 6. ;
	FORMAT STA1-STA&MAX_NUM $2. ;
	IF _N_ = 1 THEN DO;
		PUT "BF_SSN"
	   		',' @;
			DO I=1 TO &MAX_NUM;
				PUT 'LOAN SEQ ' I @;
				PUT 'PART STATUS ' I @;
			END;
		PUT;
		END;
	DO;
		PUT BF_SSN $ @;
		%DO I=1 %TO &MAX_NUM;
			PUT SEQ&I @;
			%IF &I EQ &MAX_NUM %THEN %DO;
				PUT STA&I ;
			%END;
			%ELSE %DO;
				PUT STA&I @;
			%END;
		%END;
	END;
RUN;
%MEND R19_OUTPUT;
%R19_OUTPUT(5);
