

/*LIST OF TEST BORROWERS*/
/*%LET TEST_LIST = Q:\Support Services\Test Files\SAS\DUDE Test List\MD_TEST_LIST.TXT;*/
/*DATA DUDE_TEST;*/
/*INFILE "&TEST_LIST";*/
/*INPUT DF_SPE_ACC_ID :$10.;*/
/*RUN;*/
/*proc sort data=dude_test nodupkey; by df_spe_acc_id; run;*/
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
/*DATA WORKLOCL.DUDE_TEST;*/
/*SET DUDE_TEST;*/
/*RUN;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWMD1.LWMD1R2";
FILENAME REPORTZ "&RPTLIB/ULWMD1.LWMD1RZ";
FILENAME REPORT3 "&RPTLIB/ULWMD1.LWMD1R3";
FILENAME REPORT4 "&RPTLIB/ULWMD1.LWMD1R4";
FILENAME REPORT5 "&RPTLIB/ULWMD1.LWMD1R5";
FILENAME REPORT6 "&RPTLIB/ULWMD1.LWMD1R6";
FILENAME REPORT7 "&RPTLIB/ULWMD1.LWMD1R7";
FILENAME REPORT8 "&RPTLIB/ULWMD1.LWMD1R8";
FILENAME REPORT9 "&RPTLIB/ULWMD1.LWMD1R9";
FILENAME REPORT10 "&RPTLIB/ULWMD1.LWMD1R10";
FILENAME REPORT11 "&RPTLIB/ULWMD1.LWMD1R11";
FILENAME REPORT12 "&RPTLIB/ULWMD1.LWMD1R12";
FILENAME REPORT13 "&RPTLIB/ULWMD1.LWMD1R13";
FILENAME REPORT14 "&RPTLIB/ULWMD1.LWMD1R14";
FILENAME REPORT15 "&RPTLIB/ULWMD1.LWMD1R15";
FILENAME REPORT16 "&RPTLIB/ULWMD1.LWMD1R16";
FILENAME REPORT17 "&RPTLIB/ULWMD1.LWMD1R17";
FILENAME REPORT18 "&RPTLIB/ULWMD1.LWMD1R18";
FILENAME REPORT19 "&RPTLIB/ULWMD1.LWMD1R19";
FILENAME REPORT20 "&RPTLIB/ULWMD1.LWMD1R20";
FILENAME REPORT21 "&RPTLIB/ULWMD1.LWMD1R21";
FILENAME REPORT22 "&RPTLIB/ULWMD1.LWMD1R22";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;  
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1; 
LIBNAME SAS_TAB V8 '/sas/whse/progrevw';
DATA _NULL_; 
SET SAS_TAB.LASTRUN_JOBS;
/*If the job must be run manually set this macro to the last day it successfully ran(last business day).*/
LAST_RUN = TODAY() - 1;	*COMMENT FOR PROD, IT WILL READ THE DATE FROM A TABLE;
IF JOB = 'UTLWMD1' THEN CALL SYMPUT('LAST_RUN',"'"||TRIM(LEFT(PUT(LAST_RUN,DATE10.)))|| "'D");
RUN;

/*THE TABLES ARE GOING TO HAVE THE ACCOUNT NUMBER RATHER THAN SSN AS A PRIMARY KEY*/
/*THE ACCOUNT NUMBER IS BEING TAKEN FROM THE PD10 TABLE WHILE SSN IS DROPPED*/
%MACRO SSN2ACC(TBL);
DATA &TBL(DROP=BF_SSN);
MERGE PD10(IN=B) &TBL(IN=A);
BY BF_SSN;
IF A AND B;
RUN; 
%MEND;

/*******************************************
* BORROWER DATA
********************************************/
/*FOR INITIAL LOAD, WE WANT BORROWERS WITH AT LEAST ONE OPEN LOAN*/
/*PROC SQL;*/
/*	CREATE TABLE PD10 AS*/
/*	SELECT DISTINCT A.DF_SPE_ACC_ID*/
/*		,B.BF_SSN*/
/*	FROM DUDE_TEST C*/
/*	INNER JOIN DLGSUTWH.PD10_PRS_NME A*/
/*		ON A.DF_SPE_ACC_ID = C.DF_SPE_ACC_ID*/
/*	INNER JOIN DLGSUTWH.LN10_LON B*/
/*		ON A.DF_PRS_ID = B.BF_SSN*/
/*	where b.la_cur_pri > 0*/
/*;*/
/*QUIT;*/


PROC SQL;
	CREATE TABLE PD10 AS
	SELECT DISTINCT A.DF_SPE_ACC_ID
		,B.BF_SSN
	FROM DLGSUTWH.PD10_PRS_NME A
	INNER JOIN DLGSUTWH.LN10_LON B
		ON A.DF_PRS_ID = B.BF_SSN
	where b.la_cur_pri > 0
;
QUIT;
/*******************************************
* REFERENCE DATA
********************************************/

DATA BR03(DROP=BF_LST_DTS_BR03 BD_RFR_LST_ATT_HME BD_RFR_LST_ATT_ALT);
	SET DLGSUTWH.BR03_BR_REF(RENAME=(DF_PRS_ID_BR=BF_SSN BD_RFR_LST_CNC = LST_CNC) 
		KEEP=DF_PRS_ID_BR DF_PRS_ID_RFR BC_STA_BR03 BI_ATH_3_PTY BC_RFR_REL_BR 
			BM_RFR_1 BM_RFR_LST BF_LST_DTS_BR03 BD_RFR_LST_CNC BD_RFR_LST_ATT_HME 
			BD_RFR_LST_ATT_ALT);
	IF DATEPART(BF_LST_DTS_BR03) >= &LAST_RUN;
	LST_ATT = MAX(BD_RFR_LST_ATT_HME,BD_RFR_LST_ATT_ALT);
RUN;

DATA LN90(DROP=LF_LST_DTS_LN90 LA_FAT_NSI) LN90BILL(KEEP=BF_SSN LN_SEQ LN_FAT_SEQ LD_FAT_EFF);
	SET DLGSUTWH.LN90_FIN_ATY(KEEP=BF_SSN LN_SEQ LN_FAT_SEQ LD_FAT_PST
		LD_FAT_EFF LC_STA_LON90 LA_FAT_CUR_PRI LA_FAT_NSI LA_FAT_LTE_FEE 
		LF_LST_DTS_LN90 PC_FAT_TYP PC_FAT_SUB_TYP LC_FAT_REV_REA LA_FAT_NSI_ACR);
	WHERE DATEPART(LF_LST_DTS_LN90) >= &LAST_RUN
		AND LC_FAT_REV_REA ^= '0';
	LA_FAT_CUR_PRI = COALESCE(LA_FAT_CUR_PRI,0);
	LA_FAT_NSI = COALESCE(LA_FAT_NSI,0);
	LA_FAT_LTE_FEE = COALESCE(LA_FAT_LTE_FEE,0);
	LA_FAT_NSI_ACR = COALESCE(LA_FAT_NSI_ACR,0);
		TRAN_AMT = LA_FAT_CUR_PRI + LA_FAT_NSI + LA_FAT_LTE_FEE;
IF  PC_FAT_TYP IN ('05','10','14','15','17','26','50','51','55','60') THEN OUTPUT LN90;
	OUTPUT LN90BILL;

RUN;

DATA LN54(DROP=LF_LST_DTS_LN54);
	SET DLGSUTWH.LN54_LON_BBS(KEEP=BF_SSN LN_SEQ LC_STA_LN54 LD_BBS_DSQ LC_BBS_ELG LF_LST_DTS_LN54);
	IF DATEPART(LF_LST_DTS_LN54) >= &LAST_RUN ;
RUN;
PROC SORT DATA=LN54; BY BF_SSN LN_SEQ LC_STA_LN54; RUN;
DATA LN54(drop=LC_STA_LN54);
SET LN54;
BY BF_SSN LN_SEQ LC_STA_LN54;
IF FIRST.LN_SEQ;
RUN;

DATA LN55(DROP=LF_LST_DTS_LN55);
	SET DLGSUTWH.LN55_LON_BBS_TIR
		(KEEP=BF_SSN LN_SEQ PM_BBS_PGM PN_BBS_PGM_SEQ LC_STA_LN55 LN_LON_BBT_PAY LF_LST_DTS_LN55);
	IF DATEPART(LF_LST_DTS_LN55) >= &LAST_RUN ;
	LN_LON_BBT_PAY = COALESCE(LN_LON_BBT_PAY,0);
RUN;
PROC SORT DATA=LN55; BY BF_SSN LN_SEQ LC_STA_LN55; RUN;
DATA LN55;
	SET LN55;
		BY BF_SSN LN_SEQ LC_STA_LN55;
	IF FIRST.LN_SEQ;
RUN;
DATA RP02;
	SET DLGSUTWH.RP02_BBS_PGM_TIR(KEEP=PM_BBS_PGM PN_BBS_PGM_SEQ  
		PN_BBT_PAY_ICV );
RUN;
PROC SORT DATA=LN55; BY PM_BBS_PGM PN_BBS_PGM_SEQ;RUN;
PROC SORT DATA=RP02; BY PM_BBS_PGM PN_BBS_PGM_SEQ;RUN;
DATA LN55(DROP=PM_BBS_PGM PN_BBS_PGM_SEQ);
	MERGE LN55(IN=A) RP02;
		BY PM_BBS_PGM PN_BBS_PGM_SEQ;
	IF A;
RUN;

DATA LN72(DROP=LC_STA_LON72 LD_ITR_EFF_BEG LD_ITR_EFF_END LF_LST_DTS_LN72);
	SET DLGSUTWH.LN72_INT_RTE_HST(KEEP=BF_SSN LN_SEQ LC_STA_LON72 
		LD_ITR_EFF_BEG LD_ITR_EFF_END LF_LST_DTS_LN72 LR_ITR LR_INT_RDC_PGM_ORG);
	WHERE LC_STA_LON72 = 'A'
		AND LD_ITR_EFF_BEG <= TODAY() 
		AND LD_ITR_EFF_END >= TODAY() 
		AND DATEPART(LF_LST_DTS_LN72) >= &LAST_RUN
;
	LR_ITR = COALESCE(LR_ITR,0);
	LR_INT_RDC_PGM_ORG = COALESCE(LR_INT_RDC_PGM_ORG,LR_ITR);
RUN;

/*******************************************
* ACH DATA
********************************************/

DATA LN83(DROP=LF_LST_DTS_LN83 );
	SET DLGSUTWH.LN83_EFT_TO_LON(KEEP=BF_SSN LN_SEQ BN_EFT_SEQ LF_LST_DTS_LN83 
		LD_EFT_EFF_END LC_STA_LN83 );
	IF DATEPART(LF_LST_DTS_LN83) >= &LAST_RUN;
RUN;
PROC SORT DATA=LN83; BY BF_SSN LN_SEQ DESCENDING BN_EFT_SEQ; RUN;
DATA LN83;
SET LN83;
BY BF_SSN LN_SEQ;
IF FIRST.LN_SEQ;
RUN;

DATA BR30(DROP=BF_LST_DTS_BR30 );
	SET DLGSUTWH.BR30_BR_EFT(KEEP=BF_SSN BN_EFT_SEQ BF_EFT_ABA BF_EFT_ACC BC_EFT_STA
		BD_EFT_STA BA_EFT_ADD_WDR BN_EFT_NSF_CTR BN_EFT_DAY_DUE BC_EFT_DNL_REA BF_LST_DTS_BR30);
	IF DATEPART(BF_LST_DTS_BR30) >= &LAST_RUN ;
RUN;
PROC SORT DATA=BR30; BY BF_SSN BC_EFT_STA DESCENDING BN_EFT_SEQ; RUN;
DATA BR30; 
SET BR30; 
BY BF_SSN BC_EFT_STA DESCENDING BN_EFT_SEQ;
IF FIRST.BF_SSN OR BC_EFT_STA = 'A';
RUN;
PROC SORT DATA=BR30; BY BF_SSN BN_EFT_SEQ; RUN;
DATA BR30(DROP=A B BN_EFT_DAY_DUE
);
FORMAT A BN_EFT_DAY_DUE $8.;
SET BR30;
BY BF_SSN;
RETAIN A B;
IF FIRST.BF_SSN AND LAST.BF_SSN THEN OUTPUT;
ELSE IF FIRST.BF_SSN AND LAST.BF_SSN = 0 AND BC_EFT_STA = 'A' THEN DO;
	A = BN_EFT_DAY_DUE;
	B = BA_EFT_ADD_WDR;
END;
ELSE IF FIRST.BF_SSN = 0 AND BC_EFT_STA = 'A' THEN DO;
	IF A ^= BN_EFT_DAY_DUE THEN A = TRIM(A) || ',' || BN_EFT_DAY_DUE;
	B = B + BA_EFT_ADD_WDR;
END;
IF FIRST.BF_SSN = 0 AND LAST.BF_SSN THEN DO;
	BN_EFT_DAY_DUE = A;
	BA_EFT_ADD_WDR = B;
	OUTPUT; 
END;
RUN;
/*******************************************
* LOAN DATA
********************************************/

DATA LN10(DROP=	LF_LST_DTS_LN10);
	SET DLGSUTWH.LN10_LON (KEEP= BF_SSN LN_SEQ LA_CUR_PRI LA_LON_AMT_GTR LD_END_GRC_PRD
		IC_LON_PGM LD_LON_1_DSB LF_LST_DTS_LN10 LD_PIF_RPT );
	WHERE DATEPART(LF_LST_DTS_LN10) >= &LAST_RUN
		OR LA_CUR_PRI > 0;

RUN;

DATA DW01;
	SET DLGSUTWH.DW01_DW_CLC_CLU(KEEP=BF_SSN LN_SEQ WC_DW_LON_STA WD_LON_RPD_SR	WA_TOT_BRI_OTS WX_OVR_DW_LON_STA );
RUN;
PROC SORT DATA=LN10; BY BF_SSN LN_SEQ; RUN;
PROC SORT DATA=DW01; BY BF_SSN LN_SEQ; RUN;
DATA LN10;
MERGE LN10(IN=A) DW01;
BY BF_SSN LN_SEQ;
IF A;
RUN;

/*******************************************
* ENDORSER DATA
********************************************/
DATA LN20(DROP=LF_LST_DTS_LN20);
	SET DLGSUTWH.LN20_EDS(KEEP=BF_SSN LC_STA_LON20 LC_EDS_TYP LF_LST_DTS_LN20 LN_SEQ);
	IF DATEPART(LF_LST_DTS_LN20) >= &LAST_RUN ;
RUN;
/*********************************************
* DELINQUENCY DATA
**********************************************/
DATA LN16(DROP=LF_LST_DTS_LN16 LC_STA_LON16);
	SET DLGSUTWH.LN16_LON_DLQ_HST(KEEP=BF_SSN LN_SEQ LN_DLQ_SEQ LD_DLQ_OCC
		LF_LST_DTS_LN16 LC_STA_LON16 LN_DLQ_MAX LD_DLQ_MAX);
	IF DATEPART(LF_LST_DTS_LN16) >= &LAST_RUN;
	IF LC_STA_LON16 ^= '1' THEN DO;
		LN_DLQ_MAX = 0;
		LD_DLQ_OCC = .;
	END;
RUN;
PROC SORT DATA=LN16; BY BF_SSN LN_SEQ DESCENDING LN_DLQ_SEQ; RUN;
DATA LN16 TILPCHECK;
SET LN16(DROP=LN_DLQ_SEQ);
BY BF_SSN LN_SEQ;
IF FIRST.LN_SEQ;
RUN;


PROC SQL;
/*******************************************
* FORBEARANCE DATA
********************************************/
CREATE TABLE FB10 AS
	SELECT B.BF_SSN
		,B.LN_SEQ
		,B.LF_FOR_CTL_NUM
		,B.LN_FOR_OCC_SEQ
		,C.LC_FOR_TYP
		,C.LD_FOR_INF_CER
		,B.LD_FOR_BEG
		,B.LD_FOR_END
		,B.LC_LON_LEV_FOR_CAP 
		,B.LC_STA_LON60
		,C.LC_FOR_STA
		,C.LC_STA_FOR10
		,C.LA_REQ_RDC_PAY
	FROM DLGSUTWH.LN60_BR_FOR_APV B
	INNER JOIN DLGSUTWH.FB10_BR_FOR_REQ C
		ON B.BF_SSN = C.BF_SSN
		AND B.LF_FOR_CTL_NUM = C.LF_FOR_CTL_NUM
	WHERE (DATEPART(B.LF_LST_DTS_LN60) >= &LAST_RUN
			OR DATEPART(C.LF_LST_DTS_FB10) >= &LAST_RUN)
;
/*******************************************
* DEFERMENT DATA
********************************************/
CREATE TABLE DF10 AS
	SELECT B.BF_SSN
		,B.LN_SEQ
		,B.LF_DFR_CTL_NUM
		,B.LN_DFR_OCC_SEQ
		,C.LC_DFR_TYP
		,C.LD_DFR_INF_CER
		,B.LD_DFR_BEG
		,B.LD_DFR_END
		,B.LC_LON_LEV_DFR_CAP
		,B.LC_STA_LON50
		,C.LC_DFR_STA
		,C.LC_STA_DFR10
	FROM DLGSUTWH.LN50_BR_DFR_APV B
	INNER JOIN DLGSUTWH.DF10_BR_DFR_REQ C
		ON B.BF_SSN = C.BF_SSN
		AND B.LF_DFR_CTL_NUM = C.LF_DFR_CTL_NUM
	WHERE (DATEPART(B.LF_LST_DTS_LN50) >= &LAST_RUN 
			OR DATEPART(C.LF_LST_DTS_DF10) >= &LAST_RUN);

/*******************************************
* REPAYMENT SCHEDULE DATA
********************************************/
CREATE TABLE LN65 AS
	SELECT C.BF_SSN
		,C.LN_SEQ
		,D.LN_GRD_RPS_SEQ
		,D.LN_RPS_TRM
		,B.LD_RPS_1_PAY_DU
		,B.LD_SNT_RPD_DIS
		,C.LD_CRT_LON65
		,C.LC_TYP_SCH_DIS
		,D.LA_RPS_ISL
	FROM DLGSUTWH.RS10_BR_RPD B
	INNER JOIN DLGSUTWH.LN65_LON_RPS C
		ON B.BF_SSN = C.BF_SSN
		AND B.LN_RPS_SEQ = C.LN_RPS_SEQ
	INNER JOIN DLGSUTWH.LN66_LON_RPS_SPF D
		ON C.BF_SSN = D.BF_SSN
		AND C.LN_SEQ = D.LN_SEQ
		AND C.LN_RPS_SEQ = D.LN_RPS_SEQ
	WHERE C.LC_STA_LON65 = 'A';

/*******************************************
* REHAB DATA - ONELINK
********************************************/
CREATE TABLE DC01 AS
	SELECT C.BF_SSN
		,C.LN_SEQ
		,A.LD_RHB
	FROM DLGSUTWH.DC01_LON_CLM_INF A
	INNER JOIN DLGSUTWH.LN10_LON C
		ON C.LF_LON_ALT = A.AF_APL_ID
		AND C.LN_LON_ALT_SEQ = INPUT(A.AF_APL_ID_SFX,2.0)
	WHERE DATEPART(A.LF_LST_DTS_DC10) >= &LAST_RUN
		AND A.LD_RHB ^= .
;

/*******************************************
* DRLFA ARC DATA
********************************************/
CREATE TABLE DRLFA AS
	SELECT AY10.BF_SSN
		,INPUT(SCAN(LX_ATY,1,'{}'),DOLLAR8.2) AS DOL
	FROM DLGSUTWH.AY10_BR_LON_ATY AY10
 	INNER JOIN DLGSUTWH.AY20_ATY_TXT AY20
		ON AY10.BF_SSN = AY20.BF_SSN 
		AND AY10.LN_ATY_SEQ = AY20.LN_ATY_SEQ
	WHERE AY10.PF_REQ_ACT = 'DRLFA'
		AND AY20.LN_ATY_CMT_SEQ = 1
		AND SUBSTR(AY20.LX_ATY,1,1) = '{'
;
/*******************************************
* DL200 ARC DATA
********************************************/
CREATE TABLE DL200 AS
	SELECT AY10.BF_SSN
		,COUNT(*) AS DL200
		,MAX(LD_ATY_REQ_RCV) AS LAST_DL200
	FROM DLGSUTWH.AY10_BR_LON_ATY AY10
	WHERE PF_REQ_ACT = 'DL200'
		AND LD_ATY_REQ_RCV >= INTNX('YEAR',TODAY(),-3,'S')
	GROUP BY AY10.BF_SSN;

/*********************************************
* EMPLOYER DATA
**********************************************/
CREATE TABLE BR02 AS
	SELECT A.BF_SSN
		,B.IM_IST_FUL
		,B.IX_GEN_STR_ADR_1
		,B.IX_GEN_STR_ADR_2
		,B.IM_GEN_CT
		,B.IC_GEN_ST
		,B.IF_GEN_ZIP
		,B.IN_GEN_PHN
	FROM DLGSUTWH.BR02_BR_EMP A
	INNER JOIN DLGSUTWH.IN01_LGS_IDM_MST B
		ON A.BF_EMP_ID_1 = B.IF_IST
			WHERE DATEPART(A.BF_LST_DTS_BR02) >= &LAST_RUN
;

/*********************************************
* STUDENT DATA - SHOULD GO TO LOAN LEVEL INFO
**********************************************/

CREATE TABLE SD10 AS
	SELECT A.BF_SSN
		,A.LN_SEQ
		,B.LN_STU_SPR_SEQ
		,B.LD_SCL_SPR
		,D.IM_SCL_FUL
		,B.LC_STA_STU10
	FROM DLGSUTWH.SD10_STU_SPR B
	INNER JOIN DLGSUTWH.SC10_SCH_DMO D
		ON B.LF_DOE_SCL_ENR_CUR = D.IF_DOE_SCL
	INNER JOIN DLGSUTWH.LN13_LON_STU_OSD C
		ON B.LF_STU_SSN = C.LF_STU_SSN
		AND B.LN_STU_SPR_SEQ = C.LN_STU_SPR_SEQ
	INNER JOIN DLGSUTWH.LN10_LON A
		ON C.BF_SSN = A.BF_SSN
		AND C.LN_SEQ = A.LN_SEQ
	WHERE B.LC_STA_STU10 = 'A'
		AND C.LC_STA_LON13 = 'A'
		AND (DATEPART(B.LF_LST_DTS_SD10) >= &LAST_RUN
			OR DATEPART(C.LF_CRT_DTS_LN13) >= &LAST_RUN) 
;
QUIT;
/*******************************************
* BILL DATA
********************************************/
PROC SQL;
CREATE TABLE LN75 AS
SELECT A.BF_SSN
	,A.LN_SEQ
	,A.LD_BIL_CRT
	,A.LN_SEQ_BIL_WI_DTE
	,A.LN_BIL_OCC_SEQ
	,MAX(A.LN_FAT_SEQ) AS LN_FAT_SEQ
FROM DLGSUTWH.LN75_BIL_LON_FAT A
GROUP BY A.BF_SSN
	,A.LN_SEQ
	,A.LD_BIL_CRT
	,A.LN_SEQ_BIL_WI_DTE
	,A.LN_BIL_OCC_SEQ;
QUIT;
PROC SQL;
CREATE TABLE LN75TO90 AS
SELECT DISTINCT A.* 
	,B.LD_FAT_EFF 
FROM LN75 A
INNER JOIN LN90BILL B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
	AND A.LN_FAT_SEQ = B.LN_FAT_SEQ
;
QUIT;
PROC SQL;
CREATE TABLE LN80 AS
SELECT B.BF_SSN
	,B.LN_SEQ
	,B.LD_BIL_CRT
	,B.LN_SEQ_BIL_WI_DTE
		,D.LD_FAT_EFF
	,B.LD_BIL_DU_LON
	,B.LC_STA_LON80
	,COALESCE(B.LA_BIL_CUR_DU,0) AS LA_BIL_CUR_DU
	,COALESCE(B.LA_BIL_PAS_DU,0) AS LA_BIL_PAS_DU
	,COALESCE(B.LA_TOT_BIL_STS,0) AS LA_TOT_BIL_STS
	,LC_BIL_MTD
	,LC_IND_BIL_SNT
	,LC_STA_BIL10
FROM (SELECT BF_SSN
		,LN_SEQ
		,LD_BIL_CRT
		,LN_SEQ_BIL_WI_DTE
		,MAX(LN_BIL_OCC_SEQ) AS LN_BIL_OCC_SEQ
	FROM DLGSUTWH.LN80_LON_BIL_CRF A
	WHERE DATEPART(A.LD_LST_DTS_LN80) >= &LAST_RUN
		AND A.LC_BIL_TYP_LON = 'P'
	GROUP BY BF_SSN,LN_SEQ,LD_BIL_CRT) A
INNER JOIN DLGSUTWH.LN80_LON_BIL_CRF B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
	AND A.LD_BIL_CRT = B.LD_BIL_CRT
	AND A.LN_SEQ_BIL_WI_DTE = B.LN_SEQ_BIL_WI_DTE
	AND A.LN_BIL_OCC_SEQ = B.LN_BIL_OCC_SEQ
INNER JOIN DLGSUTWH.BL10_BR_BIL C
	ON B.BF_SSN = C.BF_SSN
	AND B.LD_BIL_CRT = C.LD_BIL_CRT
	AND B.LN_SEQ_BIL_WI_DTE = C.LN_SEQ_BIL_WI_DTE
LEFT OUTER JOIN LN75TO90 D
	ON D.BF_SSN = B.BF_SSN
	AND D.LN_SEQ = B.LN_SEQ
	AND D.LD_BIL_CRT = B.LD_BIL_CRT
	AND D.LN_SEQ_BIL_WI_DTE = B.LN_SEQ_BIL_WI_DTE
	AND D.LN_BIL_OCC_SEQ = B.LN_BIL_OCC_SEQ
	AND B.LA_BIL_CUR_DU = B.LA_TOT_BIL_STS
WHERE B.LC_BIL_TYP_LON = 'P' 
	AND DATEPART(B.LD_LST_DTS_LN80) >= &LAST_RUN
;
QUIT;

/*******************************************
* CALL FORWARDING DATA - ONELINK
********************************************/
PROC SQL;
CREATE TABLE TILP AS
	SELECT H.DF_SPE_ACC_ID
		,a.bf_ssn
		,A.LN_SEQ
		,CASE 
			WHEN LN_DLQ_MAX >= 90 THEN '06'
			ELSE '04'
		END AS FORWARDING
	FROM DLGSUTWH.PD10_PRS_NME H 
	INNER JOIN DLGSUTWH.LN10_LON A
		ON A.BF_SSN = H.DF_PRS_ID
	LEFT OUTER JOIN TILPCHECK B
		ON A.BF_SSN = B.BF_SSN
		AND A.LN_SEQ = B.LN_SEQ
	WHERE A.IC_LON_PGM = 'TILP';

CREATE TABLE GA10 AS
	SELECT DISTINCT	B.DF_SPE_ACC_ID
		,coalesce(a.bf_ssn,B.DF_PRS_ID) as BF_SSN
		,C.AF_APL_ID || C.AF_APL_ID_SFX AS CLUID	
		,A.LN_SEQ
		,CASE 
			WHEN D.AC_LON_STA_TYP = 'AE' THEN '05' /*A.5*/
			WHEN D.AC_LON_STA_TYP IN ('CP','CR','DN')  /*A.1*/
				AND D.AC_LON_STA_REA IN ('BC','BO','BH') 
				AND A.LA_CUR_PRI > 0
				THEN '04'
			WHEN D.AC_LON_STA_TYP IN ('CP','DN') THEN '01' /*A.2*/
			WHEN D.AC_LON_STA_TYP IN ('CA','PC','PF','PM','PN','RF') /*A.4*/ 
				AND F.AC_LON_STA_TYP IN ('CP','DN')
				THEN '01'
			WHEN D.AC_LON_STA_TYP IN ('CA','PC','PF','PM','PN','RF') 
				AND C.AF_CUR_LON_SER_AGY IN ('700079','700004','700789','700191','700190') 
				THEN '07'
			WHEN D.AC_LON_STA_TYP IN ('CA','PC','PF','PM','PN','RF')
				AND C.AF_CUR_LON_SER_AGY = '700121' 
				THEN '08' 
			WHEN D.AC_LON_STA_TYP IN ('CA','PC','PF','PM','PN','RF')
				AND C.AF_CUR_LON_SER_AGY = '700126' 
				THEN '04'
			WHEN D.AC_LON_STA_TYP IN ('CA','PC','PF','PM','PN','RF')
				AND C.AF_CUR_LON_SER_AGY = '700075' 
				THEN '01'
			WHEN C.AF_CUR_LON_SER_AGY IN ('700079','700004','700789','700191','700190')  /*A.3*/
				THEN '02'
			WHEN C.AF_CUR_LON_SER_AGY  = '700121' THEN '03'
			WHEN C.AF_CUR_LON_SER_AGY  = '700126' THEN '04'
			WHEN A.BF_SSN IS NULL THEN ''
			ELSE '04'
		END AS FORWARDING
	FROM DLGSUTWH.GA01_APP E
	INNER JOIN DLGSUTWH.GA10_LON_APP C
		ON E.AF_APL_ID = C.AF_APL_ID 
	INNER JOIN DLGSUTWH.PD01_PDM_INF B
		ON E.DF_PRS_ID_BR = B.DF_PRS_ID
/*	inner join dude_test z*/
/*		on z.df_spe_acc_id = b.df_spe_acc_id*/
	INNER JOIN DLGSUTWH.GA14_LON_STA D
		ON C.AF_APL_ID = D.AF_APL_ID
		AND C.AF_APL_ID_SFX = D.AF_APL_ID_SFX
		AND D.AC_STA_GA14 = 'A'
	LEFT OUTER JOIN DLGSUTWH.GA14_LON_STA F
		ON D.AF_APL_ID = F.AF_APL_ID
		AND D.AF_APL_ID_SFX = F.AF_APL_ID_SFX
		AND D.AC_LON_STA_TYP IN ('CA','PC','PF','PM','PN','RF')
		AND INPUT(D.AF_LON_STA_RPT_SEQ,5.0) = INPUT(F.AF_LON_STA_RPT_SEQ,5.0)-1
	LEFT OUTER JOIN DLGSUTWH.LN10_LON A
		ON A.LF_LON_ALT = C.AF_APL_ID
		AND A.LN_LON_ALT_SEQ = INPUT(C.AF_APL_ID_SFX,2.0)
	WHERE DATEPART(E.AF_LST_DTS_GA01) >= &LAST_RUN
			OR DATEPART(C.AF_LST_DTS_GA10) >= &LAST_RUN
			OR DATEPART(D.AF_LST_DTS_GA14) >= &LAST_RUN
;
QUIT;
PROC APPEND BASE=GA10 DATA=TILP;
RUN;

PROC SORT DATA=DF10; BY BF_SSN; RUN;
PROC SORT DATA=FB10; BY BF_SSN; RUN;
PROC SORT DATA=BR03; BY BF_SSN DF_PRS_ID_RFR; RUN;
PROC SORT DATA=LN80; BY BF_SSN LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE; RUN;
PROC SORT DATA=LN90; BY BF_SSN LN_SEQ LN_FAT_SEQ; RUN;

PROC SORT DATA=PD10; BY BF_SSN; RUN;
PROC SORT DATA=DRLFA; BY BF_SSN;RUN;
PROC SORT DATA=DL200; BY BF_SSN; RUN;
PROC SORT DATA=DC01; BY BF_SSN LN_SEQ LD_RHB;RUN;
PROC SORT DATA=BR02; BY BF_SSN; RUN;

PROC SORT DATA=LN10; BY BF_SSN LN_SEQ;RUN;
PROC SORT DATA=LN65; BY BF_SSN LN_SEQ LN_GRD_RPS_SEQ; RUN;
PROC SORT DATA=LN54; BY BF_SSN LN_SEQ ; RUN;
PROC SORT DATA=LN55;BY BF_SSN LN_SEQ;RUN;
PROC SORT DATA=LN72; BY BF_SSN LN_SEQ; RUN;
PROC SORT DATA=SD10; BY BF_SSN LN_SEQ LN_STU_SPR_SEQ;RUN;
PROC SORT DATA=LN20; BY BF_SSN LN_SEQ ;RUN;

DATA LN65(DROP= A B C NEXT_SEQ LD_RPS_1_PAY_DU LN_GRD_RPS_SEQ);
SET LN65;
FORMAT NEXT_SEQ DATE9.;
BY BF_SSN LN_SEQ LN_GRD_RPS_SEQ;
RETAIN NEXT_SEQ A C B;
IF FIRST.LN_SEQ THEN DO;
	A = .;
	NEXT_SEQ = INTNX('MONTH',LD_RPS_1_PAY_DU,LN_RPS_TRM,'S');
	IF NEXT_SEQ > TODAY() THEN DO;
		A = LN_GRD_RPS_SEQ ;
		C = LA_RPS_ISL ;
	END;
END;
ELSE IF A= . THEN DO;
	NEXT_SEQ = INTNX('MONTH',NEXT_SEQ,LN_RPS_TRM,'S');
	IF NEXT_SEQ > TODAY() THEN DO;
		A = LN_GRD_RPS_SEQ ;
		C = LA_RPS_ISL ;
	END;
END;

IF FIRST.LN_SEQ THEN B = LN_RPS_TRM;
ELSE B = B + LN_RPS_TRM;
IF LAST.LN_SEQ THEN DO;
	LN_RPS_TRM = B;
	LA_RPS_ISL = C;
	LN_GRD_RPS_SEQ = A;
	DAY_DUE = DAY(LD_RPS_1_PAY_DU);
	OUTPUT;
END;

RUN;

DATA SD10(DROP=LN_STU_SPR_SEQ LC_STA_STU10);
	SET SD10;
		BY BF_SSN LN_SEQ LN_STU_SPR_SEQ;
	IF LAST.LN_SEQ;
RUN;

DATA DRLFA (DROP= DOL);
	SET DRLFA;
	RETAIN FEE_WAV_DOL FEE_WAV_CT;
	BY BF_SSN;
	IF FIRST.BF_SSN THEN DO;
		FEE_WAV_DOL = DOL;
		FEE_WAV_CT = 1;
	END;
	ELSE DO;
		FEE_WAV_DOL + DOL;
		FEE_WAV_CT + 1;
	END;
	IF LAST.BF_SSN THEN OUTPUT;	
RUN;

DATA DC01;
	SET DC01;
	BY BF_SSN LN_SEQ LD_RHB;
	IF LAST.LN_SEQ;
RUN;

%SSN2ACC(FB10);
%SSN2ACC(DF10);
%SSN2ACC(BR03);
%SSN2ACC(LN80);
%SSN2ACC(LN90);

%SSN2ACC(DL200);
%SSN2ACC(DRLFA);
%SSN2ACC(LN16);
%SSN2ACC(DC01);
%SSN2ACC(BR02);
%SSN2ACC(BR30);

%SSN2ACC(LN10);
%SSN2ACC(LN83);
%SSN2ACC(LN54);
%SSN2ACC(LN55);
%SSN2ACC(LN65);
%SSN2ACC(LN72);
%SSN2ACC(SD10);
%SSN2ACC(LN20);

PROC SORT DATA=BR03; BY DF_SPE_ACC_ID DF_PRS_ID_RFR; RUN;
PROC SORT DATA=LN80; BY DF_SPE_ACC_ID LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE; RUN;
PROC SORT DATA=LN90; BY DF_SPE_ACC_ID LN_SEQ LD_FAT_EFF LN_FAT_SEQ; RUN;
PROC SORT DATA=DF10; BY DF_SPE_ACC_ID LN_SEQ LF_DFR_CTL_NUM LN_DFR_OCC_SEQ; RUN;
PROC SORT DATA=FB10; BY DF_SPE_ACC_ID LN_SEQ LF_FOR_CTL_NUM LN_FOR_OCC_SEQ; RUN;

PROC SORT DATA=PD10; BY DF_SPE_ACC_ID; RUN;
PROC SORT DATA=DL200; BY DF_SPE_ACC_ID; RUN;
PROC SORT DATA=DRLFA; BY DF_SPE_ACC_ID; RUN;
PROC SORT DATA=LN16; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=DC01; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=BR02; BY DF_SPE_ACC_ID; RUN;
PROC SORT DATA=BR30; BY DF_SPE_ACC_ID; RUN;

PROC SORT DATA=LN10; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=LN83; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=GA10; BY DF_SPE_ACC_ID CLUID LN_SEQ; RUN;
PROC SORT DATA=LN54; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=LN55; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=LN65; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=LN72; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=SD10; BY DF_SPE_ACC_ID LN_SEQ; RUN;
PROC SORT DATA=LN20; BY DF_SPE_ACC_ID LN_SEQ; RUN;


/*DATA SAS_TAB.LASTRUN_JOBS;*/
/*SET SAS_TAB.LASTRUN_JOBS;*/
/*IF JOB = 'UTLWMD1' THEN LAST_RUN = TODAY();*/
/*RUN;*/
ENDRSUBMIT;
DATA LN20; SET WORKLOCL.LN20; RUN; *2;
DATA BR03; SET WORKLOCL.BR03; RUN; *3;
DATA LN80; SET WORKLOCL.LN80; RUN; *4;
DATA LN90; SET WORKLOCL.LN90; RUN; *5;
DATA DF10; SET WORKLOCL.DF10; RUN; *6;
DATA FB10; SET WORKLOCL.FB10; RUN; *7;
DATA PD10; SET WORKLOCL.PD10; RUN; *8;
DATA DL200; SET WORKLOCL.DL200; RUN; *9; 
DATA DRLFA; SET WORKLOCL.DRLFA; RUN; *10;
DATA LN10; SET WORKLOCL.LN10; RUN; *11;
DATA LN83; SET WORKLOCL.LN83; RUN; *12;
DATA DC01; SET WORKLOCL.DC01; RUN; *13;
DATA GA10; SET WORKLOCL.GA10; RUN; *14;
DATA LN54; SET WORKLOCL.LN54; RUN; *15;
DATA LN55; SET WORKLOCL.LN55; RUN; *16;
DATA LN65; SET WORKLOCL.LN65; RUN; *17;
DATA LN72; SET WORKLOCL.LN72; RUN; *18;
DATA SD10; SET WORKLOCL.SD10; RUN; *19;
DATA LN16; SET WORKLOCL.LN16; RUN; *20;
DATA BR02; SET WORKLOCL.BR02; RUN; *21;
DATA BR30; SET WORKLOCL.BR30; RUN; *22;


DATA _NULL_;
SET LN20 end = eof;
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LC_STA_LON20 $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET BR03 end = eof;
FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LST_CNC LST_ATT MMDDYY10.;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT DF_PRS_ID_RFR  @;
	PUT BC_STA_BR03 @;
	PUT BI_ATH_3_PTY @;
	PUT BC_RFR_REL_BR @;
	PUT BM_RFR_1 @;
	PUT BM_RFR_LST @;
	PUT LST_CNC @;
	PUT LST_ATT $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN80 end = eof;
FILE REPORT4 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_BIL_CRT LD_FAT_EFF LD_BIL_DU_LON MMDDYY10. ;
FORMAT LA_BIL_CUR_DU LA_BIL_PAS_DU LA_TOT_BIL_STS 9.2 ;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LD_BIL_CRT @;
	PUT LN_SEQ_BIL_WI_DTE @;
		PUT LD_FAT_EFF @;
	PUT LD_BIL_DU_LON @;
	PUT LC_STA_LON80 @;
	PUT LA_BIL_CUR_DU @;
	PUT LA_BIL_PAS_DU @;
	PUT LC_BIL_MTD @;
	PUT LC_IND_BIL_SNT @;
	PUT LC_STA_BIL10 @;
	PUT LA_TOT_BIL_STS $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN90 end = eof;
FILE REPORT5 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_FAT_PST LD_FAT_EFF MMDDYY10. ;
FORMAT LA_FAT_CUR_PRI LA_FAT_LTE_FEE	TRAN_AMT 10.2 ;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LN_FAT_SEQ @;
	PUT LD_FAT_PST @;
	PUT LD_FAT_EFF  @;
	PUT LC_STA_LON90 @;
	PUT LA_FAT_CUR_PRI @;
	PUT LA_FAT_LTE_FEE @;
	PUT TRAN_AMT @;
	PUT PC_FAT_TYP @;
	PUT PC_FAT_SUB_TYP @;
	PUT LA_FAT_NSI_ACR @;
	PUT LC_FAT_REV_REA $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DF10 end = eof;
FILE REPORT6 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_DFR_INF_CER LD_DFR_BEG LD_DFR_END MMDDYY10. ;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LF_DFR_CTL_NUM @;
	PUT LN_DFR_OCC_SEQ @;
	PUT LC_DFR_TYP @;
	PUT LD_DFR_INF_CER @;
	PUT LD_DFR_BEG @;
	PUT LD_DFR_END @;
	PUT LC_LON_LEV_DFR_CAP @;
	PUT LC_STA_LON50 @;
	PUT LC_DFR_STA @;
	PUT LC_STA_DFR10 $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET FB10 end = eof;
FILE REPORT7 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_FOR_INF_CER LD_FOR_BEG LD_FOR_END MMDDYY10. LA_REQ_RDC_PAY 9.2;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LF_FOR_CTL_NUM @;
	PUT LN_FOR_OCC_SEQ @;
	PUT LC_FOR_TYP @;
	PUT LD_FOR_INF_CER @;
	PUT LD_FOR_BEG @;
	PUT LD_FOR_END @;
	PUT LC_LON_LEV_FOR_CAP @;
	PUT LC_STA_LON60 @;
	PUT LC_FOR_STA @;
	PUT LC_STA_FOR10 @;
	PUT LA_REQ_RDC_PAY $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET PD10 end = eof;
FILE REPORT8 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT BF_SSN $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DL200 end = eof;
FILE REPORT9 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LAST_DL200 MMDDYY10.;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LAST_DL200 @;
	PUT DL200 $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DRLFA end = eof;
FILE REPORT10 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT FEE_WAV_DOL @;
	PUT FEE_WAV_CT $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN10 end = eof;
FILE REPORT11 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_END_GRC_PRD LD_LON_1_DSB WD_LON_RPD_SR LD_PIF_RPT MMDDYY10. ;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LA_CUR_PRI  @;
	PUT LA_LON_AMT_GTR @;
	PUT LD_END_GRC_PRD @;
	PUT IC_LON_PGM @;
	PUT LD_LON_1_DSB @;
	PUT WC_DW_LON_STA @;  
	PUT WD_LON_RPD_SR @;
	PUT WA_TOT_BRI_OTS @;
	PUT LD_PIF_RPT @;
	PUT WX_OVR_DW_LON_STA $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN83 end = eof;
FILE REPORT12 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT BN_EFT_SEQ @;
	PUT LC_STA_LN83 $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET DC01 end = eof;
FILE REPORT13 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_RHB MMDDYY10. ;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LD_RHB $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET GA10 end = eof;
FILE REPORT14 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT BF_SSN @;
	PUT CLUID @;
	PUT LN_SEQ @;
	PUT FORWARDING $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN54 end = eof;
FILE REPORT15 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_BBS_DSQ MMDDYY10. ;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LD_BBS_DSQ  @;
	PUT LC_BBS_ELG $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN55 end = eof;
FILE REPORT16 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LN_LON_BBT_PAY @;
	PUT PN_BBT_PAY_ICV $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN65 end = eof;
FILE REPORT17 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_CRT_LON65 LD_SNT_RPD_DIS MMDDYY10. ;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LD_CRT_LON65 @;	
	PUT LC_TYP_SCH_DIS @; 
	PUT LD_SNT_RPD_DIS @;
	PUT LA_RPS_ISL @;
	PUT DAY_DUE @;
	PUT LN_RPS_TRM $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN72 end = eof;
FILE REPORT18 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LR_ITR @;
	PUT LR_INT_RDC_PGM_ORG $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET SD10 end = eof;
FILE REPORT19 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_SCL_SPR MMDDYY10.;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ  @;
	PUT LD_SCL_SPR @;
	PUT IM_SCL_FUL $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET LN16 end = eof;
FILE REPORT20 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT LD_DLQ_OCC LD_DLQ_MAX MMDDYY10.;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT LN_SEQ @;
	PUT LD_DLQ_OCC @;
	PUT LN_DLQ_MAX @;
	PUT LD_DLQ_MAX $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET BR02 end = eof;
FILE REPORT21 DELIMITER=',' DSD DROPOVER LRECL=32767;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT IM_IST_FUL @;
	PUT IX_GEN_STR_ADR_1 @;
	PUT IX_GEN_STR_ADR_2 @;
	PUT IM_GEN_CT @;
	PUT IC_GEN_ST @;
	PUT IF_GEN_ZIP @;
	PUT IN_GEN_PHN $;
end;
if eof then put "-End-";
RUN;

DATA _NULL_;
SET BR30 end = eof;
FILE REPORT22 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT BD_EFT_STA MMDDYY10.;
DO;
	PUT DF_SPE_ACC_ID @;
	PUT BN_EFT_SEQ @;
	PUT BF_EFT_ABA @;
	PUT BF_EFT_ACC @;
	PUT BC_EFT_STA @;
	PUT BD_EFT_STA @;
	PUT BA_EFT_ADD_WDR @;
	PUT BN_EFT_NSF_CTR @;
	PUT BC_EFT_DNL_REA $;
end;
if eof then put "-End-";
RUN;
