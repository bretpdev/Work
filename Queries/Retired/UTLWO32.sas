LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
FILENAME REPORT2 "&RPTLIB/ULWO32.LWO32R2";
FILENAME REPORT3 "&RPTLIB/ULWO32.LWO32R3";
FILENAME REPORT4 "&RPTLIB/ULWO32.LWO32R4";
FILENAME REPORT5 "&RPTLIB/ULWO32.LWO32R5";
FILENAME REPORTZ "&RPTLIB/ULWO32.LWO32RZ";



options symbolgen;


DATA _NULL_;
CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'beginning'), MMDDYY10.));
CALL SYMPUT('RUNTIME',PUT(TIME(), TIME.));
RUN;

/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;*/
/*RSUBMIT;*/

%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;

PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE NOPRCTR AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,B.DM_PRS_LST
	,A.LN_SEQ

	,E.AMNT
    ,E.TRX
	,F.IF_SLL_OWN_SLD
	,F.IF_BUY_OWN_SLD
	,A.LF_LON_ALT
	,A.LN_LON_ALT_SEQ
	,ERR_TRX.EGT01_IND

FROM OLWHRM1.LN10_LON A 
INNER JOIN OLWHRM1.PD10_PRS_NME B
	 ON A.BF_SSN = B.DF_PRS_ID 
INNER JOIN OLWHRM1.LN35_LON_OWN C
	 ON A.BF_SSN = C.BF_SSN
	 AND A.LN_SEQ = C.LN_SEQ
INNER JOIN OLWHRM1.OW30_LON_SLE_CTL D
	 ON C.IF_LON_SLE = D.IF_LON_SLE

INNER JOIN 
	(SELECT BF_SSN, 
	   LN_SEQ,
	   SUM(COALESCE(LA_FAT_CUR_PRI,0)) AS AMNT,
	   PC_FAT_TYP || PC_FAT_SUB_TYP AS TRX
	FROM OLWHRM1.LN90_FIN_ATY 
	WHERE (
			  ( PC_FAT_TYP = '01'
			    AND PC_FAT_SUB_TYP = '01')
		OR 	  ( PC_FAT_TYP = '06'
				AND PC_FAT_SUB_TYP = '85')
		OR 	  ( PC_FAT_TYP = '14'
				AND PC_FAT_SUB_TYP = '01')
		OR 	  ( PC_FAT_TYP = '02'
				AND PC_FAT_SUB_TYP = '91')
		   )
		AND		LC_FAT_REV_REA = ' '
		AND 	LC_STA_LON90 = 'A'
	 GROUP BY BF_SSN, LN_SEQ, PC_FAT_TYP || PC_FAT_SUB_TYP 
	 ) E
	ON A.BF_SSN = E.BF_SSN
	AND A.LN_SEQ = E.LN_SEQ
LEFT OUTER JOIN OLWHRM1.LN99_LON_SLE_FAT F
	ON C.BF_SSN = F.BF_SSN
	AND C.LN_SEQ = F.LN_SEQ
	AND C.IF_LON_SLE = F.IF_LON_SLE
LEFT OUTER JOIN 
	(SELECT BF_SSN
		,LN_SEQ
		,'Y' AS EGT01_IND
	 FROM OLWHRM1.LN90_FIN_ATY 
	 WHERE PC_FAT_TYP = '80'
	 AND PC_FAT_SUB_TYP = '01'
	 AND LC_FAT_REV_REA = ' '
	 AND LC_STA_LON90 = 'A'
	 ) ERR_TRX
	ON A.BF_SSN = ERR_TRX.BF_SSN
	AND A.LN_SEQ = ERR_TRX.LN_SEQ
	
WHERE A.LF_LON_CUR_OWN = '828476'
AND	A.LD_LON_GTR BETWEEN '05/01/2000' AND '06/30/2006'
AND A.IF_DOE_LDR = '817455'
AND EXISTS (SELECT * FROM OLWHRM1.LN90_FIN_ATY X1
			WHERE X1.BF_SSN = A.BF_SSN
			AND X1.LN_SEQ = A.LN_SEQ
			AND X1.LC_STA_LON90 = 'A'
			AND X1.PC_FAT_TYP = '02'
			AND X1.PC_FAT_SUB_TYP = '91' 
			AND X1.LC_FAT_REV_REA = ''
			)





FOR READ ONLY WITH UR
);


CREATE TABLE TB1027 AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT BF_SSN, 
	   LN_SEQ,
	   LD_FAT_EFF,
	   COALESCE(LA_FAT_CUR_PRI,0) AS AMNT,
	   PC_FAT_TYP || PC_FAT_SUB_TYP AS FAT
FROM OLWHRM1.LN90_FIN_ATY 
WHERE PC_FAT_TYP = '10'
AND PC_FAT_SUB_TYP = '27'
AND	LC_FAT_REV_REA = ' '
AND LC_STA_LON90 = 'A'


FOR READ ONLY WITH UR
);


CREATE TABLE ZIONS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,E.LF_LON_ALT
	,E.LN_LON_ALT_SEQ
	,E.AMNT
	,E.TRX
	,O291.O291_IND
	,O101.O101_IND
	,ERR_TRX.EGT01_IND
	,'Y' AS ZB_IND

FROM OLWHRM1.LN10_LON A 
INNER JOIN 
	(SELECT V.BF_SSN, 
	   V.LF_LON_ALT,
	   V.LN_LON_ALT_SEQ,
	   SUM(COALESCE(Q.LA_FAT_CUR_PRI,0)) AS AMNT,
	   Q.PC_FAT_TYP || Q.PC_FAT_SUB_TYP AS TRX
	FROM OLWHRM1.LN90_FIN_ATY_ZB Q
	INNER JOIN OLWHRM1.LN10_LON_ZB V
		ON Q.BF_SSN = V.BF_SSN
		AND Q.LN_SEQ = V.LN_SEQ
	WHERE (
			  ( Q.PC_FAT_TYP = '01'
			    AND Q.PC_FAT_SUB_TYP = '01')
		OR 	  ( Q.PC_FAT_TYP = '06'
				AND Q.PC_FAT_SUB_TYP = '85')
		OR 	  ( Q.PC_FAT_TYP = '14'
				AND Q.PC_FAT_SUB_TYP = '01')
		OR 	  ( Q.PC_FAT_TYP = '02'
				AND Q.PC_FAT_SUB_TYP = '91')
		   )
		AND	Q.LC_FAT_REV_REA = ' '
		AND Q.LC_STA_LON90 = 'A'
	 GROUP BY V.BF_SSN,V.LF_LON_ALT,V.LN_LON_ALT_SEQ, Q.PC_FAT_TYP || Q.PC_FAT_SUB_TYP 
	 ) E
	ON A.BF_SSN = E.BF_SSN
	AND A.LF_LON_ALT = E.LF_LON_ALT
	AND A.LN_LON_ALT_SEQ = E.LN_LON_ALT_SEQ

LEFT OUTER JOIN 
	(SELECT V.BF_SSN
		,V.LF_LON_ALT
	   	,V.LN_LON_ALT_SEQ
		,'Y' AS O291_IND
	 FROM OLWHRM1.LN90_FIN_ATY_ZB Q
	 INNER JOIN OLWHRM1.LN10_LON_ZB V
		ON Q.BF_SSN = V.BF_SSN
		AND Q.LN_SEQ = V.LN_SEQ
	 WHERE PC_FAT_TYP = '02'
	 AND PC_FAT_SUB_TYP = '91'
	 AND LC_FAT_REV_REA = ' '
	 AND LC_STA_LON90 = 'A'
	 ) O291
	ON A.BF_SSN = O291.BF_SSN
	AND A.LF_LON_ALT = O291.LF_LON_ALT
	AND A.LN_LON_ALT_SEQ = O291.LN_LON_ALT_SEQ
LEFT OUTER JOIN 
	(SELECT V.BF_SSN
		,V.LF_LON_ALT
	   	,V.LN_LON_ALT_SEQ
		,'Y' AS O101_IND
	 FROM OLWHRM1.LN90_FIN_ATY_ZB Q
	 INNER JOIN OLWHRM1.LN10_LON_ZB V
		ON Q.BF_SSN = V.BF_SSN
		AND Q.LN_SEQ = V.LN_SEQ
	 WHERE PC_FAT_TYP = '01'
	 AND PC_FAT_SUB_TYP = '01'
	 AND LC_FAT_REV_REA = ' '
	 AND LC_STA_LON90 = 'A'
	 ) O101
	ON A.BF_SSN = O101.BF_SSN
	AND A.LF_LON_ALT = O101.LF_LON_ALT
	AND A.LN_LON_ALT_SEQ = O101.LN_LON_ALT_SEQ
LEFT OUTER JOIN 
	(SELECT V.BF_SSN
		,V.LF_LON_ALT
	   	,V.LN_LON_ALT_SEQ
		,'Y' AS EGT01_IND
	  FROM OLWHRM1.LN90_FIN_ATY_ZB Q
	  INNER JOIN OLWHRM1.LN10_LON_ZB V
		ON Q.BF_SSN = V.BF_SSN
		AND Q.LN_SEQ = V.LN_SEQ
	 WHERE PC_FAT_TYP = '80'
	 AND PC_FAT_SUB_TYP = '01'
	 AND LC_FAT_REV_REA = ' '
	 AND LC_STA_LON90 = 'A'
	 ) ERR_TRX
	ON A.BF_SSN = ERR_TRX.BF_SSN
	AND A.LF_LON_ALT = ERR_TRX.LF_LON_ALT
	AND A.LN_LON_ALT_SEQ = ERR_TRX.LN_LON_ALT_SEQ

WHERE A.IF_DOE_LDR = '817455'
AND A.LF_LON_CUR_OWN = '828476'
AND	A.LD_LON_GTR BETWEEN '05/01/2000' AND '06/30/2006'
AND EXISTS 
	(SELECT *
	 FROM OLWHRM1.LN90_FIN_ATY X
	 WHERE X.BF_SSN = A.BF_SSN
	 AND X.LN_SEQ = A.LN_SEQ
	 AND X.PC_FAT_TYP = '02'
	 AND X.PC_FAT_SUB_TYP = '91')

FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;

%put  sqlxrc= >>> &sqlxrc <<< ||| sqlxmsg= >>> &sqlxmsg >>> ;  ** includes error messages to SAS log  ;
%sqlcheck;
quit;

/*ENDRSUBMIT;*/
/**/
/*DATA NOPRCTR; */
/*SET WORKLOCL.NOPRCTR;*/
/**/
/*RUN;*/
/*DATA ZIONS; */
/*SET WORKLOCL.ZIONS; */
/**/
/*RUN;*/
/*DATA TB1027; */
/*SET WORKLOCL.TB1027;*/
/**/
/*RUN;*/
/*========================================================================*/
/*MACRO DEFINITIONS*/
/*========================================================================*/
%MACRO STP1(DS);
PROC SORT DATA=&DS;
BY BF_SSN DM_PRS_LST LN_SEQ AMNT TRX IF_SLL_OWN_SLD IF_BUY_OWN_SLD;
RUN;
DATA &DS;
SET &DS;
WHERE IF_SLL_OWN_SLD NE IF_BUY_OWN_SLD AND IF_SLL_OWN_SLD NE '828476';
RUN;
%MEND STP1;

%MACRO STP2(DS,BYVAL1,BYVAL2);
PROC SORT DATA=&DS NODUPKEY;
BY &BYVAL1 ;
RUN;
PROC TRANSPOSE DATA=&DS OUT=&DS (DROP=_NAME_ _LABEL_);
VAR AMNT;
BY &BYVAL2 ;
ID TRX;
RUN;
%MEND STP2;

%MACRO STP3(DS,TRX_TYP);
DATA &DS;
SET &DS;
FORMAT &TRX_TYP 10.2;
IF &TRX_TYP = . THEN &TRX_TYP = 0;
ELSE &TRX_TYP = ABS(&TRX_TYP);
RUN;
%MEND STP3;

%MACRO STP4(DS,STMNT);
DATA &DS;
SET &DS;
&STMNT;
RUN;
%MEND STP4;

%MACRO TBLCRT(DS1,DS2);
PROC SQL;
CREATE TABLE &DS1 AS 
SELECT DISTINCT TABLE1.*
FROM NOPRCTR TABLE1
INNER JOIN &DS2 TABLE2
	ON TABLE1.BF_SSN = TABLE2.BF_SSN
	AND TABLE1.LN_SEQ = TABLE2.LN_SEQ;
QUIT;
RUN;
%MEND TBLCRT;

%MACRO GETRX(DS,CRIT);
DATA &DS;
SET &DS;
WHERE &CRIT ; 
RUN;
%MEND GETRX;

%MACRO SCENUM(DS,CALVAR);
DATA &DS ;
SET &DS;
FRMNM = &CALVAR;
RUN;
%MEND SCENUM;

%MACRO PAYCONSOL(DS);
PROC SORT DATA=&DS; 
BY BF_SSN LN_SEQ TRX;
RUN;
DATA &DS;
SET &DS;
BY BF_SSN LN_SEQ TRX;
IF FIRST.TRX THEN X=0;
X+AMNT;
IF LAST.TRX THEN OUTPUT;
RUN;
DATA &DS (DROP=X);
SET &DS;
AMNT = X;
RUN;
%MEND PAYCONSOL;

/*========================================================================*/
/*NO PRICE TIER PROCESSING*/
/*========================================================================*/
PROC SORT DATA=ZIONS NODUPRECS;
BY BF_SSN LF_LON_ALT LN_LON_ALT_SEQ;
RUN;

PROC SQL;
CREATE TABLE HKUP AS 
SELECT DISTINCT A.BF_SSN
	,A.DM_PRS_LST
	,A.LN_SEQ

	,A.IF_SLL_OWN_SLD
	,A.IF_BUY_OWN_SLD

	,B.AMNT
	,B.TRX
	,B.O291_IND
	,B.O101_IND
	,B.ZB_IND
	,B.EGT01_IND AS ZB_EX
FROM NOPRCTR A
INNER JOIN ZIONS B
	ON A.LF_LON_ALT = B.LF_LON_ALT
	AND A.LN_LON_ALT_SEQ = B.LN_LON_ALT_SEQ
;
QUIT;
RUN;

DATA NOPRCTR (DROP=LF_LON_ALT LN_LON_ALT_SEQ);
SET NOPRCTR HKUP;
RUN;

%STP1(NOPRCTR);

/*============================================================*/
/*CREATE DATA SET FOR MANUAL REVIEW*/
/*============================================================*/

DATA _8001 ;
SET NOPRCTR;
WHERE EGT01_IND = 'Y' OR ZB_EX = 'Y';
RUN;

PROC SORT DATA=_8001;BY BF_SSN LN_SEQ;RUN;
PROC SORT DATA=NOPRCTR;BY BF_SSN LN_SEQ;RUN;

DATA _8001 (KEEP=BF_SSN LN_SEQ DM_PRS_LST) NOPRCTR;
MERGE _8001 (IN=A) NOPRCTR (IN=B);
BY BF_SSN LN_SEQ;
IF A THEN OUTPUT _8001;
ELSE OUTPUT NOPRCTR;
RUN;

PROC SORT DATA=_8001 NODUPKEY;BY BF_SSN LN_SEQ;RUN;
/*============================================================*/

DATA AX (KEEP=BF_SSN LN_SEQ) BX(KEEP=BF_SSN LN_SEQ) ;
SET NOPRCTR;
IF O291_IND = 'Y' THEN OUTPUT AX;
ELSE IF O101_IND = 'Y' AND O291_IND = '' THEN OUTPUT BX;
RUN;  

PROC SORT DATA=AX NODUPKEY;BY BF_SSN LN_SEQ;RUN;
PROC SORT DATA=BX NODUPKEY;BY BF_SSN LN_SEQ;RUN;

%TBLCRT(SEQ1,AX);
%TBLCRT(SEQ2,BX);

PROC SQL;
CREATE TABLE SEQ3 AS 
SELECT DISTINCT D.*
FROM NOPRCTR D
WHERE NOT EXISTS
	(SELECT *
	 FROM AX A
	 WHERE A.BF_SSN = D.BF_SSN
	 AND A.LN_SEQ = D.LN_SEQ)
AND NOT EXISTS
	(SELECT *
	 FROM BX B
	 WHERE B.BF_SSN = D.BF_SSN
	 AND B.LN_SEQ = D.LN_SEQ)
;
QUIT;
RUN;
%GETRX(SEQ1,TRX EQ '0101' 
	OR TRX EQ '0685' 
	OR TRX EQ '1401' 
	OR TRX EQ '0291' AND ZB_IND EQ 'Y');
%GETRX(SEQ2,TRX EQ '0101' 
	OR TRX EQ '0685'
	OR TRX EQ '1401');
%SCENUM(SEQ1,1);
%SCENUM(SEQ2,2);
%SCENUM(SEQ3,3);
DATA NOPRCTR (DROP=FRMNM) FORMULA(KEEP=BF_SSN LN_SEQ FRMNM);
SET SEQ1 SEQ2 SEQ3;
RUN;
%PAYCONSOL(NOPRCTR);
%STP2(NOPRCTR,
	BF_SSN DM_PRS_LST LN_SEQ AMNT TRX IF_SLL_OWN_SLD IF_BUY_OWN_SLD,
	BF_SSN DM_PRS_LST LN_SEQ );
%STP3(NOPRCTR,_0101);
%STP3(NOPRCTR,_0685);
%STP3(NOPRCTR,_1401);
%STP3(NOPRCTR,_0291);

PROC SORT DATA=FORMULA NODUPKEY;
BY BF_SSN LN_SEQ FRMNM;
RUN;

DATA NOPRCTR;
MERGE NOPRCTR FORMULA;
BY BF_SSN LN_SEQ;
RUN;

DATA NOPRCTR;
SET NOPRCTR; 
IF FRMNM IN (1,3) THEN CR_AMT = ROUND(((_0101 + _0291 + _0685) * .03) - _1401,.01);
ELSE IF FRMNM = 2 THEN CR_AMT = ROUND(((_0101 + _0685) * .03) - _1401,.01);
RUN;


/*========================================================================*/
/*GET TOTALS*/
/*========================================================================*/
PROC SQL;
CREATE TABLE CLEANUP AS
SELECT *
	, A.CR_AMT + B.AMNT AS DIFFERENCE
FROM NOPRCTR A 
INNER JOIN TB1027 B
ON A.BF_SSN = B.BF_SSN
AND A.LN_SEQ = B.LN_SEQ
;
QUIT;
RUN;

PROC SQL;
CREATE TABLE TOTALS AS
SELECT COUNT(*) AS TOT_NUM
	,SUM(DIFFERENCE) AS TOT_AMT
FROM CLEANUP
WHERE DIFFERENCE > 1;
QUIT;



PROC SORT DATA=CLEANUP;BY BF_SSN LN_SEQ;RUN;



PROC PRINTTO PRINT=REPORT2;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 NODATE CENTER PAGENO=1;
TITLE 'Origination Fee Credit Cleanup Report for Zions';
TITLE3 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO32     REPORT = ULWO32.LWO32R2';
PROC CONTENTS DATA=CLEANUP OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      /////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWO32     REPORT = ULWO32.LWO32R2";
	END;
RETURN;
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=CLEANUP;
WHERE DIFFERENCE > 1;
VAR BF_SSN DM_PRS_LST LN_SEQ CR_AMT LD_FAT_EFF AMNT DIFFERENCE;
LABEL BF_SSN = 'SSN' 
	DM_PRS_LST = 'LAST NAME' 
	LN_SEQ = 'LOAN SEQ'
	CR_AMT = 'REVISED CREDIT AMOUNT'
	LD_FAT_EFF = 'CURRENT 1027 EFFECTIVE DATE'
	AMNT = 'CURRENT 1027 CREDIT AMOUNT'
	DIFFERENCE = 'DIFFERENCE'
	;
RUN;

PROC PRINTTO PRINT=REPORT3;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 NODATE CENTER PAGENO=1;
TITLE 'Origination Fee Credit Cleanup Report for Zions';
TITLE2 'TOTALS';
TITLE2 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO32     REPORT = ULWO32.LWO32R3';
PROC CONTENTS DATA=TOTALS OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      /////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWO32     REPORT = ULWO32.LWO32R3";
	END;
RETURN;
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=TOTALS;
FORMAT TOT_AMT DOLLAR14.2;
VAR TOT_NUM
	TOT_AMT;
LABEL	TOT_NUM = 'TOTAL NUMBER OF LOANS'
		TOT_AMT = 'TOTAL AMOUNT';
RUN;

PROC PRINTTO PRINT=REPORT4;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 NODATE CENTER PAGENO=1;
TITLE '8001 PRECONVERSION FINANCIAL TRANSACTION';
TITLE2 'MANUAL REVIEW';
TITLE3 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO32     REPORT = ULWO32.LWO32R4';
PROC CONTENTS DATA=_8001 OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      /////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWO32     REPORT = ULWO32.LWO32R4";
	END;
RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=_8001;
VAR BF_SSN DM_PRS_LST LN_SEQ;
LABEL BF_SSN = 'SSN' DM_PRS_LST = 'LAST NAME' LN_SEQ = 'LOAN SEQ';
RUN;



PROC PRINTTO PRINT=REPORT5;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 NODATE CENTER PAGENO=1;
TITLE 'ORIGINATION FEE CREDIT - ZERO AMOUNT';
TITLE3 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO32     REPORT = ULWO32.LWO32R5';
PROC CONTENTS DATA=CLEANUP OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      /////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWO32     REPORT = ULWO32.LWO32R5";
	END;
RETURN;
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=CLEANUP;
WHERE DIFFERENCE = 0;
VAR BF_SSN DM_PRS_LST LN_SEQ CR_AMT LD_FAT_EFF AMNT DIFFERENCE;
LABEL BF_SSN = 'SSN' 
	DM_PRS_LST = 'LAST NAME' 
	LN_SEQ = 'LOAN SEQ'
	;
RUN;


PROC PRINTTO;
RUN;

