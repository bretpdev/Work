*-------------------------------*
| UTLWA09 - REFERRAL LENDER FEE |
*-------------------------------*;
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
%LET TABLIB = /sas/whse/progrevw;
/*%LET RPTLIB = T:\SAS;*/
/*%LET TABLIB = Q:\Process Automation\TabSAS;*/
FILENAME REPORT2 "&RPTLIB/ULWA09.LWA09R2";
FILENAME REPORT3 "&RPTLIB/ULWA09.LWA09R3";
FILENAME REPORT4 "&RPTLIB/ULWA09.LWA09R4";
FILENAME REPORTZ "&RPTLIB/ULWA09.LWA09RZ";
/*************************************************************************************
* NOTE: THE .txt FILE THAT THIS DATA STEP READS NEEDS TO FOLLOW THIS CONVENTION
* FEE BEGIN DATE(MMDDCCYY),FEE END DATE(MMDDCCYY),FEE AMOUNT
**************************************************************************************/
DATA LDR_FEES;
FORMAT BEGINNING_DT END_DT MMDDYY10.;
INFILE "&TABLIB/REF_LDR_FEES.txt" DLM=',' MISSOVER DSD;
INFORMAT BEGINNING_DT END_DT MMDDYY10. FEE BEST12.;
INPUT BEGINNING_DT END_DT FEE ;
RUN;
DATA _NULL_;
SET LDR_FEES;
WHERE END_DT = .;
	CALL SYMPUT('FEE_AMT',FEE);
RUN;
DATA _NULL_;
	CALL SYMPUT('FY_START',"'"||PUT(INTNX('YEAR.7',TODAY(),0,'B'), MMDDYYD10.)||"'");
	CALL SYMPUT('FY_END',"'"||PUT(INTNX('YEAR.7',TODAY(),0,'E'), MMDDYYD10.)||"'");
	CALL SYMPUT('EFFDATE',TRIM(LEFT(UPCASE(
		PUT(INTNX('MONTH',TODAY(),-1), MONNAME9.)||' '||
		PUT(INTNX('MONTH',TODAY(),-1), YEAR4.)))));
RUN;
/*%SYSLPUT FY_START = &FY_START;*/
/*%SYSLPUT FY_END = &FY_END;*/
/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;*/
/*RSUBMIT;*/
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE REFLDF AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT C.BF_SSN
	,C.LN_SEQ
	,C.LA_CUR_PRI
	,ACT_DSB.LA_DSB AS ACT_LA_DSB
	,ACT_DSB.LD_DSB AS ACT_LD_DSB
	,COALESCE(ACT_DSB.LA_DSB_CAN,0) AS ACT_LA_DSB_CAN
	,D.DF_SPE_ACC_ID
	,D.DM_PRS_1
	,D.DM_PRS_MID
	,D.DM_PRS_LST
	,A.AF_ORG_APL_OPS_LDR
	,E.IM_IST_SHO
FROM OLWHRM1.GA01_APP A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.LN10_LON C
	ON B.AF_APL_ID = C.LF_LON_ALT
	AND INT(B.AF_APL_ID_SFX) = C.LN_LON_ALT_SEQ
INNER JOIN OLWHRM1.LN15_DSB ACT_DSB
	ON C.BF_SSN = ACT_DSB.BF_SSN
	AND C.LN_SEQ = ACT_DSB.LN_SEQ
INNER JOIN OLWHRM1.PD10_PRS_NME D
	ON C.BF_SSN = D.DF_PRS_ID
LEFT OUTER JOIN OLWHRM1.IN01_LGS_IDM_MST E
	ON A.AF_ORG_APL_OPS_LDR = E.IF_IST
	AND E.IC_IST_TYP = '002'
WHERE A.AF_CUR_APL_OPS_LDR = '828476'
AND A.AF_ORG_APL_OPS_LDR NOT IN ('828476','')
AND ACT_DSB.LC_DSB_TYP = '2'
AND ACT_DSB.LC_STA_LON15 IN ('1','3')
AND ACT_DSB.LA_DSB <> COALESCE(ACT_DSB.LA_DSB_CAN,0)
AND C.LA_CUR_PRI > 0
/*NO RFEPD ARC DURING THE CURRENT FISCAL YEAR*/
AND NOT EXISTS (
	SELECT *
	FROM OLWHRM1.AY10_BR_LON_ATY X
	WHERE X.BF_SSN = C.BF_SSN
	AND X.PF_REQ_ACT = 'RFEPD'
	AND X.LD_ATY_REQ_RCV BETWEEN &FY_START AND &FY_END
	)
/*THE LOAN HAS TO BE FULLY DISBURSED*/
AND NOT EXISTS (
	SELECT *
	FROM OLWHRM1.LN15_DSB Y
	WHERE Y.BF_SSN = C.BF_SSN
	AND Y.LN_SEQ = C.LN_SEQ
	AND Y.LC_DSB_TYP = '1'
	AND Y.LC_STA_LON15 IN ('1','3')
	AND Y.LA_DSB <> COALESCE(Y.LA_DSB_CAN,0)
	)
ORDER BY BF_SSN
	,LN_SEQ
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;
%SQLCHECK (SQLRPT=ULWA09.LWA09RZ);
QUIT;
/*ENDRSUBMIT;*/
/*DATA REFLDF;*/
/*SET WORKLOCL.REFLDF;*/
/*RUN;*/
PROC SQL;
CREATE TABLE REFLDF_SMRY AS 
SELECT A.BF_SSN
	,A.LN_SEQ
	,A.DF_SPE_ACC_ID
	,A.DM_PRS_1
	,A.DM_PRS_MID
	,A.DM_PRS_LST
	,A.AF_ORG_APL_OPS_LDR
	,A.IM_IST_SHO
	,&FEE_AMT AS FEE_AMT
	,SUM(A.ACT_LA_DSB) AS DISB_TOT
	,MAX(A.ACT_LD_DSB) AS MAX_DISB_DT FORMAT=MMDDYY10.
FROM REFLDF A
INNER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,MAX(ACT_LD_DSB) AS UDATE
	FROM REFLDF
	GROUP BY BF_SSN
		,LN_SEQ
	) B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
INNER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,SUM(ACT_LA_DSB) AS USUM
	FROM REFLDF
	GROUP BY BF_SSN
		,LN_SEQ
	) C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
WHERE B.UDATE <= TODAY() - 30
AND C.USUM > 1000
GROUP BY A.BF_SSN
	,A.LN_SEQ
	,A.DF_SPE_ACC_ID
	,A.DM_PRS_1
	,A.DM_PRS_MID
	,A.DM_PRS_LST
	,A.AF_ORG_APL_OPS_LDR
	,A.IM_IST_SHO
ORDER BY A.DF_SPE_ACC_ID
	,LN_SEQ
;
QUIT;
PROC SORT DATA=REFLDF_SMRY; BY DF_SPE_ACC_ID DISB_TOT MAX_DISB_DT;RUN;
DATA REFLDF_SMRY;
SET REFLDF_SMRY;
BY DF_SPE_ACC_ID;
IF LAST.DF_SPE_ACC_ID THEN OUTPUT;
RUN;
/*testing only!*/
/*DATA X ;SET REFLDF_SMRY;RUN;*/
/*DATA X;*/
/*SET X;*/
/*AF_ORG_APL_OPS_LDR = '777777';*/
/*IM_IST_SHO = 'LUCKY 7 CU';*/
/*RUN;*/
/*DATA REFLDF_SMRY;*/
/*SET REFLDF_SMRY X;*/
/*RUN;*/
/***************/
DATA _NULL_;
SET REFLDF_SMRY ;
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LN_SEQ 6. ;
	FORMAT DF_SPE_ACC_ID $10. ;
IF _N_ = 1 THEN 
DO;
	PUT
	'DF_SPE_ACC_ID'
	','
	'LN_SEQ';
END;
DO;
	PUT DF_SPE_ACC_ID $ @;
	PUT LN_SEQ ;
END;
RUN;

PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 CENTER;
TITLE 'REFERRAL LENDER FEE TOTALS REPORT';
TITLE2	"FOR MONTH ENDING &EFFDATE";
FOOTNOTE 'JOB = UTLWA09  	 REPORT = ULWA09.LWA09R3';
PROC CONTENTS DATA=REFLDF_SMRY OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      ////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWA09  	 REPORT = ULWA09.LWA09R2";
	END;
RETURN;
RUN;
PROC REPORT DATA=REFLDF_SMRY NOWD HEADSKIP SPLIT='@';
COLUMN N XSUM FEE_AMT;
DEFINE N /  NOPRINT ;
DEFINE XSUM / COMPUTED "TOTAL NUMBER OF BORROWERS" WIDTH=15 FORMAT=COMMA6.;
DEFINE FEE_AMT / SUM "TOTAL FEE AMOUNT" FORMAT=DOLLAR12.2 WIDTH=15;
COMPUTE XSUM;
	XSUM = N;
ENDCOMP;
RUN;
PROC PRINTTO;
RUN;

PROC SORT DATA=REFLDF_SMRY;BY IM_IST_SHO AF_ORG_APL_OPS_LDR DF_SPE_ACC_ID DM_PRS_1 DM_PRS_LST MAX_DISB_DT
DISB_TOT FEE_AMT;RUN;

PROC PRINTTO PRINT=REPORT4 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 CENTER;
TITLE 'REFERRAL LENDER FEE ';
TITLE2	"FOR MONTH ENDING &EFFDATE";
PROC CONTENTS DATA=REFLDF_SMRY OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      ////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT ////
		@57 '-- END OF REPORT --';
	PUT ////////////
		@46 "JOB = UTLWA09  	 REPORT = ULWA09.LWA09R4";
	END;
RETURN;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 CENTER NOBYLINE;
TITLE 'REFERRAL LENDER FEE ';
TITLE2 '#BYVAL1 - #BYVAL2';
TITLE3	"FOR MONTH ENDING &EFFDATE";
FOOTNOTE "JOB = UTLWA09  	 REPORT = ULWA09.LWA09R4";
PROC REPORT DATA=REFLDF_SMRY NOWD HEADSKIP SPLIT='@';
BY IM_IST_SHO AF_ORG_APL_OPS_LDR ; 
COLUMN DF_SPE_ACC_ID DM_PRS_1 DM_PRS_LST MAX_DISB_DT DISB_TOT FEE_AMT N XSUM;
DEFINE DF_SPE_ACC_ID / ORDER 'ACCT #' WIDTH=10;
DEFINE DM_PRS_1 / ORDER 'FIRST NAME' WIDTH = 12;
DEFINE DM_PRS_LST / ORDER 'LAST NAME' WIDTH=15;
DEFINE MAX_DISB_DT / ORDER 'FINAL DISB DATE' WIDTH=10 FORMAT=MMDDYY10. ;
DEFINE DISB_TOT / ANALYSIS 'DISBURSEMENT AMT' WIDTH = 12 FORMAT=DOLLAR10.2;
DEFINE FEE_AMT / ANALYSIS 'AMOUNT OF FEE' WIDTH=6 FORMAT=DOLLAR10.2;
DEFINE N / NOPRINT;
DEFINE XSUM / COMPUTED NOPRINT;
COMPUTE XSUM;
	XSUM = FEE_AMT.SUM;
ENDCOMP;
COMPUTE AFTER ;
	LINE @23 83*'-';
	LINE @23 'BORROWER TOTAL: ' N COMMA6.;
	LINE @23 'TOTAL FEE AMOUNT:' XSUM DOLLAR14.2;
ENDCOMP;
RUN;
PROC PRINTTO;
RUN;
