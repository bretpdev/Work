/*LPP WASHINGTON MUTUAL MERGE - ANTICIPATED DISBURSEMENT REPORT*/
libname  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=work  ;
RSUBMIT;
OPTIONS NOCENTER NODATE NONUMBER LS=132;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE WAMU AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT 
	INTEGER(A.BF_SSN) AS BF_SSN
	,A.AN_SEQ
FROM OLWHRM1.LN15_DSB A 
INNER JOIN OLWHRM1.AP03_MASTER_APL B 
	ON A.AF_APL_ID = B.AF_APL_ID
WHERE A.LA_DSB - COALESCE(A.LA_DSB_CAN,0) <> 0
AND B.AF_DOE_LDR = '820043'
AND A.LC_LDR_DSB_MDM = ' '
AND A.LC_DSB_TYP = '1' /*ANTICIPATED DISBS*/
AND A.LC_STA_LON15 IN ('1','3') /*ONLY SELECT ACTIVE DISB ROWS*/
AND NOT EXISTS
	(SELECT *
	FROM OLWHRM1.LN15_DSB X 
    INNER JOIN OLWHRM1.AP03_MASTER_APL Y 
		ON X.AF_APL_ID = Y.AF_APL_ID
	WHERE X.LC_DSB_TYP <> '1' /*NOT ANTICIPATED DISBS*/
	AND X.LC_STA_LON15 IN ('1','3') /*ONLY SELECT ACTIVE DISB ROWS*/
	AND X.BF_SSN = A.BF_SSN
	AND X.AN_SEQ = A.AN_SEQ)
ORDER BY BF_SSN, A.AN_SEQ
);
DISCONNECT FROM DB2;
endrsubmit  ;

DATA WAMU; 
SET WORKLOCL.WAMU; 
RUN;

data _null_;
      call symput("RUNDT",left(put("&sysdate"d,MMDDYY10.)));
run;

OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=90;
PROC PRINT NOOBS SPLIT='/' DATA=WAMU WIDTH=UNIFORM WIDTH=MIN;
VAR BF_SSN AN_SEQ;
LABEL BF_SSN='SSN' AN_SEQ='APP SEQ #';
FORMAT BF_SSN SSN11.;
TITLE1 'WASHINGTON MUTUAL MERGE';
TITLE2 'ANTICIPATED DISBURSEMENT REPORT';
TITLE3 "RUN DATE:  &RUNDT";
FOOTNOTE  'JOB = ON DEMAND     REPORT = WASH MUTUAL ANT DISBS';
RUN;

data _null_;
set  WORK.WAMU                                    end=EFIEOD;
%let _EFIERR_ = 0; /* set the ERROR detection macro variable */
%let _EFIREC_ = 0;     /* clear export record count macro variable */
file 'T:\SAS\WaMu Anti Disbs.txt' delimiter=',' DSD DROPOVER lrecl=32767;
   format BF_SSN 11. ;
   format AN_SEQ 6. ;
if _n_ = 1 then        /* write column names */
 do;
   put
   'BF_SSN'
   ','
   'AN_SEQ'
   ;
 end;
 do;
   EFIOUT + 1;
   put BF_SSN @;
   put AN_SEQ ;
   ;
 end;
if _ERROR_ then call symput('_EFIERR_',1);  /* set ERROR detection macro variable*/
If EFIEOD then
   call symput('_EFIREC_',EFIOUT);
run;

