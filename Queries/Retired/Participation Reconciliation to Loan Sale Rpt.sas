*-----------------------------------------------*
| PARTICIPATION RECONCILIATION TO LOAN SALE RPT |
*-----------------------------------------------*;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
%LET FILELIB = X:\PADD\FTP;
/*%LET FILELIB = X:\PADD\FTP\Test ;*/
DATA _NULL_;
	CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'beginning'), MMDDYYN8.));
RUN;
FILENAME PFILE "&FILELIB\Participation834493.txt";
FILENAME REPORT2 "&FILELIB\Participation Reconciliation to Loan Sale Rpt.R2.&RUNDATE..txt";
FILENAME REPORT3 "&FILELIB\Participation Reconciliation to Loan Sale Rpt.R3.&RUNDATE..txt";
FILENAME REPORT4 "&FILELIB\Participation Reconciliation to Loan Sale Rpt.R4.&RUNDATE..txt";
FILENAME REPORT5 "&FILELIB\Participation Reconciliation to Loan Sale Rpt.R5.&RUNDATE..txt";
FILENAME REPORT6 "&FILELIB\Participation Reconciliation to Loan Sale Rpt.R6.&RUNDATE..txt";
FILENAME REPORT7 "&FILELIB\Participation Reconciliation to Loan Sale Rpt.R7.&RUNDATE..txt";
FILENAME REPORT8 "&FILELIB\Participation Reconciliation to Loan Sale Rpt.R8.&RUNDATE..txt";
/*GET PART FILE DATE FROM THE HEADER ROW*/
DATA _NULL_;
	FORMAT FPDI MMDDYY10.;
	INFILE PFILE MISSOVER LRECL=26700;
	IF _N_ = 1 THEN DO;
		INPUT FPD $ 47-54;
		FPDI = MDY(SUBSTR(FPD,5,2),SUBSTR(FPD,7,2),SUBSTR(FPD,1,4));
		CALL SYMPUT('IFPRT_DT',FPDI);	
		CALL SYMPUT('CFPRT_DT',"'"||PUT(FPDI, MMDDYYD10.)||"'");
		PUT FPDI;
	END;
RUN;
%PUT &cFPRT_DT;
/*ACCOUNT FOR  CHARACTER */
DATA UTTSJTJ10 (DROP=ITEM);
	INFILE PFILE MISSOVER LRECL=26700 FIRSTOBS=2;
	INPUT @1 ITEM $1. @;
		IF ITEM ^= '' THEN DO;
			INPUT PART_SSN $ 22 - 30
			PART_CLUID $ 2 - 20  
			PART_LAST_NAME $ 39 - 73
			PART_FIRST_NAME $ 74 - 93
			PFDD $ 187 - 194 
			PART_LOAN_TYPE $ 221 - 222
			PART_ORIGINAL_LID $ 223 - 230
			PART_CURRENT_OWNER $ 231 - 238
			PART_ORIGINATION_FEE 239 - 253
			PART_PRINCIPAL_BALANCE 307 - 320
			PART_INTEREST_BALANCE 322 - 335 
			PART_FUNDING_AMOUNT 205 - 212 
			;
		END;
		ELSE DO;
			INPUT PART_SSN $ 23 - 31
			PART_CLUID $ 3 - 21  
			PART_LAST_NAME $ 40 - 74
			PART_FIRST_NAME $ 75 - 94
			PFDD $ 188 - 195 
			PART_LOAN_TYPE $ 222 - 223
			PART_ORIGINAL_LID $ 224 - 231
			PART_CURRENT_OWNER $ 232 - 239
			PART_ORIGINATION_FEE 240 - 254
			PART_PRINCIPAL_BALANCE 308 - 321
			PART_INTEREST_BALANCE 323 - 336 
			PART_FUNDING_AMOUNT 206 - 213 
			;
		END;
RUN;
DATA WORKLOCL.UTTSJTJ10;
	SET UTTSJTJ10;
RUN;
%SYSLPUT CFPRT_DT = &CFPRT_DT;
RSUBMIT;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE COMP AS
SELECT DISTINCT A.*
	,B.LN_SEQ
	,B.LF_LON_CUR_OWN
	,B.LA_CUR_PRI
	,B.LA_NSI_OTS
	,B.LF_DOE_SCL_ORG
	,B.ELM_IND
	,B.WA_TOT_BRI_OTS
	,B.LR_ITR
	,B.IF_BND_ISS
	,B.AF_LDR_BND_ISS
FROM UTTSJTJ10 A
LEFT OUTER JOIN CONNECTION TO DB2 ( 
	SELECT A.BF_SSN
		,A.LN_SEQ
		,A.LF_LON_ALT||'0'||CHAR(A.LN_LON_ALT_SEQ) AS CLUID
		,A.LF_LON_CUR_OWN
		,A.LA_CUR_PRI
		,A.LA_NSI_OTS
		,A.LF_DOE_SCL_ORG
		,CASE
			WHEN F.IC_DSB_MDM = '7' THEN 'Y'
			ELSE 'N'
		 END AS ELM_IND
		,B.WA_TOT_BRI_OTS
		,LN72.LR_ITR
		,C.IF_BND_ISS
		,E.AF_LDR_BND_ISS
	FROM OLWHRM1.LN10_LON A 
	INNER JOIN OLWHRM1.DW01_DW_CLC_CLU B
		ON A.BF_SSN = B.BF_SSN
		AND A.LN_SEQ = B.LN_SEQ
	INNER JOIN (
		SELECT X.BF_SSN
			,X.LN_SEQ
			,X.LR_ITR
		FROM OLWHRM1.LN72_INT_RTE_HST X
		WHERE X.LC_STA_LON72 = 'A'
			AND X.LD_ITR_EFF_BEG <= CURRENT DATE
			AND X.LD_ITR_EFF_END >= CURRENT DATE
		) LN72
		ON A.BF_SSN = LN72.BF_SSN
		AND A.LN_SEQ = LN72.LN_SEQ
	INNER JOIN OLWHRM1.LN35_LON_OWN C
		ON A.BF_SSN = C.BF_SSN
		AND A.LN_SEQ = C.LN_SEQ
		AND A.LF_LON_CUR_OWN = C.IF_OWN
	LEFT OUTER JOIN OLWHRM1.LN15_DSB D
		ON A.BF_SSN = D.BF_SSN
		AND A.LN_SEQ = D.LN_SEQ
	LEFT OUTER JOIN OLWHRM1.AP03_MASTER_APL E	
		ON D.AF_APL_ID = E.AF_APL_ID
	LEFT OUTER JOIN (
		SELECT DISTINCT IF_DOE_SCL 
			,IC_DSB_MDM
		FROM OLWHRM1.SC26_DSB_SCH
		WHERE IC_DSB_MDM = '7'
		) F
		ON A.LF_DOE_SCL_ORG = F.IF_DOE_SCL
	WHERE C.LC_STA_LON35 = 'A'
		AND C.LD_OWN_EFF_END IS NULL
	) B
	ON A.PART_SSN = B.BF_SSN
	AND A.PART_CLUID = B.CLUID
;
CREATE TABLE LN90 AS
SELECT DISTINCT B.*
FROM COMP A
INNER JOIN CONNECTION TO DB2 ( 
	SELECT D.BF_SSN
		,D.LN_SEQ
		,D.LN_FAT_SEQ
		,D.LD_FAT_APL
		,D.LD_FAT_EFF
		,D.PC_FAT_TYP AS TYP
		,D.PC_FAT_SUB_TYP AS SUB_TYP
		,D.LA_FAT_CUR_PRI
		,D.LA_FAT_NSI
		,D.LC_CSH_ADV
		,F.LN_BR_DSB_SEQ
		,E.LA_DSB
		,E.LA_DSB_CAN
		,E.LD_DSB
		,E.LD_ECA_LON_SCH_CRT
		,E.LD_ECA_DSB_FUD
	FROM OLWHRM1.LN90_FIN_ATY D
	LEFT OUTER JOIN OLWHRM1.LN93_DSB_FIN_TRX F
		ON D.BF_SSN = F.BF_SSN
		AND D.LN_SEQ = F.LN_SEQ
		AND D.LN_FAT_SEQ = F.LN_FAT_SEQ
	LEFT OUTER JOIN OLWHRM1.LN15_DSB E
		ON F.BF_SSN = E.BF_SSN
		AND F.LN_SEQ = E.LN_SEQ
		AND F.LN_BR_DSB_SEQ = E.LN_BR_DSB_SEQ
	WHERE D.LC_STA_LON90 = 'A'
		AND D.LC_FAT_REV_REA = ''
		AND 
		(
			(D.LD_FAT_APL BETWEEN &CFPRT_DT AND CURRENT DATE)
		OR 
			(D.PC_FAT_TYP = '01' AND D.PC_FAT_SUB_TYP = '01')
		)
	) B
	ON A.PART_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
;
DISCONNECT FROM DB2;

ENDRSUBMIT;
DATA COMP;
	SET WORKLOCL.COMP;
RUN;
DATA LN90;
	SET WORKLOCL.LN90;
RUN;

/*CALCULATE CURRENT INTEREST*/
DATA COMP (DROP = WA_TOT_BRI_OTS LA_NSI_OTS LR_ITR);
	SET COMP;
	DO;
		IF WA_TOT_BRI_OTS NOT IN (.,0) THEN 
			CUR_INT = ROUND(SUM(((LA_CUR_PRI)*(SUM(LR_ITR,0)/100/365)*(TODAY()-DATE())),WA_TOT_BRI_OTS),.01);
		ELSE 
			CUR_INT = SUM(LA_NSI_OTS,0);
	END;
	PDIF = PART_PRINCIPAL_BALANCE - LA_CUR_PRI;
	IDIF = PART_INTEREST_BALANCE - CUR_INT;
	PART_1ST_DISB_DATE = MDY(SUBSTR(PFDD,5,2),SUBSTR(PFDD,7,2),SUBSTR(PFDD,1,4));
RUN;

PROC SQL;
CREATE TABLE COMP2 AS 
SELECT DISTINCT A.*
	,B.CLUSEQ_CT
FROM COMP A
INNER JOIN (
	SELECT PART_CLUID
		,LN_SEQ
		,COUNT(*) AS CLUSEQ_CT
	FROM COMP
	GROUP BY PART_CLUID
		,LN_SEQ
	) B
	ON A.PART_CLUID = B.PART_CLUID
	AND B.LN_SEQ = B.LN_SEQ
;
QUIT;
PROC DATASETS ;
	DELETE COMP;
	CHANGE COMP2=COMP; 
QUIT;

DATA LN90 FEES(DROP=CAT);
	SET LN90;
	IF TYP = '03' AND SUB_TYP IN ('90','95') THEN DO;
		DELETE;
	END;
	ELSE IF TYP IN ('14','16') AND SUB_TYP = '01' THEN DO;
		OUTPUT FEES;
	END;
	ELSE IF TYP = '01' AND SUB_TYP = '01' THEN DO;
		IF LD_ECA_DSB_FUD = . and LD_FAT_APL >= input(compress(&CFPRT_DT),mmddyy10.) THEN DO;
			CAT = 'DSB';
			OUTPUT LN90;
		END;
		ELSE 
			DELETE;
	END;
	ELSE IF LC_CSH_ADV = 'C' AND TYP = '10' AND SUB_TYP IN ('41','40','45') THEN DO;
		CAT = 'SRC';
		OUTPUT LN90;
	END;
	ELSE IF LC_CSH_ADV = 'C' AND TYP = '10'	AND SUB_TYP NOT IN ('40','45') THEN DO;
		CAT = 'BPY';
		OUTPUT LN90;
	END;
	ELSE IF LC_CSH_ADV IN ('A','C') THEN DO;
		CAT = 'OTH';
		OUTPUT LN90;
	END;
	ELSE 
		DELETE;
RUN;

%MACRO FEE_CALC(PRE,CV,FAT,FAT_SUB);
PROC SQL;
	CREATE TABLE &PRE._FEE AS 
		SELECT DISTINCT &PRE..*
			,"&CV" AS CAT
		FROM FEES &PRE
		INNER JOIN LN90 SRCAN
			ON &PRE..BF_SSN = SRCAN.BF_SSN
			AND &PRE..LN_SEQ = SRCAN.LN_SEQ
			AND &PRE..LN_BR_DSB_SEQ = SRCAN.LN_BR_DSB_SEQ
		WHERE &PRE..TYP = "&FAT" 
			AND &PRE..SUB_TYP = "&FAT_SUB"
	;
QUIT;
%MEND FEE_CALC;
%FEE_CALC(ORIG,OFE,14,01);
%FEE_CALC(GUAR,GFE,16,01);

DATA LN90;
	SET LN90 ORIG_FEE GUAR_FEE; 
RUN;

PROC SQL;
CREATE TABLE ALL_FIN AS 
SELECT DISTINCT A.PART_SSN
	,A.LN_SEQ
	,B.DSB_EFF_DT
	,B.DSB_APL_DT
	,B.DSB_AMT
	,C.SRC_EFF_DT
	,C.SRC_APL_DT
	,C.SRC_AMT
	,D.OFE_AMT
	,H.GFE_AMT
	,E.BPY_EFF_DT
	,E.BPY_APL_DT
	,E.BPY_PRN
	,E.BPY_INT
	,F.OTH_EFF_DT
	,F.OTH_APL_DT
	,F.OTH_AMT
	,G.MAX_COUNT
FROM COMP A
INNER JOIN (
		SELECT PART_SSN
			,LN_SEQ 
		FROM COMP
		WHERE PDIF ^= 0  
	UNION
		SELECT BF_SSN AS PART_SSN
			,LN_SEQ 
		FROM LN90
		WHERE LD_FAT_APL >= &IFPRT_DT
	) K
	ON A.PART_SSN = K.PART_SSN
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN ( /*DISBURSEMENT DATA*/
	SELECT BF_SSN 
		,LN_SEQ 
		,MAX(LD_FAT_EFF) AS DSB_EFF_DT
		,MAX(LD_FAT_APL) AS DSB_APL_DT
		,SUM(LA_FAT_CUR_PRI) AS DSB_AMT
	FROM LN90
	WHERE CAT = 'DSB' 
	GROUP BY BF_SSN 
		,LN_SEQ 
	) B 
	ON A.PART_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN ( /*SCHOOL REFUND/CANCELLACTION DATA*/
	SELECT BF_SSN 
		,LN_SEQ  
		,MAX(LD_FAT_EFF) AS SRC_EFF_DT
		,MAX(LD_FAT_APL) AS SRC_APL_DT
		,SUM(LA_FAT_CUR_PRI) AS SRC_AMT
	FROM LN90
	WHERE CAT = 'SRC'
	GROUP BY BF_SSN 
		,LN_SEQ 
	) C 
	ON A.PART_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
LEFT OUTER JOIN ( /*ORIGINATION FEE DATA*/
	SELECT BF_SSN 
		,LN_SEQ 
		,SUM(LA_FAT_CUR_PRI) AS OFE_AMT
	FROM LN90
	WHERE CAT = 'OFE'
	GROUP BY BF_SSN 
		,LN_SEQ 
	) D 
	ON A.PART_SSN = D.BF_SSN
	AND A.LN_SEQ = D.LN_SEQ
LEFT OUTER JOIN ( /*BORROWER PAYMENT DATA*/
	SELECT BF_SSN 
		,LN_SEQ
		,MAX(LD_FAT_EFF) AS BPY_EFF_DT
		,MAX(LD_FAT_APL) AS BPY_APL_DT
		,SUM(LA_FAT_CUR_PRI) AS BPY_PRN
		,SUM(LA_FAT_NSI) AS BPY_INT
	FROM LN90
	WHERE CAT = 'BPY'
	GROUP BY BF_SSN 
		,LN_SEQ 
	) E 
	ON A.PART_SSN = E.BF_SSN
	AND A.LN_SEQ = E.LN_SEQ
LEFT OUTER JOIN ( /*OTHER ADJUSTMENT DATA*/
	SELECT BF_SSN 
		,LN_SEQ 
		,MAX(LD_FAT_EFF) AS OTH_EFF_DT
		,MAX(LD_FAT_APL) AS OTH_APL_DT
		,SUM(LA_FAT_CUR_PRI) AS OTH_AMT
	FROM LN90	AA
	WHERE CAT = 'OTH'
	AND NOT EXISTS 
		(
			SELECT 1
			FROM ORIG_FEE XX
			WHERE XX.BF_SSN = AA.BF_SSN
				AND XX.LN_SEQ = AA.LN_SEQ
				AND XX.LN_FAT_SEQ = AA.LN_FAT_SEQ
		)			
	GROUP BY BF_SSN 
		,LN_SEQ 
	) F
	ON A.PART_SSN = F.BF_SSN
	AND A.LN_SEQ = F.LN_SEQ
LEFT OUTER JOIN ( /*MULTIPLE INDICATOR*/
	SELECT BF_SSN
		,LN_SEQ
		,MAX(TRX_COUNT) AS MAX_COUNT
	FROM (
		SELECT BF_SSN 
			,LN_SEQ 
			,CAT
			,COUNT(*) AS TRX_COUNT
		FROM LN90	
		GROUP BY BF_SSN 
			,LN_SEQ 
			,CAT
		) MI
	GROUP BY BF_SSN
		,LN_SEQ
	) G
	ON A.PART_SSN = G.BF_SSN
	AND A.LN_SEQ = G.LN_SEQ
LEFT OUTER JOIN ( /*GUARANTEE FEE DATA*/
	SELECT BF_SSN 
		,LN_SEQ 
		,SUM(LA_FAT_CUR_PRI) AS GFE_AMT
	FROM LN90
	WHERE CAT = 'GFE'
	GROUP BY BF_SSN 
		,LN_SEQ 
	) H 
	ON A.PART_SSN = H.BF_SSN
	AND A.LN_SEQ = H.LN_SEQ
;
QUIT;

DATA ALL_FIN;
	SET ALL_FIN;	
	VARI = 'X';
	TOT_PI_PAY =  COALESCE(BPY_PRN,0) + COALESCE(BPY_INT,0);
	TOT_PI_SRC_PAY = TOT_PI_PAY + COALESCE(SRC_AMT,0) + COALESCE(OFE_AMT,0) + COALESCE(GFE_AMT,0);

	IF BPY_EFF_DT = SRC_EFF_DT THEN
		EFF_DT_PI_SRC = SRC_EFF_DT;
	ELSE IF BPY_EFF_DT > SRC_EFF_DT THEN
		EFF_DT_PI_SRC = BPY_EFF_DT;
	ELSE IF BPY_EFF_DT < SRC_EFF_DT THEN
		EFF_DT_PI_SRC = SRC_EFF_DT;

	IF BPY_APL_DT = SRC_APL_DT THEN
		APL_DT_PI_SRC = SRC_EFF_DT;
	ELSE IF BPY_APL_DT > SRC_APL_DT THEN
		APL_DT_PI_SRC = BPY_EFF_DT;
	ELSE IF BPY_APL_DT < SRC_APL_DT THEN
		APL_DT_PI_SRC = SRC_EFF_DT;

	IF MAX_COUNT > 1 THEN 
		MFTI = 'Y';
	ELSE 
		MFTI = ' ';
RUN;
PROC SORT DATA=COMP NODUPKEY;
	BY PART_SSN LN_SEQ;
RUN;
PROC SORT DATA=ALL_FIN NODUPKEY;
	BY PART_SSN LN_SEQ;
RUN;
DATA COMP;
	MERGE COMP(IN=A) ALL_FIN (IN=B);
	BY PART_SSN LN_SEQ;
	IF A;
	IF INDEX(AF_LDR_BND_ISS,'UBS') > 0 THEN
		IS_UBS_BOND = 1;
	ELSE 
		IS_UBS_BOND = 0;
RUN;

%MACRO PART_REC_LN_SALE_REP(CRIT,RNO);

DATA PRTLSR;
	SET COMP;
	WHERE &CRIT;
RUN; 

PROC SORT DATA=PRTLSR;
	BY PART_SSN;
RUN;

DATA _NULL_;
SET PRTLSR;
FILE REPORT&RNO DELIMITER=',' DSD DROPOVER LRECL=32767;
IF _N_ = 1 THEN DO;
	PUT
		"PART SSN"
		','
		"PART CLUID"
		','
		"PART LAST NAME"
		','
		"PART FIRST NAME"
		','
		"PART FIRST DISBURSEMENT DATE"
		','
		"PART LOAN TYPE"
		','
		"PART ORIGINAL LID"
		','
		"PART CURRENT OWNER"
		','
		"PART ORIGINATION FEE"
		','
		"PART PRINCIPAL BALANCE"
		','
		"PART INTEREST BALANCE"
		','
		"PART FUNDING AMOUNT"
		','
		"LF LON CUR OWN"
		','
		"LN SEQ"
		','
		"LA CUR PRI"
		','
		"CUR_INT"
		','
		"PRINCIPAL DIFFERENCE"
		','
		"INTEREST DIFFERENCE"
		','
		"LS BOND ID"
		','
		"LO BOND ID"
		','
		"SCHOOLD ID"
		','
		"ELM INDICATOR"
		','
		"DISBURSEMENT DATE"
		','
		"DISBURSEMENT AMOUNT"
		','
		"SCHOOL REFUND / CANCELLATION"
		','
		"ORIGINATION FEES"
		','
		"GUARANTEE FEES"
		','
		"BORROWER PRINCIPAL PAYMENT"
		','
		"BORROWER INTEREST PAYMENT"
		','
		"OTHER ADJUSTMENTS"
		','
		"TOTAL PRINCIPAL INTEREST PAYMENTS"
		','
		"TOTAL PRINCIPAL INTERST SCHOOL REFUNDS CANCELLATIONS"
		','
		"EFFECTIVE DATE"
		','
		"APPLIED DATE"
		','
		"MULTIPLE FINANCIAL TRANSACTION INDICATOR"
		;
END;
   FORMAT PART_SSN $9. ;
   FORMAT PART_CLUID $19. ;
   FORMAT PART_LAST_NAME $35. ;
   FORMAT PART_FIRST_NAME $20. ;
   FORMAT PFDD $8. ;
   FORMAT PART_LOAN_TYPE $2. ;
   FORMAT PART_ORIGINAL_LID $8. ;
   FORMAT PART_CURRENT_OWNER $8. ;
   FORMAT PART_ORIGINATION_FEE BEST12. ;
   FORMAT PART_PRINCIPAL_BALANCE BEST12. ;
   FORMAT PART_INTEREST_BALANCE BEST12. ;
   FORMAT PART_FUNDING_AMOUNT BEST12. ;
   FORMAT LN_SEQ 6. ;
   FORMAT LF_LON_CUR_OWN $8. ;
   FORMAT LA_CUR_PRI 10.2 ;
   FORMAT CUR_INT BEST12. ;
   FORMAT PDIF BEST12. ;
   FORMAT IDIF BEST12. ;
   FORMAT PART_1ST_DISB_DATE MMDDYY10. ;
   FORMAT DSB_EFF_DT MMDDYY10. ;
   FORMAT DSB_APL_DT MMDDYY10. ;
   FORMAT DSB_AMT BEST12. ;
   FORMAT SRC_EFF_DT MMDDYY10. ;
   FORMAT SRC_APL_DT MMDDYY10. ;
   FORMAT SRC_AMT BEST12. ;
   FORMAT OFE_AMT BEST12. ;
   FORMAT GFE_AMT BEST12. ;
   FORMAT BPY_EFF_DT MMDDYY10. ;
   FORMAT BPY_APL_DT MMDDYY10. ;
   FORMAT BPY_PRN BEST12. ;
   FORMAT BPY_INT BEST12. ;
   FORMAT OTH_EFF_DT MMDDYY10. ;
   FORMAT OTH_APL_DT MMDDYY10. ;
   FORMAT OTH_AMT BEST12. ;
   FORMAT MAX_COUNT BEST12. ;
   FORMAT TOT_PI_PAY BEST12. ;
   FORMAT TOT_PI_SRC_PAY BEST12. ;
   FORMAT EFF_DT_PI_SRC MMDDYY10. ;
   FORMAT APL_DT_PI_SRC MMDDYY10. ;
   FORMAT MFTI $1. ;
   FORMAT IF_BND_ISS $8. ;
   FORMAT AF_LDR_BND_ISS $8. ;
   FORMAT LF_DOE_SCL_ORG $8. ;
   FORMAT ELM_IND $1. ;
DO;
	PUT PART_SSN $ @;
	PUT PART_CLUID $ @;
	PUT PART_LAST_NAME $ @;
	PUT PART_FIRST_NAME $ @;
	PUT PART_1ST_DISB_DATE @;
	PUT PART_LOAN_TYPE $ @;
	PUT PART_ORIGINAL_LID $ @;
	PUT PART_CURRENT_OWNER $ @;
	PUT PART_ORIGINATION_FEE @;
	PUT PART_PRINCIPAL_BALANCE @;
	PUT PART_INTEREST_BALANCE @;
	PUT PART_FUNDING_AMOUNT @;
	PUT LF_LON_CUR_OWN $ @;
	PUT LN_SEQ @;
	PUT LA_CUR_PRI @;
	PUT CUR_INT @;
	PUT PDIF @;
	PUT IDIF @;
	PUT IF_BND_ISS $ @;
	PUT AF_LDR_BND_ISS $ @;
	PUT LF_DOE_SCL_ORG $ @;
	PUT ELM_IND $ @;
	PUT DSB_EFF_DT @;
	PUT DSB_AMT @;
	PUT SRC_AMT @;
	PUT OFE_AMT @;
	PUT GFE_AMT @;
	PUT BPY_PRN @;
	PUT BPY_INT @;
	PUT OTH_AMT @;
	PUT TOT_PI_PAY @;
	PUT TOT_PI_SRC_PAY @;
	PUT EFF_DT_PI_SRC @;
	PUT APL_DT_PI_SRC @;
	PUT MFTI $ ;
END;
RUN;
%MEND PART_REC_LN_SALE_REP;
%PART_REC_LN_SALE_REP(%STR(LF_LON_CUR_OWN IN ('828476','834493')),2);
%PART_REC_LN_SALE_REP(%STR(LF_LON_CUR_OWN EQ '828476' AND COALESCE(PART_FUNDING_AMOUNT,0) GT 0),3);
%PART_REC_LN_SALE_REP(LF_LON_CUR_OWN EQ '834493',4);
%PART_REC_LN_SALE_REP(LF_LON_CUR_OWN EQ '828476' AND VARI = 'X',5);
%PART_REC_LN_SALE_REP(LF_LON_CUR_OWN EQ '834493' AND VARI = 'X',6);
%PART_REC_LN_SALE_REP(%STR(LF_LON_CUR_OWN IN ('828476','834493') AND CLUSEQ_CT > 1),7);
%PART_REC_LN_SALE_REP(%STR(LF_LON_CUR_OWN IN ('828476','834493') AND IS_UBS_BOND = 1),8);
