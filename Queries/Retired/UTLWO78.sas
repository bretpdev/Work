/*UTLWO78 - Web Refund Notifications Within the Past 7 Days*/
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET RPTLIB = %SYSGET(reportdir);
/*%LET RPTLIB = T:\SAS;*/
FILENAME REPORTZ "&RPTLIB/ULWO78.LWO78RZ";
FILENAME REPORT2 "&RPTLIB/ULWO78.LWO78R2";
/*LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;*/
/*RSUBMIT;*/
%macro sqlcheck ;
  %if  &sqlxrc ne 0  %then  %do  ;
    data _null_  ;
            file reportz notitles  ;
            put @01 " ********************************************************************* "
              / @01 " ****  The SQL code above has experienced an error.               **** "
              / @01 " ****  The SAS should be reviewed.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  The SQL error code is  &sqlxrc  and the SQL error message  **** "
              / @01 " ****  &sqlxmsg   **** "
              / @01 " ********************************************************************* "
            ;
         run  ;
  %end  ;
%mend  ;
DATA LOAN_TYPES;
	INFILE '/sas/whse/progrevw/GENR_REF_LoanTypes.txt' DLM=',' DSD MISSOVER;
	FORMAT LOAN_PROGRAM $6. LOAN_TYPE $10.;
	INPUT LOAN_PROGRAM $ LOAN_TYPE $;
RUN;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE PRIMARY_TRANSACTIONS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT
	PD10.DF_SPE_ACC_ID		AS ACCOUNT,
	LN10.LF_LON_ALT || '0' || CHAR(LN10.LN_LON_ALT_SEQ) AS CLUID,
	LN10.LF_DOE_SCL_ORG		AS SCHOOL,
	LN90.LD_FAT_APL			AS APPLIED_DATE,
	ABS(COALESCE(LN90.LA_FAT_CUR_PRI, 0)) AS PRIMARY_AMOUNT,
	LN10.IF_TIR_PCE			AS PRICE_TIER,
	LN10.BF_SSN,
	LN10.LN_SEQ,
	LN10.IC_LON_PGM,
	LN90.LN_FAT_SEQ			AS SEQ1040,
	LN90.LD_FAT_EFF,
	LN15.LD_DSB				AS DISBDATE,
	LN90.PC_FAT_TYP,
	LN90.PC_FAT_SUB_TYP
FROM	OLWHRM1.PD10_PRS_NME PD10
	INNER JOIN OLWHRM1.LN10_LON LN10
		ON PD10.DF_PRS_ID = LN10.BF_SSN
	INNER JOIN OLWHRM1.LN90_FIN_ATY LN90
		ON LN10.BF_SSN = LN90.BF_SSN
		AND LN10.LN_SEQ = LN90.LN_SEQ
	INNER JOIN OLWHRM1.RM30_BR_RMT RM30
		ON LN90.BF_SSN = RM30.BF_SSN
		AND LN90.PC_FAT_TYP = RM30.PC_FAT_TYP
		AND LN90.PC_FAT_SUB_TYP = RM30.PC_FAT_SUB_TYP
	INNER JOIN OLWHRM1.LN93_DSB_FIN_TRX LN93
		ON LN90.BF_SSN = LN93.BF_SSN
		AND LN90.LN_SEQ = LN93.LN_SEQ
		AND LN90.LN_FAT_SEQ = LN93.LN_FAT_SEQ
	INNER JOIN OLWHRM1.LN15_DSB LN15
		ON LN93.BF_SSN = LN15.BF_SSN
		AND LN93.LN_BR_DSB_SEQ = LN15.LN_BR_DSB_SEQ
WHERE	LN90.PC_FAT_TYP = '10'
	AND LN90.PC_FAT_SUB_TYP IN ('40', '45')
	AND (LN90.LC_STA_LON90 = 'A' AND (LN90.LC_FAT_REV_REA IS NULL OR LN90.LC_FAT_REV_REA = ''))
	AND LN90.LI_FAT_RAP <> 'Y'
	AND LN90.LD_FAT_APL > '07/14/2009'
	AND RM30.LC_RMT_PAY_SRC = '61'
FOR READ ONLY WITH UR
) PT
WHERE PT.IC_LON_PGM IN (
	SELECT LOAN_PROGRAM
	FROM LOAN_TYPES
	WHERE LOAN_TYPE = 'FFEL'
);

CREATE TABLE FOURTEEN_TRANSACTIONS AS
SELECT A.*
FROM CONNECTION TO DB2 (
SELECT DISTINCT
	LN10.BF_SSN,
	LN10.LN_SEQ,
	LN90.LN_FAT_SEQ			AS SEQ1401,
	LN90.LD_FAT_EFF,
	ABS(COALESCE(LN90.LA_FAT_CUR_PRI, 0)) AS ADDITIONAL_AMOUNT
FROM	OLWHRM1.LN10_LON LN10
	INNER JOIN OLWHRM1.LN90_FIN_ATY LN90
		ON LN10.BF_SSN = LN90.BF_SSN
		AND LN10.LN_SEQ = LN90.LN_SEQ
WHERE	LN90.PC_FAT_TYP = '14'
	AND LN90.PC_FAT_SUB_TYP = '01'
) A
INNER JOIN PRIMARY_TRANSACTIONS B
	ON A.BF_SSN = B.BF_SSN
	AND A.LD_FAT_EFF = B.LD_FAT_EFF
;

CREATE TABLE SIXTEEN_TRANSACTIONS AS
SELECT A.*
FROM CONNECTION TO DB2 (
SELECT DISTINCT
	LN10.BF_SSN,
	LN10.LN_SEQ,
	LN90.LN_FAT_SEQ			AS SEQ1601,
	LN90.LD_FAT_EFF,
	ABS(COALESCE(LN90.LA_FAT_CUR_PRI, 0)) AS ADDITIONAL_AMOUNT
FROM	OLWHRM1.LN10_LON LN10
	INNER JOIN OLWHRM1.LN90_FIN_ATY LN90
		ON LN10.BF_SSN = LN90.BF_SSN
		AND LN10.LN_SEQ = LN90.LN_SEQ
WHERE	LN90.PC_FAT_TYP = '16'
	AND LN90.PC_FAT_SUB_TYP = '01'
) A
INNER JOIN PRIMARY_TRANSACTIONS B
	ON A.BF_SSN = B.BF_SSN
	AND A.LD_FAT_EFF = B.LD_FAT_EFF
;

CREATE TABLE WBRFD_COMMENTS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT AY01.DF_PRS_ID
	,DECIMAL(SUBSTR(AY01.BX_CMT, LOCATE('$', AY01.BX_CMT) + 1, LOCATE(' ', AY01.BX_CMT, LOCATE('$', AY01.BX_CMT) + 1) - (LOCATE('$', AY01.BX_CMT) + 1)), 8, 2) AS AMOUNT
	,SUBSTR(AY01.BX_CMT, LOCATE('CL ID = ', AY01.BX_CMT) + 8, LOCATE(' ', AY01.BX_CMT, LOCATE('CL ID = ', AY01.BX_CMT) + 8) - (LOCATE('CL ID = ', AY01.BX_CMT) + 8)) AS CLUID
FROM OLWHRM1.AY01_BR_ATY AY01
WHERE AY01.PF_ACT = 'WBRFD'
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
PROC SQL;
CREATE TABLE QUERY AS
SELECT DISTINCT
	PT.BF_SSN
	,PT.ACCOUNT
	,PT.CLUID
	,PT.SCHOOL
	,PT.APPLIED_DATE
	,ROUND(PT.PRIMARY_AMOUNT + FT.ADDITIONAL_AMOUNT + ST.ADDITIONAL_AMOUNT,.01) AS REFUND_AMOUNT
	,PT.PRICE_TIER
	,PT.DISBDATE
	,PT.PC_FAT_TYP
	,PT.PC_FAT_SUB_TYP
	,PT.LN_SEQ
FROM PRIMARY_TRANSACTIONS PT
LEFT OUTER JOIN FOURTEEN_TRANSACTIONS FT
	ON PT.BF_SSN = FT.BF_SSN
	AND PT.LN_SEQ = FT.LN_SEQ
LEFT OUTER JOIN SIXTEEN_TRANSACTIONS ST
	ON PT.BF_SSN = ST.BF_SSN
	AND PT.LN_SEQ = ST.LN_SEQ
WHERE /*Only accept 1401/1601 transactions that immediately follow the 1040/1045 transaction.*/
	( 
		(FT.SEQ1401 - PT.SEQ1040 = 1 AND ST.SEQ1601 - FT.SEQ1401 = 1) OR 
		(ST.SEQ1601 - PT.SEQ1040 = 1 AND FT.SEQ1401 - ST.SEQ1601 = 1)
	)
AND PT.BF_SSN NOT IN (
	SELECT WC.DF_PRS_ID
	FROM WBRFD_COMMENTS WC
	WHERE ROUND(WC.AMOUNT,.01) = ROUND(COALESCE(PT.PRIMARY_AMOUNT,0) + 
		COALESCE(FT.ADDITIONAL_AMOUNT,0) + 
		COALESCE(ST.ADDITIONAL_AMOUNT,0),.01)
	AND WC.CLUID = PT.CLUID
	)
;
QUIT;
%put  sqlxrc= >>> &sqlxrc <<< ||| sqlxmsg= >>> &sqlxmsg >>> ;  ** includes error messages to SAS log  ;
%sqlcheck;
quit;
/*ENDRSUBMIT;*/
/*DATA QUERY; SET WORKLOCL.QUERY; RUN;*/
DATA QUERY; SET QUERY;
TRANSACTION_TYPE = PC_FAT_TYP || PC_FAT_SUB_TYP;
RUN;

PROC SORT DATA=QUERY;
BY SCHOOL ACCOUNT CLUID;
RUN;

DATA _NULL_;
SET QUERY;
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT ACCOUNT $10. CLUID $19. SCHOOL $8. APPLIED_DATE DISBDATE MMDDYY10. REFUND_AMOUNT 10.2;
IF _N_ = 1 THEN DO;
	PUT
		'AccountNumber'
		',CLUID'
		',SchoolID'
		',AppliedDate'
		',RefundAmount'
		',DisbursementDate'
		',TransactionType'
		',LoanSequence'
	;
END;
DO;
	PUT ACCOUNT $ @;
	PUT CLUID $ @;
	PUT SCHOOL $ @;
	PUT APPLIED_DATE @;
	PUT REFUND_AMOUNT @;
	PUT DISBDATE @;
	PUT TRANSACTION_TYPE @ ;
	PUT LN_SEQ ;
END;
RUN;
