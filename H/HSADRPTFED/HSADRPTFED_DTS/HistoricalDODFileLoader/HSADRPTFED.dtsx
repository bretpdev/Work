<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/20/2017 11:41:56 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LPP-2968"
  DTS:CreatorName="UHEAA\jnolasco"
  DTS:DTSID="{84C862B6-73C2-4ED3-B17B-C2DF1EC3179E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:ISOLevel="256"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="1033"
  DTS:ObjectName="HSADRPTFED"
  DTS:PackageType="5"
  DTS:VersionBuild="480"
  DTS:VersionGUID="{60830EF3-C197-422B-92CF-8CD5BE136A4B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CDW]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{E1B7686F-9EDE-4852-B344-268590B5E406}"
      DTS:ObjectName="CDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=UHEAASQLDB;Initial Catalog=CDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CLS]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{B1AE0E49-89A9-42B2-917E-D3623322FFC1}"
      DTS:ObjectName="CLS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=UHEAASQLDB;Initial Catalog=CLS;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[File Connection Manager (SCRA Archive)]"
      DTS:CreationName="FILE"
      DTS:DTSID="{461734FF-AF70-47BF-9516-88C7A4B765BF}"
      DTS:ObjectName="File Connection Manager (SCRA Archive)">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="Z:\Batch\FTP\SCRA\Historical Active Duty\Archive" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager (ForEach Loop)]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{90FA1C09-20DA-4C03-8812-9FA6CA05030B}"
      DTS:ObjectName="Flat File Connection Manager (ForEach Loop)">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="9"
              DTS:DataType="131"
              DTS:DataPrecision="18"
              DTS:ObjectName="SSN"
              DTS:DTSID="{3FEC7E6B-8C37-4A24-878F-0F6D2D1D4E60}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="DateOfBirth"
              DTS:DTSID="{EA2BFEFC-BE4D-4CFE-823A-315ACB89AC21}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="26"
              DTS:MaximumWidth="26"
              DTS:DataType="129"
              DTS:ObjectName="LastName"
              DTS:DTSID="{CB8AE492-1F9E-46C6-AEB2-B67F873189DA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="20"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:ObjectName="FirstName"
              DTS:DTSID="{894EFD7E-D26F-47BC-A11A-B56B91346843}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="28"
              DTS:MaximumWidth="28"
              DTS:DataType="129"
              DTS:ObjectName="CustomerRecordID"
              DTS:DTSID="{D15A579A-2358-4AB3-99B9-FC188AEF9B87}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyStatusDate"
              DTS:DTSID="{F7A2EEBC-FA91-485B-AF6E-BE4015620F3E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="Blank"
              DTS:DTSID="{40B54F3C-B289-48B3-9196-AE0EF1E207AF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyOnActiveDutyStatusDt"
              DTS:DTSID="{128BB3CE-4646-4C05-98CB-223F8547A3A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="LeftActiveDutyLE367DaysFromActiveDutyStatusDt"
              DTS:DTSID="{6BA63959-0A2F-45E3-ACA0-171C1D7C3874}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt"
              DTS:DTSID="{BFE809C8-17CB-4981-9715-32E0152DB187}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyEndDate"
              DTS:DTSID="{C2610907-54F6-4F75-BA4E-8B82BD3BD7D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="MatchResultCode"
              DTS:DTSID="{97A61C60-1578-48AD-B991-D9A84CFF424D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="Error"
              DTS:DTSID="{C138E9A0-A898-4882-9149-4974C533BA3E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="DateOfMatch"
              DTS:DTSID="{670BA112-A3AF-4333-968C-CFF269C2D01A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyBeginDate"
              DTS:DTSID="{25C03076-4070-4ABC-84DE-CFC7D41F63D4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="EIDBeginDate"
              DTS:DTSID="{F3F7F463-1A8C-4722-9AA8-438451892454}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="EIDEndDate"
              DTS:DTSID="{289D5045-0E9D-4135-BF46-EE2066922274}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="2"
              DTS:MaximumWidth="2"
              DTS:DataType="129"
              DTS:ObjectName="ServiceComponent"
              DTS:DTSID="{F0331A8F-3D56-483C-A597-93C7378E1C09}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="2"
              DTS:MaximumWidth="2"
              DTS:DataType="129"
              DTS:ObjectName="EIDServiceComponent"
              DTS:DTSID="{6BD23A6E-4FFF-49B0-B9CD-D8A07C84845B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="20"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:ObjectName="MiddleName"
              DTS:DTSID="{1A4D0CEB-A09D-4FD1-8985-365F9054C01E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="15"
              DTS:MaximumWidth="15"
              DTS:DataType="129"
              DTS:ObjectName="CertificateID"
              DTS:DTSID="{E0A266E9-FDD2-4817-A84C-E4915412C117}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 21"
              DTS:DTSID="{3F283A44-9E26-44BC-B6C2-1B38191E40DE}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4ABB7A9C-FAAA-4EAD-836F-98648F9F32EA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5964B8AF-83EF-48D0-9D75-A18F6A5A490F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="folderName">
      <DTS:VariableValue
        DTS:DataType="8">T:\SAS\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A10DBCC3-76F9-4D9D-85EF-63297CF649E0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="isFileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42246D40-23EA-4D6D-A4E9-685F4437BF28}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="processComplete">
      <DTS:VariableValue
        DTS:DataType="8">HSADRPTFED Load Process Complete!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{71A4D8F7-26D4-4A52-8828-822CDB191BD0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="textFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49751CC4-2AD3-4267-BBEB-81BCB9AD044E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="textFileNotExist">
      <DTS:VariableValue
        DTS:DataType="8">HSADRPTFED text file SCRA_*_*_UTNWS81* does not exist.</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{87fb3769-c94c-4985-b6a3-8532dc6bf8e6}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container - validate all R files and populate ScraHistorical tables">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{0e12d7f0-44e5-42d8-aa08-bb670c3381af}"
        DTS:ObjectName="{438FC8F7-5FF5-4968-8EEF-993AC7B07BF4}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="Z:\Batch\FTP\SCRA\Historical Active Duty" />
            <FEFEProperty
              FileSpec="SCRA_*_*_UTNWS81*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{01e0624c-b541-4c89-b281-99f9bff6fed7}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - flat-file processing"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column - get file name"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Inputs[Derived Column Input].Columns[SSN]"
                          cachedDataType="numeric"
                          cachedName="SSN"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[SSN]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output].Columns[SourceFile_GOOD]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="54"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output].Columns[SourceFile_GOOD]"
                          name="SourceFile_GOOD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CurrentFile]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CurrentFile]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output].Columns[SSN_txt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output].Columns[SSN_txt]"
                          name="SSN_txt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RIGHT]([REPLICATE]("0",9) + (DT_WSTR,9)#{Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[SSN]},9)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RIGHT(REPLICATE("0",9) + (DT_WSTR,9)SSN,9)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column -get file name and line data"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Inputs[Derived Column Input].Columns[Flat File Source Error Output Column]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Inputs[Derived Column Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Inputs[Derived Column Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[SourceFile]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="54"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[SourceFile]"
                          name="SourceFile"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CurrentFile]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CurrentFile]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[DateRun]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[DateRun]"
                          name="DateRun"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[LineData]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[LineData]"
                          name="LineData"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[Flat File Source Error Output Column]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[ErrorCode]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ErrorCode</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[ErrorColumn]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ErrorColumn</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source - read R file based on iteration"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager (ForEach Loop)]"
                      connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager (ForEach Loop)]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[SSN]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[SSN]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[SSN]"
                          name="SSN"
                          precision="18"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[DateOfBirth]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfBirth]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[DateOfBirth]"
                          name="DateOfBirth"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                          length="26"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                          length="20"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[CustomerRecordID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[CustomerRecordID]"
                          length="28"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[CustomerRecordID]"
                          name="CustomerRecordID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyStatusDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyStatusDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyStatusDate]"
                          name="ActiveDutyStatusDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[Blank]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[Blank]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[Blank]"
                          name="Blank"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyEndDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyEndDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyEndDate]"
                          name="ActiveDutyEndDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[MatchResultCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[MatchResultCode]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[MatchResultCode]"
                          name="MatchResultCode"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[Error]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[Error]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[Error]"
                          name="Error"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[DateOfMatch]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfMatch]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[DateOfMatch]"
                          name="DateOfMatch"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyBeginDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyBeginDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyBeginDate]"
                          name="ActiveDutyBeginDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDBeginDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[EIDBeginDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDBeginDate]"
                          name="EIDBeginDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDEndDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[EIDEndDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDEndDate]"
                          name="EIDEndDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ServiceComponent]"
                          length="2"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ServiceComponent]"
                          name="ServiceComponent"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[EIDServiceComponent]"
                          length="2"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDServiceComponent]"
                          name="EIDServiceComponent"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[MiddleName]"
                          length="20"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[MiddleName]"
                          name="MiddleName"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[CertificateID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[CertificateID]"
                          length="15"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[CertificateID]"
                          name="CertificateID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyOnActiveDutyStatusDt]"
                          name="ActiveDutyOnActiveDutyStatusDt"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          name="LeftActiveDutyLE367DaysFromActiveDutyStatusDt"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          name="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[SSN]"
                          dataType="numeric"
                          name="SSN"
                          precision="18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfBirth]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="DateOfBirth" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="26"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[CustomerRecordID]"
                          codePage="1252"
                          dataType="str"
                          length="28"
                          name="CustomerRecordID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyStatusDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="ActiveDutyStatusDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[Blank]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Blank" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyEndDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="ActiveDutyEndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[MatchResultCode]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="MatchResultCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Error" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfMatch]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="DateOfMatch" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyBeginDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="ActiveDutyBeginDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[EIDBeginDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="EIDBeginDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[EIDEndDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="EIDEndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="ServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[EIDServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="EIDServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[CertificateID]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="CertificateID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[Column 21]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 21" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="ActiveDutyOnActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="LeftActiveDutyLE367DaysFromActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - populate _DODReturnFile table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[HSADRPTFED].[ScraHistoricalFiles_CR_4757]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CLS]"
                      connectionManagerRefId="Package.ConnectionManagers[CLS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[CustomerRecordID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="28"
                          cachedName="CustomerRecordID"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CustomerRecordID]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[CustomerRecordID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyStatusDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="ActiveDutyStatusDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyStatusDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyStatusDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[Blank]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Blank"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Blank]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[Blank]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyEndDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="ActiveDutyEndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyEndDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyEndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[MatchResultCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="MatchResultCode"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MatchResultCode]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[MatchResultCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[Error]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Error"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[Error]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[DateOfMatch]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="DateOfMatch"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfMatch]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[DateOfMatch]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyBeginDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="ActiveDutyBeginDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyBeginDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyBeginDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[EIDBeginDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="EIDBeginDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDBeginDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDBeginDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[EIDEndDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="EIDEndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDEndDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDEndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ServiceComponent]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="ServiceComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ServiceComponent]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ServiceComponent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[EIDServiceComponent]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="EIDServiceComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDServiceComponent]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[EIDServiceComponent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="MiddleName"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[CertificateID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="CertificateID"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CertificateID]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[CertificateID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[SourceFile_GOOD]"
                          cachedDataType="wstr"
                          cachedName="SourceFile_GOOD"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output].Columns[SourceFile_GOOD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="26"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[DateOfBirth]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="DateOfBirth"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfBirth]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[DateOfBirth]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyOnActiveDutyStatusDt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="ActiveDutyOnActiveDutyStatusDt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[ActiveDutyOnActiveDutyStatusDt]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="LeftActiveDutyLE367DaysFromActiveDutyStatusDt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[SSN_txt]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="SSN_txt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SSN]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output].Columns[SSN_txt]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SSN]"
                          codePage="1252"
                          dataType="str"
                          length="9"
                          name="SSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfBirth]"
                          dataType="numeric"
                          name="DateOfBirth"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="26"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CustomerRecordID]"
                          codePage="1252"
                          dataType="str"
                          length="28"
                          name="CustomerRecordID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyStatusDate]"
                          dataType="numeric"
                          name="ActiveDutyStatusDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Blank]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Blank" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyEndDate]"
                          dataType="numeric"
                          name="ActiveDutyEndDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MatchResultCode]"
                          dataType="numeric"
                          name="MatchResultCode"
                          precision="1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                          dataType="numeric"
                          name="Error"
                          precision="1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfMatch]"
                          dataType="numeric"
                          name="DateOfMatch"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyBeginDate]"
                          dataType="numeric"
                          name="ActiveDutyBeginDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDBeginDate]"
                          dataType="numeric"
                          name="EIDBeginDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDEndDate]"
                          dataType="numeric"
                          name="EIDEndDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="ServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="EIDServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CertificateID]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="CertificateID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="SourceFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DODReturnFileId]"
                          dataType="i4"
                          name="DODReturnFileId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="ActiveDutyOnActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="LeftActiveDutyLE367DaysFromActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - populate _DODReturnFileErrors table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[HSADRPTFED].[ScraHistoricalFilesErrors_CR_4757]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CLS]"
                      connectionManagerRefId="Package.ConnectionManagers[CLS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Outputs[Output 0].Columns[ErrorDescription]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[SourceFile]"
                          cachedDataType="wstr"
                          cachedName="SourceFile"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[SourceFile]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[DateRun]"
                          cachedDataType="dbTimeStamp"
                          cachedName="DateRun"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[DateRun]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[DateRun]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[LineData]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="LineData"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[LineData]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[LineData]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[DODReturnFileErrorsId]"
                          dataType="i4"
                          name="DODReturnFileErrorsId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          codePage="1252"
                          dataType="str"
                          length="54"
                          name="SourceFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[LineData]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="LineData" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ErrorDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[DateRun]"
                          dataType="dbTimeStamp"
                          name="DateRun" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component - get error description"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_3703d93bba0e42beb7e26292275a2412.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{51c4a7b1-bae9-4c78-bce9-5cf6f7bba4ac}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_3703d93bba0e42beb7e26292275a2412</RootNamespace>
    <AssemblyName>SC_3703d93bba0e42beb7e26292275a2412</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_3703d93bba0e42beb7e26292275a2412" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3703d93bba0e42beb7e26292275a2412.Properties.Settings.get_Default():SC_3703d93bba0e42beb7e26292275a2412.Properties.Sett" +
    "ings")]

namespace SC_3703d93bba0e42beb7e26292275a2412.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_3703d93bba0e42beb7e26292275a2412</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_3703d93bba0e42beb7e26292275a2412</msb:DisplayName>
		<msb:ProjectId>{C2DC6463-40CD-4E7E-8678-978DB9269D45}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_3703d93bba0e42beb7e26292275a2412.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3703d93bba0e42beb7e26292275a2412")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_3703d93bba0e42beb7e26292275a2412")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3703d93bba0e42beb7e26292275a2412.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3703d93bba0e42beb7e26292275a2412.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3703d93bba0e42beb7e26292275a2412.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3703d93bba0e42beb7e26292275a2412.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3703d93bba0e42beb7e26292275a2412.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_3703d93bba0e42beb7e26292275a2412.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANcV4loAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAdjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
MgAAAAAAAEgAAAACAAUAtCEAALgPAAABAAAAAAAAAGwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvBgAABm8TAAAK
bwgAAAYqHgIoDAAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKiYC
FwMoGQAACipaAywIAhcoGgAACipyAQAAcHMbAAAKeh4CKBwAAAoqHgIoHQAACip+AigeAAAKAgJz
EAAABn0BAAAEAgJzEQAABn0CAAAEKpIEcp4AAHAabx8AAAosFQIFAgMoIAAACg4EcwUAAAZvDgAA
BipKKwcCA28PAAAGA28KAAAGLfEqBio6AighAAAKAgN9AwAABCo6AighAAAKAgN9BAAABCoeAigh
AAAKKq5+BQAABC0ecq4AAHDQBwAAAigiAAAKbyMAAApzJAAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCUAAAoqLnMXAAAGgAcAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAjAUAACN+AAD4BQAA4AYAACNTdHJpbmdzAAAAANgMAAAgAQAAI1VTAPgN
AAAQAAAAI0dVSUQAAAAIDgAAsAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAABwAAABgAAAAPAAAAJQAAABAAAAADAAAABwAAAAgAAAABAAAABQAAAAEAAAAAADAD
AQAAAAAABgAqAhYFBgC+AhYFBgB2AQMFDwCKBQAABgCjAeIDBgANAuIDBgDuAeIDBgClAuIDBgBK
AuIDBgBjAuIDBgC6AeIDBgDVAfkCCgB+AsMACgCsBMMADgCdBMMACgBUBMMACgBQBsMABgATBpoD
BgBZAQMFBgC9BDYFBgBIBM0DEgApARoDEgCKARoDEgARAbgDBgA+ARYFFgABAM0EBgD0A5oDBgAT
A5oDBgA3BJoDBgDkAJoDBgCVAJoDBgDVBuIDAAAAAEcAAAAAAAEAAQABABAArQMAABAAAQABAAEA
EACQBAAAOQABAAUAAQAQADIGAABFAAEADAABABAABwYAAEkAAwAQAAEAEADIBQAASQAEABEAAAAQ
AD0FmQVJAAUAEgAAARAA9wWZBWEABwAWAAYABwZ/AAYAyAWDAAEAQAaHAAEAQAaHABEAoQOLABEA
AQGPABEAdwCTAFAgAAAAAMYA3AIGAAEAWCAAAAAAxgDnAgYAAQBgIAAAAADGALIGlwABAHkgAAAA
AIYY9gQGAAIAgSAAAAAAhhj2BCUAAgCMIAAAAACGCIcAnQAFAKEgAAAAAIYIWANHAAUAqiAAAAAA
hggOBBAABQC0IAAAAACGCG0DoQAGAMsgAAAAAIYAyQZHAAcA0yAAAAAAhgAaBkcABwDbIAAAAACG
GPYEBgAHAPsgAAAAAMYApQamAAcAICEAAAAAxgGeBpcACwAzIQAAAADGAbIGlwAMADUhAAAAAIYY
9gSwAA0ARCEAAAAAhhj2BLAADgBTIQAAAACDGPYEBgAPAFshAAAAAJMIuQS2AA8AhyEAAAAAkwjp
ALsADwCOIQAAAACTCPUAwAAPAJYhAAAAAJYIJgbGABAAnSEAAAAAhhj2BAYAEAClIQAAAACRGPwE
ywAQAAAAAQDNBgAAAQCyBAAAAgDSBQAAAwBiBAAAAQDzAgAAAQDzAgAAAQBQAAAAAgC5AAAAAwCy
BAAABABiBAAAAQCyBAAAAQDNBgAAAQBWBgAAAQBWBgAAAQDzAgkA9gQBABEA9gQGABkA9gQKACkA
9gQQADEA9gQQADkA9gQQAEEA9gQQAEkA9gQQAFEA9gQQAFkA9gQQAGEA9gQQAGkA9gQGAJkA9gQG
ALkA9gQVAMkA9gQGAIkA3AIGAIkA5wIGAIkAWAAbANEAIwQgAHEA9gQlAHEAsgQvAHEA0gUzAHkA
PgA3AHEAggM8AHEAkQNBAHEAiQMBANkA9gQQAHEAyQZHAHEAGgZHAIkA9gQGAOEAAAZLAIkA5gVS
AJEA9gQGAPEApwBYAPEA0QZfAKEA9gRlAMEA9gQGAC4ACwDqAC4AEwDzAC4AGwASAS4AIwAbAS4A
KwBEAS4AMwBEAS4AOwBEAS4AQwAbAS4ASwBKAS4AUwBEAS4AWwBhAUMAYwCrAakAcwASAckAcwAS
AeEAewCrAeMAawCrAQMAAQAHAAUACAAHAAAAiwDPAAAAXAPTAAAAJgTXAAAAcQPTAAAAvQTbAAAA
CQHgAAAAKgblAAIABgADAAIABwAFAAEACAAHAAEACQAJAAIAEwALAAIAFAANAAEAFQANAAIAFgAP
AASAAAABAAAAAAAAAAAAAAAAABoAAAAEAAAAAAAAAAAAAABtAG4AAAAAAAwAAAAAAAAAAAAAAHYA
YAYAAAAADAAAAAAAAAAAAAAAdgB9BgAAAAAEAAAAAAAAAAAAAABtAJoDAAAAAAwAAAAAAAAAAAAA
AHYAbAQAAAAAAAAAAAEAAABHBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAU0NfMzcw
M2Q5M2JiYTBlNDJiZWI3ZTI2MjkyMjc1YTI0MTIAR2V0SW50MzIAPE1vZHVsZT4ASW5wdXRJRABn
ZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNv
ZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzM3MDNkOTNiYmEw
ZTQyYmViN2UyNjI5MjI3NWEyNDEyLmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfRXJyb3JE
ZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2Ny
aXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9u
AEdldEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTQ18zNzAzZDkzYmJhMGU0MmJlYjdlMjYyOTIyNzVhMjQxMi5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMzcwM2Q5M2JiYTBlNDJiZWI3ZTI2
MjkyMjc1YTI0MTIuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRD
b2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dz
ZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRS
b3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADMANwAwADMAZAA5ADMAYgBiAGEAMABlADQAMgBi
AGUAYgA3AGUAMgA2ADIAOQAyADIANwA1AGEAMgA0ADEAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAiVlz5v0ROk2uFTNo+XU8vgAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWQQgABJpBCABDggJIAMBEj0dCBJBAwYSPQMGHQgEIAEICAQgAQIIBSACAQgcAyAAAgYg
AgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYS
GAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAAS
VQUAAQESVQQAABIgAwAAAQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMzcwM2Q5M2JiYTBlNDJi
ZWI3ZTI2MjkyMjc1YTI0MTIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjUEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMMgAAAAAAAAAAAABmMgAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAWDIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAzADcAMAAzAGQAOQAzAGIAYgBhADAAZQA0ADIAYgBlAGIANwBlADIANgAyADkAMgAy
ADcANQBhADIANAAxADIAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMANwAwADMAZAA5
ADMAYgBiAGEAMABlADQAMgBiAGUAYgA3AGUAMgA2ADIAOQAyADIANwA1AGEAMgA0ADEAMgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMwA3
ADAAMwBkADkAMwBiAGIAYQAwAGUANAAyAGIAZQBiADcAZQAyADYAMgA5ADIAMgA3ADUAYQAyADQA
MQAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADMANwAw
ADMAZAA5ADMAYgBiAGEAMABlADQAMgBiAGUAYgA3AGUAMgA2ADIAOQAyADIANwA1AGEAMgA0ADEA
MgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAeDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_3703d93bba0e42beb7e26292275a2412</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">4f80429439dfc6d468500b8cbec3d3ee</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">98c8549c6ff01eefb2f1f8d8ae92953d505eddeb</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Outputs[Output 0].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Outputs[Output 0].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Flat File Source Error Output]"
                  endId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Inputs[Input 0]"
                  name="Flat File Source Error Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Error Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Output 0]"
                  endId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\File System Task - move file to SCRA Archive folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{C8A6B3CB-8526-4339-8B59-E3DB0256AB6B}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="File System Task - move file to SCRA Archive folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="{90FA1C09-20DA-4C03-8812-9FA6CA05030B}"
              TaskDestinationPath="{461734FF-AF70-47BF-9516-88C7A4B765BF}" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{BCB22714-7BD7-444C-AC4F-22C54D8897F9}"
          DTS:From="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\File System Task - move file to SCRA Archive folder" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A8CFBBE8-4E41-44BC-AE13-7B34C6CE4044}"
          DTS:ObjectName="{A8CFBBE8-4E41-44BC-AE13-7B34C6CE4044}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Process Complete pop-up"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{6fca3657-43a4-49d9-a35c-06408acb5d84}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Process Complete pop-up"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_70f250c545ab4fe291b5e02bb1729fa4"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::processComplete">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_70f250c545ab4fe291b5e02bb1729fa4.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7910b01a-c7e0-485b-944e-f1862ce6e834}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_39f9a41eb7be4f278864029ad0cc8495</RootNamespace>
    <AssemblyName>ST_70f250c545ab4fe291b5e02bb1729fa4</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_39f9a41eb7be4f278864029ad0cc8495
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            if (Dts.Connections["CDW"].ConnectionString.ToUpper().Contains("OPSDEV"))
                MessageBox.Show(Dts.Variables["User::processComplete"].Value.ToString());//TEST
            else
                Console.WriteLine(Dts.Variables["User::processComplete"].Value.ToString());//LIVE
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_70f250c545ab4fe291b5e02bb1729fa4</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_70f250c545ab4fe291b5e02bb1729fa4</msb:DisplayName>
		<msb:ProjectId>{FC6A10C0-BE11-439E-A3A8-8AB006E23839}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_70f250c545ab4fe291b5e02bb1729fa4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Settings.get_Default():ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Sett" +
    "ings")]

namespace ST_39f9a41eb7be4f278864029ad0cc8495.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_39f9a41eb7be4f278864029ad0cc8495")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_39f9a41eb7be4f278864029ad0cc8495")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_39f9a41eb7be4f278864029ad0cc8495.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_70f250c545ab4fe291b5e02bb1729fa4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEwpiVwAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAAi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
LgAAAAAAAEgAAAACAAUAOCEAAMAMAAABAAAAAAAAAPgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgB2AAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyCQAAcG8VAAAKLCYCKBAAAApvFgAACnIXAABwbxcAAApvGAAACm8ZAAAKKBoAAAom
KgIoEAAACm8WAAAKchcAAHBvFwAACm8YAAAKbxkAAAooGwAACioeAigcAAAKKh4CKB0AAAoqrn4B
AAAELR5yQwAAcNADAAACKB4AAApvHwAACnMgAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoa
fgMAAAQqHgIoIQAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAAAUBAAAI34AAIAEAAD8BQAAI1N0cmluZ3MAAAAAfAoAALgAAAAjVVMANAsAABAAAAAjR1VJ
RAAAAEQLAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIwAAAAUAAAAG
AAAACQAAAAEAAAAhAAAAAgAAABAAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAADAAwEA
AAAAAAYAWwKqBAYA6gKqBAYApwGXBA8AHgUAAAYA1AE+BAYAPgI+BAYAHwI+BAYA0QI+BAYAewI+
BAYAlAI+BAYA6wE+BAYABgIYAwoArwJvAwoAJgFvAwYA+APxAwYAigGXBAYAvwXxAwYAYATKBAYA
UAQpBA4AWgGqAw4AuwGqAw4AQgEUBAYAbwGqBAoAmANvAxIAlQXHABIAcATHAAYASQPxAxIAYAXH
ABIAkgDHABYA5AVzBRYA0gVzBQYAvwDxAwYA8QDxAwYAmwDxAwYA8wU+BAAAAABJAAAAAAABAAEA
AQAQAAkEJQA5AAEAAQAAABAA0QQtBUUAAQADAAABEABqBS0FWQADAAcAAwEAALEFAAA9AAQACgAR
AP0DgQARABYBhQARAIIAiQAGBnEAjQBWgKEFkABWgPYAkABQIAAAAACGAA8EBgABANIgAAAAAIYY
igQGAAEA2iAAAAAAgxiKBAYAAQDiIAAAAACTCFwElAABAA4hAAAAAJMI/gCZAAEAFSEAAAAAkwgK
AZ4AAQAdIQAAAACWCMYFpAACACQhAAAAAIYYigQGAAIALCEAAAAAkRiQBKkAAgAAAAEAEgMJAIoE
AQARAIoEBgAZAIoECgApAIoEEAAxAIoEEAA5AIoEEABBAIoEEABJAIoEEABRAIoEEABZAIoEEABh
AIoEEABpAIoEBgCBAIoEBgCpAIoEFQC5AIoEBgBxAKkFGwDBAJEFIADJAOgDJQDRADIDKwDZAIIE
KwDZAIgFLwDBAFwFNADhAOgDOQDpAAgDPwCJAEcDKwDxAN8FQwABAecASQBxAIoEBgCJAIoEBgAJ
Aa0ATgAJAe8FVwCRAIoEXQCxAIoEBgAIABQAdwAIABgAfAApAHMA5AAuAAsAvAAuABMAxQAuABsA
5AAuACMA7QAuACsAFgEuADMAFgEuADsAFgEuAEMA7QAuAEsAHAEuAFMAFgEuAFsAMwFDAGMAfABJ
AHMA5ABhAHsAfABjAGsAfAADAAEABAADAAAAYAStAAAAHgGyAAAAygW3AAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAYxt2RgAAAAAAAAEAAAAEAAAAAAAAAAAAAABlAHkAAAAAAAwAAAAA
AAAAAAAAAG4AUAMAAAAABAAAAAAAAAAAAAAAZQDxAwAAAAAMAAAAAAAAAAAAAABuAFIAAAAAAAQA
AAAAAAAAAAAAAGUAcwUAAAAAAAAAAAEAAADbBAAABQACAAAAAAAAU1RfNzBmMjUwYzU0NWFiNGZl
MjkxYjVlMDJiYjE3MjlmYTQAU1RfMzlmOWE0MWViN2JlNGYyNzg4NjQwMjlhZDBjYzg0OTUAPE1v
ZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVm
YXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AENvbnNvbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AGdldF9Db25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF83MGYyNTBjNTQ1YWI0ZmUyOTFiNWUwMmJi
MTcyOWZhNC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFRvVXBw
ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMzlmOWE0MWViN2JlNGYyNzg4NjQwMjlhZDBj
Yzg0OTUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzM5
ZjlhNDFlYjdiZTRmMjc4ODY0MDI5YWQwY2M4NDk1LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBT
ZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBDb250YWlucwBnZXRfQ29ubmVjdGlvbnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3Vs
dABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAHQwBEAFcAAA1PAFAAUwBEAEUAVgAAK1UA
cwBlAHIAOgA6AHAAcgBvAGMAZQBzAHMAQwBvAG0AcABsAGUAdABlAABxUwBUAF8AMwA5AGYAOQBh
ADQAMQBlAGIANwBiAGUANABmADIANwA4ADgANgA0ADAAMgA5AGEAZAAwAGMAYwA4ADQAOQA1AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABBP506OIIiQq0oY5Yl
loVMAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgAA4EIAECDgQg
ABJxBSABEnUcAyAAHAUAARF9DgQAAQEOCAABEoCFEYCJBSAAEoCNByACAQ4SgI0It3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAAS
EAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUXzM5ZjlhNDFlYjdiZTRmMjc4ODY0MDI5YWQwY2M4NDk1AAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2C4A
AAAAAAAAAAAA8i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQuAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQB2RmMbAAABAHZGYxs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADMAOQBmADkAYQA0ADEAZQBiADcAYgBlADQAZgAyADcAOAA4ADYANAAwADIAOQBh
AGQAMABjAGMAOAA0ADkANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADAAMQAxAC4AMQA4ADAAMwA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADcAMABmADIANQAwAGMANQA0ADUAYQBiADQAZgBlADIAOQAxAGIANQBlADAAMgBiAGIA
MQA3ADIAOQBmAGEANAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANwAwAGYAMgA1ADAAYwA1ADQANQBhAGIANABmAGUAMgA5ADEAYgA1AGUA
MAAyAGIAYgAxADcAMgA5AGYAYQA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADMAOQBmADkAYQA0ADEAZQBiADcAYgBlADQAZgAyADcAOAA4ADYANAAwADIA
OQBhAGQAMABjAGMAOAA0ADkANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwAwADEAMQAuADEAOAAwADMAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADEAMQAuADEAOAAwADMAOAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container - main table inserts"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{449BB3BF-91F1-4B97-BDC5-E18875BD258E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:FailParentOnFailure="True"
      DTS:ISOLevel="256"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container - main table inserts">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ActiveDutyReporting"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{65691b88-dc46-4929-9726-530cd380a3b6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into ActiveDutyReporting"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B1AE0E49-89A9-42B2-917E-D3623322FFC1}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="INSERT INTO CLS.scra.ActiveDutyReporting(BorrSSN, EndrSSN, IsEndorser, TXCXBegin, TXCXEnd, TXCXType, ServiceComponent, TXCXUpdated, CreatedAt, CreatedBy, DeletedAt, DeletedBy, ErroredAt)&#xA;SELECT DISTINCT&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.EndrSSN,&#xA;&#x9;NEWDATA.IsEndorser,&#xA;&#x9;NEWDATA.TXCXBegin,&#xA;&#x9;NEWDATA.TXCXEnd,&#xA;&#x9;NEWDATA.TXCXType,&#xA;&#x9;NEWDATA.ServiceComponent,&#xA;&#x9;NEWDATA.TXCXUpdated,&#xA;&#x9;MIN(NEWDATA.StatusDate) AS CreatedAt,&#xA;&#x9;NEWDATA.CreatedBy,&#xA;&#x9;NEWDATA.DeletedAt,&#xA;&#x9;NEWDATA.DeletedBy,&#xA;&#x9;NEWDATA.ErroredAt&#x9;&#xA;FROM&#xA;(&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;DC.BorrSSN,&#xA;&#x9;&#x9;CASE WHEN DC.EndrActive IS NOT NULL THEN DC.EndrSSN ELSE NULL END AS EndrSSN,&#xA;&#x9;&#x9;CASE WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL THEN 1 ELSE 0 END AS IsEndorser,&#xA;&#x9;&#x9;CASE WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL THEN DC.ActiveBeginEndr ELSE DC.ActiveBeginBrwr END AS TXCXBegin,&#xA;&#x9;&#x9;CASE WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL AND DATEDIFF(DAY,DC.ActiveEndEndr,'2099-12-31') = 0 THEN DATEADD(YEAR,1,DC.StatusDate)&#xA;&#x9;&#x9;     WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL AND DATEDIFF(DAY,DC.ActiveEndEndr,'2099-12-31') != 0 THEN ISNULL(DC.ActiveEndEndr, DATEADD(YEAR,1,DC.StatusDate))&#xA;&#x9;&#x9;&#x9; WHEN DATEDIFF(DAY,DC.ActiveEndBrwr,'2099-12-31') = 0 THEN DATEADD(YEAR,1,DC.StatusDate)&#xA;&#x9;&#x9;     WHEN DATEDIFF(DAY,DC.ActiveEndBrwr,'2099-12-31') != 0 THEN ISNULL(DC.ActiveEndBrwr, DATEADD(YEAR,1,DC.StatusDate))&#xA;&#x9;&#x9;END AS TXCXEnd,&#xA;&#x9;&#x9;'SCRA' AS TXCXType,&#xA;&#x9;&#x9;CASE  WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL THEN DC.EndorserServiceComponent&#xA;&#x9;&#x9;&#x9;&#x9;WHEN DC.EndrSSN IS NULL THEN DC.ServiceComponent&#xA;&#x9;&#x9;&#x9;&#x9;ELSE DC.ServiceComponent&#xA;&#x9;&#x9;END AS ServiceComponent,&#xA;&#x9;&#x9;NULL AS TXCXUpdated,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;SUSER_SNAME() AS CreatedBy,&#xA;&#x9;&#x9;NULL AS DeletedAt,&#xA;&#x9;&#x9;NULL AS DeletedBy,&#xA;&#x9;&#x9;NULL AS ErroredAt,&#xA;&#x9;&#x9;DC.StatusDate&#xA;&#x9;FROM&#xA;&#x9;&#x9;CLS.hsadrptfed.DataComparison_CR_4757 DC&#xA;&#x9;WHERE&#xA;&#x9;&#x9;DC.ActiveRow = 1&#xA;&#x9;&#x9;AND&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveBeginEndr IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveEndEndr IS NOT NULL&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;OR&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;DC.BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveBeginBrwr IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveEndBrwr IS NOT NULL&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;AND NOT &#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;( --reservist endorsers need to be ignored for ENDORSER reporting&#xA;&#x9;&#x9;&#x9;&#x9;DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.EndrIsReservist = 1&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;( --exclude reservist only borrowers that dont have endorsers&#xA;&#x9;&#x9;&#x9;&#x9;DC.EndrSSN IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.BorrIsReservist = 1&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;UNION&#xA;&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;DC.BorrSSN,&#xA;&#x9;&#x9;NULL AS EndrSSN,&#xA;&#x9;&#x9;0 AS IsEndorser,&#xA;&#x9;&#x9;DC.ActiveBeginBrwr AS TXCXBegin,&#xA;&#x9;&#x9;CASE WHEN DATEDIFF(DAY,DC.ActiveEndBrwr,'2099-12-31') = 0 THEN DATEADD(YEAR,1,DC.StatusDate) ELSE DC.ActiveEndBrwr END AS TXCXEnd,&#xA;&#x9;&#x9;'SCRA' AS TXCXType,&#xA;&#x9;&#x9;DC.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;NULL AS TXCXUpdated,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;SUSER_SNAME() AS CreatedBy,&#xA;&#x9;&#x9;NULL AS DeletedAt,&#xA;&#x9;&#x9;NULL AS DeletedBy,&#xA;&#x9;&#x9;NULL AS ErroredAt,&#xA;&#x9;&#x9;DC.StatusDate&#xA;&#x9;FROM&#xA;&#x9;&#x9;CLS.hsadrptfed.DataComparison_CR_4757 DC&#xA;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;BorrSSN&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;CLS.hsadrptfed.DataComparison_CR_4757&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;EndrSSN IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND ActiveRow = 1&#xA;&#x9;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;OR EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;) BorrowerOnly&#xA;&#x9;&#x9;&#x9;ON BorrowerOnly.BorrSSN = DC.BorrSSN&#xA;&#x9;WHERE&#xA;&#x9;&#x9;DC.ActiveRow = 1&#xA;&#x9;&#x9;AND&#xA;&#x9;&#x9;(&#x9;&#xA;&#x9;&#x9;&#x9;DC.BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;OR DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;AND BorrowerOnly.BorrSSN IS NULL --Doesnt have any records not tied to an endorser&#xA;&#x9;&#x9;AND DC.ActiveBeginBrwr IS NOT NULL&#xA;&#x9;&#x9;AND DC.ActiveEndBrwr IS NOT NULL&#xA;&#x9;&#x9;AND DC.BorrIsReservist != 1 --Exclude borrowers that are reservist&#xA;) NEWDATA&#xA;&#x9;LEFT JOIN CLS.scra.ActiveDutyReporting EXISTING_DATA&#xA;&#x9;&#x9;ON NEWDATA.BorrSSN = EXISTING_DATA.BorrSSN&#xA;&#x9;&#x9;AND ISNULL(NEWDATA.EndrSSN,'') = ISNULL(EXISTING_DATA.EndrSSN,'')&#xA;&#x9;&#x9;AND NEWDATA.IsEndorser = EXISTING_DATA.IsEndorser&#xA;&#x9;&#x9;AND NEWDATA.TXCXBegin = EXISTING_DATA.TXCXBegin&#xA;&#x9;&#x9;AND NEWDATA.TXCXEnd = EXISTING_DATA.TXCXEnd&#xA;&#x9;&#x9;AND NEWDATA.TXCXType = EXISTING_DATA.TXCXType&#xA;&#x9;&#x9;AND NEWDATA.ServiceComponent = EXISTING_DATA.ServiceComponent&#xA;&#x9;&#x9;AND CAST(NEWDATA.CreatedAt AS DATE) = CAST(EXISTING_DATA.CreatedAt AS DATE)&#xA;WHERE&#xA;&#x9;EXISTING_DATA.BorrSSN IS NULL&#xA;GROUP BY&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.EndrSSN,&#xA;&#x9;NEWDATA.IsEndorser,&#xA;&#x9;NEWDATA.TXCXBegin,&#xA;&#x9;NEWDATA.TXCXEnd,&#xA;&#x9;NEWDATA.TXCXType,&#xA;&#x9;NEWDATA.ServiceComponent,&#xA;&#x9;NEWDATA.TXCXUpdated,&#xA;&#x9;NEWDATA.CreatedBy,&#xA;&#x9;NEWDATA.DeletedAt,&#xA;&#x9;NEWDATA.DeletedBy,&#xA;&#x9;NEWDATA.ErroredAt&#xA;ORDER BY&#xA;&#x9;MIN(NEWDATA.StatusDate),&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.EndrSSN&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D6245A97-B3C9-4024-9CAA-10BDE139ACCE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into DataComparison"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B1AE0E49-89A9-42B2-917E-D3623322FFC1}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="INSERT INTO CLS.hsadrptfed.DataComparison_CR_4757&#xA;(&#xA;&#x9;ActiveRow,&#xA;&#x9;Loan,&#xA;&#x9;LoanBalance,&#xA;&#x9;StatusDate,&#xA;&#x9;BorrSSN,&#xA;&#x9;BorrActive,&#xA;&#x9;EndrSSN,&#xA;&#x9;EndrActive,&#xA;&#x9;BeginBrwr,&#xA;&#x9;EIDB,&#xA;&#x9;BeginEndr,&#xA;&#x9;EIDE,&#xA;&#x9;EndBrwr,&#xA;&#x9;EndEndr,&#xA;&#x9;BorrIsReservist,&#xA;&#x9;EndrIsReservist,&#xA;&#x9;CreatedAt,&#xA;&#x9;ServiceComponent,&#xA;&#x9;EIDServiceComponent,&#xA;&#x9;EndorserServiceComponent,&#xA;&#x9;EndorserEIDServiceComponent,&#xA;&#x9;ActiveBeginBrwr,&#xA;&#x9;ActiveEndBrwr,&#xA;&#x9;ActiveBeginEndr,&#xA;&#x9;ActiveEndEndr&#xA;)&#xA;SELECT&#xA;&#x9;NEWDATA.ActiveRow,&#xA;&#x9;NEWDATA.Loan,&#xA;&#x9;NEWDATA.LoanBalance,&#xA;&#x9;NEWDATA.StatusDate,&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.BorrActive,&#xA;&#x9;NEWDATA.EndrSSN,&#xA;&#x9;NEWDATA.EndrActive,&#xA;&#x9;NEWDATA.BeginBrwr,&#xA;&#x9;NEWDATA.EIDB,&#xA;&#x9;NEWDATA.BeginEndr,&#xA;&#x9;NEWDATA.EIDE,&#xA;&#x9;NEWDATA.EndBrwr,&#xA;&#x9;NEWDATA.EndEndr,&#xA;&#x9;NEWDATA.BorrIsReservist,&#xA;&#x9;NEWDATA.EndrIsReservist,&#xA;&#x9;NEWDATA.CreatedAt,&#xA;&#x9;NEWDATA.ServiceComponent,&#xA;&#x9;NEWDATA.EIDServiceComponent,&#xA;&#x9;NEWDATA.EndorserServiceComponent,&#xA;&#x9;NEWDATA.EndorserEIDServiceComponent,&#xA;&#x9;NEWDATA.ActiveBeginBrwr,&#xA;&#x9;NEWDATA.ActiveEndBrwr,&#xA;&#x9;NEWDATA.ActiveBeginEndr,&#xA;&#x9;NEWDATA.ActiveEndEndr&#xA;FROM&#xA;(--inserted rows&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;1 AS ActiveRow, --new record indicator&#xA;&#x9;&#x9;BORR.Loan,&#xA;&#x9;&#x9;BORR.LoanBalance,&#xA;&#x9;&#x9;BORR.ActiveDutyStatusDate AS StatusDate,&#xA;&#x9;&#x9;BORR.BorrSSN,&#xA;&#x9;&#x9;CASE WHEN &#xA;&#x9;&#x9;&#x9;&#x9;BORR.ActiveDutyOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;&#x9;AND BORR.LeftActiveDutyLE367DaysFromActiveDutyStatusDt = 'Y' &#xA;&#x9;&#x9;&#x9;&#x9;AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;THEN 0&#xA;&#x9;&#x9;&#x9; WHEN&#xA;&#x9;&#x9;&#x9;&#x9;BORR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y')&#xA;&#x9;&#x9;&#x9;&#x9;OR&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BORR.ActiveDutyOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;&#x9;THEN 1&#xA;&#x9;&#x9;&#x9;ELSE NULL --doesn't exist in DOD database&#xA;&#x9;&#x9;END AS BorrActive,&#xA;&#x9;&#x9;ENDR.EndrSSN,&#xA;&#x9;&#x9;CASE WHEN &#xA;&#x9;&#x9;&#x9;&#x9;ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;&#x9;AND ENDR.LeftActiveDutyLE367DaysFromActiveDutyStatusDt = 'Y' &#xA;&#x9;&#x9;&#x9;&#x9;AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;THEN 0&#xA;&#x9;&#x9;&#x9;WHEN&#xA;&#x9;&#x9;&#x9;&#x9;ENDR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y')&#xA;&#x9;&#x9;&#x9;&#x9;OR&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ENDR.ActiveDutyOnActiveDutyStatusDt = 'N'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;&#x9;THEN 1&#xA;&#x9;&#x9;&#x9;ELSE NULL --doesn't exist in DOD database&#xA;&#x9;&#x9;END AS EndrActive,&#xA;&#x9;&#x9;IIF(BORR.ActiveDutyOnActiveDutyStatusDt = 'N' AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', BORR.EIDBeginDate, BORR.ActiveDutyBeginDate) AS BeginBrwr,&#xA;&#x9;&#x9;IIF(BORR.ActiveDutyOnActiveDutyStatusDt = 'N' AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS EIDB,&#xA;&#x9;&#x9;IIF(ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', ENDR.EIDBeginDate, ENDR.ActiveDutyBeginDate) AS BeginEndr,&#xA;&#x9;&#x9;IIF(ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS EIDE,&#xA;&#x9;&#x9;CASE WHEN BORR.ActiveDutyOnActiveDutyStatusDt = 'N' AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y' THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; WHEN BORR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y') AND BORR.ActiveDutyEndDate IS NULL THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; ELSE BORR.ActiveDutyEndDate&#xA;&#x9;&#x9;END AS EndBrwr,&#xA;&#x9;&#x9;CASE WHEN ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y' THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; WHEN ENDR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y') AND ENDR.ActiveDutyEndDate IS NULL THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; ELSE ENDR.ActiveDutyEndDate&#xA;&#x9;&#x9;END AS EndEndr,&#xA;&#x9;&#x9;IIF(BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS BorrIsReservist,&#xA;&#x9;&#x9;IIF(ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS EndrIsReservist,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;BORR.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;BORR.EIDServiceComponent AS EIDServiceComponent,&#xA;&#x9;&#x9;ENDR.ServiceComponent AS EndorserServiceComponent,&#xA;&#x9;&#x9;ENDR.EIDServiceComponent AS EndorserEIDServiceComponent,&#xA;&#x9;&#x9;BORR.ActiveDutyBeginDate AS ActiveBeginBrwr,&#xA;&#x9;&#x9;CASE WHEN BORR.ActiveDutyBeginDate IS NOT NULL THEN ISNULL(BORR.ActiveDutyEndDate,'2099-12-31') ELSE NULL END AS ActiveEndBrwr,&#xA;&#x9;&#x9;ENDR.ActiveDutyBeginDate AS ActiveBeginEndr,&#xA;&#x9;&#x9;CASE WHEN ENDR.ActiveDutyBeginDate IS NOT NULL THEN ISNULL(ENDR.ActiveDutyEndDate,'2099-12-31') ELSE NULL END AS ActiveEndEndr&#xA;&#x9;FROM&#xA;&#x9;(--gets borrower population from DOD file, converts dates, and nulls out 0's&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;DOD.SSN AS BorrSSN,&#xA;&#x9;&#x9;&#x9;LN10.LN_SEQ AS Loan,&#xA;&#x9;&#x9;&#x9;LN10.LA_CUR_PRI AS LoanBalance,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(DOD.ActiveDutyStatusDate))) AS ActiveDutyStatusDate,&#xA;&#x9;&#x9;&#x9;DOD.ActiveDutyOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyEndDate,0)))) AS ActiveDutyEndDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyBeginDate,0)))) AS ActiveDutyBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDBeginDate,0)))) AS EIDBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDEndDate,0)))) AS EIDEndDate,&#xA;&#x9;&#x9;&#x9;DOD.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;&#x9;DOD.EIDServiceComponent AS EIDServiceComponent&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;CLS.hsadrptfed.ScraHistoricalFiles_CR_4757 DOD&#xA;&#x9;&#x9;&#x9;INNER JOIN CDW..LN10_LON LN10&#xA;&#x9;&#x9;&#x9;&#x9;ON DOD.SSN = LN10.BF_SSN&#xA;&#x9;&#x9;&#x9;--LEFT JOIN ##LN90X_SCRAFED LN90X --TODO: Is this needed&#xA;&#x9;&#x9;&#x9;--&#x9;ON LN10.BF_SSN = LN90X.BF_SSN&#xA;&#x9;&#x9;&#x9;--&#x9;AND LN10.LN_SEQ = LN90X.LN_SEQ&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;--LN10.LC_STA_LON10 = 'R' --TODO: Is this needed&#xA;&#x9;&#x9;&#x9;DOD.ActiveDutyOnActiveDutyStatusDt != 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt != 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt != 'Z'&#xA;&#x9;&#x9;&#x9;--AND ISNULL(LN10.LD_PIF_RPT,GETDATE()) &gt; DATEADD(DAY,-45,CONVERT(DATE,GETDATE())) --TODO: Is this needed&#xA;&#x9;&#x9;&#x9;--AND LN90X.BF_SSN IS NULL --TODO: Is this needed&#xA;&#x9;) BORR&#xA;&#x9;LEFT JOIN &#xA;&#x9;(--gets endorser population from DOD file, converts dates, and nulls out 0's&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;DOD.SSN AS EndrSSN,&#xA;&#x9;&#x9;&#x9;LN20.BF_SSN AS BorrSSN,&#xA;&#x9;&#x9;&#x9;LN20.LN_SEQ AS Loan,&#xA;&#x9;&#x9;&#x9;LN10.LA_CUR_PRI AS LoanBalance,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(DOD.ActiveDutyStatusDate))) AS ActiveDutyStatusDate,&#xA;&#x9;&#x9;&#x9;DOD.ActiveDutyOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyEndDate,0)))) AS ActiveDutyEndDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyBeginDate,0)))) AS ActiveDutyBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDBeginDate,0)))) AS EIDBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDEndDate,0)))) AS EIDEndDate,&#xA;&#x9;&#x9;&#x9;DOD.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;&#x9;DOD.EIDServiceComponent AS EIDServiceComponent&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;CLS.hsadrptfed.ScraHistoricalFiles_CR_4757 DOD&#xA;&#x9;&#x9;&#x9;INNER JOIN CDW..LN20_EDS LN20&#xA;&#x9;&#x9;&#x9;&#x9;ON DOD.SSN = LN20.LF_EDS&#xA;&#x9;&#x9;&#x9;INNER JOIN CDW..LN10_LON LN10&#xA;&#x9;&#x9;&#x9;&#x9;ON LN20.BF_SSN = LN10.BF_SSN&#xA;&#x9;&#x9;&#x9;&#x9;AND LN20.LN_SEQ = LN10.LN_SEQ&#xA;&#x9;&#x9;&#x9;--LEFT JOIN ##LN90X_SCRAFED LN90X --TODO: Is this needed&#xA;&#x9;&#x9;&#x9;--&#x9;ON LN10.BF_SSN = LN90X.BF_SSN&#xA;&#x9;&#x9;&#x9;--&#x9;AND LN10.LN_SEQ = LN90X.LN_SEQ&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;--LN10.LC_STA_LON10 = 'R' --TODO: Is this needed&#xA;&#x9;&#x9;&#x9;DOD.ActiveDutyOnActiveDutyStatusDt != 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt != 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt != 'Z'&#xA;&#x9;&#x9;&#x9;--AND LN20.LC_STA_LON20 = 'A' --TODO: Is this needed&#xA;&#x9;&#x9;&#x9;--AND ISNULL(LN10.LD_PIF_RPT,GETDATE()) &gt; DATEADD(DAY,-45,CONVERT(DATE,GETDATE())) --TODO: Is this needed&#xA;&#x9;&#x9;&#x9;--AND LN90X.BF_SSN IS NULL --TODO: Is this needed&#xA;&#x9;) ENDR&#xA;&#x9;&#x9;ON BORR.BorrSSN = ENDR.BorrSSN&#xA;&#x9;&#x9;AND BORR.Loan = ENDR.Loan&#xA;&#x9;&#x9;AND BORR.ActiveDutyStatusDate = ENDR.ActiveDutyStatusDate&#xA;) NEWDATA&#xA;LEFT JOIN CLS.hsadrptfed.DataComparison_CR_4757 EXISTING_DATA&#xA;&#x9;ON  NEWDATA.ActiveRow = EXISTING_DATA.ActiveRow&#xA;&#x9;AND NEWDATA.Loan = EXISTING_DATA.Loan&#xA;&#x9;AND ISNULL(NEWDATA.LoanBalance,0) = ISNULL(EXISTING_DATA.LoanBalance,0)&#xA;&#x9;AND NEWDATA.StatusDate = EXISTING_DATA.StatusDate&#xA;&#x9;AND NEWDATA.BorrSSN&#x9;= EXISTING_DATA.BorrSSN&#xA;&#x9;AND ISNULL(NEWDATA.BorrActive,'') = ISNULL(EXISTING_DATA.BorrActive,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndrSSN,'') = ISNULL(EXISTING_DATA.EndrSSN,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndrActive,'') = ISNULL(EXISTING_DATA.EndrActive,'')&#xA;&#x9;AND ISNULL(NEWDATA.BeginBrwr,'') = ISNULL(EXISTING_DATA.BeginBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.EIDB,'')&#x9;= ISNULL(EXISTING_DATA.EIDB,'')&#xA;&#x9;AND ISNULL(NEWDATA.BeginEndr,'') = ISNULL(EXISTING_DATA.BeginEndr,'')&#xA;&#x9;AND ISNULL(NEWDATA.EIDE,'')&#x9;= ISNULL(EXISTING_DATA.EIDE,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndBrwr,'') = ISNULL(EXISTING_DATA.EndBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndEndr,'') = ISNULL(EXISTING_DATA.EndEndr,'')&#xA;&#x9;AND ISNULL(NEWDATA.BorrIsReservist,'')= ISNULL(EXISTING_DATA.BorrIsReservist,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndrIsReservist,'')= ISNULL(EXISTING_DATA.EndrIsReservist,'')&#xA;&#x9;AND CAST(NEWDATA.CreatedAt AS DATE) = CAST(EXISTING_DATA.CreatedAt AS DATE)&#xA;&#x9;AND NEWDATA.ServiceComponent = EXISTING_DATA.ServiceComponent&#xA;&#x9;AND NEWDATA.EIDServiceComponent = EXISTING_DATA.EIDServiceComponent&#xA;&#x9;AND NEWDATA.EndorserServiceComponent = EXISTING_DATA.EndorserServiceComponent&#xA;&#x9;AND NEWDATA.EndorserEIDServiceComponent = EXISTING_DATA.EndorserEIDServiceComponent&#xA;&#x9;AND ISNULL(NEWDATA.ActiveBeginBrwr,'') = ISNULL(EXISTING_DATA.ActiveBeginBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.ActiveEndBrwr,'') = ISNULL(EXISTING_DATA.ActiveEndBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.ActiveBeginEndr,'') = ISNULL(EXISTING_DATA.ActiveBeginEndr,'')&#xA;&#x9;AND ISNULL(NEWDATA.ActiveEndEndr,'') = ISNULL(EXISTING_DATA.ActiveEndEndr,'')&#xA;WHERE&#xA;&#x9;EXISTING_DATA.BorrSSN IS NULL&#xA;ORDER BY&#xA;&#x9;NEWDATA.StatusDate,&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.EndrSSN,&#xA;&#x9;NEWDATA.Loan&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{F4EE0B6C-FC9D-4410-A8FD-63D62CE5F889}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ActiveDutyReporting" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{19E19716-770E-4DD4-B71C-F64DA7977BB6}"
      DTS:From="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Sequence Container - main table inserts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{CC552B59-FFB9-4E47-B865-CF319A71CEFB}"
      DTS:From="Package\Sequence Container - main table inserts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Script Task - Process Complete pop-up" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="248,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing"
          TopLeft="114.5,8.00000000000011" />
        <NodeLayout
          Size="321,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\File System Task - move file to SCRA Archive folder"
          TopLeft="72,82" />
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables.PrecedenceConstraints[Constraint]"
          TopLeft="235.5,50.0000000000001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.9999999999999"
              Start="0,0"
              End="0,24.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="487,179"
          Size="487,222"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables"
          TopLeft="22,218" />
        <NodeLayout
          Size="261,42"
          Id="Package\Script Task - Process Complete pop-up"
          TopLeft="621,289" />
        <NodeLayout
          Size="320,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ActiveDutyReporting"
          TopLeft="2,86" />
        <NodeLayout
          Size="304,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          TopLeft="3,4" />
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 12]"
          TopLeft="158.5,46">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="340,149"
          Size="340,192"
          Id="Package\Sequence Container - main table inserts"
          TopLeft="577,31" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="509,329">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68,-202"
              Start="0,0"
              End="60.5,-202">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30,0" />
                  <mssgle:CubicBezierSegment
                    Point1="30,0"
                    Point2="34,0"
                    Point3="34,-4" />
                  <mssgle:LineSegment
                    End="34,-198" />
                  <mssgle:CubicBezierSegment
                    Point1="34,-198"
                    Point2="34,-202"
                    Point3="38,-202" />
                  <mssgle:LineSegment
                    End="60.5,-202" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="749.25,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="287,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column -get file name and line data"
          TopLeft="477,235" />
        <NodeLayout
          Size="327,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table"
          TopLeft="17,244" />
        <NodeLayout
          Size="355,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table"
          TopLeft="449,329" />
        <NodeLayout
          Size="298,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Flat File Source - read R file based on iteration"
          TopLeft="243,26" />
        <NodeLayout
          Size="269,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Script Component - get error description"
          TopLeft="489,138" />
        <NodeLayout
          Size="226,42"
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\Derived Column - get file name"
          TopLeft="68,140" />
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Output 0]"
          TopLeft="622,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Flat File Source Output]"
          TopLeft="343.666666666667,68">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-162.666666666667,72"
              Start="0,0"
              End="-162.666666666667,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.0307076101469" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.0307076101469"
                    Point2="0,29.0307076101469"
                    Point3="-4,29.0307076101469" />
                  <mssgle:LineSegment
                    End="-158.666666666667,29.0307076101469" />
                  <mssgle:CubicBezierSegment
                    Point1="-158.666666666667,29.0307076101469"
                    Point2="-162.666666666667,29.0307076101469"
                    Point3="-162.666666666667,33.0307076101469" />
                  <mssgle:LineSegment
                    End="-162.666666666667,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Flat File Source Error Output]"
          TopLeft="440.333333333333,68">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183.166666666667,70"
              Start="0,0"
              End="183.166666666667,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.2242990654206" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.2242990654206"
                    Point2="0,28.2242990654206"
                    Point3="4,28.2242990654206" />
                  <mssgle:LineSegment
                    End="179.166666666667,28.2242990654206" />
                  <mssgle:CubicBezierSegment
                    Point1="179.166666666667,28.2242990654206"
                    Point2="183.166666666667,28.2242990654206"
                    Point3="183.166666666667,32.2242990654206" />
                  <mssgle:LineSegment
                    End="183.166666666667,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="27.9569466145834,33.2242990654206,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Derived Column Output1]"
          TopLeft="623.5,277">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing.Paths[Derived Column Output]"
          TopLeft="180.75,182">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFile table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container - validate all R files and populate ScraHistorical tables\Data Flow Task - flat-file processing\OLE DB Destination - populate _DODReturnFileErrors table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>