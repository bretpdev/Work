/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWR10.LWR10R2";
FILENAME REPORTZ "&RPTLIB/ULWR10.LWR10RZ";
OPTIONS SYMBOLGEN NOCENTER NODATE NONUMBER LS=132;
DATA _NULL_;
	CALL SYMPUT('DAYS_AGO_0',"'"||PUT(INTNX('DAY',TODAY(),-0,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('DAYS_TODAY_0',"'"||PUT(INTNX('DAY',TODAY(),-0,'BEGINNING'), MMDDYYN8.)||"'");
RUN;
%SYSLPUT DAYS_AGO_0 = &DAYS_AGO_0;
%SYSLPUT DAYS_TODAY_0 = &DAYS_TODAY_0;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%macro sqlcheck ;
  %if  &sqlxrc ne 0  %then  %do  ;
    data _null_  ;
            file reportz notitles  ;
            put @01 " ********************************************************************* "
              / @01 " ****  The SQL code above has experienced an error.               **** "
              / @01 " ****  The SAS should be reviewed.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  The SQL error code is  &sqlxrc  and the SQL error message  **** "
              / @01 " ****  &sqlxmsg   **** "
              / @01 " ********************************************************************* "
            ;
         run  ;
  %end  ;
%mend  ;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE MAIN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DC01.BF_SSN
	,LN10.LN_SEQ
	,DC01.AF_APL_ID
	,DC01.AF_APL_ID_SFX
	,DC01.LD_LDR_POF
	,LN10.LC_STA_LON10
	,LN10.LA_CUR_PRI
	,DC01.LA_ACR_NOT_PD_INT
	,DC01.LA_CLM_UNS
	,DC01.LA_CLM_INT
	,DC01.LA_CLM_PRI
	,DC02.LR_CUR_INT
	,PD10.DM_PRS_LST
	,CURRENT DATE AS CDATE
		,DC14.LA_SPI_PD
FROM OLWHRM1.DC01_LON_CLM_INF DC01
LEFT OUTER JOIN OLWHRM1.DC02_BAL_INT DC02
	ON DC01.AF_APL_ID = DC02.AF_APL_ID
	AND DC01.AF_APL_ID_SFX = DC02.AF_APL_ID_SFX
	AND DC01.LF_CRT_DTS_DC10 = DC02.LF_CRT_DTS_DC10 
INNER JOIN OLWHRM1.LN10_LON LN10
	ON LN10.LF_LON_ALT = DC01.AF_APL_ID
	AND LN10.LN_LON_ALT_SEQ = int(DC01.AF_APL_ID_SFX)
INNER JOIN OLWHRM1.PD10_PRS_NME PD10
	ON PD10.DF_PRS_ID = LN10.BF_SSN
INNER JOIN OLWHRM1.GA10_LON_APP GA10
	ON GA10.AF_APL_ID = DC01.AF_APL_ID
	AND GA10.AF_APL_ID_SFX = DC01.AF_APL_ID_SFX
LEFT OUTER JOIN OLWHRM1.DC14_SUP_INT_CLM DC14
	ON DC01.AF_APL_ID = DC14.AF_APL_ID
	AND DC01.AF_APL_ID_SFX = DC14.AF_APL_ID_SFX
	AND DC01.LF_CRT_DTS_DC10 = DC14.LF_CRT_DTS_DC10
WHERE GA10.AF_CUR_LON_SER_AGY = '700126'
	AND 
	(
		(
			DC01.LD_LDR_POF = &DAYS_AGO_0
		)
	OR 
		(
			DC14.LF_SPI_VT_RFR = &DAYS_TODAY_0
		)
	)
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
/*%put  sqlxrc= >>> &sqlxrc <<< ||| sqlxmsg= >>> &sqlxmsg >>> ;  ** includes error messages to SAS log  ;*/
/*%sqlcheck;*/
/*quit;*/
ENDRSUBMIT;

DATA MAIN; SET WORKLOCL.MAIN; RUN;

PROC SQL;
CREATE TABLE MULTI AS
SELECT BF_SSN, 
	AF_APL_ID, 
	AF_APL_ID_SFX,
	COUNT(DISTINCT LN_SEQ) AS COUNT
FROM MAIN
GROUP BY BF_SSN,
	AF_APL_ID, 
	AF_APL_ID_SFX
HAVING COUNT(*) > 1
;
QUIT;

/*If multiple loan seq # exist with the same CL Unique ID, only select the loan seq # for the released (LC_STA_LON10 = R) loan with an open balance (LA_CUR_PRI) > 0.*/
PROC SQL;
CREATE TABLE C1 AS
SELECT DISTINCT MAIN.BF_SSN
	,MAIN.LN_SEQ
	,MAIN.AF_APL_ID
	,MAIN.AF_APL_ID_SFX
	,MAIN.LD_LDR_POF
	,MAIN.LC_STA_LON10
	,MAIN.LA_CUR_PRI
	,MAIN.LA_ACR_NOT_PD_INT
	,MAIN.LA_CLM_UNS
	,MAIN.LA_CLM_INT
	,MAIN.LA_CLM_PRI
	,MAIN.LR_CUR_INT
	,MAIN.DM_PRS_LST
	,MAIN.CDATE
	,MAIN.LA_SPI_PD
FROM MAIN
INNER JOIN MULTI
	ON MAIN.BF_SSN = MULTI.BF_SSN
	AND MAIN.AF_APL_ID = MULTI.AF_APL_ID
	AND MAIN.AF_APL_ID_SFX = MULTI.AF_APL_ID_SFX
WHERE MAIN.LC_STA_LON10 = 'R' 
AND MAIN.LA_CUR_PRI > 0
;
QUIT;

PROC SQL;
CREATE TABLE C2 AS
SELECT A.BF_SSN
	,A.LN_SEQ
	,A.AF_APL_ID
	,A.AF_APL_ID_SFX
	,A.LD_LDR_POF
	,A.LC_STA_LON10
	,A.LA_CUR_PRI
	,A.LA_ACR_NOT_PD_INT
	,A.LA_CLM_UNS
	,A.LA_CLM_INT
	,A.LA_CLM_PRI
	,A.LR_CUR_INT
	,A.DM_PRS_LST
	,A.CDATE
	,A.LA_SPI_PD
FROM MAIN A
WHERE NOT EXISTS 
	(
		SELECT 1
		FROM MULTI Z
		WHERE Z.AF_APL_ID = A.AF_APL_ID
			AND Z.AF_APL_ID_SFX = A.AF_APL_ID_SFX
	)	
;
QUIT;

DATA C3;
SET C1 C2;
RUN;

PROC SQL;
CREATE TABLE ONELINE AS
SELECT DISTINCT BF_SSN, 'X' AS MARK
FROM (SELECT DISTINCT 
		BF_SSN
		FROM C3
		GROUP BY BF_SSN
		HAVING (SUM(LA_ACR_NOT_PD_INT) - SUM(LA_CLM_UNS)) = 0)

;
QUIT;

PROC SQL;
CREATE TABLE M1 AS
SELECT C3.BF_SSN
	,C3.LN_SEQ
	,AF_APL_ID
	,AF_APL_ID_SFX
	,LD_LDR_POF
	,LC_STA_LON10
	,LA_CUR_PRI
	,LA_ACR_NOT_PD_INT
	,LA_CLM_UNS
	,LA_CLM_INT
	,LA_CLM_PRI
	,LR_CUR_INT
	,DM_PRS_LST
	,CDATE
	,LA_SPI_PD
	,ONELINE.MARK
FROM C3
LEFT OUTER JOIN ONELINE
	ON C3.BF_SSN = ONELINE.BF_SSN
;
QUIT;
/*SPIT BETWEEN  SINGLE LINE AND MULTI LINE TABLES*/
DATA STB  (DROP=MARK) MTB (DROP=MARK);
SET M1;
IF MARK = 'X' THEN OUTPUT STB;
ELSE OUTPUT MTB;
RUN;
/*--------------------*/
PROC SORT DATA=STB  OUT=STB2 (KEEP=BF_SSN LN_SEQ) NODUPKEY;
BY BF_SSN LN_SEQ;
RUN;


DATA STB2 (KEEP=BF_SSN SEQ_LIST);
SET STB2;
LENGTH SEQLIST SEQLIST2 $200. ;
BY BF_SSN;
RETAIN SEQLIST SEQLIST2;
IF FIRST.BF_SSN THEN DO;
	SEQLIST = TRIM(PUT(LN_SEQ,3.));
	SEQLIST2 = TRIM(LEFT(SEQLIST));
	
	END;
ELSE DO;
	SEQLIST2 = TRIM(SEQLIST2);
	SEQLIST = TRIM(PUT(LN_SEQ,3.));
	SEQLIST2 = TRIM(LEFT(SEQLIST2))||' '||TRIM(LEFT(SEQLIST));
	
	END;
IF LAST.BF_SSN THEN DO;
	SEQ_LIST = LEFT(TRIM(SEQLIST2));
	OUTPUT ;
	END;
RUN;

PROC SQL;
CREATE TABLE FIN_S AS
SELECT STB.BF_SSN
	,SUM(LA_CLM_PRI) + SUM(LA_CLM_INT) - SUM(LA_ACR_NOT_PD_INT) AS POAMT
	,CDATE
	,'000749' AS CODE
	,STB2.SEQ_LIST AS LN_SEQ
	,DM_PRS_LST
FROM STB
INNER JOIN STB2
	ON STB.BF_SSN = STB2.BF_SSN
GROUP BY STB.BF_SSN, CDATE, STB2.SEQ_LIST, DM_PRS_LST
;
QUIT;

PROC SORT DATA=MTB  OUT=MTB2  NODUPKEY;
BY BF_SSN LN_SEQ;
RUN;
DATA MTB2;
SET MTB2;
LENGTH SEQLIST $200. ;
BY BF_SSN;
RETAIN SEQLIST SEQLIST2 POAMT;
IF FIRST.BF_SSN THEN DO;
	SEQLIST = TRIM(PUT(LN_SEQ,3.));
	SEQLIST2 = TRIM(LEFT(SEQLIST));
	POAMT = LA_SPI_PD;
	END;
ELSE DO;
	SEQLIST2 = TRIM(SEQLIST2);
	SEQLIST = TRIM(PUT(LN_SEQ,3.));
	SEQLIST2 = TRIM(LEFT(SEQLIST2))||' '||TRIM(LEFT(SEQLIST));
	POAMT + LA_SPI_PD;
	END;
IF LAST.BF_SSN THEN DO;
	SEQ_LIST = LEFT(TRIM(SEQLIST2));
	OUTPUT ;
	END;
RUN;

PROC SQL;
CREATE TABLE FIN_M AS 
SELECT BF_SSN
	,POAMT
	,CDATE
	,'000749' AS CODE
	,SEQ_LIST as LN_SEQ
	,DM_PRS_LST
FROM MTB2
;
QUIT;

DATA FIN;
SET FIN_M FIN_S;
RUN;

PROC SORT DATA=FIN;
BY BF_SSN;
RUN;

data _null_;
set  WORK.Fin;
file REPORT2 delimiter=',' DSD DROPOVER lrecl=32767;
   format BF_SSN $9. ;
   format POAMT best12. ;
   format CDATE MMDDYY6. ;
   format CODE $6. ;
   format LN_SEQ $200. ;
   format DM_PRS_LST $23. ;
if _n_ = 1 then        /* write column names */
 do;
   put
   'BF_SSN'
   ','
   'POAMT'
   ','
   'EFF_DATE'
   ','
   'GUAR_CODE'
   ','
   'LN_SEQ'
   ','
   'DM_PRS_LST'
   ;
 end;
 do;
   put BF_SSN $ @;
   put POAMT @;
   put CDATE @;
   put CODE $ @;
   put LN_SEQ $ @;
   put DM_PRS_LST $ ;
   ;
 end;
run;
