*------------------------------------------------*
| UTLWD30 - REHABILITATED BORROWERS IN PRE-CLAIM |
*------------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWD30.LWD30R2";
FILENAME REPORT3 "&RPTLIB/ULWD30.LWD30R3";
FILENAME REPORTZ "&RPTLIB/ULWD30.LWD30RZ";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE REBIPC AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,B.LD_AUX_STA_UPD
	,C.LD_STA_UPD_DC10
	,CASE 
		WHEN D.PF_ACT = 'ALSBR' THEN 'X'
		ELSE ''
	 END AS ALSBR
	,E.DF_SPE_ACC_ID
	,E.DM_PRS_1
	,E.DM_PRS_LST
	,E.DX_STR_ADR_1
	,E.DX_STR_ADR_2
	,E.DM_CT
	,E.DC_DOM_ST
	,E.DF_ZIP
	,E.DM_FGN_CNY
	,E.DI_VLD_ADR
	,E.DI_PHN_VLD
	,'L' AS DC_ADR
	,'MA2329' AS COST_CENTER_CODE
FROM OLWHRM1.DC01_LON_CLM_INF A
INNER JOIN (
	SELECT IJ1.BF_SSN
		,IJ2.LD_AUX_STA_UPD
	FROM OLWHRM1.DC01_LON_CLM_INF IJ1
	INNER JOIN (
		SELECT BF_SSN
			,MAX(LD_AUX_STA_UPD) AS LD_AUX_STA_UPD
		FROM OLWHRM1.DC01_LON_CLM_INF 
		WHERE LD_AUX_STA_UPD IS NOT NULL
		GROUP BY BF_SSN
		) IJ2
		ON IJ1.BF_SSN = IJ2.BF_SSN
		AND IJ1.LD_AUX_STA_UPD = IJ2.LD_AUX_STA_UPD
	WHERE IJ1.LC_AUX_STA = '10'
	) B
	ON A.BF_SSN = B.BF_SSN
INNER JOIN (
	SELECT IJ3.BF_SSN
		,IJ4.LD_STA_UPD_DC10
	FROM OLWHRM1.DC01_LON_CLM_INF IJ3
	INNER JOIN (
		SELECT BF_SSN
			,MAX(LD_STA_UPD_DC10) AS LD_STA_UPD_DC10
		FROM OLWHRM1.DC01_LON_CLM_INF	
		GROUP BY BF_SSN
		) IJ4
		ON IJ3.BF_SSN = IJ4.BF_SSN
		AND IJ3.LD_STA_UPD_DC10 = IJ4.LD_STA_UPD_DC10
	WHERE IJ3.LC_STA_DC10 = '01'
	AND IJ3.LC_PCL_REA IN ('DB','DF','DQ')
	) C
	ON A.BF_SSN = C.BF_SSN
LEFT OUTER JOIN OLWHRM1.AY01_BR_ATY D
	ON A.BF_SSN = D.DF_PRS_ID
	AND D.PF_ACT = 'ALSBR'
INNER JOIN OLWHRM1.PD01_PDM_INF E
	ON A.BF_SSN = E.DF_PRS_ID

WHERE B.LD_AUX_STA_UPD < C.LD_STA_UPD_DC10
	AND DATE(DAYS(A.LD_PCL_SUP_LST_ATT)) < DATE(DAYS(CURRENT DATE) - 3)
	AND DATE(DAYS(A.LD_PCL_SUP_LST_CNC)) < DATE(DAYS(CURRENT DATE) - 5)
FOR READ ONLY WITH UR
);

DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWD30.LWD30RZ);*/
/*QUIT;*/
ENDRSUBMIT;
DATA REBIPC;SET WORKLOCL.REBIPC;RUN;
PROC SORT DATA=REBIPC NODUPKEY;BY BF_SSN;RUN;

/*PROCESS DATA*/
PROC SQL;
CREATE TABLE PROCREB AS 
SELECT DISTINCT A.BF_SSN AS SSN
	,'PREREHAB' AS QNAME
	,'' AS INST_ID
	,'' AS INST_TYP
	,'' AS DUE_DATE
	,'' AS DUE_TIME
	,'' AS TEXT
	,A.DF_SPE_ACC_ID
	,A.DM_PRS_1
	,A.DM_PRS_LST
	,A.DX_STR_ADR_1
	,A.DX_STR_ADR_2
	,A.DM_CT
	,A.DC_DOM_ST
	,A.DF_ZIP
	,A.DM_FGN_CNY
	,A.DI_VLD_ADR
	,A.DI_PHN_VLD
	,A.DC_ADR
	,A.COST_CENTER_CODE
	,A.ALSBR
FROM REBIPC A
;
QUIT;

*CALCULATE KEYLINE;
%MACRO KEY_CLC(TBL);
DATA &TBL (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I 
	CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
SET &TBL;
KEYSSN = TRANSLATE(SSN,'MYLAUGHTER','0987654321');
MODAY = PUT(DATE(),MMDDYYN4.);
KEYLINE = "P"||KEYSSN||MODAY||DC_ADR;
CHKDIG = 0;
LENGTH DIG $2.;
DO I = 1 TO LENGTH(KEYLINE);
	IF I/2 NE ROUND(I/2,1) 
		THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
	ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
	IF SUBSTR(DIG,1,1) = " " 
		THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
		ELSE DO;
			CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
			CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
			IF CHK1 + CHK2 >= 10
				THEN DO;
					CHK3 = PUT(CHK1 + CHK2,2.);
					CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
					CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
				END;
			CHKDIG = CHKDIG + CHK1 + CHK2;
		END;
END;
CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
CHECK = PUT(CHKDIGIT,1.);
ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;
%MEND KEY_CLC;
%KEY_CLC(PROCREB);

DATA PROCREB;
SET PROCREB;
IF DC_DOM_ST IN ('FC','') THEN SVAR=1;
ELSE SVAR=2;
RUN;

PROC SORT DATA=PROCREB; BY SVAR DC_DOM_ST;RUN;

DATA _NULL_;
SET  WORK.PROCREB;
WHERE DI_PHN_VLD = 'Y';
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT SSN $9. ;
	FORMAT QNAME $8. ;
	FORMAT INST_ID $1. ;
	FORMAT INST_TYP $1. ;
	FORMAT DUE_DATE $1. ;
	FORMAT DUE_TIME $1. ;
	FORMAT TEXT $1. ;
DO;
	PUT SSN $ @;
	PUT QNAME $ @;
	PUT INST_ID $ @;
	PUT INST_TYP $ @;
	PUT DUE_DATE $ @;
	PUT DUE_TIME $ @;
	PUT TEXT $ ;
END;
RUN;

DATA _NULL_;
SET  WORK.PROCREB;
WHERE DI_VLD_ADR = 'Y' AND ALSBR = '';
FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
   FORMAT SSN $9. ;
   FORMAT DF_SPE_ACC_ID $10. ;
   FORMAT DM_PRS_1 $12. ;
   FORMAT DM_PRS_LST $35. ;
   FORMAT DX_STR_ADR_1 $35. ;
   FORMAT DX_STR_ADR_2 $35. ;
   FORMAT DM_CT $30. ;
   FORMAT DC_DOM_ST $2. ;
   FORMAT DF_ZIP $14. ;
   FORMAT DM_FGN_CNY $25. ;
   FORMAT COST_CENTER_CODE $6. ;
   FORMAT ACSKEY $18. ;
IF _N_ = 1 THEN        
 DO;
   PUT
   'SSN'
   ','
   'DF_SPE_ACC_ID'
   ','
   'DM_PRS_1'
   ','
   'DM_PRS_LST'
   ','
   'DX_STR_ADR_1'
   ','
   'DX_STR_ADR_2'
   ','
   'DM_CT'
   ','
   'DC_DOM_ST'
   ','
   'DF_ZIP'
   ','
   'DM_FGN_CNY'
   ','
   'ACSKEY'
   ','
   'STATE_IND'   
   ','
   'COST_CENTER_CODE';
END;
DO;
   PUT SSN $ @;
   PUT DF_SPE_ACC_ID $ @;
   PUT DM_PRS_1 $ @;
   PUT DM_PRS_LST $ @;
   PUT DX_STR_ADR_1 $ @;
   PUT DX_STR_ADR_2 $ @;
   PUT DM_CT $ @;
   PUT DC_DOM_ST $ @;
   PUT DF_ZIP $ @;
   PUT DM_FGN_CNY $ @;
   PUT ACSKEY $ @;
   PUT DC_DOM_ST $ @;
   PUT COST_CENTER_CODE $ ;
END;
RUN;
