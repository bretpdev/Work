DATA _NULL_;
qtr_rpt = -1;
	call symput('begin',"'"||put(intnx('QTR',today(),qtr_rpt,'b')-1,MMDDYY10.)||"'");
	call symput('finish',"'"||put(intnx('QTR',today(),qtr_rpt,'e'),MMDDYY10.)||"'");
	call symput('Ibegin',intnx('QTR',today(),qtr_rpt,'b')-1);
	call symput('Ifinish',intnx('QTR',today(),qtr_rpt,'e'));
	call symput('finishes',"'"||put(intnx('QTR',today(),qtr_rpt,'e'),date9.)||"'d");
RUN;

DATA _NULL_;
	call symput('modsname','DW01_DW_CLC_CLU_'||put(month(&IFINISH +1),monname3.)||put(year(today()),4.));
RUN;
%PUT &IBEGIN &IFINISH &BEGIN &FINISH &finishes &modsname;

/*LIBNAME PROGREVW 'Z:\SAS\progrevw';*/
LIBNAME PROGREVW 'Y:\Development\SAS Test Files\progrevw';
LIBNAME MODS ODBC %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\AuditCDW.dsn; update_lock_typ=nolock; bl_keepnulls=no");


%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/UNWC14.NWC14RZ";
FILENAME REPORT2 "&RPTLIB/UNWC14.NWC14R2";
options remote=legend;
%syslput finish = &finish;
%syslput begin = &begin;
%syslput Ifinish = &Ifinish;
%syslput Ibegin = &Ibegin;
%syslput finishes = &finishes;
LIBNAME  LEGEND  REMOTE  SERVER=LEGEND SLIBREF=work  ;
RSUBMIT LEGEND;
/*%let DB = DNFPRQUT;  *This is test;*/
%let DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DB2 DATABASE=&DB OWNER=PKUB;
LIBNAME PKUR DB2 DATABASE=&DB OWNER=PKUR;
LIBNAME PKUS DB2 DATABASE=&DB OWNER=PKUS;
LIBNAME FRDWODS DB2 DATABASE=&DB OWNER=FRDWODS;

PROC SQL;
CONNECT TO DB2 (DATABASE=&db);
CREATE TABLE LIST AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT BF_SSN
FROM pkus.ln37_lon_mth_bal a
where a.ld_eff_mth_bal between &BEGIN and &finish
	AND A.LA_OTS_PRI_ELG > 0
	AND A.LC_STA_LON37 = 'A'
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
QUIT;

PROC SORT DATA=LIST; BY BF_SSN; RUN;

DATA LIST(KEEP=BF_SSN);
	SAMPSIZE = 10000;
	OBSLEFT=TOTOBS;
		sampsize = min(sampsize,TOTOBS); *if the sample size is larger than number of observations, it will cause an infinite loop.;
	DO WHILE(SAMPSIZE>0);
		PICKIT+1;
		IF RANUNI(0) < SAMPSIZE/OBSLEFT THEN DO;
			SET LIST POINT=PICKIT NOBS=TOTOBS;
			OUTPUT;
			SAMPSIZE = SAMPSIZE-1;
		END;
		OBSLEFT=OBSLEFT-1;
	END;
	STOP;
RUN;

proc sql;
create table dw01_tab as
select a.*
from pkub.DW01_DW_CLC_CLU a;
quit;

PROC SQL;
CREATE TABLE LST_PMT AS
SELECT A.BF_SSN
	,I.LN_SEQ
	,I.ld_fat_eff
	,SUM(COALESCE(H.LA_FAT_NSI,0)) + SUM(COALESCE(H.LA_FAT_CUR_PRI,0)) AS LST_PMT
	,COALESCE(H.LA_FAT_NSI,0) + COALESCE(H.LA_FAT_CUR_PRI,0) AS LST_PMT_LON
FROM LIST A
LEFT OUTER JOIN (select b.bf_ssn, b.ln_seq, max(ln_fat_seq) as ln_fat_seq, max(ld_fat_eff) as ld_fat_eff
		from pkub.LN90_FIN_ATY b
		where b.lc_sta_lon90 = 'A'
			AND B.PC_FAT_TYP = '10'
			AND B.LC_FAT_REV_REA = ''
		group by b.bf_ssn, b.ln_seq) I
	on A.bf_ssn = i.bf_ssn
left outer JOIN pkub.LN90_FIN_ATY H
	ON I.BF_SSN = H.BF_SSN
	AND I.LN_SEQ = H.LN_SEQ
	AND I.LN_FAT_SEQ = H.LN_fAT_SEQ
GROUP BY A.BF_SSN, I.ld_fat_eff;
QUIT;
PROC SORT DATA=LST_PMT; BY BF_SSN DESCENDING ld_fat_eff; RUN;
DATA LST_PMT(DROP=LST_PMT ld_fat_eff);
SET LST_PMT; 
BY BF_SSN;
RETAIN LST_PMT_TOT;
IF FIRST.BF_SSN THEN LST_PMT_TOT = LST_PMT;
RUN;

PROC SQL;
CREATE TABLE DEMO AS
SELECT 
	B.DF_SPE_ACC_ID
	,A.BF_SSN
	,B.DM_PRS_1
	,B.DM_PRS_LST
	,TRIM(C.DX_STR_ADR_1)	|| ' ' || C.DX_STR_ADR_2 AS STREET
	,C.DM_CT
	,C.DC_DOM_ST
	,C.DF_ZIP_CDE
	,B.DD_BRT
FROM LIST A
INNER JOIN PKUB.PD10_PRS_NME B
	ON A.BF_SSN = B.DF_PRS_ID
LEFT OUTER JOIN PKUB.PD30_PRS_ADR C
	ON B.DF_PRS_ID = C.DF_PRS_ID
	AND C.DC_ADR = 'L';

CREATE TABLE LOAN AS
SELECT A.BF_SSN
	,C.LN_SEQ
	,I.LST_PMT_TOT
	,i.LST_PMT_LON
	,CASE WHEN C.IC_LON_PGM LIKE('DL%') OR C.IC_LON_PGM = 'TEACH' THEN 'DIRECT'
		ELSE 'FFEL'
	END AS LON_PGM
	,C.IC_LON_PGM
	,D.LR_ITR
	,CASE
		WHEN C.LC_STA_LON10 = 'D' THEN 'D'
		ELSE E.WC_DW_LON_STA
	END AS WC_DW_LON_STA
	,c.la_cur_pri as LA_OTS_PRI_ELG
	,E.WA_TOT_BRI_OTS
	,c.la_cur_pri + e.WA_TOT_BRI_OTS as tot_bal
	,J.LD_FAT_EFF 
	,CASE 
		WHEN G.PC_FAT_TYP || g.pc_fat_sub_typ = '0291' THEN 'TRANSFER' 
		WHEN G.PC_FAT_TYP || g.pc_fat_sub_typ = '0101' and calculated LON_PGM = 'DIRECT' THEN 'COD' 
		WHEN G.PC_FAT_TYP || g.pc_fat_sub_typ = '0101' and calculated LON_PGM = 'FFEL' THEN 'LC' 
		ELSE 'UNKNOWN' 
	END AS ORIG_SRC
	,C.LD_LON_ACL_ADD
	,C.LC_STA_LON10
FROM LIST A
INNER JOIN PKUB.LN10_LON C
	ON a.BF_SSN = C.BF_SSN
LEFT OUTER JOIN PKUB.DW01_DW_CLC_CLU E
	ON C.BF_SSN = E.BF_SSN
	AND C.LN_SEQ = E.LN_SEQ
LEFT OUTER JOIN PKUB.LN72_INT_RTE_HST D
	ON C.BF_SSN = D.BF_SSN
	AND C.LN_SEQ = D.LN_SEQ
	AND D.LC_STA_LON72 = 'A'
	AND D.LD_ITR_EFF_BEG <= TODAY() 
	AND D.LD_ITR_EFF_END >= TODAY() 
LEFT OUTER JOIN PKUB.LN90_FIN_ATY g
	on c.bf_ssn = g.bf_ssn
	and c.ln_seq = g.ln_seq
	and g.lc_sta_lon90 = 'A'
	AND G.PC_FAT_TYP || g.pc_fat_sub_typ in ('0291','0101')
LEFT OUTER JOIN LST_PMT I
	on c.bf_ssn = i.bf_ssn
	and c.ln_seq = i.ln_seq
left outer JOIN pkub.LN90_FIN_ATY j
	ON c.BF_SSN = j.BF_SSN
	AND c.LN_SEQ = j.LN_SEQ
	and j.pc_fat_typ = '04'
	and j.pc_fat_sub_typ = '98'
WHERE
	C.LD_LON_ACL_ADD <= &finishes
ORDER BY A.BF_SSN;

CREATE TABLE DSB AS
SELECT A.BF_SSN
	,B.LN_SEQ
	,B.LA_DSB
	,B.LD_DSB
FROM LIST A
INNER JOIN (SELECT BF_SSN
					,LN_SEQ 
					,MAX(LN_BR_DSB_SEQ) AS LN_BR_DSB_SEQ
			FROM PKUB.LN15_DSB 
			GROUP BY BF_SSN, LN_SEQ) C
	ON A.BF_SSN = C.BF_SSN
INNER JOIN PKUB.LN15_DSB B
	ON C.BF_SSN = B.BF_SSN
	AND C.LN_SEQ = B.LN_SEQ
	AND C.LN_BR_DSB_SEQ = B.LN_BR_DSB_SEQ;

	/*	TODO:  remove if LN10.LD_LON_ACL_ADD works*/
/*CREATE TABLE BCH AS*/
/*SELECT A.BF_SSN*/
/*	,D.PD_LON_ACL_ADD*/
/*FROM LIST A*/
/*INNER JOIN PKUB.BT35_MNR_BCH_BR B*/
/*	ON A.BF_SSN = B.PF_SSN*/
/*INNER JOIN PKUB.BT30_MNR_BCH C*/
/*	ON B.PF_MAJ_BCH = C.PF_MAJ_BCH*/
/*	AND B.PF_MNR_BCH = C.PF_MNR_BCH*/
/*INNER JOIN PKUB.BT20_MAJ_BCH D*/
/*	ON C.PF_MAJ_BCH = D.PF_MAJ_BCH;*/

CREATE TABLE CRB AS
SELECT A.BF_SSN 
	,LN41.LN_SEQ
	,LN41.LC_RPT_STA_CRB
	,LN41.LD_RPT_CRB
FROM LIST A
INNER JOIN (SELECT BF_SSN
					,LN_SEQ
					,MAX(LD_RPT_CRB) AS LD_RPT_CRB
				FROM PKUB.LN41_LON_CRB_RPT
				WHERE LC_STA_LN41 = 'R'
				GROUP BY BF_SSN, LN_SEQ) B
	ON A.BF_SSN = B.BF_SSN
INNER JOIN PKUB.LN41_LON_CRB_RPT LN41
	ON LN41.BF_SSN = B.BF_SSN
	AND LN41.LN_SEQ = B.LN_SEQ
	AND LN41.LD_RPT_CRB = B.LD_RPT_CRB
WHERE LN41.LC_STA_LN41 = 'R';

CREATE TABLE DFR AS
SELECT A.BF_SSN
	,A.LN_SEQ
	,B.LC_DFR_TYP
	,A.LD_DFR_BEG
	,A.LD_DFR_END
	,A.LD_DFR_APL
FROM LIST C
INNER JOIN pkub.LN50_BR_DFR_APV a
ON C.BF_SSN = A.BF_SSN
INNER JOIN pkub.DF10_BR_DFR_REQ B
	ON A.BF_SSN = B.BF_SSN
	AND A.LF_DFR_CTL_NUM = B.LF_DFR_CTL_NUM
WHERE A.LC_STA_LON50 = 'A'
	AND B.LC_DFR_STA = 'A'
	AND B.LC_STA_DFR10 = 'A'
	AND A.LD_DFR_BEG <= &iFINISH
	AND A.LD_DFR_END >= &iFINISH
	AND A.LD_DFR_APL <= &iFINISH;
;

CREATE TABLE FBR AS
SELECT A.BF_SSN
	,A.LN_SEQ
	,STRIP(B.LC_FOR_TYP||B.LC_FOR_SUB_TYP) AS LC_FOR_TYP

	,A.LD_FOR_BEG
	,A.LD_FOR_END
	,A.LD_FOR_APL
FROM LIST C
INNER JOIN pkub.LN60_BR_FOR_APV a
ON C.BF_SSN = A.BF_SSN
INNER JOIN pkub.FB10_BR_FOR_REQ B
	ON A.BF_SSN = B.BF_SSN
	AND A.LF_FOR_CTL_NUM = B.LF_FOR_CTL_NUM
WHERE A.LC_STA_LON60 = 'A'
	AND B.LC_FOR_STA = 'A'
	AND B.LC_STA_FOR10 = 'A'
	AND A.LD_FOR_BEG <= &iFINISH
	AND A.LD_FOR_END >= &iFINISH
	AND A.LD_FOR_APL <= &iFINISH;

/*	TODO:  remove if LN10.LD_LON_ACL_ADD works*/
/*proc sort data=bch; by bf_ssn PD_LON_ACL_ADD; run;*/
/*data bch; set bch; by bf_ssn; if last.bf_ssn; run;*/

PROC SQL;
CREATE TABLE ALL AS
SELECT DISTINCT A.*
	,B.*
/*	TODO:  remove if LN10.LD_LON_ACL_ADD works*/
/*	,C.**/
	,D.*
	,E.*
	,F.*
	,G.*
	,H.*
FROM LIST A
LEFT OUTER JOIN DEMO B
	ON A.BF_SSN = B.BF_SSN
/*	TODO:  remove if LN10.LD_LON_ACL_ADD works*/
/*LEFT OUTER JOIN BCH C*/
/*	ON A.BF_SSN = C.BF_SSN*/
LEFT OUTER JOIN LOAN D
	ON A.BF_SSN = D.BF_SSN
LEFT OUTER JOIN DSB E
	ON D.BF_SSN = E.BF_SSN
	AND D.LN_SEQ = E.LN_SEQ
LEFT OUTER JOIN CRB F
	ON D.BF_SSN = F.BF_SSN
	AND D.LN_SEQ = F.LN_SEQ
LEFT OUTER JOIN DFR G
	ON D.BF_SSN = G.BF_SSN
	AND D.LN_SEQ = G.LN_SEQ
LEFT OUTER JOIN FBR H
	ON D.BF_SSN = H.BF_SSN
	AND D.LN_SEQ = H.LN_SEQ
;
QUIT;
PROC SORT DATA=ALL nodupkey; BY BF_SSN LN_SEQ; RUN;

ENDRSUBMIT;
DATA ALL; SET LEGEND.ALL; RUN;

/*get status from monthly data set*/
PROC SQL;
	CREATE TABLE ALL AS
		SELECT
			ALL.*,
			MDS.WC_DW_LON_STA AS MO_STA
		FROM
			ALL
			LEFT JOIN MODS.&MODSNAME MDS
				ON ALL.BF_SSN = MDS.BF_SSN
				AND ALL.LN_SEQ = MDS.LN_SEQ
	;
QUIT;
			 
/*read format data from data set*/
DATA FRMTS (DROP=ATTRIBUTE TRANSLATION_TYPE);
	SET PROGREVW.CODE_TRANSLATIONS (RENAME=(SYSTEM_CODE=START TRANSLATED_CODE=LABEL));
	WHERE TRANSLATION_TYPE IN ('FSA Code','EA27 Code');

	IF ATTRIBUTE = 'LN10.IC_LON_PGM' THEN FMTNAME = '$LONPGM';
	ELSE IF ATTRIBUTE = 'DW01.WC_DW_LON_STA' THEN FMTNAME = '$LONSTA';
	ELSE IF ATTRIBUTE = 'DF10.LC_DFR_TYP' THEN FMTNAME = '$DEFSTA';
	ELSE IF ATTRIBUTE = 'FB10.LC_FOR_TYP+SUB_TYP' THEN FMTNAME = '$FORSTA';
	ELSE IF ATTRIBUTE = 'LN56.LC_RPT_STA_CRB' THEN FMTNAME = '$STACRB';
	ELSE FMTNAME='$NA';
	
RUN;

/*create format*/
PROC FORMAT
		LIBRARY=WORK
		CNTLIN=FRMTS;
RUN;

DATA SHEET1 (DROP=LR_ITR WC_DW_LON_STA DF_SPE_ACC_ID LN_SEQ IC_LON_PGM LC_STA_LON10 LC_DFR_TYP LD_DFR_BEG LD_DFR_END LD_DFR_APL LC_FOR_TYP LD_FOR_BEG LD_FOR_END LD_FOR_APL MO_STA LC_RPT_STA_CRB);
	LABEL 
		RUN_DT = 'DATE EXTRACTED'
		BF_SSN = 'SSN'
		DM_PRS_1 = 'FIRST NAME'
		DM_PRS_LST = 'LAST NAME'
		STREET = 'STREET'
		DM_CT = 'CITY'
		DC_DOM_ST = 'STATE'
		DF_ZIP_CDE = 'ZIP'
		DD_BRT = 'BIRTH DATE'
		TYP = 'LOAN TYPE'
		LON_PGM = 'LOAN PROGRAM'
		LR_ITRC = 'INTEREST RATE'
		LOAN_STATUS = 'LOAN STATUS'
		LA_OTS_PRI_ELG = 'PRINCIPAL BALANCE OUTSTANDING'
		WA_TOT_BRI_OTS = 'INTEREST OUTSTANDING'
		TOT_BAL = 'TOTAL BALANCE'
		LA_DSB = 'LAST DISBURSEMENT'
		LD_DSB = 'LAST DISBURSEMENT DATE'
		LST_PMT_TOT = 'LAST PAYMENT AMOUNT TOTAL'
		LST_PMT_LON = 'LAST PAYMENT AMOUNT LOAN'
		LD_FAT_EFF = 'DATE ASSIGNED TO DMCS'
		ORIG_SRC = 'DIRECT LOAN ORIGINATION SOURCE'
		LD_LON_ACL_ADD = 'DATE ADDED'
		LD_RPT_CRB = 'CRB REPORT DATE'
		STA_CRB = 'CRB STATUS REPORTED'
	;

	SET ALL ;

	LR_ITRC = CATS(PUT(LR_ITR,8.3),'%');
	RUN_DT = TODAY();
	TYP = PUT(IC_LON_PGM,$LONPGM.);

	LENGTH LOAN_STATUS $35.;
	FORMAT RUN_DT DD_BRT LD_DSB LD_FAT_EFF LD_LON_ACL_ADD LD_RPT_CRB MMDDYY10. ;
	FORMAT LST_PMT_TOT LST_PMT_LON TOT_BAL LA_DSB LA_OTS_PRI_ELG WA_TOT_BRI_OTS DOLLAR18.2 ;

	IF WC_DW_LON_STA = 'D' THEN LOAN_STATUS = PUT(WC_DW_LON_STA, $LONSTA.);
	ELSE IF LC_FOR_TYP ^= '' THEN LOAN_STATUS = TRIM(PUT('05',$LONSTA.))||PUT(LC_FOR_TYP,$FORSTA.);
	ELSE IF LC_DFR_TYP ^= '' THEN LOAN_STATUS = TRIM(PUT('04',$LONSTA.))||PUT(LC_DFR_TYP,$DEFSTA.);
	ELSE IF WC_DW_LON_STA IN ('04','05') AND MO_STA NOT IN ('04','05') THEN LOAN_STATUS = PUT(MO_STA, $LONSTA.);
	ELSE IF WC_DW_LON_STA IN ('04','05') THEN LOAN_STATUS = PUT('03', $LONSTA.);
	ELSE LOAN_STATUS = PUT(WC_DW_LON_STA, $LONSTA.);

	STA_CRB = PUT(LC_RPT_STA_CRB, $STACRB.);
RUN;


/*for testing*/
PROC EXPORT
		DATA=SHEET1
		OUTFILE='T:\SAS\UTNWC14R2.XLSX'
		REPLACE
		LABEL;
RUN;


/*	TODO:  remove these notes if LN10.LD_LON_ACL_ADD works*/
/*BCH.PD_LON_ACL_ADD replaced with LN10.LD_LON_ACL_ADD*/
