*-------------------------------*
| UTLWO92 - Disclosures Sent QC |
*-------------------------------*;
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWO92.LWO92R2";
FILENAME REPORT3 "&RPTLIB/ULWO92.LWO92R3";
FILENAME REPORTZ "&RPTLIB/ULWO92.LWO92RZ";

/***********************************************************************************************
* HOLIDAY PROCESSING - THIS INFO GATHERED FROM http://aa.usno.navy.mil/faq/docs/holidays.html
************************************************************************************************
* New Year's Day                    January 1 FOR CURRENT AND NEXT YEAR
* Independence Day                  July 4
* Pioneer Day						July 24
* Christmas Day                     December 25
* Martin Luther King's Birthday		Third Monday in January
* Washington's Birthday				Third Monday in February
* Memorial Day						Last Monday in May
* Labor Day							First Monday in September
* Thanksgiving						Fourth Thursday in November
* Day after Thanksgiving			Friday after the fourth Thursday in November
***********************************************************************************************/
DATA _NULL_;
	CALL SYMPUT('THIS_YR',PUT(YEAR(TODAY()),4.));
	CALL SYMPUT('NEXT_YR',PUT(YEAR(TODAY())+1,4.));
RUN;

DATA HOLIDAYS (KEEP=HOL OBHOL) ;
FORMAT HOL OBHOL MMDDYY10.;
DO HOL="01JAN&THIS_YR"D TO "01JAN&NEXT_YR"d;
	MNTH = MONTH(HOL);
	WKDY = WEEKDAY(HOL);
	C = CEIL(DAY(HOL)/7);
	IF WKDY = 1 THEN OBHOL = HOL+1;
		ELSE IF WKDY = 7 THEN OBHOL = HOL-1;
		ELSE OBHOL = HOL;
	IF HOL IN ("01JAN&NEXT_YR"d,"01JAN&THIS_YR"d,"04JUL&THIS_YR"d,"24JUL&THIS_YR"d,
	"25DEC&THIS_YR"d) THEN OUTPUT;
	ELSE IF MNTH = 1 AND WKDY = 2 AND C=3 THEN OUTPUT ; *Martin Luther King's Birthday;
	ELSE IF MNTH = 2 AND WKDY = 2 AND C=3 THEN OUTPUT; *Washington's Birthday;
	ELSE IF MNTH = 11 AND WKDY = 5 AND C=4 THEN OUTPUT; *Thanksgiving;
	ELSE IF MNTH = 5 AND WKDY = 2 AND DAY(HOL) > 24 THEN OUTPUT ; *Memorial Day;
	ELSE IF MNTH = 9 AND WKDY = 2 AND DAY(HOL) <= 7 THEN OUTPUT ; *Labor Day;
	ELSE IF MNTH = 11 AND WKDY = 6 AND 22 < DAY(HOL) < 30 THEN OUTPUT ; *Black Friday;
END;
RUN;


/************************************************
* CALCULATE 8 AND 10 BUSINESS DAYS FROM TODAY 
* ACCOUNT FOR HOLIDAYS AND WEEKENDS
*************************************************/
DATA BUSDAY;
FORMAT BD MMDDYY10.;
	DO BD = TODAY()-1 TO TODAY()-30 by -1;
		OUTPUT;
	END;
RUN;

PROC SQL;
CREATE TABLE BUS_DAYS AS 
SELECT A.BD
	,CASE 
		WHEN WEEKDAY(BD) IN (2 3 4 5 6) AND B.OBHOL = . THEN 1
		ELSE 0
	 END AS D
FROM BUSDAY A
LEFT OUTER JOIN HOLIDAYS B
	ON A.BD = B.OBHOL
ORDER BY A.BD DESC
;
QUIT;
DATA BUS_DAYS;
SET BUS_DAYS;
	BD_NUM+D;
RUN;
PROC SORT DATA = BUS_DAYS; 
	BY DESCENDING BD BD_NUM ; 
RUN;
DATA _NULL_; *BD_NUM IS THE NUMBER OF BUSINESS DAYS AGO, D=1 IF OPEN,D=0 IF WE ARE CLOSED;
SET BUS_DAYS;
BY BD_NUM;
IF FIRST.BD_NUM;
IF BD_NUM = 2 THEN CALL SYMPUT('BUS_DAYS_AGO_2',PUT(BD,5.));
ELSE IF BD_NUM = 3 THEN CALL SYMPUT('BUS_DAYS_AGO_3',PUT(BD,5.));
ELSE IF BD_NUM = 4 THEN CALL SYMPUT('BUS_DAYS_AGO_4',PUT(BD,5.));
ELSE IF BD_NUM = 5 THEN CALL SYMPUT('BUS_DAYS_AGO_5',PUT(BD,5.));
ELSE IF BD_NUM = 10 THEN CALL SYMPUT('BUS_DAYS_AGO_10',PUT(BD,5.));
RUN;

/*INPUT LOAN TYPES FOR PRIVATE AND FFEL LOANS*/
%SYSLPUT BUS_DAYS_AGO_2 = &BUS_DAYS_AGO_2;
%SYSLPUT BUS_DAYS_AGO_3 = &BUS_DAYS_AGO_3; 
%SYSLPUT BUS_DAYS_AGO_4 = &BUS_DAYS_AGO_4;
%SYSLPUT BUS_DAYS_AGO_5 = &BUS_DAYS_AGO_5;
%SYSLPUT BUS_DAYS_AGO_10 = &BUS_DAYS_AGO_10;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;
%LET TBLLIB = /sas/whse/progrevw;

DATA LOAN_TYPES;
	FORMAT LN_TYP LN_PGM $50.;
	INFILE "&TBLLIB/GENR_REF_LoanTypes.txt" DLM=',' MISSOVER DSD;
	INFORMAT LN_TYP LN_PGM $50.;
	INPUT LN_TYP LN_PGM ;
	LN_PGM = UPCASE(LN_PGM);
RUN;
/*CREATE MACRO VARIALBE LISTS OF LOAN PROGRAMS(FFEL AND PRIVATE LOANS)*/
PROC SQL NOPRINT;
	SELECT "'"||TRIM(LN_TYP)||"'" 
		INTO :FFELP_LIST SEPARATED BY "," /*FFEL LOAN LIST*/
	FROM LOAN_TYPES
	WHERE LN_PGM = 'FFEL';
QUIT;
PROC SQL;
CREATE TABLE LD AS
	SELECT DF10.BF_SSN
		,LN50.LN_SEQ
		,LN50.LD_DFR_BEG	AS LD_BEG
		,LN50.LD_DFR_END	AS LD_END
	FROM DLGSUTWH.DF10_BR_DFR_REQ DF10
	INNER JOIN DLGSUTWH.LN50_BR_DFR_APV LN50
		ON DF10.BF_SSN = LN50.BF_SSN
		AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
	WHERE DF10.LC_STA_DFR10 = 'A'
		AND DF10.LC_DFR_STA = 'A'
		AND LN50.LC_STA_LON50 = 'A'
UNION
	SELECT FB10.BF_SSN
		,LN60.LN_SEQ
		,LN60.LD_FOR_BEG	AS LD_BEG
		,LN60.LD_FOR_END	AS LD_END
	FROM DLGSUTWH.FB10_BR_FOR_REQ FB10
	INNER JOIN DLGSUTWH.LN60_BR_FOR_APV LN60
		ON FB10.BF_SSN = LN60.BF_SSN
		AND FB10.LF_DFR_CTL_NUM = LN60.LF_FOR_CTL_NUM
	WHERE FB10.LC_STA_FOR10 = 'A'
		AND FB10.LC_FOR_STA = 'A'
		AND LN60.LC_STA_LON60 = 'A';

CREATE TABLE BL10 AS
	SELECT DISTINCT A.BF_SSN
		,A.LD_BIL_DU
FROM DLGSUTWH.BL10_BR_BIL A
INNER JOIN LD B  
	ON A.BF_SSN = B.BF_SSN
WHERE A.LD_BIL_DU >= TODAY()-5
	AND A.LD_BIL_DU BETWEEN B.LD_BEG AND B.LD_END;

CREATE TABLE AY10 AS
SELECT DISTINCT BF_SSN
FROM DLGSUTWH.AY10_BR_LON_ATY 
WHERE PF_REQ_ACT = 'B314Q'
	AND LD_ATY_REQ_RCV >= TODAY()-35;

CREATE TABLE LN15 AS
SELECT F.BF_SSN
	,F.LN_SEQ
FROM (SELECT BF_SSN
		,LN_SEQ
		,MAX(LN_LON_DSB_SEQ) AS LN_LON_DSB_SEQ
	FROM DLGSUTWH.LN15_DSB
	GROUP BY BF_SSN	,LN_SEQ) E
INNER JOIN DLGSUTWH.LN15_DSB F
	ON E.BF_SSN = F.BF_SSN
	AND E.LN_SEQ = F.LN_SEQ
	AND E.LN_LON_DSB_SEQ = F.LN_LON_DSB_SEQ
WHERE F.LA_DSB = COALESCE(F.LA_DSB_CAN,0)
	AND F.LD_DSB BETWEEN &BUS_DAYS_AGO_10 AND &BUS_DAYS_AGO_3;

CREATE TABLE D2 AS
SELECT DISTINCT A.BF_SSN
	,A.LN_SEQ
	,B.LD_NTF_SCL_SPR
FROM DLGSUTWH.LN13_LON_STU_OSD A
INNER JOIN DLGSUTWH.SD10_STU_SPR B
	ON A.LF_STU_SSN = B.LF_STU_SSN
	AND A.LN_STU_SPR_SEQ = B.LN_STU_SPR_SEQ
WHERE A.LC_STA_LON13 = 'A'
	AND B.LC_STA_STU10 = 'A'
	AND B.LD_NTF_SCL_SPR BETWEEN TODAY()-7 AND TODAY();

CREATE TABLE COCYDE AS
SELECT DISTINCT C.DF_SPE_ACC_ID
	,A.LF_LON_ALT||'0'||left(put(A.LN_LON_ALT_SEQ,2.)) AS CLUID
	,A.BF_SSN
	,A.LN_SEQ
	,A.IC_LON_PGM
	,A.LD_LON_1_DSB
FROM DLGSUTWH.PD10_PRS_NME C
LEFT OUTER JOIN AY10 X	
	ON C.DF_PRS_ID = X.BF_SSN
INNER JOIN DLGSUTWH.LN10_LON A
	ON C.DF_PRS_ID = A.BF_SSN
INNER JOIN DLGSUTWH.DW01_DW_CLC_CLU B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN LD
	ON C.DF_PRS_ID = LD.BF_SSN
	AND A.LN_SEQ = LD.LN_SEQ
LEFT OUTER JOIN BL10 
	ON A.BF_SSN = BL10.BF_SSN
LEFT OUTER JOIN LN15 E
	ON A.BF_SSN = E.BF_SSN
	AND A.LN_SEQ = E.LN_SEQ
LEFT OUTER JOIN D2
	ON A.BF_SSN = D2.BF_SSN
	AND A.LN_SEQ = D2.LN_SEQ
LEFT OUTER JOIN DLGSUTWH.RS10_BR_RPD RS10
	ON A.BF_SSN = RS10.BF_SSN
WHERE X.BF_SSN IS NULL
	AND A.LA_CUR_PRI > 0
	AND A.LC_STA_LON10 = 'R'
	AND A.IC_LON_PGM IN (&FFELP_LIST)
	AND (B.WD_LON_RPD_SR BETWEEN &BUS_DAYS_AGO_5 AND TODAY()
		AND NOT (A.IC_LON_PGM IN ('STFFRD','UNSTFD')
			AND ((RS10.LD_RPS_1_PAY_DU IS NULL 
				AND LD.LD_BEG = B.WD_LON_RPD_SR)
			OR (BL10.LD_BIL_DU > B.WD_LON_RPD_SR
				AND BL10.LD_BIL_DU BETWEEN LD.LD_BEG AND LD.LD_END))))
	AND ((b.WD_LON_RPD_SR BETWEEN &BUS_DAYS_AGO_10 AND &BUS_DAYS_AGO_3
			AND D2.LD_NTF_SCL_SPR > b.WD_LON_RPD_SR)
		OR (A.IC_LON_PGM IN ('PLUS','PLUSGB')
			AND E.BF_SSN IS NOT NULL)
		OR (B.WD_LON_RPD_SR - LD.LD_BEG <= 30
			AND LD.LD_END BETWEEN TODAY()-5 AND TODAY()))
;
QUIT;

ENDRSUBMIT;
DATA COCYDE ;
	SET WORKLOCL.COCYDE;
RUN;
PROC SORT DATA=COCYDE NODUPKEY;
	BY DF_SPE_ACC_ID LN_SEQ;
RUN;
DATA _NULL_;
SET COCYDE ;
LENGTH DESCRIPTION $600.;
USER = ' ';
ACT_DT = ' ';
DESCRIPTION = CATX(',',
		'ACCOUNT NUMBER ' || DF_SPE_ACC_ID 
		,'LOAN ID ' || CLUID 
		,'DISBURSEMENT DATE ' || PUT(LD_LON_1_DSB, MMDDYY10.)
		,'LOAN TYPE ' || IC_LON_PGM
);
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
IF _N_ = 1 THEN DO;
	PUT "USER,ACT_DT,DESCRIPTION";
END;
DO;
   PUT USER $ @;
   PUT ACT_DT @;
   PUT DESCRIPTION $ ;
END;
RUN;
DATA _NULL_;
SET COCYDE ;
LENGTH DESCRIPTION $600.;
USER = ' ';
ACT_DT = ' ';
DESCRIPTION = CATX(',',
		'ACCOUNT NUMBER ' || DF_SPE_ACC_ID 
		,'LOAN ID ' || CLUID 
		,'DISBURSEMENT DATE ' || PUT(LD_LON_1_DSB, MMDDYY10.)
		,'LOAN TYPE ' || IC_LON_PGM
);
FILE REPORT3 DELIMITER=',' DSD DROPOVER LRECL=32767;
IF _N_ = 1 THEN DO;
	PUT "USER,ACT_DT,DESCRIPTION";
END;
DO;
   PUT USER $ @;
   PUT ACT_DT @;
   PUT DESCRIPTION $ ;
END;
RUN;
