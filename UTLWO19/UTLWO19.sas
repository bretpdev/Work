/*=========================================*/
/*UTLWO19 PLUS INTEREST CREDIT*/
/*=========================================*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
OPTIONS SYMBOLGEN;
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWO19.LWO19R2";
FILENAME REPORT3 "&RPTLIB/ULWO19.LWO19R3";
FILENAME REPORT4 "&RPTLIB/ULWO19.LWO19R4";
FILENAME REPORT5 "&RPTLIB/ULWO19.LWO19R5";
FILENAME REPORT6 "&RPTLIB/ULWO19.LWO19R6";
FILENAME REPORT7 "&RPTLIB/ULWO19.LWO19R7";
FILENAME REPORT8 "&RPTLIB/ULWO19.LWO19R8";
FILENAME REPORT9 "&RPTLIB/ULWO19.LWO19R9";
FILENAME REPORTZ "&RPTLIB/ULWO19.LWO19RZ";

%LET BEGIN_DT = '07/01/1999';
%LET END_DT = '06/30/2006';

DATA _NULL_;
     CALL SYMPUT('CRT_DT',INTNX('DAY',TODAY(),-14,'BEGINNING'));
     CALL SYMPUT('CURDATE',INTNX('DAY',TODAY(),0,'BEGINNING'));
	 CALL SYMPUT('RUNDT',PUT(INTNX('DAY',TODAY(),0,'BEGINNING'),MMDDYYS10.));
RUN;

%SYSLPUT BEGIN_DT = &BEGIN_DT;
%SYSLPUT END_DT = &END_DT;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;

%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	FILENAME REPORTZ "&RPTLIB/&SQLRPT";
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;

PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE IBPIFS AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,A.LN_SEQ
	,A.LA_LON_AMT_GTR
	,A.LD_PIF_RPT
	,C.DF_SPE_ACC_ID
	,C.DM_PRS_1
	,C.DM_PRS_LST
	,E.DX_STR_ADR_1
	,E.DX_STR_ADR_2
	,E.DX_STR_ADR_3
	,E.DM_CT
	,E.DC_DOM_ST 
	,E.DM_FGN_ST
	,E.DM_FGN_CNY 
	,E.DF_ZIP_CDE
	,E.DC_ADR	
	,A.LD_LON_1_DSB
	,A.IC_LON_PGM
	,A.LA_CUR_PRI
	,E.DI_VLD_ADR
	,B.TRX_TYP
	,B.LA_FAT_NSI
	,B.LD_FAT_EFF
	,D.WD_LON_RPD_SR
	,D.WC_DW_LON_STA 
	,LN85.U1029_IND
FROM OLWHRM1.LN10_LON A 
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU D
	 ON A.BF_SSN = D.BF_SSN
	 AND A.LN_SEQ = D.LN_SEQ
INNER JOIN OLWHRM1.PD10_PRS_NME C
	 ON A.BF_SSN = C.DF_PRS_ID 	
INNER JOIN OLWHRM1.PD30_PRS_ADR E
	 ON C.DF_PRS_ID = E.DF_PRS_ID
	 AND E.DC_ADR = 'L'	
LEFT OUTER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,PC_FAT_TYP||PC_FAT_SUB_TYP AS TRX_TYP
		,ABS(SUM(LA_FAT_NSI)) AS LA_FAT_NSI
		,LD_FAT_EFF
	 FROM OLWHRM1.LN90_FIN_ATY 
	 WHERE PC_FAT_TYP = '10'
	 AND PC_FAT_SUB_TYP IN ('10','11','70','80')
	 AND LC_STA_LON90 = 'A'
	 AND LC_FAT_REV_REA = ' '
	 GROUP BY BF_SSN 
	 	,LN_SEQ
		,PC_FAT_TYP||PC_FAT_SUB_TYP
		,LD_FAT_EFF
	) B
	 ON A.BF_SSN = B.BF_SSN
	 AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN (
	SELECT Y.BF_SSN
		,Y.LN_SEQ
		,'X' AS U1029_IND
	FROM OLWHRM1.LN85_LON_ATY Y
	INNER JOIN OLWHRM1.AY10_BR_LON_ATY Z
		ON Y.BF_SSN = Z.BF_SSN
		AND Y.LN_ATY_SEQ = Z.LN_ATY_SEQ
	WHERE Z.LC_STA_ACTY10 = 'A'
	AND Z.PF_REQ_ACT = 'U1029'
	 ) LN85
	ON A.BF_SSN = LN85.BF_SSN
	AND A.LN_SEQ = LN85.LN_SEQ

WHERE A.IC_LON_PGM = 'PLUS'
AND A.LF_LON_CUR_OWN = '828476'
AND	A.LD_LON_1_DSB BETWEEN &BEGIN_DT AND &END_DT
AND	A.LC_STA_LON10 = 'R'
AND NOT EXISTS (
	SELECT *
	FROM OLWHRM1.LN90_FIN_ATY X
	WHERE X.BF_SSN = A.BF_SSN
	AND X.LN_SEQ = A.LN_SEQ
	AND X.LC_STA_LON90 = 'A'
	AND X.LC_FAT_REV_REA = ' ' 
	AND X.PC_FAT_TYP = '10'
	AND X.PC_FAT_SUB_TYP = '29'
	)
AND NOT EXISTS (
	SELECT *
	FROM OLWHRM1.LN85_LON_ATY Y
	INNER JOIN OLWHRM1.AY10_BR_LON_ATY Z
		ON Y.BF_SSN = Z.BF_SSN
		AND Y.LN_ATY_SEQ = Z.LN_ATY_SEQ
	WHERE Y.BF_SSN = A.BF_SSN
	AND Y.LN_SEQ = A.LN_SEQ
	AND Z.LC_STA_ACTY10 = 'A'
	AND Z.PF_REQ_ACT = 'U1029'
	)
FOR READ ONLY WITH UR
);

CREATE TABLE LSCON AS
SELECT DISTINCT A.*
FROM CONNECTION TO DB2 (
	SELECT BF_SSN
		,LN_SEQ AS CNSL_SEQ
		,IC_LON_PGM AS CNSL_TYP
		,LA_CUR_PRI AS CNSL_BAL
		,LD_LON_1_DSB AS CNSL_1_DSB
	FROM OLWHRM1.LN10_LON 
	WHERE IC_LON_PGM IN 
		('SUBCNS','SUBSPC','UNCNS','UNSPC')
	AND LA_CUR_PRI > 0
	) A
	INNER JOIN IBPIFS B
		ON A.BF_SSN = B.BF_SSN
;

CREATE TABLE LCO AS
SELECT DISTINCT A.*
FROM CONNECTION TO DB2 (
	SELECT DISTINCT AP1A.DF_LCO_PRS_SSN_BR AS BF_SSN
		,AP1A.AN_LCO_APL_SEQ
		,AP1A.AD_LCO_APL_DSB
		,INT(SUBSTR(LC10.LF_UND_LN_ACC_NUM, 8,2)) AS LN_SEQ	
	FROM OLWHRM1.AP1A_LCO_APL AP1A 
	INNER JOIN OLWHRM1.LC10_UND_LN_INF LC10
		ON AP1A.DF_LCO_PRS_SSN_BR = LC10.DF_LCO_PRS_SSN_BR
		AND AP1A.AN_LCO_APL_SEQ = LC10.AN_LCO_APL_SEQ
	WHERE LC10.LI_UND_LN_CON = 'Y'
	AND SUBSTR(LC10.LF_UND_LN_ACC_NUM,1,4) = 'L0UT'
	FOR READ ONLY WITH UR
	) A
	INNER JOIN IBPIFS B
		ON A.BF_SSN = B.BF_SSN
		AND A.LN_SEQ = B.LN_SEQ
;
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWO19.LWO19RZ);*/
/*QUIT;*/
ENDRSUBMIT;

DATA IBPIFS;SET WORKLOCL.IBPIFS;RUN;
DATA LCO;SET WORKLOCL.LCO;RUN;
DATA LSCON;SET WORKLOCL.LSCON;RUN;

PROC SORT DATA=LSCON NODUPREC;BY BF_SSN CNSL_SEQ;RUN;

PROC SQL;
CREATE TABLE LCOD2X AS 
SELECT A.BF_SSN
	,A.CNSL_SEQ
	,A.CNSL_TYP
	,A.CNSL_BAL
	,A.CNSL_1_DSB
	,B.LN_SEQ
	,B.AD_LCO_APL_DSB
FROM LSCON A
INNER JOIN LCO B
	ON A.BF_SSN = B.BF_SSN
	AND A.CNSL_1_DSB = B.AD_LCO_APL_DSB
ORDER BY BF_SSN
	,AD_LCO_APL_DSB
;
QUIT;

PROC SQL;
CREATE TABLE LCOD3X AS 
SELECT A.BF_SSN
	,A.AD_LCO_APL_DSB
	,COUNT(DISTINCT CNSL_TYP) AS COUNT
FROM LCOD2X A
GROUP BY A.BF_SSN
	,A.AD_LCO_APL_DSB
ORDER BY BF_SSN
	,AD_LCO_APL_DSB
;
QUIT;

DATA LCOD2;
MERGE LCOD2X LCOD3X;
BY BF_SSN AD_LCO_APL_DSB;
IF COUNT > 1 AND CNSL_TYP = 'SUBCNS' THEN DELETE;
ELSE OUTPUT;
RUN;

/*CALCULATE ONE YEAR MINUS ONE DAY FROM THE REPAYMENT BEGIN DATE*/
DATA IBPIFS (DROP=MNTHPRT DYPRT YRPRT DT1 DT2);
SET IBPIFS;
FORMAT YTD MMDDYY10.;
IF MONTH(WD_LON_RPD_SR) < 10 THEN MNTHPRT = '0'||LEFT(TRIM(MONTH(WD_LON_RPD_SR)));
	ELSE MNTHPRT = LEFT(TRIM(MONTH(WD_LON_RPD_SR)));
IF DAY(WD_LON_RPD_SR) < 10 THEN DYPRT = '0'||LEFT(TRIM(DAY(WD_LON_RPD_SR)));
	ELSE DYPRT = LEFT(TRIM(DAY(WD_LON_RPD_SR)));
YRPRT = LEFT(TRIM(YEAR(WD_LON_RPD_SR)+1));
DT1=TRIM(MNTHPRT)||'/'||TRIM(DYPRT)||'/'||TRIM(YRPRT);
DT2=INPUT(DT1,MMDDYY10.); 
YTD = DT2-1;
RUN;

/*SUMMERIZE AND BRING TOTAL INTEREST TO LOAN LEVEL*/
PROC SQL;
CREATE TABLE IBPIFS2 AS
SELECT DISTINCT BF_SSN ,LN_SEQ 
	,LA_LON_AMT_GTR ,DF_SPE_ACC_ID 
	,DM_PRS_1		,DM_PRS_LST
	,DX_STR_ADR_1	,DX_STR_ADR_2	
	,DX_STR_ADR_3	,DM_CT 
	,DC_DOM_ST 		,DM_FGN_ST
	,DM_FGN_CNY
	,DF_ZIP_CDE		,DC_ADR	
	,LD_LON_1_DSB	,IC_LON_PGM 
	,DI_VLD_ADR 	,SUM(COALESCE(LA_FAT_NSI,0)) AS LA_FAT_NSI
	,MAX(LD_FAT_EFF) AS LD_FAT_EFF
	,LD_PIF_RPT		,WC_DW_LON_STA
	,LA_CUR_PRI		,U1029_IND
FROM IBPIFS	
WHERE LD_FAT_EFF BETWEEN WD_LON_RPD_SR AND YTD
AND (	LD_PIF_RPT LE &CRT_DT
		AND LD_PIF_RPT NE .
	 OR 
	 	YTD LE &CRT_DT 
	 )
GROUP BY BF_SSN 		,LN_SEQ 
	,LA_LON_AMT_GTR 	,DF_SPE_ACC_ID 
	,DM_PRS_1			,DM_PRS_LST
	,DX_STR_ADR_1 		,DX_STR_ADR_2	
	,DX_STR_ADR_3 		,DM_CT 
	,DC_DOM_ST 			,DM_FGN_ST
	,DM_FGN_CNY
	,DF_ZIP_CDE			,DC_ADR	
	,LD_LON_1_DSB 		,IC_LON_PGM 
	,DI_VLD_ADR			,LD_PIF_RPT
	,WC_DW_LON_STA		,LA_CUR_PRI
	,U1029_IND;
QUIT;

DATA IBPIFS2 (DROP = KEYBF_SSN MODAY KEYLINE CHKDIG DIG I 
	CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
SET IBPIFS2;
KEYBF_SSN = TRANSLATE(BF_SSN,'MYLAUGHTER','0987654321');
MODAY = PUT(DATE(),MMDDYYN4.);
KEYLINE = "P"||KEYBF_SSN||MODAY||DC_ADR;
CHKDIG = 0;
LENGTH DIG $2.;
DO I = 1 TO LENGTH(KEYLINE);
	IF I/2 NE ROUND(I/2,1) 
		THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
	ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
	IF SUBSTR(DIG,1,1) = " " 
		THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
		ELSE DO;
			CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
			CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
			IF CHK1 + CHK2 >= 10
				THEN DO;
					CHK3 = PUT(CHK1 + CHK2,2.);
					CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
					CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
				END;
			CHKDIG = CHKDIG + CHK1 + CHK2;
		END;
END;
CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
CHECK = PUT(CHKDIGIT,1.);
ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;

PROC SQL;
CREATE TABLE MLTCRT AS
SELECT DISTINCT A.*
	,B.OPN_PLS
	,C.MLTI_CNS
	,D.SNGL_CNS
	
FROM IBPIFS2 A
LEFT OUTER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,'X' AS OPN_PLS
	FROM IBPIFS2
	WHERE LA_CUR_PRI > 0
	 ) B
	ON A.BF_SSN = B.BF_SSN
	AND A.LN_SEQ = B.LN_SEQ
LEFT OUTER JOIN (
	SELECT BF_SSN
		,COUNT(*) AS COUNT
		,'X' AS MLTI_CNS
	FROM LSCON
	GROUP BY BF_SSN
	HAVING COUNT(*) > 1
	 ) C
	ON A.BF_SSN = C.BF_SSN
LEFT OUTER JOIN (
	SELECT BF_SSN
		,COUNT(*) AS COUNT
		,'X' AS SNGL_CNS
	FROM LSCON
	GROUP BY BF_SSN
	HAVING COUNT(*) = 1
	 ) D
	ON A.BF_SSN = D.BF_SSN
;
QUIT;

DATA OPLUS ONE_CNSL TOM_CNSL OTHER;
SET MLTCRT;
IF OPN_PLS = 'X' THEN OUTPUT OPLUS;
ELSE IF SNGL_CNS = 'X' AND 
	OPN_PLS ^= 'X' THEN OUTPUT ONE_CNSL;
ELSE IF MLTI_CNS = 'X' AND 
	OPN_PLS ^= 'X' THEN OUTPUT TOM_CNSL;
ELSE DO;
	OPN_PLS = 'X';
	OUTPUT OTHER;
END;
RUN;

PROC SQL;
CREATE TABLE SNGL_CNS2 AS
SELECT DISTINCT A.*
	,B.CNSL_SEQ
	,B.CNSL_TYP
	,B.CNSL_BAL
	,B.CNSL_1_DSB
FROM ONE_CNSL A
INNER JOIN LCOD2 B
	ON A.BF_SSN = B.BF_SSN
;
QUIT;

PROC SQL;
CREATE TABLE TOM_CNSL2A AS 
SELECT DISTINCT A.*
	,B.CNSL_SEQ
	,B.CNSL_TYP
	,B.CNSL_BAL
	,B.CNSL_1_DSB
FROM TOM_CNSL A
LEFT OUTER JOIN LCOD2 B
	ON A.BF_SSN = B.BF_SSN
WHERE EXISTS (
	SELECT *
	FROM LCO X
	INNER JOIN LSCON Y
		ON Y.BF_SSN = X.BF_SSN
		AND Y.CNSL_1_DSB = X.AD_LCO_APL_DSB
	AND Y.BF_SSN = A.BF_SSN
	AND X.LN_SEQ = A.LN_SEQ
	)
;
QUIT;

PROC SQL;
CREATE TABLE TOM_CNSL2B AS 
SELECT DISTINCT A.*
	,B.CNSL_SEQ
	,B.CNSL_TYP
	,B.CNSL_BAL
	,B.CNSL_1_DSB
FROM TOM_CNSL A
INNER JOIN LSCON B
	ON A.BF_SSN = B.BF_SSN
WHERE NOT EXISTS (
	SELECT *
	FROM TOM_CNSL2A X
	WHERE X.BF_SSN = A.BF_SSN
	AND X.LN_SEQ = A.LN_SEQ
	)
AND B.CNSL_SEQ = (
	SELECT MAX(CNSL_SEQ)
	FROM LSCON Y 
	WHERE Y.BF_SSN = A.BF_SSN
	)
;
QUIT;

DATA IBPIFS3;
SET OPLUS OTHER SNGL_CNS2 TOM_CNSL2A TOM_CNSL2B;
COST_CENTER_CODE = 'MA2324';
RUN;

PROC DATASETS;
DELETE IBPIFS IBPIFS2 ;
QUIT;

PROC SQL ;
CREATE TABLE SUMMARY AS 
SELECT COUNT(*) AS LN_COUNT
	,SUM(LA_FAT_NSI) AS ITOT
FROM IBPIFS3
/*---FILE 3 CRITERIA---*/
WHERE (DI_VLD_ADR EQ 'N' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI GT 0) 
/*---FILE 7 CRITERIA---*/
OR (DI_VLD_ADR EQ 'Y' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI LE 0 AND CNSL_TYP NE ' ')
/*---FILE 8 CRITERIA---*/
OR (DI_VLD_ADR EQ 'Y' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI GT 0)
/*---FILE 9 CRITERIA---*/
OR (DI_VLD_ADR EQ 'N' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI LE 0 AND CNSL_TYP NE ' ')
/*---FILE 3/8 COMMON CRITERIA---*/
OR (LA_CUR_PRI LE 0 AND CNSL_TYP EQ ' ' AND LA_FAT_NSI NE 0)
;
QUIT;

/*---CREATE MARCO VARIABLE IF NO OBS: REPORT 4---*/
DATA _NULL_;
SET SUMMARY;
	CALL SYMPUT('OBCHK',LN_COUNT);
RUN;

DATA IBPIFS4;
SET IBPIFS3;
IF LA_CUR_PRI LE 0 AND CNSL_BAL GT 0 THEN LN_SEQ = CNSL_SEQ;
ELSE LN_SEQ = LN_SEQ;
RUN;

DATA IBPIFS3;
SET IBPIFS3;
IF DC_DOM_ST = '' THEN SVAR=1;
ELSE SVAR=2;
RUN;
*-------------------------------------------------------------------*
|						MACRO DEFINITIONS							|
*-------------------------------------------------------------------*;
%MACRO FL_CREATE(DS,SORTVAR,REPNO,CRIT,FORMAT,PUT);
PROC SORT DATA=&DS;
BY &SORTVAR ;
RUN;
DATA _NULL_;
SET &DS;
&CRIT ;
FILE REPORT&REPNO DELIMITER=',' DSD DROPOVER LRECL=32767;
&FORMAT ;
DO;
&PUT ;
END;
RUN;
%MEND;
%MACRO OB_CHECK;
OPTIONS PAGENO=1 ORIENTATION=LANDSCAPE NODATE CENTER;
OPTIONS PS=39 LS=128;
PROC PRINTTO PRINT=REPORT4 NEW; 
RUN;
%IF &OBCHK = 0 %THEN %DO;
	DATA _NULL_;
	FILE PRINT;
	DO;
		PUT // 128*'-';
		PUT      //////
			@51 '**** NO OBSERVATIONS FOUND ****';
		PUT ////////
			@57 '-- END OF REPORT --';
		PUT ////////////
			@46 "JOB = UTLWO19  	 REPORT = ULWAB1.LWO19R4";
	END;
	RUN;
%END;
%ELSE %DO;
	PROC PRINT NOOBS SPLIT='/' DATA=SUMMARY WIDTH=MIN;
	FORMAT ITOT DOLLAR12.2;
	VAR LN_COUNT ITOT;
	LABEL LN_COUNT = 'TOTAL # OF LOANS' ITOT = 'GRAND TOTAL INTEREST AMOUNT';
	TITLE 'PLUS INTEREST CREDIT';
	TITLE2 "RUNDATE: &RUNDT";
	FOOTNOTE ' JOB=UTLWO19     REPORT=ULWO19.LWO19R4';
	RUN;
%END;
PROC PRINTTO;
RUN;
%MEND OB_CHECK;
*-------------------------------------------------------------------*
|						  CREATE FILES								|
*-------------------------------------------------------------------*;
%FL_CREATE(IBPIFS3,SVAR DC_DOM_ST BF_SSN,2,
	WHERE DI_VLD_ADR EQ 'Y' AND LA_FAT_NSI NE 0;,
	FORMAT BF_SSN $9. DF_SPE_ACC_ID $10. DM_PRS_1 $13. DM_PRS_LST $23. DX_STR_ADR_1 $30. 	
	DX_STR_ADR_2 $30. DX_STR_ADR_3 $30. DM_CT $20. DC_DOM_ST $15. DM_FGN_ST $15. DM_FGN_CNY $15. 
	DF_ZIP_CDE $9. ACSKEY $18. LD_LON_1_DSB MMDDYY10. LA_LON_AMT_GTR 10.2 	LD_FAT_EFF MMDDYY10. 
	LA_FAT_NSI 10.2	LN_SEQ 6. COST_CENTER_CODE $6.,
	PUT BF_SSN $ @;PUT DF_SPE_ACC_ID $ @;PUT DM_PRS_1 $ @;PUT DM_PRS_LST $ @;PUT DX_STR_ADR_1 $ @; 
	PUT DX_STR_ADR_2 $ @;PUT DX_STR_ADR_3 $ @;PUT DM_CT $ @;PUT DC_DOM_ST $ @;PUT DM_FGN_ST $ @;
	PUT DM_FGN_CNY $ @;PUT DF_ZIP_CDE $ @;PUT ACSKEY $ @;PUT LD_LON_1_DSB @;PUT LA_LON_AMT_GTR @;PUT LA_FAT_NSI @;
	PUT LN_SEQ @;PUT DC_DOM_ST $ @;PUT COST_CENTER_CODE $;);

%FL_CREATE(IBPIFS3,BF_SSN,3,
	WHERE DI_VLD_ADR EQ 'N' AND ((LA_FAT_NSI NE 0 AND LA_CUR_PRI GT 0) 
		OR (LA_CUR_PRI LE 0 AND CNSL_TYP EQ ' ' AND LA_FAT_NSI NE 0)),
	FORMAT BF_SSN $9. LA_FAT_NSI 10.2 LN_SEQ 6.,
	PUT BF_SSN $ @; PUT LN_SEQ @; PUT LA_FAT_NSI;);

%FL_CREATE(IBPIFS3,BF_SSN,5,
	WHERE LA_FAT_NSI EQ 0 AND U1029_IND EQ ' ',
	FORMAT BF_SSN $9. LN_SEQ 6.,
	PUT BF_SSN $ @; PUT LN_SEQ ;);

%FL_CREATE(IBPIFS4,BF_SSN,6,
	WHERE LA_FAT_NSI GT 0 AND (
		/*---FILE 3 CRITERIA---*/
		(DI_VLD_ADR EQ 'N' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI GT 0) 
		/*---FILE 7 CRITERIA---*/
		OR (DI_VLD_ADR EQ 'Y' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI LE 0 AND CNSL_TYP NE ' ')
		/*---FILE 8 CRITERIA---*/
		OR (DI_VLD_ADR EQ 'Y' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI GT 0)
		/*---FILE 9 CRITERIA---*/
		OR (DI_VLD_ADR EQ 'N' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI LE 0 AND CNSL_TYP NE ' ')
		/*---FILE 3/8 COMMON CRITERIA---*/
		OR (LA_CUR_PRI LE 0 AND CNSL_TYP EQ ' ' AND LA_FAT_NSI NE 0)
			),
	FORMAT BF_SSN $9. LN_SEQ 6. DM_PRS_LST $23. LA_FAT_NSI 10.2 ,
	PUT BF_SSN $ @; PUT LN_SEQ @; PUT LA_FAT_NSI@; PUT DM_PRS_LST;);

%FL_CREATE(IBPIFS3,BF_SSN,7,
	WHERE DI_VLD_ADR EQ 'Y' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI LE 0 AND CNSL_TYP NE ' ',
	FORMAT BF_SSN $9. LN_SEQ 6. LA_FAT_NSI 10.2 ,
	PUT BF_SSN $ @; PUT LN_SEQ @; PUT LA_FAT_NSI;);

%FL_CREATE(IBPIFS3,BF_SSN,8,
	WHERE DI_VLD_ADR EQ 'Y' AND ((LA_FAT_NSI NE 0 AND LA_CUR_PRI GT 0)
		OR (LA_CUR_PRI LE 0 AND CNSL_TYP EQ ' ' AND LA_FAT_NSI NE 0)),
	FORMAT BF_SSN $9. LN_SEQ 6. LA_FAT_NSI 10.2 ,
	PUT BF_SSN $ @; PUT LN_SEQ @; PUT LA_FAT_NSI;);

%FL_CREATE(IBPIFS3,BF_SSN,9,
	WHERE DI_VLD_ADR EQ 'N' AND LA_FAT_NSI NE 0 AND LA_CUR_PRI LE 0 AND CNSL_TYP NE ' ',
	FORMAT BF_SSN $9. LN_SEQ 6. LA_FAT_NSI 10.2 ,
	PUT BF_SSN $ @; PUT LN_SEQ @; PUT LA_FAT_NSI;);

%OB_CHECK;
