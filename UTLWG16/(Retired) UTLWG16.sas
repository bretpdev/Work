/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWG16.LWG16R2";
FILENAME REPORTZ "&RPTLIB/ULWG16.LWG16RZ";

LIBNAME  WORKLOCL  REMOTE  SERVER=DUSTER  SLIBREF=work  ;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
/*ONELINK ENROLLMENT*/
CREATE TABLE OLENR AS
SELECT STU_SSN
	,STU_ACCTNUM
	,CLUID				LENGTH=19
	,LC_STU_ENR_TYP		
	,LD_STU_ENR_STA
	,LD_XPC_GRD			LENGTH=4 
FROM CONNECTION TO DB2 (
		SELECT A.DF_PRS_ID_STU AS STU_SSN
			,E.DF_SPE_ACC_ID AS STU_ACCTNUM
			,B.AF_APL_ID||B.AF_APL_ID_SFX AS CLUID
			,D.LC_STU_ENR_TYP
			,D.LD_STU_ENR_STA
			,D.LD_XPC_GRD
		/*	,D.LF_STU_ENR_RPT_SEQ*/
		FROM  OLWHRM1.GA01_APP A 
		INNER JOIN OLWHRM1.GA10_LON_APP B
			ON A.AF_APL_ID = B.AF_APL_ID
		INNER JOIN OLWHRM1.GA16_ENR_RPT_CRF C
			ON B.AF_APL_ID = C.AF_APL_ID
			AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
		INNER JOIN OLWHRM1.SD02_STU_ENR D
			ON A.DF_PRS_ID_STU = D.DF_PRS_ID_STU
			AND C.LF_CRT_DTS_SD02 = D.LF_CRT_DTS_SD02
			AND C.LF_STU_ENR_RPT_SEQ = D.LF_STU_ENR_RPT_SEQ
		INNER JOIN OLWHRM1.PD01_PDM_INF E
			ON A.DF_PRS_ID_STU = E.DF_PRS_ID
		WHERE B.AC_LON_TYP IN ('SF','SU')
		/*AND D.LC_STA_SD02 = 'A' */
		/*AND C.AC_STA_GA16 = 'E' */
		AND C.AF_CRT_DTS_GA16 = (
			SELECT MAX(X.AF_CRT_DTS_GA16)
			FROM OLWHRM1.GA16_ENR_RPT_CRF X
			WHERE X.AF_APL_ID = C.AF_APL_ID
			AND X.AF_APL_ID_SFX = C.AF_APL_ID_SFX
	)
ORDER BY E.DF_SPE_ACC_ID, B.AF_APL_ID||B.AF_APL_ID_SFX
);

/*COMPASS ENROLLEMENT*/
CREATE TABLE CPENR AS
SELECT STU_SSN
	,STU_ACCTNUM
	,CLUID				LENGTH=19
	,LN_SEQ
	,LD_SCL_SPR
	,LC_REA_SCL_SPR
	,CP_SEP_REA
FROM CONNECTION TO DB2 (
		SELECT A.LF_STU_SSN AS STU_SSN
			,E.DF_SPE_ACC_ID AS STU_ACCTNUM
			,CASE WHEN A.LN_LON_ALT_SEQ < 10
				THEN A.LF_LON_ALT||'0'||RTRIM(CHAR(A.LN_LON_ALT_SEQ))
				ELSE A.LF_LON_ALT||RTRIM(CHAR(A.LN_LON_ALT_SEQ))
				END AS CLUID
			,A.LN_SEQ
			,C.LD_SCL_SPR
			,C.LC_REA_SCL_SPR
			,CASE C.LC_REA_SCL_SPR
				WHEN '11' THEN 'F'
				WHEN '10' THEN 'H'
				WHEN '08' THEN 'L'
				WHEN '01' THEN 'G'
				WHEN '02' THEN 'W'
				WHEN '05' THEN 'A'
				WHEN '07' THEN 'X'
				WHEN '00' THEN 'FH'
				ELSE ' '
				END AS CP_SEP_REA
		FROM  OLWHRM1.LN10_LON A 
		INNER JOIN OLWHRM1.LN13_LON_STU_OSD B
			ON A.BF_SSN = B.BF_SSN
			AND A.LN_SEQ = B.LN_SEQ
		INNER JOIN OLWHRM1.SD10_STU_SPR C
			ON B.LF_STU_SSN = C.LF_STU_SSN
			AND B.LN_STU_SPR_SEQ = C.LN_STU_SPR_SEQ
		INNER JOIN OLWHRM1.DW01_DW_CLC_CLU D
			ON A.BF_SSN = D.BF_SSN
			AND A.LN_SEQ = D.LN_SEQ
		INNER JOIN OLWHRM1.PD10_PRS_NME E
			ON A.BF_SSN = E.DF_PRS_ID
		WHERE A.IC_LON_PGM IN ('STFFRD','UNSTFD')
		AND B.LC_STA_LON13 = 'A'
		AND C.LC_STA_STU10 = 'A'
		AND A.LC_STA_LON10 = 'R'
		AND D.WC_DW_LON_STA IN 
					('01','02','03','04','05','13','14',
					 '15','16','18','20','21','98')
		ORDER BY E.DF_SPE_ACC_ID, A.LF_LON_ALT, A.LN_LON_ALT_SEQ
);

/*GET DATA SET OF EMOYR ARCS AFTER NOTIFICATION DATE FOR EXCLUSION*/
CREATE TABLE EMOYR AS
SELECT STU_SSN	
	,STU_ACCTNUM	
	,CLUID 				LENGTH=19
	,LD_NTF_SCL_SPR		LENGTH=4
	,LD_ATY_REQ_RCV 	LENGTH=4
FROM CONNECTION TO DB2 (
		SELECT DISTINCT A.BF_SSN
			,F.DF_SPE_ACC_ID AS STU_ACCTNUM
			,C.LF_STU_SSN 	AS STU_SSN
			,B.LN_SEQ
			,CASE WHEN E.LN_LON_ALT_SEQ < 10
				THEN E.LF_LON_ALT||'0'||RTRIM(CHAR(E.LN_LON_ALT_SEQ))
				ELSE E.LF_LON_ALT||RTRIM(CHAR(E.LN_LON_ALT_SEQ))
			 END AS CLUID
			,C.LD_NTF_SCL_SPR
			,A.LD_ATY_REQ_RCV
		FROM OLWHRM1.AY10_BR_LON_ATY A
		INNER JOIN OLWHRM1.LN85_LON_ATY B
			ON A.BF_SSN = B.BF_SSN
			AND A.LN_ATY_SEQ = B.LN_ATY_SEQ
		INNER JOIN OLWHRM1.LN13_LON_STU_OSD D
			ON A.BF_SSN = D.BF_SSN
			AND B.LN_SEQ = D.LN_SEQ
		INNER JOIN OLWHRM1.SD10_STU_SPR C
			ON C.LF_STU_SSN = D.LF_STU_SSN
			AND C.LN_STU_SPR_SEQ = D.LN_STU_SPR_SEQ
			AND D.LC_STA_LON13 = 'A' 
		INNER JOIN OLWHRM1.LN10_LON E
			ON D.BF_SSN = E.BF_SSN
			AND D.LN_SEQ = E.LN_SEQ
		INNER JOIN OLWHRM1.PD10_PRS_NME F
			ON E.BF_SSN = F.DF_PRS_ID
		WHERE PF_REQ_ACT = 'EMOYR'
		/*AND A.BF_SSN = '520132785'*/
);
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWG16.LWG16RZ);*/
/*QUIT;*/
DATA EMOYR (KEEP=STU_ACCTNUM CLUID);
SET EMOYR;
IF LD_NTF_SCL_SPR <= LD_ATY_REQ_RCV THEN OUTPUT;
RUN;

PROC SORT DATA=EMOYR NODUPRECS;
BY STU_ACCTNUM CLUID;
RUN;

PROC SORT DATA=CPENR;BY STU_ACCTNUM CLUID;RUN;
PROC SORT DATA=OLENR;BY STU_ACCTNUM CLUID;RUN;

/*EXCLUDE LOANS WITH EMOYR ARC */
DATA CPENR;
MERGE CPENR (IN=A) EMOYR (IN=B);
BY STU_ACCTNUM CLUID;
IF A AND NOT B;
RUN;

*RSUBMIT;
DATA ENR1;
MERGE OLENR (IN=A) CPENR (IN=B);
BY STU_ACCTNUM CLUID;
IF A=B;
RUN;

DATA ENR1;
SET ENR1;
WHERE (CP_SEP_REA NOT CONTAINS LC_STU_ENR_TYP)
OR (LC_STU_ENR_TYP IN ('F','H','A')
	AND LD_XPC_GRD NE LD_SCL_SPR)
OR (LC_STU_ENR_TYP IN ('L','W','G','X','D')
	AND LD_STU_ENR_STA NE LD_SCL_SPR);
IF LC_REA_SCL_SPR IN ('10','11','00') THEN CP_SEP_REA = 'EN';
ELSE IF LC_REA_SCL_SPR = '08' THEN CP_SEP_REA = 'LH';
ELSE IF LC_REA_SCL_SPR = '01' THEN CP_SEP_REA = 'GD';
ELSE IF LC_REA_SCL_SPR = '02' THEN CP_SEP_REA = 'WI';
ELSE IF LC_REA_SCL_SPR = '05' THEN CP_SEP_REA = 'OL';
ELSE IF LC_REA_SCL_SPR = '07' THEN CP_SEP_REA = 'NE';
RUN;

DATA ENR1;
SET ENR1;
IF LC_STU_ENR_TYP = 'F' AND CP_SEP_REA = 'EN' 				THEN MATCH = 'Y';
ELSE IF LC_STU_ENR_TYP = 'H' AND CP_SEP_REA = 'EN' 			THEN MATCH = 'Y';
ELSE IF LC_STU_ENR_TYP = 'L' AND CP_SEP_REA IN ('GD','WI') 	THEN MATCH = 'Y';
ELSE IF LC_STU_ENR_TYP = 'G' AND CP_SEP_REA IN ('LH','WI') 	THEN MATCH = 'Y';
ELSE IF LC_STU_ENR_TYP = 'W' AND CP_SEP_REA IN ('LH','GD') 	THEN MATCH = 'Y';
ELSE MATCH = 'N';
RUN;

DATA ENR1 (DROP = MATCH);
SET ENR1;
/*FORMAT LD_SCL_SPR MMDDYY10. LD_XPC_GRD MMDDYY10.;*/
IF MATCH = 'Y' AND LC_STU_ENR_TYP IN ('F','H','A') AND LD_XPC_GRD = LD_SCL_SPR THEN TMATCH = 'Y';
ELSE IF MATCH = 'Y' AND LC_STU_ENR_TYP IN ('L','W','G','X','D') AND LD_STU_ENR_STA = LD_SCL_SPR THEN TMATCH = 'Y';
ELSE TMATCH = 'N';
RUN; 

DATA ENR1 ;
SET ENR1;
IF TMATCH = 'Y' THEN DELETE;
ELSE OUTPUT;
RUN;

ENDRSUBMIT;
DATA ENR1;
SET WORKLOCL.ENR1;
RUN;

/*CREATE DISPLAY VARIABLE AND FORMAT FOR REPORT*/
DATA ENR1;
SET ENR1;
LC_REA_SCL_SPR_DISP = LC_REA_SCL_SPR;
RUN;
PROC FORMAT;
VALUE $REASON_FORMAT 
	'11'='FT'
	'10'='HT'
	'08'='LT'
	'01'='GR'
	'02'='WI'
	'05'='ON'
	'07'='NV'
	'00'='EN';
RUN;

PROC SORT DATA=ENR1;
BY CP_SEP_REA /*LC_REA_SCL_SPR_DISP*/ STU_ACCTNUM LN_SEQ;
RUN;

DATA _NULL_;
CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'beginning'), MMDDYY10.));
RUN;

PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS CENTER NODATE NUMBER PAGENO=1 LS=126;
PROC PRINT NOOBS SPLIT='/' DATA=ENR1 WIDTH=UNIFORM WIDTH=MIN N='TOTAL: ';
VAR STU_ACCTNUM CLUID LN_SEQ LC_REA_SCL_SPR LC_REA_SCL_SPR_DISP LD_SCL_SPR LC_STU_ENR_TYP
LD_STU_ENR_STA LD_XPC_GRD;
LABEL STU_ACCTNUM='STUDENT ACCTNUM' CLUID='COMMONLINE ID' LN_SEQ='COMPASS LOAN SEQ'
LC_REA_SCL_SPR='COMPASS SEPARATION CODE' 
LC_REA_SCL_SPR_DISP='COMPASS SEPARATION REASON' 
LD_SCL_SPR='COMPASS SEP DATE' LC_STU_ENR_TYP='ONELINK ENROLLMENT STATUS'
LD_STU_ENR_STA='ONELINK EFFECTIVE DATE' LD_XPC_GRD='ONELINK AGD';
FORMAT LD_SCL_SPR LD_STU_ENR_STA LD_XPC_GRD MMDDYY10. LC_REA_SCL_SPR_DISP $REASON_FORMAT.;
TITLE 'ENROLLMENT DISCREPANCIES BETWEEN COMPASS AND ONELINK';
TITLE2 "&RUNDATE";
FOOTNOTE  'JOB = UTLWG16     REPORT = ULWG16.LWG16R2';
RUN;
PROC PRINTTO;
RUN;
/*---------------------------------------------------------------------------------*
| TESTING                                                                          |
*----------------------------------------------------------------------------------*
/*DATA _NULL_;*/
/*SET  WORK.ENR1;*/
/*FILE 'T:\SAS\ENR_TEST' DELIMITER=',' DSD DROPOVER LRECL=32767;*/
/*FORMAT DF_PRS_ID_BR $9. ;*/
/*PUT */
/*STU_SSN $*/
/*CLUID $*/
/*LN_SEQ $*/
/*LC_REA_SCL_SPR $*/
/*CP_SEP_REA $*/
/*LD_SCL_SPR $*/
/*LC_STU_ENR_TYP $*/
/*LD_STU_ENR_STA $*/
/*LD_XPC_GRD $;*/
/*RUN;*/
/*PROC SORT DATA = ENR;BY STU_SSN CLUID;RUN;*/
/*PROC SORT DATA=ENR1;BY STU_SSN CLUID;RUN;*/
/*DATA DIF;*/
/*MERGE ENR (IN=A) ENR1 (IN=B);*/
/*BY STU_SSN CLUID;*/
/*IF A AND NOT B;*/
/*RUN; */
/**/
/*PROC EXPORT DATA=DIF*/
/*            OUTFILE= "T:\SAS\DIF.xls" */
/*            DBMS=EXCEL2000 REPLACE;*/
/*RUN;*/
*---------------------------------------------------------------------------------*/
