*---------------------------------------------------------------------------*
| PNOTE RECONCILIATION REPORT                                               |
*---------------------------------------------------------------------------*
| NOTE TO PROGRAMMER: THIS JOB HAS BEEN PROGRAMMED AS A SCHEDULED JOB, BUT  |
| WAS PROMOTED AS AN ON DEMAND JOB. WHEN IT IS PUT INTO PRODUCTION AS A     |
| SCHEDULED JOB, DELETE THESE COMMENTS AND UNCOMMENT THE APPROPRIATE LINES 	|
| OF CODE. ALSO NOTE THAT THE ESIG FILE COMPARE TAKES PLACE ON DUSTER       |
*---------------------------------------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = C:\WINDOWS\TEMP;
/*%LET TBLLIB = Q:\Process Automation\TabSAS;*/
FILENAME REPORT3 "&RPTLIB/ULWI06.LWI06R3";
FILENAME REPORT5 "&RPTLIB/ULWI06.LWI06R5";
FILENAME REPORT6 "&RPTLIB/ULWI06.LWI06R6";
FILENAME REPORTZ "&RPTLIB/ULWI06.LWI06RZ";
DATA _NULL_;
     CALL SYMPUT('YEARS_AGO_5',"'"||PUT(INTNX('YEAR',TODAY(),-5,'S'), MMDDYYD10.)||"'");
	 CALL SYMPUT('MONTHS_AGO_24',"'"||PUT(INTNX('MONTHS',TODAY(),-24,'S'), MMDDYYD10.)||"'");
RUN;
%SYSLPUT YEARS_AGO_5 = &YEARS_AGO_5;
%SYSLPUT MONTHS_AGO_24 = &MONTHS_AGO_24;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%LET TBLLIB = /sas/whse/progrevw;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
/*****************************************************************
* GET LOANS 
******************************************************************/
CREATE TABLE LOANS_INI AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT A.DF_PRS_ID_BR 				AS BF_SSN
	,B.AF_APL_ID||B.AF_APL_ID_SFX 	AS CLUID
	,A.AF_BS_MPN_APL_ID 			AS BASE_ID
	,C.AC_LON_STA_TYP				 
FROM OLWHRM1.GA01_APP A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.GA14_LON_STA C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
WHERE B.AC_LON_TYP IN (
	'PL','GB','SF','SU','CL'
	)
AND B.AC_PRC_STA = 'A'
AND C.AC_STA_GA14 = 'A'
AND C.AC_LON_STA_TYP != 'CA'
AND B.AA_GTE_LON_AMT > 0
/*----------------------------------------------------------------*/
/*and A.DF_PRS_ID_BR = '?????????'*/
/*----------------------------------------------------------------*/
FOR READ ONLY WITH UR
);
/*****************************************************************
* GET BASE/ANNUAL MPNS
******************************************************************/
CREATE TABLE MPN_INI AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DF_PRS_ID_BR AS BF_SSN
	,D.DM_PRS_1
	,D.DM_PRS_LST
	,COALESCE(COALESCE(A.AD_STU_SIG,A.AD_BR_SIG),A.AD_APL_RCV) AS AD_BR_SIG
	,A.AF_APL_ID
	,A.AF_APL_OPS_SCL
	,A.AF_CUR_APL_OPS_LDR
	,A.AC_ELS_LON
FROM OLWHRM1.GA01_APP A 
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.PD01_PDM_INF D
	on A.DF_PRS_ID_BR = D.DF_PRS_ID
WHERE B.AC_PRC_STA = 'A'
/*----------------------------------------------------------------*/
/*and DF_PRS_ID_BR = '?????????'*/
/*----------------------------------------------------------------*/
AND A.AF_BS_MPN_APL_ID IS NULL
);
/*****************************************************************
* CREATE EXCLUSION DATA SETS
******************************************************************
* EXCLUSION SET 1 - LOAN LEVEL
******************************************************************/
CREATE TABLE LN_XOUT AS
SELECT DISTINCT CLUID
FROM CONNECTION TO DB2 (
	SELECT GA10.AF_APL_ID||GA10.AF_APL_ID_SFX AS CLUID
	FROM OLWHRM1.GA10_LON_APP GA10
	WHERE (
			(
				GA10.AF_CUR_LON_SER_AGY = '700121' AND 
				(
					GA10.AD_LON_SLD < '03/01/2003' OR 
					GA10.AD_SER_RSB < '03/01/2003' OR
					GA10.AC_LON_TYP = 'CL'
				)
			)
		OR
			(
				GA10.AF_CUR_LON_SER_AGY NOT IN ('700121','700126') AND 
				(
					GA10.AD_LON_SLD < '07/01/2003' OR
					GA10.AD_SER_RSB < '03/01/2003' 
				) 
			)
		)
UNION
/*);*/
/*****************************************************************
* EXCLUSION SET 2 - LOAN LEVEL 
******************************************************************/
/*CREATE TABLE EX_GRP2 AS*/
/*SELECT DISTINCT CLUID*/
/*FROM CONNECTION TO DB2 (*/
/************* GA14 ONLY *************/
	SELECT GA14.AF_APL_ID||GA14.AF_APL_ID_SFX AS CLUID
	FROM OLWHRM1.GA14_LON_STA GA14
	WHERE GA14.AC_STA_GA14 = 'A'
	AND GA14.AD_LON_STA < &YEARS_AGO_5 
	AND	GA14.AC_LON_STA_TYP IN ('PC','PF','PM','PN','DN') 
UNION
/************* GA14 AND DC01 *************/
	SELECT GA14.AF_APL_ID||GA14.AF_APL_ID_SFX AS CLUID
	FROM OLWHRM1.DC01_LON_CLM_INF DC01
	INNER JOIN OLWHRM1.GA14_LON_STA GA14
		ON DC01.AF_APL_ID = GA14.AF_APL_ID
		AND DC01.AF_APL_ID_SFX = GA14.AF_APL_ID_SFX
	WHERE GA14.AC_STA_GA14 = 'A'
	AND (
			(
				DC01.LD_STA_UPD_DC10 < &YEARS_AGO_5 AND  
				DC01.LC_STA_DC10 = '04' AND 
				GA14.AC_LON_STA_TYP = 'CP' 
			)
		OR 
			(
				DC01.LC_STA_DC10 = '03' AND 
				DC01.LD_CLM_ASN_DOE IS NOT NULL AND 
				GA14.AC_LON_STA_TYP = 'CP'  
			)
		)
	);
/******************************************************************
* EXCLUSION SET 3 - BORROWER LEVEL 
******************************************************************/
CREATE TABLE BR_XOUT AS
SELECT DISTINCT BF_SSN
FROM CONNECTION TO DB2 (
	SELECT BF_SSN
	FROM OLWHRM1.DC01_LON_CLM_INF 
	WHERE LC_GRN IN ('06','07')
);
/*****************************************************************
* EXCLUSION SET 4 - APPLICATION LEVEL 
******************************************************************/
CREATE TABLE AP_XOUT AS
SELECT DISTINCT AF_APL_ID
FROM CONNECTION TO DB2 (
	SELECT SUBSTR(A.BX_CMT,1,17) AS AF_APL_ID
	FROM  OLWHRM1.AY01_BR_ATY A
	WHERE A.PF_ACT IN ('MPROM','NOPNT')
		AND A.BD_ATY_PRF >= &MONTHS_AGO_24
);
/*****************************************************************
* CONSOLIDATION ESIGNED LOANS
******************************************************************/
CREATE TABLE CON_ESIGN AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT B.AF_APL_ID
	,'E' AS AC_ELS_LON
/*	,B.AC_LON_TYP*/
FROM OLWHRM1.GA01_APP A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.GA11_LON_DSB_ATY C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
INNER JOIN OLWHRM1.AP1A_LCO_APL D
	ON D.DF_LCO_PRS_SSN_BR = A.DF_PRS_ID_BR
	AND D.AD_LCO_APL_DSB = C.AD_DSB_ADJ
WHERE C.AN_DSB_SEQ = 1
AND C.AC_DSB_ADJ = 'A' 
AND C.AC_DSB_ADJ_STA = 'A'
AND D.AD_LCO_APL_SND = D.AD_LCO_APL_RCV 
AND D.AD_LCO_APL_RCV = D.AD_LCO_APL_SIG
AND D.AF_CRT_USR_AP1A = 'TZ02004A'
/*----------------------------------------------------------------*/
/*and A.DF_PRS_ID_BR = '?????????*/
/*----------------------------------------------------------------*/
/*AND B.AC_LON_TYP = 'CL'*/
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWI06.LWI06RZ);*/
/*QUIT;*/
PROC SORT DATA=LN_XOUT NODUPKEY;BY CLUID;RUN;
PROC SORT DATA=BR_XOUT NODUPKEY;BY BF_SSN;RUN;
PROC SORT DATA=AP_XOUT NODUPKEY;BY AF_APL_ID;RUN;
/*REMOVE AT LOAN LEVEL*/
PROC SORT DATA=LOANS_INI;BY CLUID;RUN;
DATA ALL_LOANS;
	MERGE LOANS_INI (IN=A) LN_XOUT (IN=B);
	BY CLUID;
	IF A AND NOT B;
RUN;
/*REMOVE AT BORROWER LEVEL*/
PROC SORT DATA=ALL_LOANS;BY BF_SSN;RUN;
DATA ALL_LOANS;
	MERGE ALL_LOANS (IN=A) BR_XOUT (IN=B);
	BY BF_SSN;
	IF A AND NOT B;
RUN;
/*REMOVE RECONCILLED MPNS*/
PROC SORT DATA=MPN_INI;BY AF_APL_ID;RUN;
DATA BASE_MPNS;
	MERGE MPN_INI (IN=A) AP_XOUT (IN=B);
	BY AF_APL_ID;
	IF A AND NOT B;
RUN;
/*ENDRSUBMIT;*/
/*DATA ALL_LOANS;SET WORKLOCL.ALL_LOANS;RUN;*/
/*DATA BASE_MPNS;SET WORKLOCL.BASE_MPNS;RUN;*/
/*DATA CON_ESIGN; SET WORKLOCL.CON_ESIGN;RUN;*/
/*GET BASE LOANS OF BASE MPN*/
PROC SQL;
CREATE TABLE BASE_LOANS AS
SELECT A.AF_APL_ID AS MPN_ID
	,B.CLUID AS BASE_LN_ID
FROM BASE_MPNS A
INNER JOIN ALL_LOANS B
	ON A.AF_APL_ID = SUBSTR(B.CLUID,1,17)
;
QUIT;
PROC SORT DATA=BASE_LOANS NODUPKEY;BY MPN_ID BASE_LN_ID;RUN;
PROC TRANSPOSE DATA=BASE_LOANS OUT=BASE_LOANS2 (DROP=_NAME_ _LABEL_) PREFIX=BASE_;
	VAR BASE_LN_ID;
	BY  MPN_ID;
RUN;
DATA BASE_LOANS2 (DROP=BASE_1 BASE_2);
	SET BASE_LOANS2;
	IF BASE_2 ^= '' 
		THEN DO;
			BASE_LOANS = LEFT(TRIM(BASE_1))||' '||LEFT(TRIM(BASE_2));
			BL_CT = 2;
		END;
	ELSE DO;
		BASE_LOANS = LEFT(TRIM(BASE_1));
		BL_CT = 1;
	END;
RUN;

/*GET SERIAL LOANS OF BASE MPN*/
PROC SQL;
CREATE TABLE SERIAL_LOANS AS
SELECT A.AF_APL_ID AS MPN_ID
	,B.CLUID AS SERIAL_LN_ID
FROM BASE_MPNS A
INNER JOIN ALL_LOANS B
	ON A.AF_APL_ID = B.BASE_ID
;
QUIT;
PROC SORT DATA=SERIAL_LOANS NODUPKEY;BY MPN_ID SERIAL_LN_ID;RUN;
DATA SERIAL_LOANS (DROP=SERIAL_LN_ID);
	SET SERIAL_LOANS;
	BY MPN_ID;
	LENGTH SER_LOANS $600;
	RETAIN SER_LOANS LN_CT;
	IF FIRST.MPN_ID THEN DO;
		SER_LOANS = SERIAL_LN_ID;
		LN_CT = 1;
	END;
	ELSE DO;
		SER_LOANS = TRIM(SER_LOANS)||' '||SERIAL_LN_ID;
		LN_CT = LN_CT + 1;
	END;
	IF LAST.MPN_ID THEN 
		OUTPUT;
RUN;
/*GET LOAN STATUS FOR ONE BASE MPN LOAN*/
DATA LNSTAT (KEEP = CLUID MPN_ID AC_LON_STA_TYP);
	SET ALL_LOANS;
	LENGTH MPN_ID $ 17 ;
	MPN_ID = SUBSTR(CLUID,1,17);
RUN;
PROC SORT DATA=LNSTAT;
	BY MPN_ID CLUID;
RUN;
DATA LNSTAT (KEEP=MPN_ID AC_LON_STA_TYP);
	SET LNSTAT;
	BY MPN_ID;
	IF FIRST.MPN_ID THEN OUTPUT;
RUN;
/*GET ALL THE OTHER INFO INTO ONE DATASET AT ONE LINE PER MPN*/
PROC SQL;
CREATE TABLE ALL_DAT AS 
SELECT DISTINCT A.MPN_ID
	,C.BF_SSN
	,C.DM_PRS_1
	,C.DM_PRS_LST
	,C.AD_BR_SIG
	,C.AF_APL_OPS_SCL
	,C.AF_CUR_APL_OPS_LDR
	,A.BASE_LOANS
	,B.SER_LOANS
	,A.BL_CT
	,COALESCE(B.LN_CT,0) AS LN_CT
	,D.AC_LON_STA_TYP
	,C.AC_ELS_LON
	,E.AC_ELS_LON AS AC_ELS_LON_CL
FROM BASE_LOANS2 A
LEFT OUTER JOIN SERIAL_LOANS B
	ON A.MPN_ID = B.MPN_ID
LEFT OUTER JOIN BASE_MPNS C
	ON A.MPN_ID = C.AF_APL_ID
LEFT OUTER JOIN LNSTAT D
	ON A.MPN_ID = D.MPN_ID
LEFT OUTER JOIN CON_ESIGN E
	ON A.MPN_ID = E.AF_APL_ID
;
QUIT;
DATA ALL_DAT;
	SET ALL_DAT;
	IF AC_ELS_LON_CL = 'E' THEN AC_ELS_LON = 'E';
RUN;
PROC SORT DATA=ALL_DAT;BY MPN_ID;RUN;
PROC SORT DATA=LNSTAT;BY MPN_ID;RUN;
DATA ALL_DAT;
	MERGE ALL_DAT (IN=A) LNSTAT (IN=B);
	BY MPN_ID;
	IF A;
RUN;
DATA ALL_DAT;
	SET ALL_DAT;
	PNOTE = '______';
	VU = '______';
	MPN_ID_DIGTS = SUBSTR(MPN_ID,13,5);
RUN;
/*CREATE VARIABLES FOR QUE BUILDER SCRIPT*/
%MACRO CRTCOM(DS,Q);
DATA &DS(KEEP=TARGET_ID QUEUE_ID INST_ID INST_TYP DATE_DUE TIME_DUE COMMENTS);
	SET &DS;
	LENGTH COMMENTS $ 600.;
	TARGET_ID=BF_SSN;
	QUEUE_ID="&Q";
	INST_ID='';
	INST_TYP='';
	DATE_DUE='';
	TIME_DUE='';
	COMMENTS=CATX(',',MPN_ID,PUT(AD_BR_SIG,MMDDYY10.));
RUN;
%MEND CRTCOM;
/***********************************************************
* WET SIGNATURE PROCESSING - LIMIT TO 2000 MPNS
************************************************************/
DATA WSIG;
	SET ALL_DAT (OBS=2000);
	WHERE AC_ELS_LON ^= 'E';
RUN;
%CRTCOM(WSIG,PNOTEWET);
/***********************************************************
* E SIGNATURE PROCESSING - NO LIMIT
************************************************************/
DATA ESIG;
	SET ALL_DAT;
	WHERE AC_ELS_LON = 'E';
RUN;
/*ENDRSUBMIT;*/
/*DATA WSIG;SET WORKLOCL.WSIG;RUN;*/
/*DATA ESIG;SET WORKLOCL.ESIG;RUN;*/
DATA ESIG ;
	SET ESIG;
	LENGTH LOANS $ 600.;
	COMSTR = ': P-NOTES RECONCILED';
	LOANS = CATX(' ',BASE_LOANS,SER_LOANS,COMSTR);
RUN;
/*INPUT THE AES ESIGN FILE*/
DATA AEF;
	INFILE "&TBLLIB/ESIG.txt" DSD MISSOVER LRECL=67000 DLM=',' FIRSTOBS=2;
	INFORMAT BF_SSN $9. AF_CUR_APL_OPS_LDR $6. C_SCAN_DATE $10.;
	INPUT BF_SSN $ AF_CUR_APL_OPS_LDR $ C_SCAN_DATE $;
RUN;
DATA AEF (DROP=C_SCAN_DATE);
	SET AEF;
	FORMAT AD_BR_SIG MMDDYY10.;
	AD_BR_SIG = INPUT(C_SCAN_DATE,YYMMDD10.);
RUN;
PROC SORT DATA=ESIG;
	BY BF_SSN AF_CUR_APL_OPS_LDR AD_BR_SIG;
RUN;
PROC SORT DATA=AEF;
	BY BF_SSN AF_CUR_APL_OPS_LDR AD_BR_SIG;
RUN;
DATA ESIG_Y(KEEP=BF_SSN MPN_ID LOANS) ESIG_N;
	MERGE ESIG (IN=A) AEF (IN=B);
	BY BF_SSN AF_CUR_APL_OPS_LDR AD_BR_SIG;
	IF A AND B THEN 
		OUTPUT ESIG_Y;
	ELSE IF A AND NOT B THEN 
		OUTPUT ESIG_N;
	ELSE 
		DELETE;
RUN;
%CRTCOM(ESIG_N,PNOTEESN);
ENDRSUBMIT;
DATA WSIG;
	SET WORKLOCL.WSIG;
RUN;
DATA ESIG_N;
	SET WORKLOCL.ESIG_N;
RUN;
DATA ESIG_Y;
	SET WORKLOCL.ESIG_Y;
RUN;
%MACRO QBFILES(DS,RNO);
DATA _NULL_;
	SET &DS; 
	FILE REPORT&RNO DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT COMMENTS $600. ;
	   FORMAT TARGET_ID $9. ;
	   FORMAT QUEUE_ID $8. ;
	   FORMAT INST_ID $1. ;
	   FORMAT INST_TYP $1. ;
	   FORMAT DATE_DUE $1. ;
	   FORMAT TIME_DUE $1. ;
	DO;
	   PUT TARGET_ID $ @;
	   PUT QUEUE_ID $ @;
	   PUT INST_ID $ @;
	   PUT INST_TYP $ @;
	   PUT DATE_DUE $ @;
	   PUT TIME_DUE $ @;
	   PUT COMMENTS $ ;
	END;
RUN;
%MEND QBFILES;
/*CREATE FILES*/
%QBFILES(WSIG,3);
DATA _NULL_;
	SET ESIG_Y; 
	FILE REPORT5 DELIMITER=',' DSD DROPOVER LRECL=32767;
	   FORMAT BF_SSN $9. ;
	   FORMAT MPN_ID $17. ;
	   FORMAT LOANS $600. ;
	DO;
	   PUT BF_SSN $ @;
	   PUT MPN_ID $ @;
	   PUT LOANS $ ;
	END;
RUN;
%QBFILES(ESIG_N,6);
