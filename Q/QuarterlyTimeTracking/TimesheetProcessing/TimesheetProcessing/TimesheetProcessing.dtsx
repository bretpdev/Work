<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/12/2018 12:07:09 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LPP-2968"
  DTS:CreatorName="UHEAA\jnolasco"
  DTS:DTSID="{F3589E10-7B91-43C9-BAE1-1F77D77C3E3D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.94"
  DTS:LocaleID="1033"
  DTS:ObjectName="TimesheetProcessing"
  DTS:PackageType="5"
  DTS:VersionBuild="158"
  DTS:VersionGUID="{94C56ECD-C1B2-4A60-A131-B2FE0AA624FB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSYS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{f7e36e17-79e3-4daa-961c-f0c0ea387d9a}"
      DTS:ObjectName="CSYS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NOCHOUSE;Initial Catalog=CSYS;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager - ForEach Loop]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{37BE498D-676F-4B3F-9FA7-4CFD001D4C10}"
      DTS:ObjectName="Excel Connection Manager - ForEach Loop">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::ExcelFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=Q:\Support Services\JR\TimesheetProcessing\FY 2022 Q1 Time Tracking - Template.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Procedures]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{601B6976-A35D-45C9-AFEE-01619A31B517}"
      DTS:ObjectName="Procedures">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=X:\PADR\Procedures\Procedures.mdb;Provider=Microsoft.Jet.OLEDB.4.0;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Projects]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0B9869D4-0885-4B47-AD5E-D21829131119}"
      DTS:ObjectName="Projects">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=X:\PADR\Projects\Projects.mdb;Provider=Microsoft.Jet.OLEDB.4.0;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FD126927-C197-47C1-A010-4FE02FEC3BC1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;FY&quot; + &quot; &quot; +&#xA;(MONTH(GETDATE()) &gt;= 7 ? (DT_WSTR, 4) YEAR(DATEADD(&quot;YEAR&quot;,1,GETDATE())) : (DT_WSTR, 4) YEAR(GETDATE()))&#xA;+ &quot; &quot; +&#xA;(MONTH(GETDATE()) &gt;= 7 &amp;&amp; MONTH(GETDATE()) &lt;=9 ? &quot;Q1&quot;:&#xA;MONTH(GETDATE()) &gt;= 10 &amp;&amp; MONTH(GETDATE()) &lt;= 12 ? &quot;Q2&quot; :&#xA;MONTH(GETDATE()) &gt;= 1 &amp;&amp; MONTH(GETDATE()) &lt;= 3 ? &quot;Q3&quot; : &#xA;MONTH(GETDATE()) &gt;= 4 &amp;&amp; MONTH(GETDATE()) &lt;=6 ? &quot;Q4&quot;:&#xA; &quot;QUARTER_ERROR&quot;)&#xA;+ &quot;*&quot;+&quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFiscalYearQuarter">
      <DTS:VariableValue
        DTS:DataType="8">FY 2022 Q1*.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1088CA76-612C-4161-9309-C83B6273E814}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFolder">
      <DTS:VariableValue
        DTS:DataType="8">Q:\Support Services\JR\TimesheetProcessing</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C4571D9E-B472-407D-ADFC-5013B17CB5BF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFileName">
      <DTS:VariableValue
        DTS:DataType="8">Q:\Support Services\JR\TimesheetProcessing\FY 2022 Q1 Time Tracking - Template.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1991639-64E9-403B-9114-3C79C27DEE38}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">dummyfile.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84D37281-8ADA-4A45-A66A-030986DDAF4A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">Q:\Support Services\Time tracking</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - truncate CSYS COST_DAT_TimesheetProcessing"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{54D3AADD-E7DD-466C-82DF-234F95A86EEA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - truncate CSYS COST_DAT_TimesheetProcessing"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{f7e36e17-79e3-4daa-961c-f0c0ea387d9a}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [CSYS].[dbo].[COST_DAT_TimesheetProcessing];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\File System Task - deletes existing timesheets"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{254811da-8378-4f82-beae-bec72d062d1f}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="File System Task - deletes existing timesheets"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="DeleteDirectoryContent"
          TaskSourcePath="User::DestinationFolder"
          TaskIsSourceVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\File System Task - deletes processed timesheets"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{B974E49B-FB79-45A2-ADB7-0BA99888D89F}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="File System Task - deletes processed timesheets"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="DeleteDirectoryContent"
          TaskSourcePath="User::DestinationFolder"
          TaskIsSourceVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container - gets all current timesheets"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{409BF751-4804-4965-A8F5-BF9F4372EF19}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container - gets all current timesheets">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{F4B82F5D-BAB4-43F0-8182-EF0C27F09D04}"
        DTS:ObjectName="{F4B82F5D-BAB4-43F0-8182-EF0C27F09D04}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::SourceFolder]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[User::CurrentFiscalYearQuarter]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="Q:\Support Services\Time tracking" />
            <FEFEProperty
              FileSpec="FY 2022 Q1*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - gets all current timesheets\File System Task - moves timesheet for processing"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{2EC4F066-5A95-4D37-BCC7-C19C35F18C88}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="File System Task - moves timesheet for processing"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::FileName"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::DestinationFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{733B158F-ED63-48A4-83BE-ADC3215CC1A7}"
          DTS:ObjectName="{733B158F-ED63-48A4-83BE-ADC3215CC1A7}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container - read in all spreadsheets"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D2F3FD4A-E80E-4731-8A04-6BF3155D69DF}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:FailPackageOnFailure="True"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container - read in all spreadsheets">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{06A11BE7-FA3F-48D1-AD5B-67DC405BEC87}"
        DTS:ObjectName="{06A11BE7-FA3F-48D1-AD5B-67DC405BEC87}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="Q:\Support Services\JR\TimesheetProcessing" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{24C59E86-3E8B-4B7D-AD74-D115BC97E549}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - copy data to SQL Server"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Inputs[Conditional Split Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[BadRecords]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="BadRecords"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(Date)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[GoodRecords]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="GoodRecords"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion - turn Unicode into varchar"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Generic Meetings]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Generic Meetings"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Generic Meetings]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[FSA CR #]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FSA CR #"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[FSA CR #]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Billing Script]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billing Script"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Billing Script]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Conversion Activities]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Conversion Activities"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Conversion Activities]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Cost Center]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cost Center"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Cost Center]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Agent]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Agent"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Agent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[SourceFile]"
                          cachedDataType="wstr"
                          cachedLength="85"
                          cachedName="SourceFile"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Output].Columns[SourceFile]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[GenericMeetings_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[GenericMeetings_varchar]"
                          name="GenericMeetings_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Generic Meetings]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[FsaCr_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[FsaCr_varchar]"
                          name="FsaCr_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[FSA CR #]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[BillingScript_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[BillingScript_varchar]"
                          name="BillingScript_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Billing Script]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ConversionActivities_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ConversionActivities_varchar]"
                          name="ConversionActivities_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Conversion Activities]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[CostCenter_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[CostCenter_varchar]"
                          name="CostCenter_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Cost Center]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Agent_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Agent_varchar]"
                          name="Agent_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Agent]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[SourceFile_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[SourceFile_varchar]"
                          name="SourceFile_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Output].Columns[SourceFile]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column - get filename"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Output].Columns[SourceFile]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Output].Columns[SourceFile]"
                          name="SourceFile"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ExcelFileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ExcelFileName]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source - individual timesheets"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Sheet1$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager - ForEach Loop]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager - ForEach Loop]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Hours]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Hours]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Hours]"
                          name="Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[SR #]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[SR #]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[SR #]"
                          name="SR #"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[SASR #]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[SASR #]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[SASR #]"
                          name="SASR #"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[LTS #]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[LTS #]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[LTS #]"
                          name="LTS #"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[PMD #]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[PMD #]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[PMD #]"
                          name="PMD #"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Project #]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Project #]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Project #]"
                          name="Project #"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Generic Meetings]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Generic Meetings]"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Generic Meetings]"
                          name="Generic Meetings"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[FSA CR #]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[FSA CR #]"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[FSA CR #]"
                          name="FSA CR #"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Billing Script]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Billing Script]"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Billing Script]"
                          name="Billing Script"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Conversion Activities]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Conversion Activities]"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Conversion Activities]"
                          name="Conversion Activities"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Cost Center]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Cost Center]"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Cost Center]"
                          name="Cost Center"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Agent]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Agent]"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Agent]"
                          name="Agent"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Hours]"
                          dataType="r8"
                          name="Hours" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[SR #]"
                          dataType="r8"
                          name="SR #" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[SASR #]"
                          dataType="r8"
                          name="SASR #" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[LTS #]"
                          dataType="r8"
                          name="LTS #" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[PMD #]"
                          dataType="r8"
                          name="PMD #" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Project #]"
                          dataType="r8"
                          name="Project #" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Generic Meetings]"
                          dataType="wstr"
                          length="255"
                          name="Generic Meetings" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Batch Scripts]"
                          dataType="wstr"
                          length="255"
                          name="Batch Scripts" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[FSA CR #]"
                          dataType="wstr"
                          length="255"
                          name="FSA CR #" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Billing Script]"
                          dataType="wstr"
                          length="255"
                          name="Billing Script" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Conversion Activities]"
                          dataType="wstr"
                          length="255"
                          name="Conversion Activities" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Cost Center]"
                          dataType="wstr"
                          length="255"
                          name="Cost Center" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].ExternalColumns[Agent]"
                          dataType="wstr"
                          length="255"
                          name="Agent" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Hours]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Hours]"
                          name="Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[SR #]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[SR #]"
                          name="SR #" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[SASR #]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[SASR #]"
                          name="SASR #" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[LTS #]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[LTS #]"
                          name="LTS #" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[PMD #]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[PMD #]"
                          name="PMD #" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Project #]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Project #]"
                          name="Project #" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Generic Meetings]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Generic Meetings]"
                          name="Generic Meetings" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[FSA CR #]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[FSA CR #]"
                          name="FSA CR #" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Billing Script]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Billing Script]"
                          name="Billing Script" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Conversion Activities]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Conversion Activities]"
                          name="Conversion Activities" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Cost Center]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Cost Center]"
                          name="Cost Center" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Agent]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[Agent]"
                          name="Agent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[COST_DAT_TimesheetProcessing]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSYS]"
                      connectionManagerRefId="Package.ConnectionManagers[CSYS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[Hours]"
                          cachedDataType="r8"
                          cachedName="Hours"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Hours]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Hours]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[TaskDate]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[SR #]"
                          cachedDataType="r8"
                          cachedName="SR #"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Sr]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[SR #]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[SASR #]"
                          cachedDataType="r8"
                          cachedName="SASR #"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Sasr]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[SASR #]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[LTS #]"
                          cachedDataType="r8"
                          cachedName="LTS #"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Lts]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[LTS #]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[PMD #]"
                          cachedDataType="r8"
                          cachedName="PMD #"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Pmd]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[PMD #]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[Project #]"
                          cachedDataType="r8"
                          cachedName="Project #"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Project]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output].Columns[Project #]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[GenericMeetings_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="GenericMeetings_varchar"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[GenericMeetings]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[GenericMeetings_varchar]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[FsaCr_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FsaCr_varchar"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[FsaCr]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[FsaCr_varchar]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[BillingScript_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="BillingScript_varchar"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[BillingScript]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[BillingScript_varchar]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[ConversionActivities_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="ConversionActivities_varchar"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[ConversionActivities]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ConversionActivities_varchar]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[CostCenter_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CostCenter_varchar"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[CostCenter]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[CostCenter_varchar]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[Agent_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Agent_varchar"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Agent]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Agent_varchar]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[SourceFile_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="SourceFile_varchar"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[SourceFile_varchar]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].Columns[RowNumber]"
                          cachedDataType="i4"
                          cachedName="RowNumber"
                          externalMetadataColumnId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Outputs[Output 0].Columns[RowNumber]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetProcessingId]"
                          dataType="i4"
                          name="TimesheetProcessingId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[TaskDate]"
                          dataType="dbDate"
                          name="TaskDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Hours]"
                          dataType="numeric"
                          name="Hours"
                          precision="18"
                          scale="3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Sr]"
                          dataType="i4"
                          name="Sr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Sasr]"
                          dataType="i4"
                          name="Sasr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Lts]"
                          dataType="i4"
                          name="Lts" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Pmd]"
                          dataType="i4"
                          name="Pmd" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Project]"
                          dataType="i4"
                          name="Project" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[GenericMeetings]"
                          codePage="1252"
                          dataType="text"
                          name="GenericMeetings" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[BatchScripts]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="BatchScripts" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[FsaCr]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FsaCr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[BillingScript]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="BillingScript" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[ConversionActivities]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="ConversionActivities" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[CostCenter]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CostCenter" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[Agent]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Agent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[CostCenterId]"
                          dataType="i4"
                          name="CostCenterId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[SqlUserId]"
                          dataType="i4"
                          name="SqlUserId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="SourceFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          dataType="i4"
                          name="RowNumber" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component - get RowNumber"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    private int m_rowNumber;
    public override void PreExecute()
    {
        base.PreExecute();
        // Initialize the rownumber
        // start at 1 instead of 0 to skip header in excel timesheet
        m_rowNumber = 1;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // Increase the rownumber and assign the value to the output-column
        m_rowNumber++;
        Row.RowNumber = m_rowNumber;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a1121698941840ad95e13d23886985bc.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{29d1e06f-6e40-428a-b4a6-138a008069c4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a1121698941840ad95e13d23886985bc</RootNamespace>
    <AssemblyName>SC_a1121698941840ad95e13d23886985bc</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a1121698941840ad95e13d23886985bc" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a1121698941840ad95e13d23886985bc.Properties.Settings.get_Default():SC_a1121698941840ad95e13d23886985bc.Properties.Sett" +
    "ings")]

namespace SC_a1121698941840ad95e13d23886985bc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_a1121698941840ad95e13d23886985bc</msb:CodeName>
		<msb:DisplayName>SC_a1121698941840ad95e13d23886985bc</msb:DisplayName>
		<msb:ProjectId>{24D9E624-3E17-484E-A20C-D9DE9D18C5FD}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a1121698941840ad95e13d23886985bc.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a1121698941840ad95e13d23886985bc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a1121698941840ad95e13d23886985bc")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a1121698941840ad95e13d23886985bc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a1121698941840ad95e13d23886985bc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a1121698941840ad95e13d23886985bc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a1121698941840ad95e13d23886985bc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a1121698941840ad95e13d23886985bc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a1121698941840ad95e13d23886985bc.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMJV41oAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAJjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAALBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAI
MQAAAAAAAEgAAAACAAUApCEAAHgOAAABAAAAAAAAABwwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADoCKBAAAAoCF30BAAAEKh4CKBEAAAoqbgICewEAAAQXWH0B
AAAEAwJ7AQAABG8GAAAGKh4CKAoAAAYqKgIDBAUoEgAACio6AhYDjBoAAAEoEwAACipaAywIAhYo
FAAACipyAQAAcHMVAAAKeh4CKBYAAAoqHgIoFwAACip+AigYAAAKAgJzDgAABn0CAAAEAgJzDwAA
Bn0DAAAEKpIEcp4AAHAabxkAAAosFQIFAgMoGgAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28I
AAAGLfEqBio6AigbAAAKAgN9BAAABCo6AigbAAAKAgN9BQAABCoeAigbAAAKKq5+BgAABC0ecq4A
AHDQBwAAAigcAAAKbx0AAApzHgAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4C
KB8AAAoqLnMVAAAGgAgAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAk
BQAAI34AAJAFAAAoBgAAI1N0cmluZ3MAAAAAuAsAACABAAAjVVMA2AwAABAAAAAjR1VJRAAAAOgM
AACQAQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAIAAAAFgAA
AA8AAAAfAAAAEAAAAAMAAAAFAAAABgAAAAEAAAAEAAAAAQAAAAAA8AIBAAAAAAAGAOoBXgQGAH4C
XgQGADYBSwQPANIEAAAGAGMBhgMGAM0BhgMGAK4BhgMGAGUChgMGAAoChgMGACMChgMGAHoBhgMG
AJUBuQIKAD4CgwAKAB0EgwAOAA4EgwAKAM8DgwAKAJgFgwAGAFsFPgMGABkBSwQGAC4EfgQGAMMD
cQMSAOkA2gISAEoB2gISANEAXAMGAP4AXgQGAAEAPgMGAJgDPgMGANMCPgMGALIDPgMGAKQAPgMG
AFUAPgMGAB0GhgMAAAAABwAAAAAAAQABAAEAEABRAwAAEAABAAEAAQAQAAEEAAA5AAIABQABABAA
egUAAEUAAgAKAAEAEABPBQAASQAEAA4AAQAQABAFAABJAAUADwAAABAAhQThBEkABgAQAAABEAA/
BeEEYQAIABQAAQD1A2MABgBPBWYABgAQBWoAAQCIBW4AAQCIBW4AEQBFA3IAEQDBAHYAEQBFAHoA
UCAAAAAAxgCcAgYAAQBfIAAAAADGAKcCBgABAGcgAAAAAMYA+gV+AAEAgyAAAAAAhhg+BAYAAgCL
IAAAAACGGD4EGwACAJYgAAAAAIYI5wMBAAUApSAAAAAAhggYA4QABgC8IAAAAACGABEGKwAHAMQg
AAAAAIYAYgUrAAcAzCAAAAAAhhg+BAYABwDsIAAAAADGAO0FiQAHABEhAAAAAMYB5gV+AAsAJCEA
AAAAxgH6BX4ADAAmIQAAAACGGD4EkwANADUhAAAAAIYYPgSTAA4ARCEAAAAAgxg+BAYADwBMIQAA
AACTCCoEmQAPAHghAAAAAJMIqQCeAA8AfyEAAAAAkwi1AKMADwCHIQAAAACWCG4FqQAQAI4hAAAA
AIYYPgQGABAAliEAAAAAkRhEBK4AEAAAAAEAFQYAAAEAIwQAAAIAGgUAAAMA3QMAAAEAswIAAAEA
swIAAAEAEAAAAAIAeQAAAAMAIwQAAAQA3QMAAAEAIwQAAAEAFQYAAAEAngUAAAEAngUAAAEAswIJ
AD4EAQARAD4EBgAZAD4ECgApAD4EEAAxAD4EEAA5AD4EEABBAD4EEABJAD4EEABRAD4EEABZAD4E
EABhAD4EEABpAD4EBgCZAD4EBgC5AD4EFQDJAD4EBgCJAJwCBgCJAKcCBgBxAD4EGwBxADUDJQBx
AC0DAQDZAD4EEABxABEGKwBxAGIFKwCJAD4EBgDhAEgFLwCJAC4FNgCRAD4EBgDxAGcAPADxABkG
QwChAD4ESQDBAD4EBgAuAAsAyQAuABMA0gAuABsA8QAuACMA+gAuACsAIwEuADMAIwEuADsAIwEu
AEMA+gAuAEsAKQEuAFMAIwEuAFsAQAFDAGMAigFpAHMA8QCJAHMA8QDjAGsAigEBAXsAigEDAAEA
BwADAAgABQAAAOsDsgAAABwDtgAAAC4EugAAAMkAvwAAAHIFxAABAAYAAwABAAcABQACABEABwAC
ABIACQABABMACQACABQACwAEgAAAAQAAAAAAAAAAAAAAAAAhAAAABAAAAAAAAAAAAAAAUQAYAAAA
AAAMAAAAAAAAAAAAAABaAKgFAAAAAAwAAAAAAAAAAAAAAFoAxQUAAAAABAAAAAAAAAAAAAAAUQA+
AwAAAAAAAAAAAQAAAI8EAAAAAABJbnQzMgA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFNDX2Ex
MTIxNjk4OTQxODQwYWQ5NWUxM2QyMzg4Njk4NWJjAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYTExMjE2OTg5NDE4NDBhZDk1ZTEzZDIz
ODg2OTg1YmMuZGxsAHNldF9Sb3dOdW1iZXJfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJp
bmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAHNldF9Sb3dO
dW1iZXIAbV9yb3dOdW1iZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2ExMTIxNjk4
OTQxODQwYWQ5NWUxM2QyMzg4Njk4NWJjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBE
ZWJ1Z2dpbmdNb2RlcwBTQ19hMTEyMTY5ODk0MTg0MGFkOTVlMTNkMjM4ODY5ODViYy5Qcm9wZXJ0
aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGlu
Z3MARXF1YWxzAENvbm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2Vy
Q29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNl
cnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJv
Y2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAA
gJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBl
AHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQA
bwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAw
AABxUwBDAF8AYQAxADEAMgAxADYAOQA4ADkANAAxADgANAAwAGEAZAA5ADUAZQAxADMAZAAyADMA
OAA4ADYAOQA4ADUAYgBjAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAVRlrtpvmMRo1hnUNoE/MWAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCSADARI9HQgSQQUg
AgEIHAMgAAIGIAICDhF1BSABHQgIBgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2A
gMyRAgYIAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIMBCABAQIJIAQBCA4SPRJBBSABARJF
BAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAAgDKAACBAgAElEECAASVQQIABIgCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19hMTEyMTY5ODk0
MTg0MGFkOTVlMTNkMjM4ODY5ODViYwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD8MAAAAAAAAAAAAAAWMQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAACDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AYQAxADEAMgAxADYAOQA4ADkANAAxADgANAAwAGEAZAA5ADUAZQAxADMAZAAyADMA
OAA4ADYAOQA4ADUAYgBjAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBhADEAMQAyADEA
NgA5ADgAOQA0ADEAOAA0ADAAYQBkADkANQBlADEAMwBkADIAMwA4ADgANgA5ADgANQBiAGMALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGEA
MQAxADIAMQA2ADkAOAA5ADQAMQA4ADQAMABhAGQAOQA1AGUAMQAzAGQAMgAzADgAOAA2ADkAOAA1
AGIAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBhADEA
MQAyADEANgA5ADgAOQA0ADEAOAA0ADAAYQBkADkANQBlADEAMwBkADIAMwA4ADgANgA5ADgANQBi
AGMAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_a1121698941840ad95e13d23886985bc</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">0814edb0ad89a23f1c7c61df1efff10c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">bb60539d23d99e28215821fd962115f264eeff12</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Outputs[Output 0].Columns[RowNumber]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Outputs[Output 0].Columns[RowNumber]"
                          name="RowNumber" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Inputs[Conditional Split Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[GoodRecords]"
                  endId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Inputs[Input 0]"
                  name="GoodRecords"
                  startId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split.Outputs[GoodRecords]" />
                <path
                  refId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Output 0]"
                  endId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7CF41387-8D98-45D3-9149-1BD6726C536C}"
          DTS:ObjectName="{7CF41387-8D98-45D3-9149-1BD6726C536C}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ExcelFileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container - get data from Access"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{63B02E68-86AC-492D-B190-81A14B47E0B4}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:FailPackageOnFailure="True"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container - get data from Access">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{D75F84E2-8078-4D15-9C84-81F40062DAD3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - get data from Procedures Management database"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion - turn Unicode into varchar"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[ReqTitle]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="ReqTitle"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ReqTitle]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[ProcTitle]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ProcTitle"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcTitle]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Requester]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Requester"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Requester]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[OSA]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="OSA"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[OSA]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Type]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Type"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Type]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Proj]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Proj"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Proj]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Summary]"
                          cachedDataType="nText"
                          cachedName="Summary"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Summary]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Priority]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Priority"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Priority]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Reason]"
                          cachedDataType="nText"
                          cachedName="Reason"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Reason]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[CurrentStatus]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="CurrentStatus"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[CurrentStatus]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[PreviousStatus]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="PreviousStatus"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PreviousStatus]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Court]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Court"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Court]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[Update]"
                          cachedDataType="nText"
                          cachedName="Update"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Update]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[History]"
                          cachedDataType="nText"
                          cachedName="History"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[History]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[PriorityCategoryOption]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="PriorityCategoryOption"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityCategoryOption]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[PriorityUrgencyOption]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="PriorityUrgencyOption"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityUrgencyOption]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[ProcDoc]"
                          cachedDataType="image"
                          cachedName="ProcDoc"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcDoc]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ReqTitle_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ReqTitle_varchar]"
                          name="ReqTitle_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ReqTitle]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ProcTitle_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ProcTitle_varchar]"
                          name="ProcTitle_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcTitle]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Requester_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Requester_varchar]"
                          name="Requester_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Requester]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[OSA_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[OSA_varchar]"
                          name="OSA_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[OSA]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Type_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Type_varchar]"
                          name="Type_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Proj_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Proj_varchar]"
                          name="Proj_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Proj]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Summary_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Summary_varchar]"
                          name="Summary_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Summary]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Priority_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Priority_varchar]"
                          name="Priority_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Priority]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Reason_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Reason_varchar]"
                          name="Reason_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Reason]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[CurrentStatus_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[CurrentStatus_varchar]"
                          name="CurrentStatus_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[CurrentStatus]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PreviousStatus_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PreviousStatus_varchar]"
                          name="PreviousStatus_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PreviousStatus]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Court_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Court_varchar]"
                          name="Court_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Court]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Update_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Update_varchar]"
                          name="Update_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Update]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[History_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[History_varchar]"
                          name="History_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[History]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PriorityCategoryOption_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PriorityCategoryOption_varchar]"
                          name="PriorityCategoryOption_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityCategoryOption]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PriorityUrgencyOption_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PriorityUrgencyOption_varchar]"
                          name="PriorityUrgencyOption_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityUrgencyOption]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ProcDoc_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ProcDoc_varchar]"
                          name="ProcDoc_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcDoc]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - SQL Server _PMD_datRequests table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[_PMD_datRequests]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSYS]"
                      connectionManagerRefId="Package.ConnectionManagers[CSYS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Request]"
                          cachedDataType="i4"
                          cachedName="Request"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Request]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Request]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Requested]"
                          cachedDataType="date"
                          cachedName="Requested"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Requested]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Requested]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Required]"
                          cachedDataType="date"
                          cachedName="Required"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Required]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Required]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[TopTen]"
                          cachedDataType="bool"
                          cachedName="TopTen"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[TopTen]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[TopTen]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[StatusDate]"
                          cachedDataType="date"
                          cachedName="StatusDate"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[StatusDate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[StatusDate]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[CourtDate]"
                          cachedDataType="date"
                          cachedName="CourtDate"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[CourtDate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[CourtDate]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[DateLastUpdate]"
                          cachedDataType="date"
                          cachedName="DateLastUpdate"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[DateLastUpdate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[DateLastUpdate]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[ReqTitle_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="ReqTitle_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[ReqTitle]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ReqTitle_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[ProcTitle_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProcTitle_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[ProcTitle]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ProcTitle_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Requester_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Requester_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Requester]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Requester_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[OSA_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="OSA_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[OSA]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[OSA_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Type_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Type_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Type_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Proj_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Proj_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Proj]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Proj_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Priority_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Priority_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Priority]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Priority_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[CurrentStatus_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CurrentStatus_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[CurrentStatus]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[CurrentStatus_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[PreviousStatus_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PreviousStatus_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[PreviousStatus]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PreviousStatus_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[PriorityCategoryOption_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PriorityCategoryOption_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[PriorityCategoryOption]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PriorityCategoryOption_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[PriorityUrgencyOption_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PriorityUrgencyOption_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[PriorityUrgencyOption]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[PriorityUrgencyOption_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Court_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Court_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Court]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Court_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[History_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="History_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[History]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[History_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Update_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="Update_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Update]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Update_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Reason_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="Reason_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Reason]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Reason_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[Summary_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="Summary_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Summary]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[Summary_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].Columns[ProcDoc_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="ProcDoc_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[ProcDoc]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[ProcDoc_varchar]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Request]"
                          dataType="i4"
                          name="Request" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[ReqTitle]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ReqTitle" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[ProcTitle]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProcTitle" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Requester]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Requester" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Requested]"
                          dataType="dbDate"
                          name="Requested" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[OSA]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="OSA" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Proj]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Proj" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Summary]"
                          codePage="1252"
                          dataType="text"
                          name="Summary" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[ProcDoc]"
                          codePage="1252"
                          dataType="text"
                          name="ProcDoc" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Required]"
                          dataType="dbDate"
                          name="Required" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[TopTen]"
                          dataType="bool"
                          name="TopTen" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Priority]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Priority" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Reason]"
                          codePage="1252"
                          dataType="text"
                          name="Reason" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[CurrentStatus]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CurrentStatus" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[StatusDate]"
                          dataType="dbDate"
                          name="StatusDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[PreviousStatus]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PreviousStatus" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Court]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Court" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[CourtDate]"
                          dataType="dbDate"
                          name="CourtDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[Update]"
                          codePage="1252"
                          dataType="text"
                          name="Update" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[History]"
                          codePage="1252"
                          dataType="text"
                          name="History" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[PriorityCategoryOption]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PriorityCategoryOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[PriorityUrgencyOption]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PriorityUrgencyOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input].ExternalColumns[DateLastUpdate]"
                          dataType="dbDate"
                          name="DateLastUpdate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source - Procedures Management database"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">datRequests</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Procedures]"
                      connectionManagerRefId="Package.ConnectionManagers[Procedures]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Request]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Request]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Request]"
                          name="Request"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ReqTitle]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[ReqTitle]"
                          length="100"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ReqTitle]"
                          name="ReqTitle"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcTitle]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[ProcTitle]"
                          length="255"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcTitle]"
                          name="ProcTitle"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Requester]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Requester]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Requester]"
                          name="Requester"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Requested]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Requested]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Requested]"
                          name="Requested"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[OSA]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[OSA]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[OSA]"
                          name="OSA"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Type]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Type]"
                          name="Type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Proj]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Proj]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Proj]"
                          name="Proj"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Summary]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Summary]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Summary]"
                          name="Summary"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcDoc]"
                          dataType="image"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[ProcDoc]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[ProcDoc]"
                          name="ProcDoc"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Required]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Required]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Required]"
                          name="Required"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[TopTen]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[TopTen]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[TopTen]"
                          name="TopTen"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Priority]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Priority]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Priority]"
                          name="Priority"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Reason]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Reason]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Reason]"
                          name="Reason"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[CurrentStatus]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[CurrentStatus]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[CurrentStatus]"
                          name="CurrentStatus"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[StatusDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[StatusDate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[StatusDate]"
                          name="StatusDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PreviousStatus]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[PreviousStatus]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PreviousStatus]"
                          name="PreviousStatus"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Court]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Court]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Court]"
                          name="Court"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[CourtDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[CourtDate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[CourtDate]"
                          name="CourtDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Update]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Update]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[Update]"
                          name="Update"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[History]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[History]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[History]"
                          name="History"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityCategoryOption]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[PriorityCategoryOption]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityCategoryOption]"
                          name="PriorityCategoryOption"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityUrgencyOption]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[PriorityUrgencyOption]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[PriorityUrgencyOption]"
                          name="PriorityUrgencyOption"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[DateLastUpdate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[DateLastUpdate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].Columns[DateLastUpdate]"
                          name="DateLastUpdate"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Request]"
                          dataType="i4"
                          name="Request" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[ReqTitle]"
                          dataType="wstr"
                          length="100"
                          name="ReqTitle" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[ProcTitle]"
                          dataType="wstr"
                          length="255"
                          name="ProcTitle" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Requester]"
                          dataType="wstr"
                          length="50"
                          name="Requester" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Requested]"
                          dataType="date"
                          name="Requested" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[OSA]"
                          dataType="wstr"
                          length="50"
                          name="OSA" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Type]"
                          dataType="wstr"
                          length="50"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Proj]"
                          dataType="wstr"
                          length="50"
                          name="Proj" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Summary]"
                          dataType="nText"
                          name="Summary" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[ProcDoc]"
                          dataType="image"
                          name="ProcDoc" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Required]"
                          dataType="date"
                          name="Required" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[TopTen]"
                          dataType="bool"
                          name="TopTen" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Priority]"
                          dataType="wstr"
                          length="50"
                          name="Priority" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Reason]"
                          dataType="nText"
                          name="Reason" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[CurrentStatus]"
                          dataType="wstr"
                          length="50"
                          name="CurrentStatus" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[StatusDate]"
                          dataType="date"
                          name="StatusDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[PreviousStatus]"
                          dataType="wstr"
                          length="50"
                          name="PreviousStatus" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Court]"
                          dataType="wstr"
                          length="50"
                          name="Court" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[CourtDate]"
                          dataType="date"
                          name="CourtDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[Update]"
                          dataType="nText"
                          name="Update" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[History]"
                          dataType="nText"
                          name="History" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[PriorityCategoryOption]"
                          dataType="wstr"
                          length="50"
                          name="PriorityCategoryOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[PriorityUrgencyOption]"
                          dataType="wstr"
                          length="50"
                          name="PriorityUrgencyOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output].ExternalColumns[DateLastUpdate]"
                          dataType="date"
                          name="DateLastUpdate" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Request]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Request]"
                          name="Request" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ReqTitle]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ReqTitle]"
                          name="ReqTitle" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ProcTitle]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ProcTitle]"
                          name="ProcTitle" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Requester]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Requester]"
                          name="Requester" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Requested]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Requested]"
                          name="Requested" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[OSA]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[OSA]"
                          name="OSA" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Type]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Type]"
                          name="Type" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Proj]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Proj]"
                          name="Proj" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Summary]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Summary]"
                          name="Summary" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ProcDoc]"
                          dataType="image"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[ProcDoc]"
                          name="ProcDoc" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Required]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Required]"
                          name="Required" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[TopTen]"
                          dataType="bool"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[TopTen]"
                          name="TopTen" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Priority]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Priority]"
                          name="Priority" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Reason]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Reason]"
                          name="Reason" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[CurrentStatus]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[CurrentStatus]"
                          name="CurrentStatus" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[StatusDate]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[StatusDate]"
                          name="StatusDate" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[PreviousStatus]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[PreviousStatus]"
                          name="PreviousStatus" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Court]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Court]"
                          name="Court" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[CourtDate]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[CourtDate]"
                          name="CourtDate" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Update]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[Update]"
                          name="Update" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[History]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[History]"
                          name="History" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[PriorityCategoryOption]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[PriorityCategoryOption]"
                          name="PriorityCategoryOption" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[PriorityUrgencyOption]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[PriorityUrgencyOption]"
                          name="PriorityUrgencyOption" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[DateLastUpdate]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Error Output].Columns[DateLastUpdate]"
                          name="DateLastUpdate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database.Paths[Data Conversion Output]"
                  endId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database.Paths[OLE DB Source Output]"
                  endId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{bee6bfac-00f9-491e-a51e-6d7b09be41d1}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - get data from Projects database"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion - turn Unicode into varchar"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="pName"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pName]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pManager]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pManager"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pManager]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pCoordinator]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pCoordinator"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCoordinator]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pDescription]"
                          cachedDataType="nText"
                          cachedName="pDescription"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pDescription]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pCurrentStatus]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pCurrentStatus"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentStatus]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pHistory]"
                          cachedDataType="nText"
                          cachedName="pHistory"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pHistory]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pComment]"
                          cachedDataType="nText"
                          cachedName="pComment"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pComment]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pRelatedRequests]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pRelatedRequests"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pRelatedRequests]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pCategory]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pCategory"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCategory]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pPriorityCategoryOption]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pPriorityCategoryOption"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityCategoryOption]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pPriorityUrgencyOption]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pPriorityUrgencyOption"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityUrgencyOption]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pScopeOption]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="pScopeOption"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScopeOption]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input].Columns[pStatusUpdate]"
                          cachedDataType="nText"
                          cachedName="pStatusUpdate"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pStatusUpdate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pName_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pName_varchar]"
                          name="pName_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pManager_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pManager_varchar]"
                          name="pManager_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pManager]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCoordinator_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCoordinator_varchar]"
                          name="pCoordinator_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCoordinator]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pDescription_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pDescription_varchar]"
                          name="pDescription_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pDescription]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCurrentStatus_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCurrentStatus_varchar]"
                          name="pCurrentStatus_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentStatus]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pHistory_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pHistory_varchar]"
                          name="pHistory_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pHistory]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pComment_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pComment_varchar]"
                          name="pComment_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pComment]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pRelatedRequests_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pRelatedRequests_varchar]"
                          name="pRelatedRequests_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pRelatedRequests]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCategory_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCategory_varchar]"
                          name="pCategory_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCategory]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pPriorityCategoryOption_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pPriorityCategoryOption_varchar]"
                          name="pPriorityCategoryOption_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityCategoryOption]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pPriorityUrgencyOption_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pPriorityUrgencyOption_varchar]"
                          name="pPriorityUrgencyOption_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityUrgencyOption]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pScopeOption_varchar]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pScopeOption_varchar]"
                          name="pScopeOption_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScopeOption]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pStatusUpdate_varchar]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pStatusUpdate_varchar]"
                          name="pStatusUpdate_varchar"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pStatusUpdate]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - SQL Server _PJ_datProjects table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[_PJ_datProjects]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSYS]"
                      connectionManagerRefId="Package.ConnectionManagers[CSYS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pNo]"
                          cachedDataType="i4"
                          cachedName="pNo"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pNo]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pNo]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pScope]"
                          cachedDataType="i4"
                          cachedName="pScope"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScope]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScope]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pPriority]"
                          cachedDataType="i4"
                          cachedName="pPriority"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriority]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriority]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pCurrentStatusDate]"
                          cachedDataType="date"
                          cachedName="pCurrentStatusDate"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCurrentStatusDate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentStatusDate]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pConceptMeeting]"
                          cachedDataType="date"
                          cachedName="pConceptMeeting"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pConceptMeeting]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pConceptMeeting]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pScopeDefined]"
                          cachedDataType="date"
                          cachedName="pScopeDefined"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScopeDefined]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScopeDefined]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pPriorityAssigned]"
                          cachedDataType="date"
                          cachedName="pPriorityAssigned"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriorityAssigned]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityAssigned]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pManagerAssigned]"
                          cachedDataType="date"
                          cachedName="pManagerAssigned"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pManagerAssigned]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pManagerAssigned]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[PCoordinatorAssigned]"
                          cachedDataType="date"
                          cachedName="PCoordinatorAssigned"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCoordinatorAssigned]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[PCoordinatorAssigned]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pCostBenefitAssessed]"
                          cachedDataType="date"
                          cachedName="pCostBenefitAssessed"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCostBenefitAssessed]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCostBenefitAssessed]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pScheduleApproved]"
                          cachedDataType="date"
                          cachedName="pScheduleApproved"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScheduleApproved]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScheduleApproved]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pOriginalEDC]"
                          cachedDataType="date"
                          cachedName="pOriginalEDC"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pOriginalEDC]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pOriginalEDC]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pCurrentEDC]"
                          cachedDataType="date"
                          cachedName="pCurrentEDC"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCurrentEDC]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentEDC]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pADC]"
                          cachedDataType="date"
                          cachedName="pADC"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pADC]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pADC]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pTopTen]"
                          cachedDataType="bool"
                          cachedName="pTopTen"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pTopTen]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pTopTen]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pName_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="pName_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pName]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pName_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pManager_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pManager_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pManager]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pManager_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pCoordinator_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pCoordinator_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCoordinator]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCoordinator_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pDescription_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="pDescription_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pDescription]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pDescription_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pCurrentStatus_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pCurrentStatus_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCurrentStatus]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCurrentStatus_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pHistory_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="pHistory_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pHistory]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pHistory_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pComment_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="pComment_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pComment]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pComment_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pRelatedRequests_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pRelatedRequests_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pRelatedRequests]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pRelatedRequests_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pCategory_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pCategory_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCategory]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pCategory_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pPriorityCategoryOption_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pPriorityCategoryOption_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriorityCategoryOption]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pPriorityCategoryOption_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pPriorityUrgencyOption_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pPriorityUrgencyOption_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriorityUrgencyOption]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pPriorityUrgencyOption_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pScopeOption_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="pScopeOption_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScopeOption]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pScopeOption_varchar]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pPercentComplete]"
                          cachedDataType="i4"
                          cachedName="pPercentComplete"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPercentComplete]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPercentComplete]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].Columns[pStatusUpdate_varchar]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="pStatusUpdate_varchar"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pStatusUpdate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output].Columns[pStatusUpdate_varchar]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pNo]"
                          dataType="i4"
                          name="pNo" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="pName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScope]"
                          dataType="i4"
                          name="pScope" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriority]"
                          dataType="i4"
                          name="pPriority" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pManager]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pManager" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCoordinator]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pCoordinator" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pDescription]"
                          codePage="1252"
                          dataType="text"
                          name="pDescription" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCurrentStatus]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pCurrentStatus" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCurrentStatusDate]"
                          dataType="dbDate"
                          name="pCurrentStatusDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pHistory]"
                          codePage="1252"
                          dataType="text"
                          name="pHistory" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pComment]"
                          codePage="1252"
                          dataType="text"
                          name="pComment" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pRelatedRequests]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pRelatedRequests" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pConceptMeeting]"
                          dataType="dbDate"
                          name="pConceptMeeting" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScopeDefined]"
                          dataType="dbDate"
                          name="pScopeDefined" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriorityAssigned]"
                          dataType="dbDate"
                          name="pPriorityAssigned" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pManagerAssigned]"
                          dataType="dbDate"
                          name="pManagerAssigned" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCoordinatorAssigned]"
                          dataType="dbDate"
                          name="pCoordinatorAssigned" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCostBenefitAssessed]"
                          dataType="dbDate"
                          name="pCostBenefitAssessed" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScheduleApproved]"
                          dataType="dbDate"
                          name="pScheduleApproved" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pOriginalEDC]"
                          dataType="dbDate"
                          name="pOriginalEDC" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCurrentEDC]"
                          dataType="dbDate"
                          name="pCurrentEDC" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pADC]"
                          dataType="dbDate"
                          name="pADC" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pTopTen]"
                          dataType="bool"
                          name="pTopTen" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pCategory]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pCategory" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriorityCategoryOption]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pPriorityCategoryOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPriorityUrgencyOption]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pPriorityUrgencyOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pScopeOption]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="pScopeOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pPercentComplete]"
                          dataType="i4"
                          name="pPercentComplete" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input].ExternalColumns[pStatusUpdate]"
                          codePage="1252"
                          dataType="text"
                          name="pStatusUpdate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - SQL Server _PJ_refCostCenters table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[_PJ_refCostCenters]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSYS]"
                      connectionManagerRefId="Package.ConnectionManagers[CSYS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].Columns[pNo]"
                          cachedDataType="i4"
                          cachedName="pNo"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[pNo]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[pNo]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].Columns[cNo]"
                          cachedDataType="i4"
                          cachedName="cNo"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[cNo]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cNo]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].Columns[cCostCenterId]"
                          cachedDataType="i4"
                          cachedName="cCostCenterId"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[cCostCenterId]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cCostCenterId]" />
                        <inputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].Columns[cPercentAllocated]"
                          cachedDataType="i4"
                          cachedName="cPercentAllocated"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[cPercentAllocated]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cPercentAllocated]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[pNo]"
                          dataType="i4"
                          name="pNo" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[cNo]"
                          dataType="i4"
                          name="cNo" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[cCostCenterId]"
                          dataType="i4"
                          name="cCostCenterId" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input].ExternalColumns[cPercentAllocated]"
                          dataType="i4"
                          name="cPercentAllocated" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source - Projects database datProjects table"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">datProjects</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Projects]"
                      connectionManagerRefId="Package.ConnectionManagers[Projects]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pNo]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pNo]"
                          name="pNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pName]"
                          length="100"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pName]"
                          name="pName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScope]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScope]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScope]"
                          name="pScope"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriority]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriority]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriority]"
                          name="pPriority"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pManager]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pManager]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pManager]"
                          name="pManager"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCoordinator]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCoordinator]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCoordinator]"
                          name="pCoordinator"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pDescription]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pDescription]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pDescription]"
                          name="pDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentStatus]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCurrentStatus]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentStatus]"
                          name="pCurrentStatus"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentStatusDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCurrentStatusDate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentStatusDate]"
                          name="pCurrentStatusDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pHistory]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pHistory]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pHistory]"
                          name="pHistory"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pComment]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pComment]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pComment]"
                          name="pComment"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pRelatedRequests]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pRelatedRequests]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pRelatedRequests]"
                          name="pRelatedRequests"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pConceptMeeting]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pConceptMeeting]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pConceptMeeting]"
                          name="pConceptMeeting"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScopeDefined]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScopeDefined]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScopeDefined]"
                          name="pScopeDefined"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityAssigned]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriorityAssigned]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityAssigned]"
                          name="pPriorityAssigned"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pManagerAssigned]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pManagerAssigned]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pManagerAssigned]"
                          name="pManagerAssigned"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[PCoordinatorAssigned]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[PCoordinatorAssigned]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[PCoordinatorAssigned]"
                          name="PCoordinatorAssigned"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCostBenefitAssessed]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCostBenefitAssessed]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCostBenefitAssessed]"
                          name="pCostBenefitAssessed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScheduleApproved]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScheduleApproved]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScheduleApproved]"
                          name="pScheduleApproved"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pOriginalEDC]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pOriginalEDC]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pOriginalEDC]"
                          name="pOriginalEDC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentEDC]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCurrentEDC]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCurrentEDC]"
                          name="pCurrentEDC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pADC]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pADC]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pADC]"
                          name="pADC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pTopTen]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pTopTen]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pTopTen]"
                          name="pTopTen"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCategory]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCategory]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pCategory]"
                          name="pCategory"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityCategoryOption]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriorityCategoryOption]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityCategoryOption]"
                          name="pPriorityCategoryOption"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityUrgencyOption]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriorityUrgencyOption]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPriorityUrgencyOption]"
                          name="pPriorityUrgencyOption"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScopeOption]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScopeOption]"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pScopeOption]"
                          name="pScopeOption"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPercentComplete]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPercentComplete]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pPercentComplete]"
                          name="pPercentComplete"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pStatusUpdate]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pStatusUpdate]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].Columns[pStatusUpdate]"
                          name="pStatusUpdate"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pNo]"
                          dataType="i4"
                          name="pNo" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pName]"
                          dataType="wstr"
                          length="100"
                          name="pName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScope]"
                          dataType="i4"
                          name="pScope" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriority]"
                          dataType="i4"
                          name="pPriority" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pManager]"
                          dataType="wstr"
                          length="50"
                          name="pManager" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCoordinator]"
                          dataType="wstr"
                          length="50"
                          name="pCoordinator" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pDescription]"
                          dataType="nText"
                          name="pDescription" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCurrentStatus]"
                          dataType="wstr"
                          length="50"
                          name="pCurrentStatus" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCurrentStatusDate]"
                          dataType="date"
                          name="pCurrentStatusDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pHistory]"
                          dataType="nText"
                          name="pHistory" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pComment]"
                          dataType="nText"
                          name="pComment" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pRelatedRequests]"
                          dataType="wstr"
                          length="50"
                          name="pRelatedRequests" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pConceptMeeting]"
                          dataType="date"
                          name="pConceptMeeting" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScopeDefined]"
                          dataType="date"
                          name="pScopeDefined" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriorityAssigned]"
                          dataType="date"
                          name="pPriorityAssigned" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pManagerAssigned]"
                          dataType="date"
                          name="pManagerAssigned" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[PCoordinatorAssigned]"
                          dataType="date"
                          name="PCoordinatorAssigned" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCostBenefitAssessed]"
                          dataType="date"
                          name="pCostBenefitAssessed" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScheduleApproved]"
                          dataType="date"
                          name="pScheduleApproved" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pOriginalEDC]"
                          dataType="date"
                          name="pOriginalEDC" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCurrentEDC]"
                          dataType="date"
                          name="pCurrentEDC" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pADC]"
                          dataType="date"
                          name="pADC" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pTopTen]"
                          dataType="bool"
                          name="pTopTen" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pCategory]"
                          dataType="wstr"
                          length="50"
                          name="pCategory" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriorityCategoryOption]"
                          dataType="wstr"
                          length="50"
                          name="pPriorityCategoryOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPriorityUrgencyOption]"
                          dataType="wstr"
                          length="50"
                          name="pPriorityUrgencyOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pScopeOption]"
                          dataType="wstr"
                          length="50"
                          name="pScopeOption" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pPercentComplete]"
                          dataType="i4"
                          name="pPercentComplete" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output].ExternalColumns[pStatusUpdate]"
                          dataType="nText"
                          name="pStatusUpdate" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pNo]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pNo]"
                          name="pNo" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pName]"
                          name="pName" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScope]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScope]"
                          name="pScope" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriority]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriority]"
                          name="pPriority" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pManager]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pManager]"
                          name="pManager" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCoordinator]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCoordinator]"
                          name="pCoordinator" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pDescription]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pDescription]"
                          name="pDescription" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCurrentStatus]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCurrentStatus]"
                          name="pCurrentStatus" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCurrentStatusDate]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCurrentStatusDate]"
                          name="pCurrentStatusDate" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pHistory]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pHistory]"
                          name="pHistory" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pComment]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pComment]"
                          name="pComment" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pRelatedRequests]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pRelatedRequests]"
                          name="pRelatedRequests" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pConceptMeeting]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pConceptMeeting]"
                          name="pConceptMeeting" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScopeDefined]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScopeDefined]"
                          name="pScopeDefined" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriorityAssigned]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriorityAssigned]"
                          name="pPriorityAssigned" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pManagerAssigned]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pManagerAssigned]"
                          name="pManagerAssigned" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[PCoordinatorAssigned]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[PCoordinatorAssigned]"
                          name="PCoordinatorAssigned" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCostBenefitAssessed]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCostBenefitAssessed]"
                          name="pCostBenefitAssessed" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScheduleApproved]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScheduleApproved]"
                          name="pScheduleApproved" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pOriginalEDC]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pOriginalEDC]"
                          name="pOriginalEDC" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCurrentEDC]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCurrentEDC]"
                          name="pCurrentEDC" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pADC]"
                          dataType="date"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pADC]"
                          name="pADC" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pTopTen]"
                          dataType="bool"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pTopTen]"
                          name="pTopTen" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCategory]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pCategory]"
                          name="pCategory" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriorityCategoryOption]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriorityCategoryOption]"
                          name="pPriorityCategoryOption" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriorityUrgencyOption]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPriorityUrgencyOption]"
                          name="pPriorityUrgencyOption" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScopeOption]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pScopeOption]"
                          name="pScopeOption" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPercentComplete]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pPercentComplete]"
                          name="pPercentComplete" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pStatusUpdate]"
                          dataType="nText"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[pStatusUpdate]"
                          name="pStatusUpdate" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source - Projects database refCostCenters table"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">refCostCenters</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Projects]"
                      connectionManagerRefId="Package.ConnectionManagers[Projects]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[pNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[pNo]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[pNo]"
                          name="pNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[cNo]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cNo]"
                          name="cNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cCostCenterId]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[cCostCenterId]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cCostCenterId]"
                          name="cCostCenterId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cPercentAllocated]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[cPercentAllocated]"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].Columns[cPercentAllocated]"
                          name="cPercentAllocated"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[pNo]"
                          dataType="i4"
                          name="pNo" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[cNo]"
                          dataType="i4"
                          name="cNo" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[cCostCenterId]"
                          dataType="i4"
                          name="cCostCenterId" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output].ExternalColumns[cPercentAllocated]"
                          dataType="i4"
                          name="cPercentAllocated" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[cNo]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[cNo]"
                          name="cNo" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[pNo]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[pNo]"
                          name="pNo" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[cCostCenterId]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[cCostCenterId]"
                          name="cCostCenterId" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[cPercentAllocated]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[cPercentAllocated]"
                          name="cPercentAllocated" />
                        <outputColumn
                          refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database.Paths[Data Conversion Output]"
                  endId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database.Paths[OLE DB Source Output]"
                  endId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database.Paths[OLE DB Source Output1]"
                  endId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table.Inputs[OLE DB Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - get data from Access\Execute SQL Task - truncate _PJ tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6ad7f16c-e829-4818-abb0-dca89058db02}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - truncate _PJ tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{f7e36e17-79e3-4daa-961c-f0c0ea387d9a}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [dbo].[_PJ_datProjects];&#xA;TRUNCATE TABLE [dbo].[_PJ_refCostCenters];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - get data from Access\Execute SQL Task - truncate _PMD_datRequests"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{965BA29D-0615-4D18-9DAB-A79E4615B9FD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - truncate _PMD_datRequests"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{f7e36e17-79e3-4daa-961c-f0c0ea387d9a}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [dbo].[_PMD_datRequests];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - get data from Access.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D17FBC83-C5DC-4C27-9009-0BF7C3BD7609}"
          DTS:From="Package\Sequence Container - get data from Access\Execute SQL Task - truncate _PJ tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - get data from Access.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B1B002AC-AC48-4279-B3C8-C79DCD6B8702}"
          DTS:From="Package\Sequence Container - get data from Access\Execute SQL Task - truncate _PMD_datRequests"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{97E662C8-E50F-4620-BD63-DAA22E071054}"
      DTS:From="Package\Execute SQL Task - truncate CSYS COST_DAT_TimesheetProcessing"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container - read in all spreadsheets" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{12754122-9B48-4FA9-9B63-744D5C7B183E}"
      DTS:From="Package\Foreach Loop Container - gets all current timesheets"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Execute SQL Task - truncate CSYS COST_DAT_TimesheetProcessing" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{08579276-40B1-493C-9D2B-72A860F32ABD}"
      DTS:From="Package\Sequence Container - get data from Access"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\File System Task - deletes processed timesheets" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{539DC3AF-D029-4B18-B48D-088C9422C011}"
      DTS:From="Package\Foreach Loop Container - read in all spreadsheets"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Sequence Container - get data from Access" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{03F9DE32-DBFF-4A25-983D-567F63336C18}"
      DTS:From="Package\File System Task - deletes existing timesheets"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Foreach Loop Container - gets all current timesheets" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="402,42"
          Id="Package\Execute SQL Task - truncate CSYS COST_DAT_TimesheetProcessing"
          TopLeft="486,45" />
        <NodeLayout
          Size="304,42"
          Id="Package\File System Task - deletes existing timesheets"
          TopLeft="63,48" />
        <NodeLayout
          Size="307,42"
          Id="Package\File System Task - deletes processed timesheets"
          TopLeft="307,613" />
        <NodeLayout
          Size="320,42"
          Id="Package\Foreach Loop Container - gets all current timesheets\File System Task - moves timesheet for processing"
          TopLeft="16,23" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="351,103"
          Size="351,146"
          Id="Package\Foreach Loop Container - gets all current timesheets"
          TopLeft="98,141" />
        <NodeLayout
          Size="278,42"
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server"
          TopLeft="40,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="364,100"
          Size="364,143"
          Id="Package\Foreach Loop Container - read in all spreadsheets"
          TopLeft="506,144" />
        <NodeLayout
          Size="394,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database"
          TopLeft="13,101" />
        <NodeLayout
          Size="315,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database"
          TopLeft="449,101" />
        <NodeLayout
          Size="266,42"
          Id="Package\Sequence Container - get data from Access\Execute SQL Task - truncate _PJ tables"
          TopLeft="476,23" />
        <NodeLayout
          Size="309,42"
          Id="Package\Sequence Container - get data from Access\Execute SQL Task - truncate _PMD_datRequests"
          TopLeft="50,23" />
        <EdgeLayout
          Id="Package\Sequence Container - get data from Access.PrecedenceConstraints[Constraint]"
          TopLeft="607.75,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - get data from Access.PrecedenceConstraints[Constraint 1]"
          TopLeft="207.25,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="847,194"
          Size="847,237"
          Id="Package\Sequence Container - get data from Access"
          TopLeft="40,335" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="752.666666666667,87">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-64.6666666666666,57"
              Start="0,0"
              End="-64.6666666666666,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9355797819623" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9355797819623"
                    Point2="0,22.9355797819623"
                    Point3="-4,22.9355797819623" />
                  <mssgle:LineSegment
                    End="-60.6666666666666,22.9355797819623" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.6666666666666,22.9355797819623"
                    Point2="-64.6666666666666,22.9355797819623"
                    Point3="-64.6666666666666,26.9355797819623" />
                  <mssgle:LineSegment
                    End="-64.6666666666666,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="330.666666666667,141">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="290.666666666667,-54"
              Start="0,0"
              End="290.666666666667,-46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-23.0193116795692" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-23.0193116795692"
                    Point2="0,-27.0193116795692"
                    Point3="4,-27.0193116795692" />
                  <mssgle:LineSegment
                    End="286.666666666667,-27.0193116795692" />
                  <mssgle:CubicBezierSegment
                    Point1="286.666666666667,-27.0193116795692"
                    Point2="290.666666666667,-27.0193116795692"
                    Point3="290.666666666667,-31.0193116795692" />
                  <mssgle:LineSegment
                    End="290.666666666667,-46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="462,572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="688,287">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-224.5,48"
              Start="0,0"
              End="-224.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="-4,24" />
                  <mssgle:LineSegment
                    End="-220.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="-220.5,24"
                    Point2="-224.5,24"
                    Point3="-224.5,28" />
                  <mssgle:LineSegment
                    End="-224.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="215.666666666667,90">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="406,42"
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing"
          TopLeft="16,373" />
        <NodeLayout
          Size="250,42"
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets"
          TopLeft="83,18" />
        <NodeLayout
          Size="288,42"
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Data Conversion - turn Unicode into varchar"
          TopLeft="68,286" />
        <NodeLayout
          Size="252,42"
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Script Component - get RowNumber"
          TopLeft="87,127" />
        <NodeLayout
          Size="225,42"
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Derived Column - get filename"
          TopLeft="97,193" />
        <EdgeLayout
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Output 0]"
          TopLeft="211.25,169">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Derived Column Output]"
          TopLeft="210.75,235">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Data Conversion Output]"
          TopLeft="215.5,328">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Conditional Split"
          TopLeft="388,23" />
        <EdgeLayout
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[Excel Source Output]"
          TopLeft="333,41.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55,0"
              Start="0,0"
              End="47.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server.Paths[GoodRecords]"
          TopLeft="467.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-254.5,62"
              Start="0,0"
              End="-254.5,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27"
                    Point2="0,31"
                    Point3="-4,31" />
                  <mssgle:LineSegment
                    End="-250.5,31" />
                  <mssgle:CubicBezierSegment
                    Point1="-250.5,31"
                    Point2="-254.5,31"
                    Point3="-254.5,35" />
                  <mssgle:LineSegment
                    End="-254.5,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-157.07509765625,36,59.6501953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\Excel Source - individual timesheets">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container - read in all spreadsheets\Data Flow Task - copy data to SQL Server\OLE DB Destination - send to CSYS COST_DAT_TimesheetProcessing">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="356,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table"
          TopLeft="47,276" />
        <NodeLayout
          Size="288,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\Data Conversion - turn Unicode into varchar"
          TopLeft="75,146" />
        <NodeLayout
          Size="325,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database"
          TopLeft="53,26" />
        <EdgeLayout
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database.Paths[OLE DB Source Output]"
          TopLeft="217.25,68">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database.Paths[Data Conversion Output]"
          TopLeft="222,188">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Destination - SQL Server _PMD_datRequests table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Procedures Management database\OLE DB Source - Procedures Management database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="357,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table"
          TopLeft="525,276" />
        <NodeLayout
          Size="340,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table"
          TopLeft="85,276" />
        <NodeLayout
          Size="328,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table"
          TopLeft="90,23" />
        <NodeLayout
          Size="345,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table"
          TopLeft="530,23" />
        <NodeLayout
          Size="288,42"
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\Data Conversion - turn Unicode into varchar"
          TopLeft="113,146" />
        <EdgeLayout
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database.Paths[OLE DB Source Output1]"
          TopLeft="703,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,211"
              Start="0,0"
              End="0,203.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,203.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database.Paths[OLE DB Source Output]"
          TopLeft="255.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database.Paths[Data Conversion Output]"
          TopLeft="256,188">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_refCostCenters table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database datProjects table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Destination - SQL Server _PJ_datProjects table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container - get data from Access\Data Flow Task - get data from Projects database\OLE DB Source - Projects database refCostCenters table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>