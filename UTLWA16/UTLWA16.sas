*---------------------------------------------------------------*
| UTLWA16 SPECIAL WRITE OFF BORROWER IDENTIFICATION - BOND SWAP |
*---------------------------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
/*%LET TBLLIB = /sas/whse/progrevw;*/
%LET RPTLIB = T:\SAS;
%LET TBLLIB = Q:\Process Automation\TabSAS;
LIBNAME SAS_TAB V8 'X:\PADU\SAS\devLnSale'; 
FILENAME REPORT2 "&RPTLIB/ULWA16.LWA16R2";
FILENAME REPORT3 "&RPTLIB/ULWA16.LWA16R3";
FILENAME REPORT4 "&RPTLIB/ULWA16.LWA16R4";
FILENAME REPORT5 "&RPTLIB/ULWA16.LWA16R5";
FILENAME REPORTZ "&RPTLIB/ULWA16.LWA16RZ";
DATA _NULL_;
	INFILE "&TBLLIB/SWO_BOND_TRNSFR.txt" DLM=',' DSD MISSOVER LRECL=67000 FIRSTOBS=2;
	INFORMAT BOND $10. AMOUNT BEST12.;
	INPUT BOND $ AMOUNT;
	CALL SYMPUT('BOND',BOND);
	CALL SYMPUT('AMOUNT',AMOUNT);
RUN;
%SYSLPUT AMOUNT = &AMOUNT;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL ;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE SWOBI AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN
	,A.LN_SEQ
	,A.LC_STA_LON10
	,A.LF_LON_CUR_OWN
	,A.LA_CUR_PRI
	,A.LC_DFR_FOR_TYP
	,A.LD_TRM_BEG
	,A.LD_TRM_END
	,B.BOR_BAL
	,C.LN_BR_DSB_SEQ
	,C.LC_DSB_TYP
	,C.LC_STA_LON15
	,C.LD_DSB
	,COALESCE(C.LA_DSB,0) 			AS LA_DSB
	,COALESCE(C.LA_DSB_CAN,0) 		AS LA_DSB_CAN
	,D.WC_DW_LON_STA
	,E.IF_BND_ISS
	,COALESCE(A.LA_CUR_PRI,0) 		AS LA_CUR_PRI
	,COALESCE(A.LA_LTE_FEE_OTS,0) 	AS LA_LTE_FEE_OTS
	,COALESCE(D.LA_NSI_OTS,0) 		AS LA_NSI_OTS
	,COALESCE(A.LA_CUR_PRI,0) +
		COALESCE(A.LA_LTE_FEE_OTS,0) + 	
		COALESCE(D.LA_NSI_OTS,0) 		AS LN_BAL
	,F.DF_SPE_ACC_ID
	,F.DM_PRS_LST
	,OL.OLIND
	,A.LD_LON_1_DSB
	,LN15.MAX_DISB_DT
FROM OLWHRM1.LN10_LON A
INNER JOIN (
	SELECT IJ1.BF_SSN
		,SUM(COALESCE(IJ1.LA_CUR_PRI,0)) +
		 SUM(COALESCE(IJ1.LA_LTE_FEE_OTS,0)) +
		 SUM(COALESCE(IJ2.LA_NSI_OTS,0)) AS BOR_BAL
	FROM OLWHRM1.LN10_LON IJ1
	LEFT OUTER JOIN OLWHRM1.DW01_DW_CLC_CLU IJ2
		ON IJ1.BF_SSN = IJ2.BF_SSN
		AND IJ1.LN_SEQ = IJ2.LN_SEQ
	WHERE IJ1.LC_STA_LON10 = 'R'
		AND IJ1.LD_LON_1_DSB < '07/01/2008'
	GROUP BY IJ1.BF_SSN
	) B
	ON A.BF_SSN = B.BF_SSN
INNER JOIN OLWHRM1.LN15_DSB C
	ON A.BF_SSN = C.BF_SSN
	AND A.LN_SEQ = C.LN_SEQ
LEFT OUTER JOIN OLWHRM1.DW01_DW_CLC_CLU D
	ON A.BF_SSN = D.BF_SSN
	AND A.LN_SEQ = D.LN_SEQ
LEFT OUTER JOIN (
	SELECT IJ3.BF_SSN
		,IJ3.LN_SEQ
		,IJ3.IF_BND_ISS
	FROM OLWHRM1.LN35_LON_OWN IJ3
	INNER JOIN (
		SELECT BF_SSN
			,LN_SEQ
			,MAX(LD_OWN_EFF_SR) AS MXDT
		FROM OLWHRM1.LN35_LON_OWN
		GROUP BY BF_SSN
			,LN_SEQ
		) IJ4
		ON IJ3.BF_SSN = IJ4.BF_SSN
		AND IJ3.LN_SEQ = IJ4.LN_SEQ
		AND IJ3.LD_OWN_EFF_SR = IJ4.MXDT
	) E
	ON A.BF_SSN = E.BF_SSN
	AND A.LN_SEQ = E.LN_SEQ
LEFT OUTER JOIN OLWHRM1.PD10_PRS_NME F
	ON A.BF_SSN = F.DF_PRS_ID
LEFT OUTER JOIN (
	SELECT DISTINCT O1.DF_PRS_ID_BR
		,'Y' AS OLIND
	FROM OLWHRM1.GA01_APP O1
	INNER JOIN OLWHRM1.GA10_LON_APP O2
		ON O1.AF_APL_ID = O2.AF_APL_ID
	INNER JOIN OLWHRM1.GA14_LON_STA O3
		ON O2.AF_APL_ID = O3.AF_APL_ID
		AND O2.AF_APL_ID_SFX = O3.AF_APL_ID_SFX
	WHERE O2.AC_PRC_STA = 'A'
		AND O2.AF_CUR_LON_SER_AGY = '700121'
		AND O3.AC_STA_GA14 = 'A'
		AND O3.AC_LON_STA_TYP IN 
		(
			'ID','IG','DA','FB','RP','CR','IM'
		)
	) OL
	ON A.BF_SSN = OL.DF_PRS_ID_BR
LEFT OUTER JOIN (
	SELECT BF_SSN
		,LN_SEQ
		,MAX(LD_DSB) AS MAX_DISB_DT
	FROM OLWHRM1.LN15_DSB 
	WHERE LA_DSB <> COALESCE(LA_DSB_CAN,0)
		AND LC_STA_LON15 IN ('1','3')
		AND 
		(
			(
				LC_DSB_TYP = '2'			
			)
		OR 
			(
				LC_DSB_TYP = '1'
				AND LD_DSB_ROS_PRT IS NOT NULL	
			)
		)
	GROUP BY BF_SSN
		,LN_SEQ
	) LN15
	ON A.BF_SSN = LN15.BF_SSN
	AND A.LN_SEQ = LN15.LN_SEQ
WHERE B.BOR_BAL < &AMOUNT
	AND B.BOR_BAL != 0 
	AND A.LC_STA_LON10 = 'R'
	AND A.LD_LON_1_DSB < '07/01/2008'
FOR READ ONLY WITH UR
);

CREATE TABLE OLNEL AS
SELECT DISTINCT A.BF_SSN 
	,A.DM_PRS_LST
	,A.DF_SPE_ACC_ID
	,B.CLUID
	,B.CBAL
	,B.AD_CUR_PRI_RPT
FROM SWOBI A
INNER JOIN CONNECTION TO DB2 (
	SELECT O1.DF_PRS_ID_BR
		,O2.AF_APL_ID||O2.AF_APL_ID_SFX AS CLUID
		,COALESCE(O2.AA_CUR_PRI,0) + COALESCE(O2.AA_OTS_ACR_INT,0) AS CBAL
		,O2.AD_CUR_PRI_RPT
	FROM OLWHRM1.GA01_APP O1
	INNER JOIN OLWHRM1.GA10_LON_APP O2
		ON O1.AF_APL_ID = O2.AF_APL_ID
	INNER JOIN OLWHRM1.GA14_LON_STA O3
		ON O2.AF_APL_ID = O3.AF_APL_ID
		AND O2.AF_APL_ID_SFX = O3.AF_APL_ID_SFX
	WHERE O2.AC_PRC_STA = 'A'
		AND O2.AF_CUR_LON_SER_AGY = '700121'
		AND O3.AC_STA_GA14 = 'A'
		AND O3.AC_LON_STA_TYP IN 
		(
			'ID','IG','DA','FB','RP','CR','IM'
		)
	FOR READ ONLY WITH UR
	) B
	ON A.BF_SSN = B.DF_PRS_ID_BR
;
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWA16.LWA16RZ);*/
/*QUIT;*/
ENDRSUBMIT;
DATA SWOBI ;
	SET WORKLOCL.SWOBI;
RUN;
DATA OLNEL ;
	SET WORKLOCL.OLNEL;
RUN;
PROC SORT DATA = SWOBI NODUPKEY; 
	BY BF_SSN LN_SEQ LN_BR_DSB_SEQ; 
RUN;
PROC SQL;
CREATE TABLE SWOBIBS AS 
SELECT DISTINCT A.BF_SSN
	,A.LN_SEQ
	,A.BF_SSN||LEFT(TRIM(PUT(A.LN_SEQ,Z4.))) AS LID
	,A.IF_BND_ISS
	,ROUND(A.LA_CUR_PRI + A.LA_LTE_FEE_OTS + A.LA_NSI_OTS,.01) AS LN_BAL
	,ROUND(A.LA_CUR_PRI + A.LA_NSI_OTS,.01) AS PI_BAL
	,A.DF_SPE_ACC_ID
	,A.OLIND
	,A.WC_DW_LON_STA
	,A.LD_TRM_BEG
	,A.LD_TRM_END
	,A.LD_LON_1_DSB 
	,A.MAX_DISB_DT 
FROM SWOBI A
/*EXCLUSION CATEGORIES*/
LEFT OUTER JOIN ( 
		SELECT DISTINCT A.BF_SSN /*LOANS NOT OWNED BY UHEAA*/
			,'X' AS EXCLD
		FROM SWOBI A
		WHERE EXISTS (
			SELECT *
			FROM SWOBI X
			WHERE X.BF_SSN = A.BF_SSN
				AND X.LN_SEQ = A.LN_SEQ
				AND X.LF_LON_CUR_OWN ^= '828476'
				AND X.LN_BAL > 0
			)
	UNION
		SELECT DISTINCT A.BF_SSN /*NOT FULLY DISBURSED*/
			,'X' AS EXCLD
		FROM SWOBI A
		WHERE NOT EXISTS (
			SELECT *
			FROM SWOBI X
			WHERE X.BF_SSN = A.BF_SSN
				AND X.LN_SEQ = A.LN_SEQ
				AND X.LC_STA_LON15 IN ('1','3')
				AND X.LC_DSB_TYP = '2'
			)
	UNION
		SELECT DISTINCT BF_SSN /*INTEREST ONLY BALANCE*/
			,'X' AS EXCLD
		FROM (
			SELECT DISTINCT A.BF_SSN
				,LN_SEQ
				,LA_CUR_PRI
				,SUM(LA_DSB) 
				,SUM(LA_DSB_CAN)
			FROM SWOBI A
			GROUP BY BF_SSN
				,LN_SEQ
				,LA_CUR_PRI
			HAVING SUM(LA_DSB) = SUM(LA_DSB_CAN) 
				AND LA_CUR_PRI > 0
			)
	UNION
		SELECT DISTINCT A.BF_SSN /*CREDIT BALANCE*/
			,'X' AS EXCLD
		FROM SWOBI A
		WHERE LA_CUR_PRI < 0
	UNION
		SELECT DISTINCT A.BF_SSN /*BOND ID*/
			,'X' AS EXCLD
		FROM SWOBI A
		WHERE IF_BND_ISS = "&BOND"
			AND LN_BAL > 0
	UNION
		SELECT DISTINCT A.BF_SSN /*LOAN STATUS*/
			,'X' AS EXCLD
		FROM SWOBI A
		WHERE WC_DW_LON_STA IN ('01','02')
	UNION
		SELECT DISTINCT A.BF_SSN  /*IN SCHOOL DEFERMENT*/
			,'X' AS EXCLD
		FROM SWOBI A
		WHERE WC_DW_LON_STA = '04' 
			AND LC_DFR_FOR_TYP IN ('15','16','18')
	) B
	ON A.BF_SSN = B.BF_SSN
WHERE B.EXCLD ^= 'X'
	AND ROUND(A.LA_CUR_PRI + A.LA_LTE_FEE_OTS + A.LA_NSI_OTS,.01) > 0
;
QUIT;
/*************************************************************************************
* REMOVE ECASLA LOANS  
**************************************************************************************/
DATA SWOBIBS (DROP=E1_1ST_DSB_LB E1_1ST_DSB_UB E1_LN_TRM_DT  E1_MX_DSB_LB E1_MX_DSB_UB 
	E2_1ST_DSB_LB E2_LN_TRM_DT  E2_MX_DSB_LB  E2_MX_DSB_UB);
	SET SWOBIBS;
	/*ECASLA 1 DATE VARIABLE INITIALIZATION*/
	E1_1ST_DSB_LB = '01JUL2008'D;
	E1_1ST_DSB_UB = '01JUL2009'D;
	E1_LN_TRM_DT = '01JUL2008'D;
	E1_MX_DSB_LB = '01JUL2008'D;
	E1_MX_DSB_UB = '30SEP2009'D;
	/*ECASLA 2 DATE VARIABLE INITIALIZATION*/
	E2_1ST_DSB_LB = '01MAY2009'D;
	E2_LN_TRM_DT = '01JUL2009'D;
	E2_MX_DSB_LB = '01MAY2009'D;
	E2_MX_DSB_UB = '30SEP2010'D;
	/*DELETE IF ECASLA*/
	IF (E1_LN_TRM_DT <= LD_TRM_BEG OR LD_TRM_BEG <= E1_LN_TRM_DT <= LD_TRM_END) AND 
		E1_1ST_DSB_LB <= LD_LON_1_DSB < E1_1ST_DSB_UB AND	
		E1_MX_DSB_LB <= MAX_DISB_DT <= E1_MX_DSB_UB THEN 
			DELETE;
	ELSE IF (E2_LN_TRM_DT <= LD_TRM_BEG OR LD_TRM_BEG <= E2_LN_TRM_DT <= LD_TRM_END) AND
		E2_1ST_DSB_LB <= LD_LON_1_DSB AND
		E2_MX_DSB_LB <= MAX_DISB_DT <= E2_MX_DSB_UB THEN
			DELETE;
	ELSE 
		OUTPUT;
RUN;
DATA SWOBIBS(DROP=WC_DW_LON_STA) NEL(DROP=WC_DW_LON_STA);
	SET SWOBIBS;
	WHERE WC_DW_LON_STA NOT IN ('08','12','17','19','21');
	IF OLIND = 'Y' THEN 
		OUTPUT NEL;
	ELSE 
		OUTPUT SWOBIBS;
RUN;
DATA SWOBIBS ERR;
	SET SWOBIBS;
	SELECT(PI_BAL);
		WHEN(0) OUTPUT ERR;
		OTHERWISE OUTPUT SWOBIBS;
	END;
RUN;

PROC SORT DATA = SWOBIBS; BY IF_BND_ISS BF_SSN; RUN;
PROC SORT DATA = ERR; BY DF_SPE_ACC_ID; RUN;

PROC SQL;
CREATE TABLE TBND AS 
SELECT IF_BND_ISS
	,SUM(LN_BAL) AS BND_BAL
FROM SWOBIBS
GROUP BY IF_BND_ISS
ORDER BY IF_BND_ISS
;
QUIT;
PROC SQL;
	CREATE TABLE A16R5 AS 
	SELECT DISTINCT B.*
	FROM NEL A
	INNER JOIN OLNEL B
		ON A.BF_SSN = B.BF_SSN
	;
QUIT;
DATA _NULL_;
	SET  WORK.SWOBIBS;
	FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT LID $13. IF_BND_ISS $8. ;
	DO;
	   PUT LID $ @;
	   PUT IF_BND_ISS $ ;
	END;
RUN;
PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
OPTIONS ORIENTATION = PORTRAIT;
OPTIONS PS=52 LS=96 PAGENO=1 CENTER;
TITLE 'SPECIAL WRITE-OFF PROGRAM';
TITLE2 'BOND IDS FOR TRANSFER';
FOOTNOTE 'JOB = UTLWA16  	 REPORT = ULWA16.LWA16R3';
PROC CONTENTS DATA=TBND OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWA16  	 REPORT = ULWA16.LWA16R3";
	END;
RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=TBND WIDTH=UNIFORM WIDTH=MIN LABEL;
FORMAT BND_BAL DOLLAR14.2;
VAR IF_BND_ISS BND_BAL;
SUM BND_BAL;
LABEL IF_BND_ISS = 'BOND ID'
	BND_BAL = 'OUTSTANDING BALANCE';
RUN;
PROC PRINTTO;
RUN;

PROC PRINTTO PRINT=REPORT4 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 CENTER;
TITLE ' SPECIAL WRITE-OFF BOND TRANSFER ERRORS';
FOOTNOTE 'JOB = UTLWA16  	 REPORT = ULWA16.LWA16R4';
PROC CONTENTS DATA=ERR OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWA16  	 REPORT = ULWA16.LWA16R4";
	END;
RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=ERR WIDTH=UNIFORM WIDTH=MIN LABEL;
VAR DF_SPE_ACC_ID LN_SEQ;
LABEL DF_SPE_ACC_ID = 'ACCT #'
	LN_SEQ = 'LOAN SEQ';
RUN;
PROC PRINTTO;
RUN;
PROC PRINTTO PRINT=REPORT5 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 CENTER;
TITLE ' SPECIAL WRITE OFF BORROWERS HELD AT NELNET';
FOOTNOTE 'JOB = UTLWA16  	 REPORT = ULWA16.LWA16R5';
PROC CONTENTS DATA=A16R5 OUT=EMPTYSET NOPRINT;QUIT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 126*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWA16  	 REPORT = ULWA16.LWA16R5";
	END;
RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=A16R5 WIDTH=UNIFORM WIDTH=MIN LABEL;
FORMAT CBAL 14.2 AD_CUR_PRI_RPT MMDDYY10.;
VAR DM_PRS_LST DF_SPE_ACC_ID CLUID CBAL AD_CUR_PRI_RPT;
LABEL DM_PRS_LST = 'LAST NAME'
	DF_SPE_ACC_ID = 'ACCOUNT #'
	CLUID = 'CLUID'
	CBAL = 'CURRENT BALANCE'
	AD_CUR_PRI_RPT = 'BALANCE DATE';
RUN;
PROC PRINTTO;
RUN;

