<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/20/2017 11:41:56 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LPP-2968"
  DTS:CreatorName="UHEAA\jnolasco"
  DTS:DTSID="{7E3BED2D-4F1F-464E-9F94-2A0CC7FEBDAB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.94"
  DTS:LocaleID="1033"
  DTS:ObjectName="UTLWS75"
  DTS:PackageType="5"
  DTS:VersionBuild="426"
  DTS:VersionGUID="{A066477D-5536-423E-A5F1-387FDF453B27}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[File Connection Manager (SCRA Archive)]"
      DTS:CreationName="FILE"
      DTS:DTSID="{461734FF-AF70-47BF-9516-88C7A4B765BF}"
      DTS:ObjectName="File Connection Manager (SCRA Archive)">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="X:\Archive\SCRA\" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager (ForEach Loop)]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0C1D4422-32CE-46D4-B881-419277910FAD}"
      DTS:ObjectName="Flat File Connection Manager (ForEach Loop)">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="9"
              DTS:DataType="131"
              DTS:DataPrecision="18"
              DTS:ObjectName="SSN"
              DTS:DTSID="{C2A77A77-331B-4FF9-8047-1CB3F6601A4A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="DateOfBirth"
              DTS:DTSID="{BD63F84C-1F81-41CB-BBB8-4EEED1F8466E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="26"
              DTS:MaximumWidth="26"
              DTS:DataType="129"
              DTS:ObjectName="LastName"
              DTS:DTSID="{668A44E9-D9F3-45D3-8CD3-A21831B583A0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="20"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:ObjectName="FirstName"
              DTS:DTSID="{4E8DC636-63A8-4E7D-A316-8EC8A5BC7ED5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="28"
              DTS:MaximumWidth="28"
              DTS:DataType="129"
              DTS:ObjectName="CustomerRecordID"
              DTS:DTSID="{6B827352-8CE2-4140-804E-393A5B107546}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyStatusDate"
              DTS:DTSID="{FA8A3424-3393-4A43-84DB-E3F21864DF8D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="Blank"
              DTS:DTSID="{1933584D-DA2C-415F-B53B-23AD51AD9E32}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyOnActiveDutyStatusDt"
              DTS:DTSID="{FA6DAD36-8E6A-433E-89AD-409865AC7245}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="LeftActiveDutyLE367DaysFromActiveDutyStatusDt"
              DTS:DTSID="{A4EC4107-03C7-48F2-A9BD-0EE7B897DB63}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt"
              DTS:DTSID="{DFF48BB3-B808-45CB-AAB3-4BD2A88D15B4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyEndDate"
              DTS:DTSID="{333FD7FA-EF91-4679-98E3-87E33F0E6422}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="MatchResultCode"
              DTS:DTSID="{4418934F-060F-4432-9400-94EEB8FA6F4B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="1"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:ObjectName="Error"
              DTS:DTSID="{11A50412-5DB9-4B2E-95B5-C9F3FF78466F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="DateOfMatch"
              DTS:DTSID="{4F540C37-1BE2-4F25-BAEC-464656A9BCA1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="ActiveDutyBeginDate"
              DTS:DTSID="{5A714292-9486-4DEB-BBF5-D16117064859}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="EIDBeginDate"
              DTS:DTSID="{73BA2827-2227-4FF0-83ED-FA788C0FA411}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="8"
              DTS:MaximumWidth="8"
              DTS:DataType="129"
              DTS:ObjectName="EIDEndDate"
              DTS:DTSID="{4403F986-A429-4229-A33E-17BC7ACB205E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="2"
              DTS:MaximumWidth="2"
              DTS:DataType="129"
              DTS:ObjectName="ServiceComponent"
              DTS:DTSID="{AB145346-C2AE-4D2D-8958-CEBDBF4F2554}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="2"
              DTS:MaximumWidth="2"
              DTS:DataType="129"
              DTS:ObjectName="EIDServiceComponent"
              DTS:DTSID="{8A4055CB-DAC6-420B-B237-B3208AD53F0B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="20"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:ObjectName="MiddleName"
              DTS:DTSID="{BF126E1B-0AF6-4BFE-99D2-0DE04915A2EE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnDelimiter=""
              DTS:ColumnWidth="15"
              DTS:MaximumWidth="15"
              DTS:DataType="129"
              DTS:ObjectName="CertificateID"
              DTS:DTSID="{32B71AB1-CA2D-4DF2-855F-D2C4D08DA2EE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 21"
              DTS:DTSID="{F5E821DF-9587-46B8-A5F1-AF6AA298BB34}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[UDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{ACA7EED0-37B7-4BD8-B3B2-18132DBFB145}"
      DTS:ObjectName="UDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=opsdev;Initial Catalog=UDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ULS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
      DTS:ObjectName="ULS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=opsdev;Initial Catalog=ULS;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4F93AAA9-81C9-41BF-871A-BC9BED936F0B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3931F55-AFFC-49E2-9561-87E9A505495C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="folderName">
      <DTS:VariableValue
        DTS:DataType="8">X:\PADD\FTP\Test\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F8CBC266-90AE-43DE-8BEF-9D6E17819B7F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="isFileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{91319823-ADAA-48CA-B415-E09D2F00D180}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="processComplete">
      <DTS:VariableValue
        DTS:DataType="8">UTLWS75 Process Complete!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6EF3AABF-69EA-4C0B-A460-32A9C173FCA8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="textFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5FB3D830-D8EC-46A2-8618-EE8128D12A86}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="textFileNotExist">
      <DTS:VariableValue
        DTS:DataType="8">UTLWS75 text file SCRA_*_*_ULWOO3* does not exist.</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - clear out _tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{23407275-9BAE-4ED9-AA88-9376AFCCE735}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - clear out _tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="TRUNCATE TABLE ULS.scra._DODReturnFile;&#xA;TRUNCATE TABLE ULS.scra._DODReturnFileErrors;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - populate BorrowerCountComparison"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B9785404-00EB-4C4C-BCA9-BF8A00A5DCF3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - populate BorrowerCountComparison"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="DECLARE @Sent INT = (SELECT COUNT(DISTINCT BF_SSN) FROM ULS.scra.ActiveDutyValidation) --total sent to DOD&#xA;DECLARE @Received INT = (SELECT COUNT(DISTINCT SSN) FROM ULS.scra._DODReturnFile) --total returned from DOD&#xA;DECLARE @NoReturnDataReceived INT = &#xA;(--borrowers sent but have no return data&#xA;&#x9;SELECT&#xA;&#x9;&#x9;COUNT(DISTINCT ADV.BF_SSN)&#xA;&#x9;FROM&#xA;&#x9;&#x9;ULS.scra.ActiveDutyValidation ADV&#xA;&#x9;&#x9;LEFT JOIN ULS.scra._DODReturnFile DOD&#xA;&#x9;&#x9;&#x9;ON ADV.BF_SSN = DOD.SSN&#xA;&#x9;WHERE&#xA;&#x9;&#x9;DOD.SSN IS NULL&#xA;)&#xA;&#xA;DECLARE @ExtraBorrowersReceived INT = &#xA;(--borrowers returned from DOD but not in original sent file&#xA;&#x9;SELECT&#xA;&#x9;&#x9;COUNT(DISTINCT DOD.SSN)&#xA;&#x9;FROM&#xA;&#x9;&#x9;ULS.scra._DODReturnFile DOD&#xA;&#x9;&#x9;LEFT JOIN ULS.scra.ActiveDutyValidation ADV&#xA;&#x9;&#x9;&#x9;ON DOD.SSN = ADV.BF_SSN&#xA;&#x9;WHERE&#xA;&#x9;&#x9;ADV.BF_SSN IS NULL&#xA;) &#xA;;&#xA;&#xA;INSERT INTO ULS.scra.BorrowerCountComparison&#xA;SELECT&#xA;&#x9;@Sent,&#xA;&#x9;@Received,&#xA;&#x9;@NoReturnDataReceived,&#xA;&#x9;@ExtraBorrowersReceived,&#xA;&#x9;GETDATE() AS ComparisonDate,&#xA;&#x9;NULL AS InactivatedAt&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - populate SentMissingFromReturn"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3b65c5b1-a3d5-49cf-bc83-d0ea46e9ce31}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - populate SentMissingFromReturn"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="INSERT INTO ULS.scra.SentMissingFromReturn&#xA;(&#xA;&#x9;BF_SSN,&#xA;&#x9;Issue,&#xA;&#x9;AddedAt,&#xA;&#x9;AddedBy&#xA;)&#xA;SELECT DISTINCT&#xA;&#x9;NEWDATA.BF_SSN,&#xA;&#x9;NEWDATA.Issue,&#xA;&#x9;NEWDATA.AddedAt,&#xA;&#x9;NEWDATA.AddedBy&#xA;FROM&#xA;(&#x9;--CS get missing DOD return R file names&#xA;&#x9;SELECT&#xA;&#x9;&#x9;BF_SSN,&#xA;&#x9;&#x9;Issue,&#xA;&#x9;&#x9;CAST(GETDATE() AS DATE) AS AddedAt,&#xA;&#x9;&#x9;'UTLWS75' AS AddedBy&#xA;&#x9;FROM&#xA;&#x9;(&#x9;--get list of missing return files&#xA;&#x9;&#x9;SELECT DISTINCT &#xA;&#x9;&#x9;&#x9;'' AS BF_SSN,&#xA;&#x9;&#x9;&#x9;'Missing R file: ' + ADV.[FILENAME] AS Issue&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;ULS.scra.ActiveDutyValidation ADV --extract filename from table data sent to DOD&#xA;&#x9;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;&#x9;(--extract filename from files we get back from DOD&#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;UPPER(LEFT(RIGHT(SourceFile,13),9)) AS SourceFile --extract filename from field&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ULS.scra._DODReturnFile&#xA;&#x9;&#x9;&#x9;) DOD&#xA;&#x9;&#x9;&#x9;&#x9;ON ADV.[FILENAME] = DOD.SourceFile&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;DOD.SourceFile IS NULL&#xA;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;--get borrowers who were sent to DOD but have no return info &#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;ADV.BF_SSN,&#xA;&#x9;&#x9;&#x9;'No Return Data Received' AS Issue&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.ActiveDutyValidation ADV&#xA;&#x9;&#x9;&#x9;LEFT JOIN ULS.scra._DODReturnFile DOD&#xA;&#x9;&#x9;&#x9;&#x9;ON ADV.BF_SSN = DOD.SSN&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;DOD.SSN IS NULL&#xA;&#xA;&#x9;&#x9;UNION ALL&#xA;&#xA;&#x9;&#x9;--get borrowers who came from DOD but not sent by us&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;DOD.SSN AS BF_SSN,&#xA;&#x9;&#x9;&#x9;'Extra Borrowers Received' AS Issue&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra._DODReturnFile DOD&#xA;&#x9;&#x9;&#x9;LEFT JOIN ULS.scra.ActiveDutyValidation ADV&#xA;&#x9;&#x9;&#x9;&#x9;ON DOD.SSN = ADV.BF_SSN&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;ADV.BF_SSN IS NULL&#xA;&#x9;) U&#xA;) NEWDATA&#xA;&#x9;LEFT JOIN ULS.scra.SentMissingFromReturn EXISTING_DATA&#xA;&#x9;&#x9;ON NEWDATA.BF_SSN = EXISTING_DATA.BF_SSN&#xA;&#x9;&#x9;AND NEWDATA.AddedAt = EXISTING_DATA.AddedAt&#xA;WHERE&#xA;&#x9;EXISTING_DATA.BF_SSN IS NULL&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{A25D4E3D-61B4-4646-855E-BD4D97E87D2D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container - validate all R files and populate _DODReturnFile tables">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{BA02C38D-BC60-42FC-856F-9F515E4746FA}"
        DTS:ObjectName="{438FC8F7-5FF5-4968-8EEF-993AC7B07BF4}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="X:\PADD\FTP\Test\" />
            <FEFEProperty
              FileSpec="SCRA_*_*_ULWOO3*.txt*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{A286C5B2-26CB-487E-8F45-F3CC0DFCC419}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - flat-file processing"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column - Get File Name"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Inputs[Derived Column Input].Columns[SSN]"
                          cachedDataType="numeric"
                          cachedName="SSN"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[SSN]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output].Columns[SourceFile_GOOD]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="54"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output].Columns[SourceFile_GOOD]"
                          name="SourceFile_GOOD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CurrentFile]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CurrentFile]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output].Columns[SSN_txt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output].Columns[SSN_txt]"
                          name="SSN_txt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[RIGHT]([REPLICATE]("0",9) + (DT_WSTR,9)#{Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[SSN]},9)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">RIGHT(REPLICATE("0",9) + (DT_WSTR,9)SSN,9)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column - Get File Name and Line Data"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Inputs[Derived Column Input].Columns[Flat File Source Error Output Column]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Inputs[Derived Column Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Inputs[Derived Column Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[SourceFile]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="54"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[SourceFile]"
                          name="SourceFile"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CurrentFile]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CurrentFile]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[DateRun]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[DateRun]"
                          name="DateRun"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[LineData]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[LineData]"
                          name="LineData"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[Flat File Source Error Output Column]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[ErrorCode]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ErrorCode</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[ErrorColumn]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ErrorColumn</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source - Read R File Based On Iteration"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager (ForEach Loop)]"
                      connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager (ForEach Loop)]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[SSN]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[SSN]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[SSN]"
                          name="SSN"
                          precision="18"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[DateOfBirth]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfBirth]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[DateOfBirth]"
                          name="DateOfBirth"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                          length="26"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                          length="20"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[CustomerRecordID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[CustomerRecordID]"
                          length="28"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[CustomerRecordID]"
                          name="CustomerRecordID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyStatusDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyStatusDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyStatusDate]"
                          name="ActiveDutyStatusDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[Blank]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[Blank]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[Blank]"
                          name="Blank"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyEndDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyEndDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyEndDate]"
                          name="ActiveDutyEndDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[MatchResultCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[MatchResultCode]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[MatchResultCode]"
                          name="MatchResultCode"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[Error]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[Error]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[Error]"
                          name="Error"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[DateOfMatch]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfMatch]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[DateOfMatch]"
                          name="DateOfMatch"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyBeginDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyBeginDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyBeginDate]"
                          name="ActiveDutyBeginDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDBeginDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[EIDBeginDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDBeginDate]"
                          name="EIDBeginDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDEndDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[EIDEndDate]"
                          length="8"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDEndDate]"
                          name="EIDEndDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ServiceComponent]"
                          length="2"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ServiceComponent]"
                          name="ServiceComponent"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[EIDServiceComponent]"
                          length="2"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDServiceComponent]"
                          name="EIDServiceComponent"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[MiddleName]"
                          length="20"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[MiddleName]"
                          name="MiddleName"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[CertificateID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[CertificateID]"
                          length="15"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[CertificateID]"
                          name="CertificateID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyOnActiveDutyStatusDt]"
                          name="ActiveDutyOnActiveDutyStatusDt"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          name="LeftActiveDutyLE367DaysFromActiveDutyStatusDt"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          length="1"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          name="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[SSN]"
                          dataType="numeric"
                          name="SSN"
                          precision="18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfBirth]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="DateOfBirth" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="26"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[CustomerRecordID]"
                          codePage="1252"
                          dataType="str"
                          length="28"
                          name="CustomerRecordID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyStatusDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="ActiveDutyStatusDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[Blank]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Blank" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyEndDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="ActiveDutyEndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[MatchResultCode]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="MatchResultCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Error" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[DateOfMatch]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="DateOfMatch" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyBeginDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="ActiveDutyBeginDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[EIDBeginDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="EIDBeginDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[EIDEndDate]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="EIDEndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="ServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[EIDServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="EIDServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[CertificateID]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="CertificateID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[Column 21]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 21" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="ActiveDutyOnActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="LeftActiveDutyLE367DaysFromActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - Populate _DODReturnFile table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[scra].[_DODReturnFile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ULS]"
                      connectionManagerRefId="Package.ConnectionManagers[ULS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[CustomerRecordID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="28"
                          cachedName="CustomerRecordID"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CustomerRecordID]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[CustomerRecordID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyStatusDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="ActiveDutyStatusDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyStatusDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyStatusDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[Blank]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Blank"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Blank]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[Blank]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyEndDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="ActiveDutyEndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyEndDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyEndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[MatchResultCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="MatchResultCode"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MatchResultCode]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[MatchResultCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[Error]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Error"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[Error]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[DateOfMatch]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="DateOfMatch"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfMatch]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[DateOfMatch]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyBeginDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="ActiveDutyBeginDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyBeginDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyBeginDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[EIDBeginDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="EIDBeginDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDBeginDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDBeginDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[EIDEndDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="EIDEndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDEndDate]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDEndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ServiceComponent]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="ServiceComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ServiceComponent]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ServiceComponent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[EIDServiceComponent]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="EIDServiceComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDServiceComponent]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[EIDServiceComponent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="MiddleName"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[CertificateID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="CertificateID"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CertificateID]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[CertificateID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[SourceFile_GOOD]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="54"
                          cachedName="SourceFile_GOOD"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output].Columns[SourceFile_GOOD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="26"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[DateOfBirth]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="DateOfBirth"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfBirth]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[DateOfBirth]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[ActiveDutyOnActiveDutyStatusDt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="ActiveDutyOnActiveDutyStatusDt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[ActiveDutyOnActiveDutyStatusDt]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="LeftActiveDutyLE367DaysFromActiveDutyStatusDt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output].Columns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].Columns[SSN_txt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="9"
                          cachedName="SSN_txt"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SSN]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output].Columns[SSN_txt]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SSN]"
                          codePage="1252"
                          dataType="str"
                          length="9"
                          name="SSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfBirth]"
                          dataType="numeric"
                          name="DateOfBirth"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="26"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CustomerRecordID]"
                          codePage="1252"
                          dataType="str"
                          length="28"
                          name="CustomerRecordID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyStatusDate]"
                          dataType="numeric"
                          name="ActiveDutyStatusDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Blank]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Blank" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyEndDate]"
                          dataType="numeric"
                          name="ActiveDutyEndDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MatchResultCode]"
                          dataType="numeric"
                          name="MatchResultCode"
                          precision="1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                          dataType="numeric"
                          name="Error"
                          precision="1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DateOfMatch]"
                          dataType="numeric"
                          name="DateOfMatch"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyBeginDate]"
                          dataType="numeric"
                          name="ActiveDutyBeginDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDBeginDate]"
                          dataType="numeric"
                          name="EIDBeginDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDEndDate]"
                          dataType="numeric"
                          name="EIDEndDate"
                          precision="8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="ServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[EIDServiceComponent]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="EIDServiceComponent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[CertificateID]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="CertificateID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="SourceFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[DODReturnFileId]"
                          dataType="i4"
                          name="DODReturnFileId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[ActiveDutyOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="ActiveDutyOnActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[LeftActiveDutyLE367DaysFromActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="LeftActiveDutyLE367DaysFromActiveDutyStatusDt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input].ExternalColumns[NotifiedOfActiveDutyRecallOnActiveDutyStatusDt]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="NotifiedOfActiveDutyRecallOnActiveDutyStatusDt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - Populate _DODReturnFileErrors table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[scra].[_DODReturnFileErrors]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ULS]"
                      connectionManagerRefId="Package.ConnectionManagers[ULS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Outputs[Output 0].Columns[ErrorDescription]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[SourceFile]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="54"
                          cachedName="SourceFile"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[SourceFile]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[DateRun]"
                          cachedDataType="dbTimeStamp"
                          cachedName="DateRun"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[DateRun]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[DateRun]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[LineData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="LineData"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[LineData]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[LineData]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[DODReturnFileErrorsId]"
                          dataType="i4"
                          name="DODReturnFileErrorsId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SourceFile]"
                          codePage="1252"
                          dataType="str"
                          length="54"
                          name="SourceFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[LineData]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="LineData" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ErrorDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input].ExternalColumns[DateRun]"
                          dataType="dbTimeStamp"
                          name="DateRun" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component - Get Error Description"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties.Settings.get_Default():SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties.Sett" +
    "ings")]

namespace SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_da67dbeaa39b4bc9bf6568b4d267a050.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c8a823fc-7d73-43d3-ad01-b97d8047e4cb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_da67dbeaa39b4bc9bf6568b4d267a050</RootNamespace>
    <AssemblyName>SC_da67dbeaa39b4bc9bf6568b4d267a050</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_da67dbeaa39b4bc9bf6568b4d267a050" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_da67dbeaa39b4bc9bf6568b4d267a050</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_da67dbeaa39b4bc9bf6568b4d267a050</msb:DisplayName>
		<msb:ProjectId>{36D91696-5AEC-4B22-AF97-8D8BB20F5D9E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_da67dbeaa39b4bc9bf6568b4d267a050.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_da67dbeaa39b4bc9bf6568b4d267a050")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_da67dbeaa39b4bc9bf6568b4d267a050")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_da67dbeaa39b4bc9bf6568b4d267a050.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_da67dbeaa39b4bc9bf6568b4d267a050.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEMN4loAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAdjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
MgAAAAAAAEgAAAACAAUAtCEAALgPAAABAAAAAAAAAGwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvBgAABm8TAAAK
bwgAAAYqHgIoDAAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKiYC
FwMoGQAACipaAywIAhcoGgAACipyAQAAcHMbAAAKeh4CKBwAAAoqHgIoHQAACip+AigeAAAKAgJz
EAAABn0BAAAEAgJzEQAABn0CAAAEKpIEcp4AAHAabx8AAAosFQIFAgMoIAAACg4EcwUAAAZvDgAA
BipKKwcCA28PAAAGA28KAAAGLfEqBio6AighAAAKAgN9AwAABCo6AighAAAKAgN9BAAABCoeAigh
AAAKKq5+BQAABC0ecq4AAHDQBwAAAigiAAAKbyMAAApzJAAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCUAAAoqLnMXAAAGgAcAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAjAUAACN+AAD4BQAA4AYAACNTdHJpbmdzAAAAANgMAAAgAQAAI1VTAPgN
AAAQAAAAI0dVSUQAAAAIDgAAsAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAABwAAABgAAAAPAAAAJQAAABAAAAADAAAABwAAAAgAAAABAAAABQAAAAEAAAAAADAD
AQAAAAAABgAqAhYFBgC+AhYFBgB2AQMFDwCKBQAABgCjAeIDBgANAuIDBgDuAeIDBgClAuIDBgBK
AuIDBgBjAuIDBgC6AeIDBgDVAfkCCgB+AsMACgCsBMMADgCdBMMACgBUBMMACgBQBsMABgATBpoD
BgBZAQMFBgC9BDYFBgBIBM0DEgApARoDEgCKARoDEgARAbgDBgA+ARYFFgABAM0EBgD0A5oDBgAT
A5oDBgA3BJoDBgDkAJoDBgCVAJoDBgDVBuIDAAAAAEcAAAAAAAEAAQABABAArQMAABAAAQABAAEA
EACQBAAAOQABAAUAAQAQADIGAABFAAEADAABABAABwYAAEkAAwAQAAEAEADIBQAASQAEABEAAAAQ
AD0FmQVJAAUAEgAAARAA9wWZBWEABwAWAAYABwZ/AAYAyAWDAAEAQAaHAAEAQAaHABEAoQOLABEA
AQGPABEAdwCTAFAgAAAAAMYA3AIGAAEAWCAAAAAAxgDnAgYAAQBgIAAAAADGALIGlwABAHkgAAAA
AIYY9gQGAAIAgSAAAAAAhhj2BCUAAgCMIAAAAACGCIcAnQAFAKEgAAAAAIYIWANHAAUAqiAAAAAA
hggOBBAABQC0IAAAAACGCG0DoQAGAMsgAAAAAIYAyQZHAAcA0yAAAAAAhgAaBkcABwDbIAAAAACG
GPYEBgAHAPsgAAAAAMYApQamAAcAICEAAAAAxgGeBpcACwAzIQAAAADGAbIGlwAMADUhAAAAAIYY
9gSwAA0ARCEAAAAAhhj2BLAADgBTIQAAAACDGPYEBgAPAFshAAAAAJMIuQS2AA8AhyEAAAAAkwjp
ALsADwCOIQAAAACTCPUAwAAPAJYhAAAAAJYIJgbGABAAnSEAAAAAhhj2BAYAEAClIQAAAACRGPwE
ywAQAAAAAQDNBgAAAQCyBAAAAgDSBQAAAwBiBAAAAQDzAgAAAQDzAgAAAQBQAAAAAgC5AAAAAwCy
BAAABABiBAAAAQCyBAAAAQDNBgAAAQBWBgAAAQBWBgAAAQDzAgkA9gQBABEA9gQGABkA9gQKACkA
9gQQADEA9gQQADkA9gQQAEEA9gQQAEkA9gQQAFEA9gQQAFkA9gQQAGEA9gQQAGkA9gQGAJkA9gQG
ALkA9gQVAMkA9gQGAIkA3AIGAIkA5wIGAIkAWAAbANEAIwQgAHEA9gQlAHEAsgQvAHEA0gUzAHkA
PgA3AHEAggM8AHEAkQNBAHEAiQMBANkA9gQQAHEAyQZHAHEAGgZHAIkA9gQGAOEAAAZLAIkA5gVS
AJEA9gQGAPEApwBYAPEA0QZfAKEA9gRlAMEA9gQGAC4ACwDqAC4AEwDzAC4AGwASAS4AIwAbAS4A
KwBEAS4AMwBEAS4AOwBEAS4AQwAbAS4ASwBKAS4AUwBEAS4AWwBhAUMAYwCrAakAcwASAckAcwAS
AeEAewCrAeMAawCrAQMAAQAHAAUACAAHAAAAiwDPAAAAXAPTAAAAJgTXAAAAcQPTAAAAvQTbAAAA
CQHgAAAAKgblAAIABgADAAIABwAFAAEACAAHAAEACQAJAAIAEwALAAIAFAANAAEAFQANAAIAFgAP
AASAAAABAAAAAAAAAAAAAAAAABoAAAAEAAAAAAAAAAAAAABtAG4AAAAAAAwAAAAAAAAAAAAAAHYA
YAYAAAAADAAAAAAAAAAAAAAAdgB9BgAAAAAEAAAAAAAAAAAAAABtAJoDAAAAAAwAAAAAAAAAAAAA
AHYAbAQAAAAAAAAAAAEAAABHBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAU0NfZGE2
N2RiZWFhMzliNGJjOWJmNjU2OGI0ZDI2N2EwNTAAR2V0SW50MzIAPE1vZHVsZT4ASW5wdXRJRABn
ZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNv
ZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2RhNjdkYmVhYTM5
YjRiYzliZjY1NjhiNGQyNjdhMDUwLmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfRXJyb3JE
ZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2Ny
aXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9u
AEdldEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTQ19kYTY3ZGJlYWEzOWI0YmM5YmY2NTY4YjRkMjY3YTA1MC5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZGE2N2RiZWFhMzliNGJjOWJmNjU2
OGI0ZDI2N2EwNTAuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRD
b2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dz
ZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRS
b3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGQAYQA2ADcAZABiAGUAYQBhADMAOQBiADQAYgBj
ADkAYgBmADYANQA2ADgAYgA0AGQAMgA2ADcAYQAwADUAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAXqmMKTD/TECpxTJc94iJuwAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWQQgABJpBCABDggJIAMBEj0dCBJBAwYSPQMGHQgEIAEICAQgAQIIBSACAQgcAyAAAgYg
AgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYS
GAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAAS
VQUAAQESVQQAABIgAwAAAQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZGE2N2RiZWFhMzliNGJj
OWJmNjU2OGI0ZDI2N2EwNTAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjUEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMMgAAAAAAAAAAAABmMgAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAWDIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBkAGEANgA3AGQAYgBlAGEAYQAzADkAYgA0AGIAYwA5AGIAZgA2ADUANgA4AGIANABk
ADIANgA3AGEAMAA1ADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQAYQA2ADcAZABi
AGUAYQBhADMAOQBiADQAYgBjADkAYgBmADYANQA2ADgAYgA0AGQAMgA2ADcAYQAwADUAMAAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZABh
ADYANwBkAGIAZQBhAGEAMwA5AGIANABiAGMAOQBiAGYANgA1ADYAOABiADQAZAAyADYANwBhADAA
NQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQAYQA2
ADcAZABiAGUAYQBhADMAOQBiADQAYgBjADkAYgBmADYANQA2ADgAYgA0AGQAMgA2ADcAYQAwADUA
MAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAeDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_da67dbeaa39b4bc9bf6568b4d267a050</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">4f80429439dfc6d468500b8cbec3d3ee</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">98c8549c6ff01eefb2f1f8d8ae92953d505eddeb</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Outputs[Output 0].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Outputs[Output 0].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Flat File Source Error Output]"
                  endId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Inputs[Input 0]"
                  name="Flat File Source Error Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Error Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Output 0]"
                  endId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\File System Task - move file to SCRA Archive folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{BCDAABD8-CA3D-4C7A-B298-6951D437A16C}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="File System Task - move file to SCRA Archive folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="{0C1D4422-32CE-46D4-B881-419277910FAD}"
              TaskDestinationPath="{461734FF-AF70-47BF-9516-88C7A4B765BF}" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2344E758-3572-40EA-AB9B-916AF4C1CCA9}"
          DTS:From="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\File System Task - move file to SCRA Archive folder" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C0DC4B92-EA37-43CC-AD1B-AD65CB057F23}"
          DTS:ObjectName="{C0DC4B92-EA37-43CC-AD1B-AD65CB057F23}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - check if all files exist"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{0F72743D-B051-4FE1-B17E-F724415332D6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - check if all files exist"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_eb85e4f686864b039aecbdb1df7b736e"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::folderName"
          ReadWriteVariables="User::isFileExists,User::textFileName">
          <ProjectItem
            Name="ST_eb85e4f686864b039aecbdb1df7b736e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{bbebf0a1-1ea4-42e1-b7e9-29b9e6224849}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8bf197e13290498291e175d919ff2049</RootNamespace>
    <AssemblyName>ST_eb85e4f686864b039aecbdb1df7b736e</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf197e13290498291e175d919ff2049.Properties.Settings.get_Default():ST_8bf197e13290498291e175d919ff2049.Properties.Sett" +
    "ings")]

namespace ST_8bf197e13290498291e175d919ff2049.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;//I added this
using System.Linq;
using System.Collections.Generic;
#endregion

namespace ST_8bf197e13290498291e175d919ff2049
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            var files = Directory.GetFiles(Dts.Variables["User::folderName"].Value.ToString(), "SCRA_*_*_ULWOO3*.txt").ToList();
            if (!files.Any())
            {
                Dts.Variables["User::isFileExists"].Value = false;
                Dts.TaskResult = (int)ScriptResults.Success;
                return;
            }

            List<string> missingFiles = new List<string>();
            for (int rNum = 2; rNum < 8; rNum++)
            {
                bool foundFile = false;
                foreach (string file in files)
                {
                    if (file.Contains(string.Format("R{0}", rNum)))
                    {
                        foundFile = true;
                        break;
                    }
                }
                if (!foundFile)
                    missingFiles.Add(string.Format("R{0}", rNum));
            }

            if (missingFiles.Any())
            {
                Dts.Variables["User::isFileExists"].Value = false;
                Dts.TaskResult = (int)ScriptResults.Failure;
                Console.WriteLine(string.Format("The following files are missing: {0} {1}", Environment.NewLine, string.Join(Environment.NewLine, missingFiles)));
                return;
            }
            else
            {
                Dts.Variables["User::isFileExists"].Value = true;
                //~~&gt;this will return the first excel file name
                Dts.Variables["User::textFileName"].Value =
                     System.IO.Directory.GetFiles(Dts.Variables["User::folderName"].Value.ToString(),
                          "SCRA_*_*_ULWOO3*.txt")[0].ToString();
                Dts.TaskResult = (int)ScriptResults.Success;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_eb85e4f686864b039aecbdb1df7b736e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_eb85e4f686864b039aecbdb1df7b736e</msb:DisplayName>
		<msb:ProjectId>{598A6E5D-3D9F-4C63-A19F-AE51C55FB606}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_eb85e4f686864b039aecbdb1df7b736e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8bf197e13290498291e175d919ff2049")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8bf197e13290498291e175d919ff2049")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf197e13290498291e175d919ff2049.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf197e13290498291e175d919ff2049.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf197e13290498291e175d919ff2049.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8bf197e13290498291e175d919ff2049.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8bf197e13290498291e175d919ff2049.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_eb85e4f686864b039aecbdb1df7b736e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFwqD1sAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAYjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
MgAAAAAAAEgAAAACAAUAeCIAAOAOAAABAAAAAAAAAFgxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBAChAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyIwAAcCgVAAAKKAEAACsKBigCAAArLS0CKBAAAApvEQAACnJNAABwbxIAAAoWjCAA
AAFvGAAACgIoEAAAChZvGQAACipzGgAACgsYDCtkFg0GbxsAAAoTBCsiEgQoHAAACnJzAABwCIwh
AAABKB0AAApvHgAACiwEFw3eGRIEKB8AAAot1d4OEgT+FgIAABtvIAAACtwJLRYHcnMAAHAIjCEA
AAEoHQAACm8hAAAKCBdYDAgeMpgHKAIAACssTAIoEAAACm8RAAAKck0AAHBvEgAAChaMIAAAAW8Y
AAAKAigQAAAKF28ZAAAKcn0AAHAoIgAACigiAAAKBygjAAAKKCQAAAooJQAACioCKBAAAApvEQAA
CnJNAABwbxIAAAoXjCAAAAFvGAAACgIoEAAACm8RAAAKcs8AAHBvEgAACgIoEAAACm8RAAAKcgEA
AHBvEgAACm8TAAAKbxQAAApyIwAAcCgVAAAKFppvFAAACm8YAAAKAigQAAAKFm8ZAAAKKgAAAAEQ
AAACAHgAL6cADgAAAAAeAigmAAAKKh4CKCcAAAoqrn4BAAAELR5y9QAAcNADAAACKCgAAApvKQAA
CnMqAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoKwAACioucwgAAAaAAwAA
BCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIgEAAAjfgAA9AQAAIwGAAAj
U3RyaW5ncwAAAACACwAAaAEAACNVUwDoDAAAEAAAACNHVUlEAAAA+AwAAOgBAAAjQmxvYgAAAAAA
AAACAAABVx2iCQkLAAAA+gEzABYAAAEAAAAoAAAABQAAAAYAAAAJAAAAAQAAACsAAAACAAAAEAAA
AAEAAAACAAAAAwAAAAQAAAACAAAAAQAAAAUAAAABAAAAAQAAAAIAAAAAADAEAQAAAAAABgDWAicF
BgBlAycFBgAiAhQFDwCbBQAABgBPArsEBgC5ArsEBgCaArsEBgBMA7sEBgD2ArsEBgAPA7sEBgBm
ArsEBgCBAp0DCgAqA98DCgCZAd8DBgAPAIMAPwD8BAAABgBoBGEEBgAFAhQFBgAnBmEEBgDpBEcF
BgDNBKYEDgDVARoEDgA2AhoEDgC1AZEEBgDqAScFCgAIBN8DEgDdBSIBEgDWACIBBgCCBkkAFgDf
ANkEBgABAIMABgB5BGEEBgAWAGEEBgC5A2EEBgDqAGEEBgBJBmEEBgAaAWEEBgBYAWEEBgD2AGEE
BgB1BrsEAAAAAEAAAAAAAAEAAQABABAAgQQcADkAAQABAAAAEABOBaoFTQABAAMAAAEQAPAFqgVh
AAMABwADAQAAEgYAAEUABAAKABEAbQTuABEAiQHyABEAxgD2AAYGcgD6AFaAAgb9AFaAaQH9AFAg
AAAAAIYAhwQGAAEAECIAAAAAhhgHBQYAAQAYIgAAAACDGAcFBgABACAiAAAAAJMI5QQBAQEATCIA
AAAAkwhxAQYBAQBTIgAAAACTCH0BCwEBAFsiAAAAAJYILgYRAQIAYiIAAAAAhhgHBQYAAgBqIgAA
AACRGA0FFgECAAAAAQCXAwkABwUBABEABwUGABkABwUKACkABwUQADEABwUQADkABwUQAEEABwUQ
AEkABwUQAFEABwUQAFkABwUQAGEABwUQAGkABwUGAJEABwUGALkABwUVAMkABwUGAHEACgYvANEA
2QU0ANkAWAQ5AOEAgwM/AJkAtwNDAOkA5wVHAPEAYQZOAPEAfgZiAOEAjQNtANEAOgYBAAwABwUG
AAwA+QR4ABQAVQaHABEBIAaMABEB+QWSABQAaAaXABkBzQEGAAwAngCbACEBTAGhABEBjASlABEB
IAavACkBQgG2AHEABwUGAJkABwUGADEBCAG7ADEBcQbEAKEABwXKAMEABwUGAAgAFADkAAgAGADp
ACkAcwBRAS4ACwApAS4AEwAyAS4AGwBRAS4AIwBaAS4AKwCDAS4AMwCDAS4AOwCDAS4AQwBaAS4A
SwCJAS4AUwCDAS4AWwCgAUMAYwDpAEkAcwBRAWEAewDpAGMAawDpABsAAwABAAQAAwAAAOkEGgEA
AJEBHwEAADIGJAECAAQAAwACAAUABQABAAYABQACAAcABwByAIEABIAAAAEAAABEGj52AAAAAAAA
ogAAAAQAAAAAAAAAAAAAANIAegAAAAAADAAAAAAAAAAAAAAA2wDAAwAAAAAEAAAAAAAAAAAAAADS
AGEEAAAAAAwAAAAAAAAAAAAAANsAUwAAAAAABAAAAAAAAAAAAAAA0gBdAQAAAAAAAAAAAQAAAFgF
AAAFAAIALQBeAC8AXgAAAAAAAElFbnVtZXJhYmxlYDEATGlzdGAxAEludDMyAFNUXzhiZjE5N2Ux
MzI5MDQ5ODI5MWUxNzVkOTE5ZmYyMDQ5ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
ZXJpYwBBZGQAU1RfZWI4NWU0ZjY4Njg2NGIwMzlhZWNiZGIxZGY3YjczNmUAZGVmYXVsdEluc3Rh
bmNlAFZhcmlhYmxlAEVudW1lcmFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAQ29uc29sZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdy
aXRlTGluZQBnZXRfTmV3TGluZQBUeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNUX2ViODVlNGY2ODY4NjRiMDM5YWVjYmRiMWRmN2I3MzZlLmRsbABnZXRfSXRlbQBT
eXN0ZW0ARW51bQByZXNvdXJjZU1hbgBCb29sZWFuAFNjcmlwdE1haW4ASm9pbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJl
SW5mbwBTeXN0ZW0uTGlucQBnZXRfUmVzb3VyY2VNYW5hZ2VyAEdldEVudW1lcmF0b3IALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfOGJmMTk3ZTEzMjkwNDk4MjkxZTE3NWQ5MTlmZjIwNDkuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzhiZjE5N2UxMzI5
MDQ5ODI5MWUxNzVkOTE5ZmYyMDQ5LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBT
ZXR0aW5ncwBDb250YWlucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBGb3JtYXQAT2Jq
ZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AEVudmlyb25tZW50AGdldF9DdXJyZW50AFRv
TGlzdABNb3ZlTmV4dABnZXRfQXNzZW1ibHkAQW55AERpcmVjdG9yeQAAIVUAcwBlAHIAOgA6AGYA
bwBsAGQAZQByAE4AYQBtAGUAAClTAEMAUgBBAF8AKgBfACoAXwBVAEwAVwBPAE8AMwAqAC4AdAB4
AHQAACVVAHMAZQByADoAOgBpAHMARgBpAGwAZQBFAHgAaQBzAHQAcwAACVIAewAwAH0AAFFUAGgA
ZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAZgBpAGwAZQBzACAAYQByAGUAIABtAGkAcwBzAGkAbgBn
ADoAIAB7ADAAfQAgAHsAMQB9AAAlVQBzAGUAcgA6ADoAdABlAHgAdABGAGkAbABlAE4AYQBtAGUA
AHFTAFQAXwA4AGIAZgAxADkANwBlADEAMwAyADkAMAA0ADkAOAAyADkAMQBlADEANwA1AGQAOQAx
ADkAZgBmADIAMAA0ADkALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAtcZDLaBN/SKFnJfP/eRy8AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZEwcFFRI9AQ4VEj0B
DggCFRFBAQ4EIAASaQQgABJtBSABEnEcAyAAHAMgAA4GAAIdDg4ODxABARUSPQEeABUSfQEeAAMK
AQ4KEAEBAhUSfQEeAAQgAQEcBRUSPQEOCCAAFRFBARMABRURQQEOBCAAEwAFAAIODhwEIAECDgMg
AAIFIAEBEwADAAAOCQACDg4VEn0BDgYAAw4OHBwEAAEBDggAARKAmRGAnQUgABKAoQcgAgEOEoCh
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJV
BQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF84YmYxOTdlMTMyOTA0OTgyOTFlMTc1ZDkxOWZm
MjA0OQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABHAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDS0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAODIAAAAAAAAAAAAAUjIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQyAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAPnZEGgAAAQA+dkQaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA4AGIAZgAxADkANwBlADEAMwAyADkAMAA0ADkAOAAyADkAMQBlADEANwA1AGQAOQAx
ADkAZgBmADIAMAA0ADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NgA3ADIANAAuADMAMAAyADcAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBlAGIAOAA1AGUANABmADYAOAA2ADgANgA0AGIAMAAzADkAYQBlAGMAYgBkAGIAMQBkAGYA
NwBiADcAMwA2AGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGUAYgA4ADUAZQA0AGYANgA4ADYAOAA2ADQAYgAwADMAOQBhAGUAYwBiAGQA
YgAxAGQAZgA3AGIANwAzADYAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA4AGIAZgAxADkANwBlADEAMwAyADkAMAA0ADkAOAAyADkAMQBlADEANwA1AGQA
OQAxADkAZgBmADIAMAA0ADkAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADYANwAyADQALgAzADAAMgA3ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAyADQALgAzADAAMgA3ADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAZDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - File Not Exists message"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7AF31406-E8FA-4925-BE11-5715D499531B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - File Not Exists message"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6890a2947be84025961c8543d9fe616e"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::textFileNotExist">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Settings.get_Default():ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Sett" +
    "ings")]

namespace ST_39f9a41eb7be4f278864029ad0cc8495.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_39f9a41eb7be4f278864029ad0cc8495
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            if (Dts.Connections["UDW"].ConnectionString.ToUpper().Contains("OPSDEV"))
                MessageBox.Show(Dts.Variables["User::textFileNotExist"].Value.ToString());//TEST
            else
                Console.WriteLine(Dts.Variables["User::textFileNotExist"].Value.ToString());//LIVE
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_6890a2947be84025961c8543d9fe616e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7910b01a-c7e0-485b-944e-f1862ce6e834}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_39f9a41eb7be4f278864029ad0cc8495</RootNamespace>
    <AssemblyName>ST_6890a2947be84025961c8543d9fe616e</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_6890a2947be84025961c8543d9fe616e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_6890a2947be84025961c8543d9fe616e</msb:DisplayName>
		<msb:ProjectId>{1A98FAA5-5695-4799-890A-F1FE134749EB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_6890a2947be84025961c8543d9fe616e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_39f9a41eb7be4f278864029ad0cc8495")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_39f9a41eb7be4f278864029ad0cc8495")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_39f9a41eb7be4f278864029ad0cc8495.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6890a2947be84025961c8543d9fe616e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAB0RjFwAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAAi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
LgAAAAAAAEgAAAACAAUAOCEAAMAMAAABAAAAAAAAAPgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgB2AAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyCQAAcG8VAAAKLCYCKBAAAApvFgAACnIXAABwbxcAAApvGAAACm8ZAAAKKBoAAAom
KgIoEAAACm8WAAAKchcAAHBvFwAACm8YAAAKbxkAAAooGwAACioeAigcAAAKKh4CKB0AAAoqrn4B
AAAELR5yRQAAcNADAAACKB4AAApvHwAACnMgAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoa
fgMAAAQqHgIoIQAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAAAUBAAAI34AAIAEAAD8BQAAI1N0cmluZ3MAAAAAfAoAALgAAAAjVVMANAsAABAAAAAjR1VJ
RAAAAEQLAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIwAAAAUAAAAG
AAAACQAAAAEAAAAhAAAAAgAAABAAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAADAAwEA
AAAAAAYAWwKqBAYA6gKqBAYApwGXBA8AHgUAAAYA1AE+BAYAPgI+BAYAHwI+BAYA0QI+BAYAewI+
BAYAlAI+BAYA6wE+BAYABgIYAwoArwJvAwoAJgFvAwYA+APxAwYAigGXBAYAvwXxAwYAYATKBAYA
UAQpBA4AWgGqAw4AuwGqAw4AQgEUBAYAbwGqBAoAmANvAxIAlQXHABIAcATHAAYASQPxAxIAYAXH
ABIAkgDHABYA5AVzBRYA0gVzBQYAvwDxAwYA8QDxAwYAmwDxAwYA8wU+BAAAAAAlAAAAAAABAAEA
AQAQAAkEAQA5AAEAAQAAABAA0QQtBUUAAQADAAABEABqBS0FWQADAAcAAwEAALEFAAA9AAQACgAR
AP0DgQARABYBhQARAIIAiQAGBk0AjQBWgKEFkABWgPYAkABQIAAAAACGAA8EBgABANIgAAAAAIYY
igQGAAEA2iAAAAAAgxiKBAYAAQDiIAAAAACTCFwElAABAA4hAAAAAJMI/gCZAAEAFSEAAAAAkwgK
AZ4AAQAdIQAAAACWCMYFpAACACQhAAAAAIYYigQGAAIALCEAAAAAkRiQBKkAAgAAAAEAEgMJAIoE
AQARAIoEBgAZAIoECgApAIoEEAAxAIoEEAA5AIoEEABBAIoEEABJAIoEEABRAIoEEABZAIoEEABh
AIoEEABpAIoEBgCBAIoEBgCpAIoEFQC5AIoEBgBxAKkFGwDBAJEFIADJAOgDJQDRADIDKwDZAIIE
KwDZAIgFLwDBAFwFNADhAOgDOQDpAAgDPwCJAEcDKwDxAN8FQwABAecASQBxAIoEBgCJAIoEBgAJ
Aa0ATgAJAe8FVwCRAIoEXQCxAIoEBgAIABQAdwAIABgAfAApAHMA5AAuAAsAvAAuABMAxQAuABsA
5AAuACMA7QAuACsAFgEuADMAFgEuADsAFgEuAEMA7QAuAEsAHAEuAFMAFgEuAFsAMwFDAGMAfABJ
AHMA5ABhAHsAfABjAGsAfAADAAEABAADAAAAYAStAAAAHgGyAAAAygW3AAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAZRveaAAAAAAAAF4AAAAEAAAAAAAAAAAAAABlAFUAAAAAAAwAAAAA
AAAAAAAAAG4AUAMAAAAABAAAAAAAAAAAAAAAZQDxAwAAAAAMAAAAAAAAAAAAAABuAC4AAAAAAAQA
AAAAAAAAAAAAAGUAcwUAAAAAAAAAAAEAAADbBAAABQACAAAAAAAAU1RfMzlmOWE0MWViN2JlNGYy
Nzg4NjQwMjlhZDBjYzg0OTUAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRT
AHZhbHVlX18AbXNjb3JsaWIAU1RfNjg5MGEyOTQ3YmU4NDAyNTk2MWM4NTQzZDlmZTYxNmUAZGVm
YXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AENvbnNvbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AGdldF9Db25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF82ODkwYTI5NDdiZTg0MDI1OTYxYzg1NDNk
OWZlNjE2ZS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFRvVXBw
ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMzlmOWE0MWViN2JlNGYyNzg4NjQwMjlhZDBj
Yzg0OTUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzM5
ZjlhNDFlYjdiZTRmMjc4ODY0MDI5YWQwY2M4NDk1LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBT
ZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBDb250YWlucwBnZXRfQ29ubmVjdGlvbnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3Vs
dABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAHVQBEAFcAAA1PAFAAUwBEAEUAVgAALVUA
cwBlAHIAOgA6AHQAZQB4AHQARgBpAGwAZQBOAG8AdABFAHgAaQBzAHQAAHFTAFQAXwAzADkAZgA5
AGEANAAxAGUAYgA3AGIAZQA0AGYAMgA3ADgAOAA2ADQAMAAyADkAYQBkADAAYwBjADgANAA5ADUA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABuofV5Xlw4TYZ8GpoG
Xd16AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgAA4EIAECDgQg
ABJxBSABEnUcAyAAHAUAARF9DgQAAQEOCAABEoCFEYCJBSAAEoCNByACAQ4SgI0It3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAAS
EAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUXzM5ZjlhNDFlYjdiZTRmMjc4ODY0MDI5YWQwY2M4NDk1AAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2C4A
AAAAAAAAAAAA8i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQuAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDeaGUbAAABAN5oZRs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADMAOQBmADkAYQA0ADEAZQBiADcAYgBlADQAZgAyADcAOAA4ADYANAAwADIAOQBh
AGQAMABjAGMAOAA0ADkANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADAAMQAzAC4AMgA2ADgANAA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADYAOAA5ADAAYQAyADkANAA3AGIAZQA4ADQAMAAyADUAOQA2ADEAYwA4ADUANAAzAGQA
OQBmAGUANgAxADYAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANgA4ADkAMABhADIAOQA0ADcAYgBlADgANAAwADIANQA5ADYAMQBjADgA
NQA0ADMAZAA5AGYAZQA2ADEANgBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADMAOQBmADkAYQA0ADEAZQBiADcAYgBlADQAZgAyADcAOAA4ADYANAAwADIA
OQBhAGQAMABjAGMAOAA0ADkANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwAwADEAMwAuADIANgA4ADQANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADEAMwAuADIANgA4ADQANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Process Complete pop-up"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{30bbfe97-c4f6-4de1-a78c-c2c4250c909f}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Process Complete pop-up"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_574adb6ecf044958860eb45bf1bea3a3"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::processComplete">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Settings.get_Default():ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Sett" +
    "ings")]

namespace ST_39f9a41eb7be4f278864029ad0cc8495.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_39f9a41eb7be4f278864029ad0cc8495
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            if (Dts.Connections["UDW"].ConnectionString.ToUpper().Contains("OPSDEV"))
                MessageBox.Show(Dts.Variables["User::processComplete"].Value.ToString());//TEST
            else
                Console.WriteLine(Dts.Variables["User::processComplete"].Value.ToString());//LIVE
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_574adb6ecf044958860eb45bf1bea3a3.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7910b01a-c7e0-485b-944e-f1862ce6e834}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_39f9a41eb7be4f278864029ad0cc8495</RootNamespace>
    <AssemblyName>ST_574adb6ecf044958860eb45bf1bea3a3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_574adb6ecf044958860eb45bf1bea3a3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_574adb6ecf044958860eb45bf1bea3a3</msb:DisplayName>
		<msb:ProjectId>{A9F02D04-56FF-487F-BAC6-9C565DE4C269}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_574adb6ecf044958860eb45bf1bea3a3.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_39f9a41eb7be4f278864029ad0cc8495")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_39f9a41eb7be4f278864029ad0cc8495")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_39f9a41eb7be4f278864029ad0cc8495.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_39f9a41eb7be4f278864029ad0cc8495.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_574adb6ecf044958860eb45bf1bea3a3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHoSjFwAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAAi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
LgAAAAAAAEgAAAACAAUAOCEAAMAMAAABAAAAAAAAAPgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgB2AAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyCQAAcG8VAAAKLCYCKBAAAApvFgAACnIXAABwbxcAAApvGAAACm8ZAAAKKBoAAAom
KgIoEAAACm8WAAAKchcAAHBvFwAACm8YAAAKbxkAAAooGwAACioeAigcAAAKKh4CKB0AAAoqrn4B
AAAELR5yQwAAcNADAAACKB4AAApvHwAACnMgAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoa
fgMAAAQqHgIoIQAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAAAUBAAAI34AAIAEAAD8BQAAI1N0cmluZ3MAAAAAfAoAALgAAAAjVVMANAsAABAAAAAjR1VJ
RAAAAEQLAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAIwAAAAUAAAAG
AAAACQAAAAEAAAAhAAAAAgAAABAAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAADAAwEA
AAAAAAYAWwKqBAYA6gKqBAYApwGXBA8AHgUAAAYA1AE+BAYAPgI+BAYAHwI+BAYA0QI+BAYAewI+
BAYAlAI+BAYA6wE+BAYABgIYAwoArwJvAwoAJgFvAwYA+APxAwYAigGXBAYAvwXxAwYAYATKBAYA
UAQpBA4AWgGqAw4AuwGqAw4AQgEUBAYAbwGqBAoAmANvAxIAlQXHABIAcATHAAYASQPxAxIAYAXH
ABIAkgDHABYA5AVzBRYA0gVzBQYAvwDxAwYA8QDxAwYAmwDxAwYA8wU+BAAAAABJAAAAAAABAAEA
AQAQAAkEJQA5AAEAAQAAABAA0QQtBUUAAQADAAABEABqBS0FWQADAAcAAwEAALEFAAA9AAQACgAR
AP0DgQARABYBhQARAIIAiQAGBnEAjQBWgKEFkABWgPYAkABQIAAAAACGAA8EBgABANIgAAAAAIYY
igQGAAEA2iAAAAAAgxiKBAYAAQDiIAAAAACTCFwElAABAA4hAAAAAJMI/gCZAAEAFSEAAAAAkwgK
AZ4AAQAdIQAAAACWCMYFpAACACQhAAAAAIYYigQGAAIALCEAAAAAkRiQBKkAAgAAAAEAEgMJAIoE
AQARAIoEBgAZAIoECgApAIoEEAAxAIoEEAA5AIoEEABBAIoEEABJAIoEEABRAIoEEABZAIoEEABh
AIoEEABpAIoEBgCBAIoEBgCpAIoEFQC5AIoEBgBxAKkFGwDBAJEFIADJAOgDJQDRADIDKwDZAIIE
KwDZAIgFLwDBAFwFNADhAOgDOQDpAAgDPwCJAEcDKwDxAN8FQwABAecASQBxAIoEBgCJAIoEBgAJ
Aa0ATgAJAe8FVwCRAIoEXQCxAIoEBgAIABQAdwAIABgAfAApAHMA5AAuAAsAvAAuABMAxQAuABsA
5AAuACMA7QAuACsAFgEuADMAFgEuADsAFgEuAEMA7QAuAEsAHAEuAFMAFgEuAFsAMwFDAGMAfABJ
AHMA5ABhAHsAfABjAGsAfAADAAEABAADAAAAYAStAAAAHgGyAAAAygW3AAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAZRuNaQAAAAAAAAEAAAAEAAAAAAAAAAAAAABlAHkAAAAAAAwAAAAA
AAAAAAAAAG4AUAMAAAAABAAAAAAAAAAAAAAAZQDxAwAAAAAMAAAAAAAAAAAAAABuAFIAAAAAAAQA
AAAAAAAAAAAAAGUAcwUAAAAAAAAAAAEAAADbBAAABQACAAAAAAAAU1RfNTc0YWRiNmVjZjA0NDk1
ODg2MGViNDViZjFiZWEzYTMAU1RfMzlmOWE0MWViN2JlNGYyNzg4NjQwMjlhZDBjYzg0OTUAPE1v
ZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVm
YXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AENvbnNvbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AGdldF9Db25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81NzRhZGI2ZWNmMDQ0OTU4ODYwZWI0NWJm
MWJlYTNhMy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFRvVXBw
ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMzlmOWE0MWViN2JlNGYyNzg4NjQwMjlhZDBj
Yzg0OTUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzM5
ZjlhNDFlYjdiZTRmMjc4ODY0MDI5YWQwY2M4NDk1LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBT
ZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBDb250YWlucwBnZXRfQ29ubmVjdGlvbnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3Vs
dABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAHVQBEAFcAAA1PAFAAUwBEAEUAVgAAK1UA
cwBlAHIAOgA6AHAAcgBvAGMAZQBzAHMAQwBvAG0AcABsAGUAdABlAABxUwBUAF8AMwA5AGYAOQBh
ADQAMQBlAGIANwBiAGUANABmADIANwA4ADgANgA0ADAAMgA5AGEAZAAwAGMAYwA4ADQAOQA1AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABqmWtyFB6tTKDly3li
AW/aAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgAA4EIAECDgQg
ABJxBSABEnUcAyAAHAUAARF9DgQAAQEOCAABEoCFEYCJBSAAEoCNByACAQ4SgI0It3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAAS
EAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUXzM5ZjlhNDFlYjdiZTRmMjc4ODY0MDI5YWQwY2M4NDk1AAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2C4A
AAAAAAAAAAAA8i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQuAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCNaWUbAAABAI1pZRs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADMAOQBmADkAYQA0ADEAZQBiADcAYgBlADQAZgAyADcAOAA4ADYANAAwADIAOQBh
AGQAMABjAGMAOAA0ADkANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADAAMQAzAC4AMgA3ADAAMgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADUANwA0AGEAZABiADYAZQBjAGYAMAA0ADQAOQA1ADgAOAA2ADAAZQBiADQANQBiAGYA
MQBiAGUAYQAzAGEAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANQA3ADQAYQBkAGIANgBlAGMAZgAwADQANAA5ADUAOAA4ADYAMABlAGIA
NAA1AGIAZgAxAGIAZQBhADMAYQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADMAOQBmADkAYQA0ADEAZQBiADcAYgBlADQAZgAyADcAOAA4ADYANAAwADIA
OQBhAGQAMABjAGMAOAA0ADkANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwAwADEAMwAuADIANwAwADIAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADEAMwAuADIANwAwADIAMQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container - main table inserts"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D1E175A7-99CD-4869-B3B7-8FFCE9DCD4C6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:FailParentOnFailure="True"
      DTS:ISOLevel="256"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container - main table inserts">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - deactivate ActiveRow field in DataComparison if PIF and 45 days"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A88A5DAF-3C9B-44AE-A20D-47E8F1FEB52D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - deactivate ActiveRow field in DataComparison if PIF and 45 days"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="UPDATE &#xA;&#x9;DC&#xA;SET &#xA;&#x9;ActiveRow = 0 --deactivation&#xA;FROM&#xA;&#x9;ULS.scra.DataComparison DC&#xA;&#x9;INNER JOIN UDW..LN10_LON LN10&#xA;&#x9;&#x9;ON DC.BorrSSN = LN10.BF_SSN&#xA;WHERE&#xA;&#x9;LN10.LC_STA_LON10 = 'R'&#xA;&#x9;AND DC.ActiveRow = 1&#xA;&#x9;AND (LN10.LA_CUR_PRI IS NULL OR LN10.LA_CUR_PRI &lt;= 0.00)&#xA;&#x9;AND ISNULL(LN10.LD_PIF_RPT,GETDATE()) &lt; DATEADD(DAY,-45,CONVERT(DATE,GETDATE())) --deactivates borrowers over 45 days &amp; paid in full&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - drop ##InputGroups"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d395b08a-9696-4e5f-a3cf-d2581f00028a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - drop ##InputGroups"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ACA7EED0-37B7-4BD8-B3B2-18132DBFB145}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="DROP TABLE IF EXISTS ##SCRA_INPUT_UHEAA, ##LN90X_SCRAUHEAA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - get ##InputGroups"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{68BCBD30-BBCF-4958-BAA2-B1DE7EB7C798}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - get ##InputGroups"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ACA7EED0-37B7-4BD8-B3B2-18132DBFB145}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="&#xA;DROP TABLE IF EXISTS ##SCRA_INPUT_UHEAA;&#xA;&#xA;CREATE TABLE ##SCRA_INPUT_UHEAA (BorrSSN CHAR(9));&#xA;&#xA;WITH max_SP AS&#xA;(--get most recent record&#xA;&#x9;SELECT &#xA;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;MAX(CreatedAt) AS max_CreatedAt&#xA;&#x9;FROM &#xA;&#x9;&#x9;ULS.scra.ScriptProcessing&#xA;&#x9;GROUP BY&#xA;&#x9;&#x9;BorrSSN&#xA;)&#xA;INSERT INTO ##SCRA_INPUT_UHEAA (BorrSSN)&#xA;SELECT DISTINCT&#xA;&#x9;BOTHGROUPS.BorrSSN&#xA;FROM&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;SP.*&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.ScriptProcessing SP&#xA;&#x9;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;&#x9;(--exclude this borrower pop&#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AY10.BF_SSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SP.Loan&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;UDW..AY10_BR_LON_ATY AY10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN ULS.scra.ScriptProcessing SP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON AY10.BF_SSN = SP.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AY10.PF_REQ_ACT = 'SCRAN'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND AY10.LC_STA_ACTY10 = 'A'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(AY10.LD_ATY_REQ_RCV,'') &gt; ISNULL(SP.TXCXBegin,'') --group 1: Exclude if the borrower has received a letter since the Active Duty Begin Date&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR ISNULL(AY10.LD_ATY_REQ_RCV,'') &gt; ISNULL(SP.TXCXEnd,'') --group 2: Exclude if borrower has received a letter since the Active Duty End date&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;) EXCLUDE&#xA;&#x9;&#x9;&#x9;&#x9;ON SP.BorrSSN = EXCLUDE.BF_SSN&#xA;&#x9;&#x9;&#x9;&#x9;AND SP.Loan = EXCLUDE.Loan&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;EXCLUDE.BF_SSN IS NULL&#xA;&#x9;&#x9;&#x9;AND SP.LN10Sta = 'R'&#xA;&#x9;&#x9;&#x9;AND SP.LN10CurPri &gt; 0.00&#xA;&#x9;&#x9;&#x9;AND &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SP.LN72RegRate &lt; 6.00&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SP.LN72RegRate = 6.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SP.LN72SCRA = 0&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;OR SP.LN10Disb &gt; SP.DODBegin&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;AND &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(--group 1: Active Duty &amp; DOD Begin in past 45 days&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(SP.TXCXBegin,'') &gt;= DATEADD(DAY,-45,CONVERT(DATE,GETDATE()))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(SP.TXCXBegin,'') &lt;= CONVERT(DATE,GETDATE())&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;OR&#xA;&#x9;&#x9;&#x9;&#x9;(--group 2: exiting Active Duty in past 45 days&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(SP.TXCXEnd,'') &gt;= DATEADD(DAY,-45,CONVERT(DATE,GETDATE()))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(SP.TXCXEnd,'') &lt;= CONVERT(DATE,GETDATE())&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;) BOTHGROUPS&#xA;&#x9;LEFT JOIN --to exclude if borrower has loans that are both approved/eligible and denied/ineligible for SCRA benefits&#xA;&#x9;(&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;SP.BorrSSN&#xA;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;ULS.scra.ScriptProcessing SP&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN max_SP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON SP.BorrSSN = max_SP.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SP.CreatedAt = max_SP.max_CreatedAt&#xA;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;SP.LN72RegRate &gt; 6.000--eligible/approved&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SP.LN72RegRate = 6.000&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SP.LN72SCRA = 1 --On Military Special Rate Indicator&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;INTERSECT --gets borrowers that have both eligible and ineligible loans based on RegRate since SCRA lowers rates to 6%&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;SP.BorrSSN &#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;ULS.scra.ScriptProcessing SP&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN max_SP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON SP.BorrSSN = max_SP.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SP.CreatedAt = max_SP.max_CreatedAt&#xA;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;SP.LN72RegRate &lt;= 6.000--ineligible/denied&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;SP.BorrSSN &#xA;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;ULS.scra.ScriptProcessing SP&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN max_SP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON SP.BorrSSN = max_SP.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SP.CreatedAt = max_SP.max_CreatedAt&#xA;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;SP.LN10Disb &gt; SP.DODBegin --denied (loan disbursed after active duty begin date)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;INTERSECT --gets borrowers that have both approved and denied loans based on when loan was disbursed&#xA;&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;SP.BorrSSN &#xA;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;ULS.scra.ScriptProcessing SP&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN max_SP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON SP.BorrSSN = max_SP.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SP.CreatedAt = max_SP.max_CreatedAt&#xA;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;SP.LN10Disb &lt;= SP.DODBegin --approved (loan disbursed before active duty begin date)&#xA;&#x9;&#x9;)&#xA;&#x9;) YESANDNO&#xA;&#x9;&#x9;ON BOTHGROUPS.BorrSSN = YESANDNO.BorrSSN&#xA;WHERE&#xA;&#x9;YESANDNO.BorrSSN IS NULL --excludes borrowers that are both approved/eligible and denied/ineligible for SCRA benefits&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - get ##LN90X_SCRAUHEAA"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{366E6428-57D4-4C9A-99FA-4A55EB201F43}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - get ##LN90X_SCRAUHEAA"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ACA7EED0-37B7-4BD8-B3B2-18132DBFB145}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="&#xA;DROP TABLE IF EXISTS ##LN90X_SCRAUHEAA;&#xA;&#xA;CREATE TABLE ##LN90X_SCRAUHEAA (BF_SSN CHAR(9), LN_SEQ SMALLINT);&#xA;&#xA;INSERT INTO ##LN90X_SCRAUHEAA (BF_SSN, LN_SEQ)&#xA;SELECT DISTINCT&#xA;&#x9;LN90.BF_SSN,&#xA;&#x9;LN90.LN_SEQ&#xA;FROM&#xA;&#x9;UDW..LN90_FIN_ATY LN90&#xA;&#x9;INNER JOIN ULS.scra._DODReturnFile DOD&#xA;&#x9;&#x9;ON LN90.BF_SSN = DOD.SSN&#xA;WHERE&#xA;&#x9;(&#xA;&#x9;&#x9;(--10:PAYMENT/30:GUARANTOR - claim paid more than 45 days ago&#xA;&#x9;&#x9;&#x9;LN90.PC_FAT_TYP = '10' &#xA;&#x9;&#x9;&#x9;AND LN90.PC_FAT_SUB_TYP = '30'&#xA;&#x9;&#x9;) &#xA;&#x9;&#x9;OR LN90.PC_FAT_TYP = '04' --deconverted to DMCS or other servicer more than 45 days ago&#xA;&#x9;)&#xA;&#x9;AND LN90.LC_STA_LON90 = 'A'&#xA;&#x9;AND ISNULL(RTRIM(LN90.LC_FAT_REV_REA),'') = ''&#xA;;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ActiveDutyReporting"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{300cf99a-dd46-4c69-a258-d3d96d41082c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into ActiveDutyReporting"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="INSERT INTO ULS.scra.ActiveDutyReporting&#xA;(&#xA;&#x9;BorrSSN,&#xA;&#x9;EndrSSN,&#xA;&#x9;IsEndorser,&#xA;&#x9;TXCXBegin,&#xA;&#x9;TXCXEnd,&#xA;&#x9;TXCXType,&#xA;&#x9;ServiceComponent,&#xA;&#x9;TXCXUpdated,&#xA;&#x9;CreatedAt,&#xA;&#x9;CreatedBy,&#xA;&#x9;DeletedAt,&#xA;&#x9;DeletedBy,&#xA;&#x9;ErroredAt&#xA;)&#xA;SELECT&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.EndrSSN,&#xA;&#x9;NEWDATA.IsEndorser,&#xA;&#x9;NEWDATA.TXCXBegin,&#xA;&#x9;NEWDATA.TXCXEnd,&#xA;&#x9;NEWDATA.TXCXType,&#xA;&#x9;NEWDATA.ServiceComponent,&#xA;&#x9;NEWDATA.TXCXUpdated,&#xA;&#x9;NEWDATA.CreatedAt,&#xA;&#x9;NEWDATA.CreatedBy,&#xA;&#x9;NEWDATA.DeletedAt,&#xA;&#x9;NEWDATA.DeletedBy,&#xA;&#x9;NEWDATA.ErroredAt&#xA;FROM&#xA;(&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;DC.BorrSSN,&#xA;&#x9;&#x9;CASE WHEN DC.EndrActive IS NOT NULL THEN DC.EndrSSN ELSE NULL END AS EndrSSN,&#xA;&#x9;&#x9;CASE WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL THEN 1 ELSE 0 END AS IsEndorser,&#xA;&#x9;&#x9;CASE WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL THEN DC.ActiveBeginEndr ELSE DC.ActiveBeginBrwr END AS TXCXBegin,&#xA;&#x9;&#x9;CASE WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL THEN ISNULL(DC.ActiveEndEndr,'2099-12-31') ELSE ISNULL(DC.ActiveEndBrwr,'2099-12-31') END AS TXCXEnd,&#xA;&#x9;&#x9;'SCRA' AS TXCXType,&#xA;&#x9;&#x9;CASE  WHEN DC.EndrSSN IS NOT NULL AND DC.EndrActive IS NOT NULL THEN DC.EndorserServiceComponent&#xA;&#x9;&#x9;&#x9;&#x9;WHEN DC.EndrSSN IS NULL THEN DC.ServiceComponent&#xA;&#x9;&#x9;&#x9;&#x9;ELSE DC.ServiceComponent&#xA;&#x9;&#x9;END AS ServiceComponent,&#xA;&#x9;&#x9;NULL AS TXCXUpdated,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;SUSER_SNAME() AS CreatedBy,&#xA;&#x9;&#x9;NULL AS DeletedAt,&#xA;&#x9;&#x9;NULL AS DeletedBy,&#xA;&#x9;&#x9;NULL AS ErroredAt&#xA;&#x9;FROM&#xA;&#x9;&#x9;ULS.scra.DataComparison DC&#xA;&#x9;WHERE&#xA;&#x9;&#x9;DC.ActiveRow = 1&#xA;&#x9;&#x9;AND&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveBeginEndr IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveEndEndr IS NOT NULL&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;OR&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;DC.BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveBeginBrwr IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveEndBrwr IS NOT NULL&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;AND NOT &#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;( --reservist endorsers need to be ignored for ENDORSER reporting&#xA;&#x9;&#x9;&#x9;&#x9;DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.EndrIsReservist = 1&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;( --exclude reservist only borrowers that dont have endorsers&#xA;&#x9;&#x9;&#x9;&#x9;DC.EndrSSN IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND DC.BorrIsReservist = 1&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;UNION&#xA;&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;DC.BorrSSN,&#xA;&#x9;&#x9;NULL AS EndrSSN,&#xA;&#x9;&#x9;0 AS IsEndorser,&#xA;&#x9;&#x9;DC.ActiveBeginBrwr AS TXCXBegin,&#xA;&#x9;&#x9;DC.ActiveEndBrwr AS TXCXEnd,&#xA;&#x9;&#x9;'SCRA' AS TXCXType,&#xA;&#x9;&#x9;DC.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;NULL AS TXCXUpdated,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;SUSER_SNAME() AS CreatedBy,&#xA;&#x9;&#x9;NULL AS DeletedAt,&#xA;&#x9;&#x9;NULL AS DeletedBy,&#xA;&#x9;&#x9;NULL AS ErroredAt&#xA;&#x9;FROM&#xA;&#x9;&#x9;ULS.scra.DataComparison DC&#xA;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;BorrSSN&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;ULS.scra.DataComparison&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;EndrSSN IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;AND ActiveRow = 1&#xA;&#x9;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;OR EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;) BorrowerOnly&#xA;&#x9;&#x9;&#x9;ON BorrowerOnly.BorrSSN = DC.BorrSSN&#xA;&#x9;WHERE&#xA;&#x9;&#x9;DC.ActiveRow = 1&#xA;&#x9;&#x9;AND&#xA;&#x9;&#x9;(&#x9;&#xA;&#x9;&#x9;&#x9;DC.BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;OR DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;AND BorrowerOnly.BorrSSN IS NULL --Doesnt have any records not tied to an endorser&#xA;&#x9;&#x9;AND DC.ActiveBeginBrwr IS NOT NULL&#xA;&#x9;&#x9;AND DC.ActiveEndBrwr IS NOT NULL&#xA;&#x9;&#x9;AND DC.BorrIsReservist != 1 --Exclude borrowers that are reservist&#xA;) NEWDATA&#xA;&#x9;LEFT JOIN ULS.scra.ActiveDutyReporting EXISTING_DATA&#xA;&#x9;&#x9;ON NEWDATA.BorrSSN = EXISTING_DATA.BorrSSN&#xA;&#x9;&#x9;AND ISNULL(NEWDATA.EndrSSN,'') = ISNULL(EXISTING_DATA.EndrSSN,'')&#xA;&#x9;&#x9;AND NEWDATA.IsEndorser = EXISTING_DATA.IsEndorser&#xA;&#x9;&#x9;AND NEWDATA.TXCXBegin = EXISTING_DATA.TXCXBegin&#xA;&#x9;&#x9;AND NEWDATA.TXCXEnd = EXISTING_DATA.TXCXEnd&#xA;&#x9;&#x9;AND NEWDATA.TXCXType = EXISTING_DATA.TXCXType&#xA;&#x9;&#x9;AND NEWDATA.ServiceComponent = EXISTING_DATA.ServiceComponent&#xA;&#x9;&#x9;AND CAST(NEWDATA.CreatedAt AS DATE) = CAST(EXISTING_DATA.CreatedAt AS DATE)&#xA;WHERE&#xA;&#x9;EXISTING_DATA.BorrSSN IS NULL&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ArcAddProcessing"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D043C242-093A-47D7-B87E-2A6EC4C47846}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into ArcAddProcessing"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="&#xA;INSERT INTO ULS.dbo.ArcAddProcessing&#xA;(&#xA;&#x9;ArcTypeId,&#xA;&#x9;AccountNumber,&#xA;&#x9;ARC,&#xA;&#x9;ScriptId,&#xA;&#x9;ProcessOn,&#xA;&#x9;Comment,&#xA;&#x9;IsReference,&#xA;&#x9;IsEndorser,&#xA;&#x9;ProcessingAttempts,&#xA;&#x9;CreatedAt,&#xA;&#x9;CreatedBy&#xA;)&#xA;SELECT&#xA;&#x9;NEWDATA.ArcTypeId,&#xA;&#x9;NEWDATA.AccountNumber,&#xA;&#x9;NEWDATA.ARC,&#xA;&#x9;NEWDATA.ScriptId,&#xA;&#x9;NEWDATA.ProcessOn,&#xA;&#x9;NEWDATA.Comment,&#xA;&#x9;NEWDATA.IsReference,&#xA;&#x9;NEWDATA.IsEndorser,&#xA;&#x9;NEWDATA.ProcessingAttempts,&#xA;&#x9;NEWDATA.CreatedAt,&#xA;&#x9;NEWDATA.CreatedBy&#xA;FROM&#xA;(&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;2 AS ArcTypeId,&#xA;&#x9;&#x9;PD10.DF_SPE_ACC_ID AS AccountNumber,&#xA;&#x9;&#x9;'ASCRA' AS ARC,&#xA;&#x9;&#x9;'UTLWS75' AS ScriptId,&#xA;&#x9;&#x9;GETDATE() AS ProcessOn,&#xA;&#x9;&#x9;CASE WHEN DC.BorrActive = 1 AND ISNULL(DC.EndrActive,0) = 0&#xA;&#x9;&#x9;&#x9;THEN 'Active Military Borrower. Borrower''s Active Duty Begin Date: ' + CAST(DC.BeginBrwr AS VARCHAR(10)) + ', Borrower''s Active Duty End Date: ' + CAST(DC.EndBrwr AS VARCHAR(10))&#xA;&#x9;&#x9;&#x9; WHEN ISNULL(DC.BorrActive,0) = 0 AND DC.EndrActive = 1&#xA;&#x9;&#x9;&#x9;THEN 'Endorser''s Active Duty Begin Date: ' + CAST(DC.BeginEndr AS VARCHAR(10)) + ', Endorser''s Active Duty End Date: ' + CAST(DC.EndEndr AS VARCHAR(10))&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive = 1 AND DC.EndrActive = 1&#xA;&#x9;&#x9;&#x9;THEN 'Active Military Borrower. Borrower''s Active Duty Begin Date: ' + CAST(DC.BeginBrwr AS VARCHAR(10)) &#xA;&#x9;&#x9;&#x9;&#x9;+ ', Borrower''s Active Duty End Date: ' + CAST(DC.EndBrwr AS VARCHAR(10)) &#xA;&#x9;&#x9;&#x9;&#x9;+ '. Endorser''s Active Duty Begin Date: ' + CAST(DC.BeginEndr AS VARCHAR(10)) &#xA;&#x9;&#x9;&#x9;&#x9;+ ', Endorser''s Active Duty End Date: ' + CAST(DC.EndEndr AS VARCHAR(10))&#xA;&#x9;&#x9;&#x9;ELSE 'ERROR'&#xA;&#x9;&#x9;END AS Comment,&#xA;&#x9;&#x9;0 AS IsReference,&#xA;&#x9;&#x9;0 AS IsEndorser,&#xA;&#x9;&#x9;0 AS ProcessingAttempts,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;'SCRAUHEAA' AS CreatedBy,&#xA;&#x9;&#x9;SUM(DC.LoanBalance) OVER(PARTITION BY DC.BorrSSN) AS sum_LoanBalance&#xA;&#x9;FROM&#xA;&#x9;&#x9;ULS.scra.DataComparison DC&#xA;&#x9;&#x9;INNER JOIN UDW..PD10_PRS_NME PD10&#xA;&#x9;&#x9;&#x9;ON DC.BorrSSN = PD10.DF_PRS_ID&#xA;&#x9;WHERE&#xA;&#x9;&#x9;DC.ActiveRow = 1&#xA;&#x9;&#x9;AND &#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;DC.BorrActive = 1&#xA;&#x9;&#x9;&#x9;OR DC.EndrActive = 1&#xA;&#x9;&#x9;)&#xA;) NEWDATA&#xA;LEFT JOIN ULS.dbo.ArcAddProcessing EXISTING_DATA&#xA;&#x9;ON NEWDATA.ArcTypeId = EXISTING_DATA.ArcTypeId&#xA;&#x9;AND NEWDATA.AccountNumber = EXISTING_DATA.AccountNumber&#xA;&#x9;AND NEWDATA.ARC  = EXISTING_DATA.ARC&#xA;&#x9;AND NEWDATA.ScriptId = EXISTING_DATA.ScriptId&#xA;&#x9;AND CAST(NEWDATA.ProcessOn AS DATE) = CAST(EXISTING_DATA.ProcessOn AS DATE)&#xA;&#x9;AND ISNULL(NEWDATA.Comment,'') = ISNULL(EXISTING_DATA.Comment,'')--nullable&#xA;&#x9;AND NEWDATA.IsReference = EXISTING_DATA.IsReference&#xA;&#x9;AND NEWDATA.IsEndorser = EXISTING_DATA.IsEndorser&#xA;&#x9;AND CAST(NEWDATA.CreatedAt AS DATE) = CAST(EXISTING_DATA.CreatedAt AS DATE)&#xA;WHERE&#xA;&#x9;EXISTING_DATA.AccountNumber IS NULL&#xA;&#x9;AND NEWDATA.sum_LoanBalance &gt; 0.00&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AA3C4263-E55E-4A33-BB3B-E590C4B2437F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into DataComparison"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="INSERT INTO ULS.scra.DataComparison&#xA;(&#xA;&#x9;ActiveRow,&#xA;&#x9;Loan,&#xA;&#x9;LoanBalance,&#xA;&#x9;StatusDate,&#xA;&#x9;BorrSSN,&#xA;&#x9;BorrActive,&#xA;&#x9;EndrSSN,&#xA;&#x9;EndrActive,&#xA;&#x9;BeginBrwr,&#xA;&#x9;EIDB,&#xA;&#x9;BeginEndr,&#xA;&#x9;EIDE,&#xA;&#x9;EndBrwr,&#xA;&#x9;EndEndr,&#xA;&#x9;BorrIsReservist,&#xA;&#x9;EndrIsReservist,&#xA;&#x9;CreatedAt,&#xA;&#x9;ServiceComponent,&#xA;&#x9;EIDServiceComponent,&#xA;&#x9;EndorserServiceComponent,&#xA;&#x9;EndorserEIDServiceComponent,&#xA;&#x9;ActiveBeginBrwr,&#xA;&#x9;ActiveEndBrwr,&#xA;&#x9;ActiveBeginEndr,&#xA;&#x9;ActiveEndEndr&#xA;)&#xA;SELECT&#xA;&#x9;NEWDATA.ActiveRow,&#xA;&#x9;NEWDATA.Loan,&#xA;&#x9;NEWDATA.LoanBalance,&#xA;&#x9;NEWDATA.StatusDate,&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.BorrActive,&#xA;&#x9;NEWDATA.EndrSSN,&#xA;&#x9;NEWDATA.EndrActive,&#xA;&#x9;NEWDATA.BeginBrwr,&#xA;&#x9;NEWDATA.EIDB,&#xA;&#x9;NEWDATA.BeginEndr,&#xA;&#x9;NEWDATA.EIDE,&#xA;&#x9;NEWDATA.EndBrwr,&#xA;&#x9;NEWDATA.EndEndr,&#xA;&#x9;NEWDATA.BorrIsReservist,&#xA;&#x9;NEWDATA.EndrIsReservist,&#xA;&#x9;NEWDATA.CreatedAt,&#xA;&#x9;NEWDATA.ServiceComponent,&#xA;&#x9;NEWDATA.EIDServiceComponent,&#xA;&#x9;NEWDATA.EndorserServiceComponent,&#xA;&#x9;NEWDATA.EndorserEIDServiceComponent,&#xA;&#x9;NEWDATA.ActiveBeginBrwr,&#xA;&#x9;NEWDATA.ActiveEndBrwr,&#xA;&#x9;NEWDATA.ActiveBeginEndr,&#xA;&#x9;NEWDATA.ActiveEndEndr&#xA;FROM&#xA;(--inserted rows&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;1 AS ActiveRow, --new record indicator&#xA;&#x9;&#x9;BORR.Loan,&#xA;&#x9;&#x9;BORR.LoanBalance,&#xA;&#x9;&#x9;BORR.ActiveDutyStatusDate AS StatusDate,&#xA;&#x9;&#x9;BORR.BorrSSN,&#xA;&#x9;&#x9;CASE WHEN &#xA;&#x9;&#x9;&#x9;&#x9;BORR.ActiveDutyOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;&#x9;AND BORR.LeftActiveDutyLE367DaysFromActiveDutyStatusDt = 'Y' &#xA;&#x9;&#x9;&#x9;&#x9;AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;THEN 0&#xA;&#x9;&#x9;&#x9; WHEN&#xA;&#x9;&#x9;&#x9;&#x9;BORR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y')&#xA;&#x9;&#x9;&#x9;&#x9;OR&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BORR.ActiveDutyOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;&#x9;THEN 1&#xA;&#x9;&#x9;&#x9;ELSE NULL --doesn't exist in DOD database&#xA;&#x9;&#x9;END AS BorrActive,&#xA;&#x9;&#x9;ENDR.EndrSSN,&#xA;&#x9;&#x9;CASE WHEN &#xA;&#x9;&#x9;&#x9;&#x9;ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;&#x9;AND ENDR.LeftActiveDutyLE367DaysFromActiveDutyStatusDt = 'Y' &#xA;&#x9;&#x9;&#x9;&#x9;AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'N' &#xA;&#x9;&#x9;&#x9;THEN 0&#xA;&#x9;&#x9;&#x9;WHEN&#xA;&#x9;&#x9;&#x9;&#x9;ENDR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y')&#xA;&#x9;&#x9;&#x9;&#x9;OR&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ENDR.ActiveDutyOnActiveDutyStatusDt = 'N'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;&#x9;THEN 1&#xA;&#x9;&#x9;&#x9;ELSE NULL --doesn't exist in DOD database&#xA;&#x9;&#x9;END AS EndrActive,&#xA;&#x9;&#x9;IIF(BORR.ActiveDutyOnActiveDutyStatusDt = 'N' AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', BORR.EIDBeginDate, BORR.ActiveDutyBeginDate) AS BeginBrwr,&#xA;&#x9;&#x9;IIF(BORR.ActiveDutyOnActiveDutyStatusDt = 'N' AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS EIDB,&#xA;&#x9;&#x9;IIF(ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', ENDR.EIDBeginDate, ENDR.ActiveDutyBeginDate) AS BeginEndr,&#xA;&#x9;&#x9;IIF(ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS EIDE,&#xA;&#x9;&#x9;CASE WHEN BORR.ActiveDutyOnActiveDutyStatusDt = 'N' AND BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y' THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; WHEN BORR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y') AND BORR.ActiveDutyEndDate IS NULL THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; ELSE BORR.ActiveDutyEndDate&#xA;&#x9;&#x9;END AS EndBrwr,&#xA;&#x9;&#x9;CASE WHEN ENDR.ActiveDutyOnActiveDutyStatusDt = 'N' AND ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y' THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; WHEN ENDR.ActiveDutyOnActiveDutyStatusDt IN ('X','Y') AND ENDR.ActiveDutyEndDate IS NULL THEN CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9; ELSE ENDR.ActiveDutyEndDate&#xA;&#x9;&#x9;END AS EndEndr,&#xA;&#x9;&#x9;IIF(BORR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS BorrIsReservist,&#xA;&#x9;&#x9;IIF(ENDR.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt = 'Y', 1, 0) AS EndrIsReservist,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;BORR.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;BORR.EIDServiceComponent AS EIDServiceComponent,&#xA;&#x9;&#x9;ENDR.ServiceComponent AS EndorserServiceComponent,&#xA;&#x9;&#x9;ENDR.EIDServiceComponent AS EndorserEIDServiceComponent,&#xA;&#x9;&#x9;BORR.ActiveDutyBeginDate AS ActiveBeginBrwr,&#xA;&#x9;&#x9;CASE WHEN BORR.ActiveDutyBeginDate IS NOT NULL THEN ISNULL(BORR.ActiveDutyEndDate,'2099-12-31') ELSE NULL END AS ActiveEndBrwr,&#xA;&#x9;&#x9;ENDR.ActiveDutyBeginDate AS ActiveBeginEndr,&#xA;&#x9;&#x9;CASE WHEN ENDR.ActiveDutyBeginDate IS NOT NULL THEN ISNULL(ENDR.ActiveDutyEndDate,'2099-12-31') ELSE NULL END AS ActiveEndEndr&#xA;&#x9;FROM&#xA;&#x9;(--gets borrower population from DOD file, converts dates, and nulls out 0's&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;DOD.SSN AS BorrSSN,&#xA;&#x9;&#x9;&#x9;LN10.LN_SEQ AS Loan,&#xA;&#x9;&#x9;&#x9;LN10.LA_CUR_PRI AS LoanBalance,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(DOD.ActiveDutyStatusDate))) AS ActiveDutyStatusDate,&#xA;&#x9;&#x9;&#x9;DOD.ActiveDutyOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyEndDate,0)))) AS ActiveDutyEndDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyBeginDate,0)))) AS ActiveDutyBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDBeginDate,0)))) AS EIDBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDEndDate,0)))) AS EIDEndDate,&#xA;&#x9;&#x9;&#x9;DOD.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;&#x9;DOD.EIDServiceComponent AS EIDServiceComponent&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;ULS.scra._DODReturnFile DOD&#xA;&#x9;&#x9;&#x9;INNER JOIN UDW..LN10_LON LN10&#xA;&#x9;&#x9;&#x9;&#x9;ON DOD.SSN = LN10.BF_SSN&#xA;&#x9;&#x9;&#x9;LEFT JOIN ##LN90X_SCRAUHEAA LN90X&#xA;&#x9;&#x9;&#x9;&#x9;ON LN10.BF_SSN = LN90X.BF_SSN&#xA;&#x9;&#x9;&#x9;&#x9;AND LN10.LN_SEQ = LN90X.LN_SEQ&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;LN10.LC_STA_LON10 = 'R'&#xA;&#x9;&#x9;&#x9;AND&#x9;DOD.ActiveDutyOnActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;&#x9;&#x9;AND ISNULL(LN10.LD_PIF_RPT,GETDATE()) &gt; DATEADD(DAY,-45,CONVERT(DATE,GETDATE())) --exclude paid in full more than 45 days ago&#xA;&#x9;&#x9;&#x9;AND LN90X.BF_SSN IS NULL--exclude claim paid &amp; deconverted to DMCS/other servicer&#xA;&#x9;) BORR&#xA;&#x9;LEFT JOIN &#xA;&#x9;(--gets endorser population from DOD file, converts dates, and nulls out 0's&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;DOD.SSN AS EndrSSN,&#xA;&#x9;&#x9;&#x9;LN20.BF_SSN AS BorrSSN,&#xA;&#x9;&#x9;&#x9;LN20.LN_SEQ AS Loan,&#xA;&#x9;&#x9;&#x9;LN10.LA_CUR_PRI AS LoanBalance,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(DOD.ActiveDutyStatusDate))) AS ActiveDutyStatusDate,&#xA;&#x9;&#x9;&#x9;DOD.ActiveDutyOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyEndDate,0)))) AS ActiveDutyEndDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.ActiveDutyBeginDate,0)))) AS ActiveDutyBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDBeginDate,0)))) AS EIDBeginDate,&#xA;&#x9;&#x9;&#x9;CONVERT(DATE,CONVERT(CHAR(8),(NULLIF(DOD.EIDEndDate,0)))) AS EIDEndDate,&#xA;&#x9;&#x9;&#x9;DOD.ServiceComponent AS ServiceComponent,&#xA;&#x9;&#x9;&#x9;DOD.EIDServiceComponent AS EIDServiceComponent&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra._DODReturnFile DOD&#xA;&#x9;&#x9;&#x9;INNER JOIN UDW..LN20_EDS LN20&#xA;&#x9;&#x9;&#x9;&#x9;ON DOD.SSN = LN20.LF_EDS&#xA;&#x9;&#x9;&#x9;INNER JOIN UDW..LN10_LON LN10&#xA;&#x9;&#x9;&#x9;&#x9;ON LN20.BF_SSN = LN10.BF_SSN&#xA;&#x9;&#x9;&#x9;&#x9;AND LN20.LN_SEQ = LN10.LN_SEQ&#xA;&#x9;&#x9;&#x9;LEFT JOIN ##LN90X_SCRAUHEAA LN90X&#xA;&#x9;&#x9;&#x9;&#x9;ON LN10.BF_SSN = LN90X.BF_SSN&#xA;&#x9;&#x9;&#x9;&#x9;AND LN10.LN_SEQ = LN90X.LN_SEQ&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;LN10.LC_STA_LON10 = 'R'&#xA;&#x9;&#x9;&#x9;AND DOD.ActiveDutyOnActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;&#x9;&#x9;AND DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;&#x9;&#x9;AND LN20.LC_STA_LON20 = 'A'&#xA;&#x9;&#x9;&#x9;AND ISNULL(LN10.LD_PIF_RPT,GETDATE()) &gt; DATEADD(DAY,-45,CONVERT(DATE,GETDATE())) --exclude paid in full more than 45 days ago&#xA;&#x9;&#x9;&#x9;AND LN90X.BF_SSN IS NULL--exclude claim paid &amp; deconverted to DMCS/other servicer&#xA;&#x9;) ENDR&#xA;&#x9;&#x9;ON BORR.BorrSSN = ENDR.BorrSSN&#xA;&#x9;&#x9;AND BORR.Loan = ENDR.Loan&#xA;) NEWDATA&#xA;LEFT JOIN ULS.scra.DataComparison EXISTING_DATA&#xA;&#x9;ON  NEWDATA.ActiveRow = EXISTING_DATA.ActiveRow&#xA;&#x9;AND NEWDATA.Loan = EXISTING_DATA.Loan&#xA;&#x9;AND ISNULL(NEWDATA.LoanBalance,0) = ISNULL(EXISTING_DATA.LoanBalance,0)&#xA;&#x9;AND NEWDATA.StatusDate = EXISTING_DATA.StatusDate&#xA;&#x9;AND NEWDATA.BorrSSN&#x9;= EXISTING_DATA.BorrSSN&#xA;&#x9;AND ISNULL(NEWDATA.BorrActive,'') = ISNULL(EXISTING_DATA.BorrActive,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndrSSN,'') = ISNULL(EXISTING_DATA.EndrSSN,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndrActive,'') = ISNULL(EXISTING_DATA.EndrActive,'')&#xA;&#x9;AND ISNULL(NEWDATA.BeginBrwr,'') = ISNULL(EXISTING_DATA.BeginBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.EIDB,'')&#x9;= ISNULL(EXISTING_DATA.EIDB,'')&#xA;&#x9;AND ISNULL(NEWDATA.BeginEndr,'') = ISNULL(EXISTING_DATA.BeginEndr,'')&#xA;&#x9;AND ISNULL(NEWDATA.EIDE,'')&#x9;= ISNULL(EXISTING_DATA.EIDE,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndBrwr,'') = ISNULL(EXISTING_DATA.EndBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndEndr,'') = ISNULL(EXISTING_DATA.EndEndr,'')&#xA;&#x9;AND ISNULL(NEWDATA.BorrIsReservist,'')= ISNULL(EXISTING_DATA.BorrIsReservist,'')&#xA;&#x9;AND ISNULL(NEWDATA.EndrIsReservist,'')= ISNULL(EXISTING_DATA.EndrIsReservist,'')&#xA;&#x9;AND CAST(NEWDATA.CreatedAt AS DATE) = CAST(EXISTING_DATA.CreatedAt AS DATE)&#xA;&#x9;AND NEWDATA.ServiceComponent = EXISTING_DATA.ServiceComponent&#xA;&#x9;AND NEWDATA.EIDServiceComponent = EXISTING_DATA.EIDServiceComponent&#xA;&#x9;AND NEWDATA.EndorserServiceComponent = EXISTING_DATA.EndorserServiceComponent&#xA;&#x9;AND NEWDATA.EndorserEIDServiceComponent = EXISTING_DATA.EndorserEIDServiceComponent&#xA;&#x9;AND ISNULL(NEWDATA.ActiveBeginBrwr,'') = ISNULL(EXISTING_DATA.ActiveBeginBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.ActiveEndBrwr,'') = ISNULL(EXISTING_DATA.ActiveEndBrwr,'')&#xA;&#x9;AND ISNULL(NEWDATA.ActiveBeginEndr,'') = ISNULL(EXISTING_DATA.ActiveBeginEndr,'')&#xA;&#x9;AND ISNULL(NEWDATA.ActiveEndEndr,'') = ISNULL(EXISTING_DATA.ActiveEndEndr,'')&#xA;WHERE&#xA;&#x9;EXISTING_DATA.BorrSSN IS NULL&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into EmailProcessing"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{04DB7385-09A0-4769-850B-F3C033EF43C5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into EmailProcessing"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="DECLARE @EmailCampaignId INT = (SELECT EmailCampaignId FROM ULS.emailbatch.EmailCampaigns WHERE SourceFile = 'SCRA_UHEAA*');&#xA;&#xA;INSERT INTO ULS.emailbatch.EmailProcessing&#xA;(&#xA;&#x9;EmailCampaignId,&#xA;&#x9;AccountNumber,&#xA;&#x9;ActualFile,&#xA;&#x9;EmailData,&#xA;&#x9;ArcNeeded,&#xA;&#x9;ProcessingAttempts,&#xA;&#x9;AddedBy,&#xA;&#x9;AddedAt&#xA;)&#xA;SELECT&#xA;&#x9;NEWDATA.EmailCampaignId,&#xA;&#x9;NEWDATA.AccountNumber,&#xA;&#x9;NEWDATA.ActualFile,&#xA;&#x9;NEWDATA.EmailData,&#xA;&#x9;NEWDATA.ArcNeeded,&#xA;&#x9;NEWDATA.ProcessingAttempts,&#xA;&#x9;NEWDATA.AddedBy,&#xA;&#x9;NEWDATA.AddedAt&#xA;FROM&#xA;(&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;@EmailCampaignId AS EmailCampaignId,&#xA;&#x9;&#x9;PD10.DF_SPE_ACC_ID AS AccountNumber,&#xA;&#x9;&#x9;'UTLWS75' AS ActualFile,&#xA;&#x9;&#x9;PD10.DF_SPE_ACC_ID + ',' + LTRIM(RTRIM(PD10.DM_PRS_1)) + ' ' + CONCAT(RTRIM(PD10.DM_PRS_LST), RTRIM(CONCAT(' ', RTRIM(PD10.DM_PRS_LST_SFX)))) + ',' + COALESCE(EML.EmailAddress,'sshelp@utahsbr.edu') AS EmailData,&#xA;&#x9;&#x9;1 AS ArcNeeded,&#xA;&#x9;&#x9;0 AS ProcessingAttempts,&#xA;&#x9;&#x9;SUSER_SNAME() AS AddedBy,&#xA;&#x9;&#x9;GETDATE() AS AddedAt&#xA;&#x9;FROM&#xA;&#x9;&#x9;##SCRA_INPUT_UHEAA SI&#xA;&#x9;&#x9;INNER JOIN UDW..PD10_PRS_NME PD10&#xA;&#x9;&#x9;&#x9;ON PD10.DF_PRS_ID = SI.BorrSSN&#xA;&#x9;&#x9;LEFT JOIN UDW..PH05_CNC_EML PH05 &#xA;&#x9;&#x9;&#x9;ON PH05.DF_SPE_ID = PD10.DF_SPE_ACC_ID&#xA;&#x9;&#x9;&#x9;AND PH05.DI_VLD_CNC_EML_ADR = 'Y' -- valid email&#xA;&#x9;&#x9;LEFT JOIN UDW.calc.EmailAddress EML&#xA;&#x9;&#x9;&#x9;ON EML.DF_PRS_ID = PD10.DF_PRS_ID&#xA;) NEWDATA&#xA;LEFT JOIN ULS.emailbatch.EmailProcessing EXISTING_DATA&#xA;&#x9;ON NEWDATA.EmailCampaignId = EXISTING_DATA.EmailCampaignId&#xA;&#x9;AND NEWDATA.AccountNumber = EXISTING_DATA.AccountNumber&#xA;&#x9;AND NEWDATA.ActualFile = COALESCE(EXISTING_DATA.ActualFile,'')--nullable&#xA;&#x9;AND NEWDATA.EmailData = EXISTING_DATA.EmailData&#xA;&#x9;AND NEWDATA.ArcNeeded = EXISTING_DATA.ArcNeeded&#xA;&#x9;AND NEWDATA.ProcessingAttempts = EXISTING_DATA.ProcessingAttempts&#xA;&#x9;AND NEWDATA.AddedBy = EXISTING_DATA.AddedBy&#xA;&#x9;AND CAST(NEWDATA.AddedAt AS DATE) = CAST(EXISTING_DATA.AddedAt AS DATE)&#xA;WHERE&#xA;&#x9;EXISTING_DATA.AccountNumber IS NULL&#xA;;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into PrintProcessing"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FD9A4B21-1F08-4F60-B86E-D0A18D8C8025}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into PrintProcessing"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="DECLARE @ScriptDataId INT = (SELECT ScriptDataId FROM ULS.[print].ScriptData WHERE ScriptId = 'UTLWS75');&#xA;&#xA;INSERT INTO ULS.[print].PrintProcessing&#xA;(&#xA;&#x9;AccountNumber,&#xA;&#x9;EmailAddress,&#xA;&#x9;ScriptDataId,&#xA;&#x9;SourceFile,&#xA;&#x9;LetterData,&#xA;&#x9;CostCenter,&#xA;&#x9;InValidAddress,&#xA;&#x9;DoNotProcessEcorr,&#xA;&#x9;OnEcorr,&#xA;&#x9;ArcNeeded,&#xA;&#x9;ImagingNeeded,&#xA;&#x9;AddedBy,&#xA;&#x9;AddedAt&#xA;)&#xA;SELECT&#xA;&#x9;NEWDATA.AccountNumber,&#xA;&#x9;NEWDATA.EmailAddress,&#xA;&#x9;NEWDATA.ScriptDataId,&#xA;&#x9;NEWDATA.SourceFile,&#xA;&#x9;NEWDATA.LetterData,&#xA;&#x9;NEWDATA.CostCenter,&#xA;&#x9;NEWDATA.InValidAddress,&#xA;&#x9;NEWDATA.DoNotProcessEcorr,&#xA;&#x9;NEWDATA.OnEcorr,&#xA;&#x9;NEWDATA.ArcNeeded,&#xA;&#x9;NEWDATA.ImagingNeeded,&#xA;&#x9;NEWDATA.AddedBy,&#xA;&#x9;NEWDATA.AddedAt&#xA;FROM&#xA;(&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;PD10.DF_SPE_ACC_ID AS AccountNumber,&#xA;&#x9;&#x9;COALESCE(EML.EmailAddress,'ECORR@UHEAA.ORG') AS EmailAddress,&#xA;&#x9;&#x9;@ScriptDataId AS ScriptDataId,&#xA;&#x9;&#x9;'UTLWS75' AS SourceFile,&#xA;&#x9;&#x9;'&quot;' + COALESCE(LTRIM(RTRIM(PD10.DF_SPE_ACC_ID)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD10.DM_PRS_1)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(CONCAT(RTRIM(PD10.DM_PRS_LST), RTRIM(CONCAT(' ', RTRIM(PD10.DM_PRS_LST_SFX)))),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD30.DX_STR_ADR_1)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD30.DX_STR_ADR_2)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD30.DM_CT)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD30.DC_DOM_ST)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD30.DF_ZIP_CDE)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD30.DM_FGN_CNY)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(PD30.DM_FGN_ST)),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + COALESCE(LTRIM(RTRIM(CentralData.dbo.CreateACSKeyline(SI.BorrSSN, 'B', PD30.DC_ADR))),'')&#xA;&#x9;&#x9;&#x9;+ '&quot;,&quot;' + 'MA2324&quot;' AS LetterData,&#xA;&#x9;&#x9;'MA2324' AS CostCenter,&#xA;&#x9;&#x9;0 AS InValidAddress,&#xA;&#x9;&#x9;SD.DoNotProcessEcorr,&#xA;&#x9;&#x9;IIF(PH05.DI_CNC_ELT_OPI = 'Y', 1, 0) AS OnEcorr, --Contact person's e-letter opt in indicator&#xA;&#x9;&#x9;IIF(SDM.ArcId IS NULL, 0, 1) AS ArcNeeded,&#xA;&#x9;&#x9;IIF(SD.DocIdId IS NULL, 0, 1) AS ImagingNeeded,&#xA;&#x9;&#x9;SYSTEM_USER AS AddedBy,&#xA;&#x9;&#x9;GETDATE() AS AddedAt&#xA;&#x9;FROM&#xA;&#x9;&#x9;##SCRA_INPUT_UHEAA SI&#xA;&#x9;&#x9;INNER JOIN UDW..PD10_PRS_NME PD10&#xA;&#x9;&#x9;&#x9;ON PD10.DF_PRS_ID = SI.BorrSSN&#xA;&#x9;&#x9;INNER JOIN UDW..PD30_PRS_ADR PD30&#xA;&#x9;&#x9;&#x9;ON PD10.DF_PRS_ID = PD30.DF_PRS_ID&#xA;&#x9;&#x9;&#x9;AND PD30.DI_VLD_ADR = 'Y'&#xA;&#x9;&#x9;&#x9;AND PD30.DC_ADR IN ('L','T','A','B')&#xA;&#x9;&#x9;INNER JOIN ULS.[print].ScriptData SD&#xA;&#x9;&#x9;&#x9;ON SD.ScriptId = 'UTLWS75'&#xA;&#x9;&#x9;&#x9;AND SD.ScriptDataId = @ScriptDataId&#xA;&#x9;&#x9;INNER JOIN ULS.[print].ArcScriptDataMapping SDM&#xA;&#x9;&#x9;&#x9;ON SDM.ScriptDataId = SD.ScriptDataId&#xA;&#x9;&#x9;LEFT JOIN UDW..PH05_CNC_EML PH05 &#xA;&#x9;&#x9;&#x9;ON PH05.DF_SPE_ID = PD10.DF_SPE_ACC_ID&#xA;&#x9;&#x9;&#x9;AND PH05.DI_VLD_CNC_EML_ADR = 'Y' -- valid email&#xA;&#x9;&#x9;LEFT JOIN UDW.calc.EmailAddress EML&#xA;&#x9;&#x9;&#x9;ON EML.DF_PRS_ID = PD10.DF_PRS_ID&#xA;) NEWDATA&#xA;LEFT JOIN ULS.[print].PrintProcessing EXISTING_DATA&#xA;&#x9;ON NEWDATA.AccountNumber = EXISTING_DATA.AccountNumber&#xA;&#x9;AND NEWDATA.EmailAddress = EXISTING_DATA.EmailAddress&#xA;&#x9;AND NEWDATA.ScriptDataId = EXISTING_DATA.ScriptDataId&#xA;&#x9;AND NEWDATA.SourceFile = EXISTING_DATA.SourceFile&#xA;&#x9;AND NEWDATA.LetterData = EXISTING_DATA.LetterData&#xA;&#x9;AND NEWDATA.CostCenter = EXISTING_DATA.CostCenter&#xA;&#x9;AND NEWDATA.InValidAddress = EXISTING_DATA.InValidAddress&#xA;&#x9;AND NEWDATA.DoNotProcessEcorr = EXISTING_DATA.DoNotProcessEcorr&#xA;&#x9;AND NEWDATA.OnEcorr = EXISTING_DATA.OnEcorr&#xA;&#x9;AND NEWDATA.ArcNeeded = EXISTING_DATA.ArcNeeded&#xA;&#x9;AND NEWDATA.ImagingNeeded = EXISTING_DATA.ImagingNeeded&#xA;&#x9;AND NEWDATA.AddedBy = EXISTING_DATA.AddedBy&#xA;&#x9;AND CAST(NEWDATA.AddedAt AS DATE) = CAST(EXISTING_DATA.AddedAt AS DATE)&#xA;WHERE&#xA;&#x9;EXISTING_DATA.AccountNumber IS NULL&#xA;;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ScriptProcessing"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5DE01202-86E9-418A-9392-0C03879806B5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - insert into ScriptProcessing"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="&#xA;;WITH MIN_DATES AS --DATA CHUNK 1 used in multiple places - borrower level&#xA;(--for TXCXBegin field - borrower level&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;BRWRS.BorrSSN,&#xA;&#x9;&#x9;BRWRS.Loan,&#xA;&#x9;&#x9;BRWRS.EndrSSN,&#xA;&#x9;&#x9;MIN_BRWR.BeginBrwr,&#xA;&#x9;&#x9;MIN_ENDR.BeginEndr,&#xA;&#x9;&#x9;MIN_BRWR.EIDB,&#xA;&#x9;&#x9;MIN_ENDR.EIDE&#xA;&#x9;FROM&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(EndrSSN,'') AS EndrSSN&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.DataComparison&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;ActiveRow = 1&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;OR EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;) BRWRS&#xA;&#x9;LEFT JOIN&#xA;&#x9;(--gets earliest borrower date&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;MinRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MinRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MinRow.EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;MinRow.EIDB,&#xA;&#x9;&#x9;&#x9;ISNULL(MinActive.BeginBrwr,MIN(MinRow.BeginBrwr)) AS BeginBrwr&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.DataComparison MinRow&#xA;&#x9;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDB,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;MIN(BeginBrwr) AS BeginBrwr&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ULS.scra.DataComparison &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ActiveRow = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND LoanBalance &gt; 0.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,''),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDB&#xA;&#x9;&#x9;&#x9;) MinActive&#xA;&#x9;&#x9;&#x9;&#x9;ON MinRow.BorrSSN = MinActive.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MinRow.Loan = MinActive.Loan&#xA;&#x9;&#x9;&#x9;&#x9;AND ISNULL(MinRow.EndrSSN,'') = MinActive.EndrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MinRow.EIDB = MinActive.EIDB&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;MinRow.ActiveRow = 1&#xA;&#x9;&#x9;&#x9;AND MinRow.BorrActive IS NOT NULL&#xA;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;MinRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MinRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MinRow.EndrSSN,''),&#xA;&#x9;&#x9;&#x9;MinRow.EIDB,&#xA;&#x9;&#x9;&#x9;MinActive.BeginBrwr&#xA;&#x9;) MIN_BRWR&#xA;&#x9;&#x9;ON MIN_BRWR.BorrSSN = BRWRS.BorrSSN&#xA;&#x9;&#x9;AND MIN_BRWR.Loan = BRWRS.Loan&#xA;&#x9;&#x9;AND MIN_BRWR.EndrSSN = BRWRS.EndrSSN&#xA;&#x9;LEFT JOIN --puts borrowers and any endorsers on the same line&#x9;&#xA;&#x9;(--gets earliest endorser date&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;MinRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MinRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MinRow.EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;MinRow.EIDE,&#xA;&#x9;&#x9;&#x9;ISNULL(MinActive.BeginEndr,MIN(MinRow.BeginEndr)) AS BeginEndr&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.DataComparison MinRow&#xA;&#x9;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;MIN(BeginEndr) AS BeginEndr&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ULS.scra.DataComparison &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ActiveRow = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND LoanBalance &gt; 0.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,''),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDE&#xA;&#x9;&#x9;&#x9;) MinActive&#xA;&#x9;&#x9;&#x9;&#x9;ON MinRow.BorrSSN = MinActive.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MinRow.Loan = MinActive.Loan&#xA;&#x9;&#x9;&#x9;&#x9;AND ISNULL(MinRow.EndrSSN,'') = MinActive.EndrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MinRow.EIDE = MinActive.EIDE&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;MinRow.ActiveRow = 1&#xA;&#x9;&#x9;&#x9;AND MinRow.EndrActive IS NOT NULL&#xA;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;MinRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MinRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MinRow.EndrSSN,''),&#xA;&#x9;&#x9;&#x9;MinRow.EIDE,&#xA;&#x9;&#x9;&#x9;MinActive.BeginEndr&#xA;&#x9;) MIN_ENDR&#xA;&#x9;&#x9;ON MIN_ENDR.BorrSSN = BRWRS.BorrSSN&#xA;&#x9;&#x9;AND MIN_ENDR.Loan = BRWRS.Loan&#xA;&#x9;&#x9;AND MIN_ENDR.EndrSSN = BRWRS.EndrSSN&#xA;) --MIN_DATES&#xA;,MAX_DATES AS --DATA CHUNK 2 used in multiple places - borrower level&#xA;(--for TXCXEnd field - borrower level&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;BRWRS.BorrSSN,&#xA;&#x9;&#x9;BRWRS.Loan,&#xA;&#x9;&#x9;BRWRS.EndrSSN,&#xA;&#x9;&#x9;MAX_BRWR.EndBrwr,&#xA;&#x9;&#x9;MAX_ENDR.EndEndr,&#xA;&#x9;&#x9;MAX_BRWR.EIDB,&#xA;&#x9;&#x9;MAX_ENDR.EIDE&#xA;&#x9;FROM&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(EndrSSN,'') AS EndrSSN&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.DataComparison&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;ActiveRow = 1&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;OR EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;) BRWRS&#xA;&#x9;LEFT JOIN&#xA;&#x9;(--gets earliest borrower date&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;MAXRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MAXRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MAXRow.EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;MAXRow.EIDB,&#xA;&#x9;&#x9;&#x9;ISNULL(MAXActive.EndBrwr,MAX(MAXRow.EndBrwr)) AS EndBrwr&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.DataComparison MAXRow&#xA;&#x9;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDB,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;MAX(EndBrwr) AS EndBrwr&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ULS.scra.DataComparison &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ActiveRow = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND LoanBalance &gt; 0.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,''),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDB&#xA;&#x9;&#x9;&#x9;) MAXActive&#xA;&#x9;&#x9;&#x9;&#x9;ON MAXRow.BorrSSN = MAXActive.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MAXRow.Loan = MAXActive.Loan&#xA;&#x9;&#x9;&#x9;&#x9;AND ISNULL(MAXRow.EndrSSN,'') = MAXActive.EndrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MAXRow.EIDB = MAXActive.EIDB&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;MAXRow.ActiveRow = 1&#xA;&#x9;&#x9;&#x9;AND MAXRow.BorrActive IS NOT NULL&#xA;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;MAXRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MAXRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MAXRow.EndrSSN,''),&#xA;&#x9;&#x9;&#x9;MAXRow.EIDB,&#xA;&#x9;&#x9;&#x9;MAXActive.EndBrwr&#xA;&#x9;) MAX_BRWR&#xA;&#x9;&#x9;ON MAX_BRWR.BorrSSN = BRWRS.BorrSSN&#xA;&#x9;&#x9;AND MAX_BRWR.Loan = BRWRS.Loan&#xA;&#x9;&#x9;AND MAX_BRWR.EndrSSN = BRWRS.EndrSSN&#xA;&#x9;LEFT JOIN --puts borrowers and any endorsers on the same line&#x9;&#xA;&#x9;(--gets earliest endorser date&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;MAXRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MAXRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MAXRow.EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;MAXRow.EIDE,&#xA;&#x9;&#x9;&#x9;ISNULL(MAXActive.EndEndr,MAX(MAXRow.EndEndr)) AS EndEndr&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;ULS.scra.DataComparison MAXRow&#xA;&#x9;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,'') AS EndrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;MAX(EndEndr) AS EndEndr&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ULS.scra.DataComparison &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ActiveRow = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND LoanBalance &gt; 0.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BorrSSN,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Loan,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(EndrSSN,''),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EIDE&#xA;&#x9;&#x9;&#x9;) MAXActive&#xA;&#x9;&#x9;&#x9;&#x9;ON MAXRow.BorrSSN = MAXActive.BorrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MAXRow.Loan = MAXActive.Loan&#xA;&#x9;&#x9;&#x9;&#x9;AND ISNULL(MAXRow.EndrSSN,'') = MAXActive.EndrSSN&#xA;&#x9;&#x9;&#x9;&#x9;AND MAXRow.EIDE = MAXActive.EIDE&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;MAXRow.ActiveRow = 1&#xA;&#x9;&#x9;&#x9;AND MAXRow.EndrActive IS NOT NULL&#xA;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;MAXRow.BorrSSN,&#xA;&#x9;&#x9;&#x9;MAXRow.Loan,&#xA;&#x9;&#x9;&#x9;ISNULL(MAXRow.EndrSSN,''),&#xA;&#x9;&#x9;&#x9;MAXRow.EIDE,&#xA;&#x9;&#x9;&#x9;MAXActive.EndEndr&#xA;&#x9;) MAX_ENDR&#xA;&#x9;&#x9;ON MAX_ENDR.BorrSSN = BRWRS.BorrSSN&#xA;&#x9;&#x9;AND MAX_ENDR.Loan = BRWRS.Loan&#xA;&#x9;&#x9;AND MAX_ENDR.EndrSSN = BRWRS.EndrSSN&#xA;),&#xA;ASSIGN_DATES AS&#xA;(&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;DC.BorrSSN,&#xA;&#x9;&#x9;DC.DataComparisonId,&#xA;&#x9;&#x9;DC.StatusDate,&#xA;&#x9;&#x9;LN72.LN_SEQ AS Loan,&#xA;&#x9;&#x9;SUM(DC.LoanBalance) OVER(PARTITION BY DC.BorrSSN) AS sum_LoanBalance,&#xA;&#x9;&#x9;LN72.LD_ITR_EFF_BEG AS LN72Begin,&#xA;&#x9;&#x9;LN72.LD_ITR_EFF_END AS LN72End,&#xA;&#x9;&#x9;LN72.LR_INT_RDC_PGM_ORG AS LN72RegRate,&#xA;&#x9;&#x9;IIF(LN72.LC_INT_RDC_PGM = 'M', 1, 0) AS LN72SCRA,&#xA;&#x9;&#x9;LN10.LD_LON_EFF_ADD AS LN10LnAdd,&#xA;&#x9;&#x9;LN10.LD_LON_1_DSB AS LN10Disb,&#xA;&#x9;&#x9;LN10.LA_CUR_PRI AS LN10CurPri,&#xA;&#x9;&#x9;LN10.LC_STA_LON10 AS LN10Sta,&#xA;&#x9;&#x9;RTRIM(LN10.LC_SST_LON10) AS LN10Sub,&#xA;&#x9;&#x9;DW01.WC_DW_LON_STA AS DW01Sta,&#xA;&#x9;&#x9;CASE WHEN DC.BeginEndr IS NULL THEN DC.BeginBrwr&#xA;&#x9;&#x9;&#x9; WHEN DC.EndrActive = 1 AND ISNULL(DC.BorrActive,0) = 0 AND DC.EndrSSN = LN20.LF_EDS THEN DC.BeginEndr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive = 1 AND ISNULL(DC.EndrActive,0) = 0 THEN DC.BeginBrwr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive = 0 AND DC.EndrActive IS NULL THEN DC.BeginBrwr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive IS NULL AND DC.EndrActive = 0 AND DC.EndrSSN = LN20.LF_EDS THEN DC.BeginEndr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive = 0 AND DC.EndrActive = 0 AND DC.EndrSSN = LN20.LF_EDS THEN &#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN ISNULL(DC.BeginBrwr,'9999-12-31') &lt;= ISNULL(DC.BeginEndr,'9999-12-31') THEN DC.BeginBrwr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ISNULL(DC.BeginBrwr,'9999-12-31') &gt; ISNULL(DC.BeginEndr,'9999-12-31') THEN DC.BeginEndr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE NULL&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9; WHEN DC.EndrActive = 1 AND DC.BorrActive = 1 AND DC.EndrSSN = LN20.LF_EDS THEN&#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN ISNULL(DC.BeginBrwr,'9999-12-31') &lt;= ISNULL(DC.BeginEndr,'9999-12-31') THEN DC.BeginBrwr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ISNULL(DC.BeginBrwr,'9999-12-31') &gt; ISNULL(DC.BeginEndr,'9999-12-31') THEN DC.BeginEndr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE NULL&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9; ELSE NULL&#xA;&#x9;&#x9;END AS DODBegin, --loan level&#xA;&#x9;&#x9;CASE WHEN DC.EndEndr IS NULL THEN DC.EndBrwr&#xA;&#x9;&#x9;&#x9; WHEN DC.EndrActive = 1 AND ISNULL(DC.BorrActive,0) = 0 AND DC.EndrSSN = LN20.LF_EDS THEN DC.EndEndr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive = 1 AND ISNULL(DC.EndrActive,0) = 0 THEN DC.EndBrwr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive = 0 AND DC.EndrActive IS NULL THEN DC.EndBrwr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive IS NULL AND DC.EndrActive = 0 AND DC.EndrSSN = LN20.LF_EDS THEN DC.EndEndr&#xA;&#x9;&#x9;&#x9; WHEN DC.BorrActive = 0 AND DC.EndrActive = 0 AND DC.EndrSSN = LN20.LF_EDS THEN &#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN ISNULL(DC.EndBrwr,'1900-01-01') &lt; ISNULL(DC.EndEndr,'1900-01-01') THEN DC.EndEndr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ISNULL(DC.EndBrwr,'1900-01-01') &gt;= ISNULL(DC.EndEndr,'1900-01-01') THEN DC.EndBrwr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE NULL&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9; WHEN DC.EndrActive = 1 AND DC.BorrActive = 1 AND DC.EndrSSN = LN20.LF_EDS THEN &#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN ISNULL(DC.EndBrwr,'1900-01-01') &lt; ISNULL(DC.EndEndr,'1900-01-01') THEN DC.EndEndr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ISNULL(DC.EndBrwr,'1900-01-01') &gt;= ISNULL(DC.EndEndr,'1900-01-01') THEN DC.EndBrwr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE NULL&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9; ELSE NULL&#xA;&#x9;&#x9;END AS DODEnd, --loan level&#xA;&#x9;&#x9;NULL AS TXCXBegin, --borrower level&#xA;&#x9;&#x9;NULL AS TXCXEnd&#xA;&#x9;FROM&#xA;&#x9;&#x9;ULS.scra.DataComparison DC&#xA;&#x9;&#x9;INNER JOIN UDW..LN10_LON LN10&#xA;&#x9;&#x9;&#x9;ON DC.BorrSSN = LN10.BF_SSN&#xA;&#x9;&#x9;&#x9;AND DC.Loan = LN10.LN_SEQ&#xA;&#x9;&#x9;INNER JOIN&#xA;&#x9;&#x9;(&#x9;--Adding Active Interest Rate&#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;LN72.BF_SSN, &#xA;&#x9;&#x9;&#x9;&#x9;LN72.LN_SEQ,&#xA;&#x9;&#x9;&#x9;&#x9;LN72.LD_ITR_EFF_BEG,&#xA;&#x9;&#x9;&#x9;&#x9;LN72.LD_ITR_EFF_END,&#xA;&#x9;&#x9;&#x9;&#x9;LN72.LC_INT_RDC_PGM,&#xA;&#x9;&#x9;&#x9;&#x9;LN72.LR_INT_RDC_PGM_ORG,&#xA;&#x9;&#x9;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY LN72.BF_SSN, LN72.LN_SEQ ORDER BY LD_STA_LON72 DESC) AS SEQ&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;UDW..LN72_INT_RTE_HST LN72&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN UDW..PD10_PRS_NME PD10 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON PD10.DF_PRS_ID = LN72.BF_SSN&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN ULS.scra.DataComparison DC&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON DC.BorrSSN = PD10.DF_PRS_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND DC.StatusDate BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND DC.ActiveRow = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DC.BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;LN72.LC_STA_LON72 = 'A'&#xA;&#x9;&#x9;) LN72 &#xA;&#x9;&#x9;&#x9;ON LN10.BF_SSN = LN72.BF_SSN&#xA;&#x9;&#x9;&#x9;AND LN10.LN_SEQ = LN72.LN_SEQ&#xA;&#x9;&#x9;&#x9;AND LN72.SEQ = 1&#xA;&#x9;&#x9;INNER JOIN UDW..DW01_DW_CLC_CLU DW01&#xA;&#x9;&#x9;&#x9;ON LN10.BF_SSN = DW01.BF_SSN&#xA;&#x9;&#x9;&#x9;AND LN10.LN_SEQ = DW01.LN_SEQ&#xA;&#x9;&#x9;LEFT JOIN UDW..LN20_EDS LN20&#xA;&#x9;&#x9;&#x9;ON LN10.BF_SSN = LN20.BF_SSN&#xA;&#x9;&#x9;&#x9;AND LN10.LN_SEQ = LN20.LN_SEQ&#xA;&#x9;&#x9;&#x9;AND LN20.LC_STA_LON20 = 'A'&#xA;&#x9;&#x9;LEFT JOIN MIN_DATES MN --DATA CHUNK 1 borrower level&#xA;&#x9;&#x9;&#x9;ON DC.BorrSSN = MN.BorrSSN&#xA;&#x9;&#x9;&#x9;AND DC.Loan = MN.Loan&#xA;&#x9;&#x9;&#x9;AND ISNULL(DC.EndrSSN,'') = MN.EndrSSN&#xA;&#x9;&#x9;LEFT JOIN MAX_DATES MX --DATA CHUNK 2 borrower level&#xA;&#x9;&#x9;&#x9;ON DC.BorrSSN = MX.BorrSSN&#xA;&#x9;&#x9;&#x9;AND DC.Loan = MX.Loan&#xA;&#x9;&#x9;&#x9;AND ISNULL(DC.EndrSSN,'') = MX.EndrSSN&#xA;&#x9;WHERE&#xA;&#x9;&#x9;DC.ActiveRow = 1&#xA;&#x9;&#x9;AND &#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;DC.BorrActive IS NOT NULL&#xA;&#x9;&#x9;&#x9;OR DC.EndrActive IS NOT NULL&#xA;&#x9;&#x9;)&#xA;)&#xA;INSERT INTO ULS.scra.ScriptProcessing&#xA;(&#xA;&#x9;BorrSSN,&#xA;&#x9;DataComparisonId,&#xA;&#x9;Loan,&#xA;&#x9;LN72Begin,&#xA;&#x9;LN72End,&#xA;&#x9;LN72RegRate,&#xA;&#x9;LN72SCRA,&#xA;&#x9;LN10LnAdd,&#xA;&#x9;LN10Disb,&#xA;&#x9;LN10CurPri,&#xA;&#x9;LN10Sta,&#xA;&#x9;LN10Sub,&#xA;&#x9;DW01Sta,&#xA;&#x9;DODBegin,&#xA;&#x9;DODEnd,&#xA;&#x9;TXCXBegin,&#xA;&#x9;TXCXEnd,&#xA;&#x9;TXCXType,&#xA;&#x9;BenefitSourceId,&#xA;&#x9;ScriptAction,&#xA;&#x9;TS06Indicator,&#xA;&#x9;TS06Updated,&#xA;&#x9;TXCXIndicator,&#xA;&#x9;TXCXUpdated,&#xA;&#x9;TS0NIndicator,&#xA;&#x9;TS0NUpdated,&#xA;&#x9;AAPUpdated,&#xA;&#x9;CreatedAt,&#xA;&#x9;CreatedBy&#xA;)&#xA;SELECT&#xA;&#x9;NEWDATA.BorrSSN,&#xA;&#x9;NEWDATA.DataComparisonId,&#xA;&#x9;NEWDATA.Loan,&#xA;&#x9;NEWDATA.LN72Begin,&#xA;&#x9;NEWDATA.LN72End,&#xA;&#x9;NEWDATA.LN72RegRate,&#xA;&#x9;NEWDATA.LN72SCRA,&#xA;&#x9;NEWDATA.LN10LnAdd,&#xA;&#x9;NEWDATA.LN10Disb,&#xA;&#x9;NEWDATA.LN10CurPri,&#xA;&#x9;NEWDATA.LN10Sta,&#xA;&#x9;NEWDATA.LN10Sub,&#xA;&#x9;NEWDATA.DW01Sta,&#xA;&#x9;NEWDATA.DODBegin,&#xA;&#x9;NEWDATA.DODEnd,&#xA;&#x9;NEWDATA.TXCXBegin,&#xA;&#x9;NEWDATA.TXCXEnd,&#xA;&#x9;NEWDATA.TXCXType,&#xA;&#x9;NEWDATA.BenefitSourceId,&#xA;&#x9;NEWDATA.ScriptAction,&#xA;&#x9;NULL AS TS06Indicator,&#xA;&#x9;NULL AS TS06Updated,&#xA;&#x9;NULL AS TXCXIndicator,&#xA;&#x9;NULL AS TXCXUpdated,&#xA;&#x9;NULL AS TS0NIndicator,&#xA;&#x9;NULL AS TS0NUpdated,&#xA;&#x9;NULL AS AAPUpdated,&#xA;&#x9;NEWDATA.CreatedAt,&#xA;&#x9;NEWDATA.CreatedBy&#xA;FROM&#xA;(&#xA;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;ASSIGN_DATES.BorrSSN,&#xA;&#x9;&#x9;ASSIGN_DATES.DataComparisonId,&#xA;&#x9;&#x9;ASSIGN_DATES.StatusDate,&#xA;&#x9;&#x9;ASSIGN_DATES.Loan,&#xA;&#x9;&#x9;ASSIGN_DATES.LN72Begin,&#xA;&#x9;&#x9;ASSIGN_DATES.LN72End,&#xA;&#x9;&#x9;ASSIGN_DATES.LN72RegRate,&#xA;&#x9;&#x9;ASSIGN_DATES.LN72SCRA,&#xA;&#x9;&#x9;ASSIGN_DATES.LN10LnAdd,&#xA;&#x9;&#x9;ASSIGN_DATES.LN10Disb,&#xA;&#x9;&#x9;ASSIGN_DATES.LN10CurPri,&#xA;&#x9;&#x9;ASSIGN_DATES.LN10Sta,&#xA;&#x9;&#x9;ASSIGN_DATES.LN10Sub,&#xA;&#x9;&#x9;ASSIGN_DATES.DW01Sta,&#xA;&#x9;&#x9;ASSIGN_DATES.DODBegin, --loan level&#xA;&#x9;&#x9;ASSIGN_DATES.DODEnd, --loan level&#xA;&#x9;&#x9;ASSIGN_DATES.TXCXBegin, --borrower level&#xA;&#x9;&#x9;ASSIGN_DATES.TXCXEnd, --borrower level&#xA;&#x9;&#x9;NULL AS TXCXType,&#xA;&#x9;&#x9;CASE WHEN ASSIGN_DATES.DODBegin = MN.BeginBrwr AND ASSIGN_DATES.DODEnd = MX.EndBrwr THEN 1&#xA;&#x9;&#x9;&#x9; WHEN ASSIGN_DATES.DODBegin = MN.BeginEndr AND ASSIGN_DATES.DODEnd = MX.EndEndr THEN 2&#xA;&#x9;&#x9;&#x9; ELSE 3&#xA;&#x9;&#x9;END AS BenefitSourceId,&#xA;&#x9;&#x9;CASE WHEN &#xA;&#x9;&#x9;&#x9;&#x9;ASSIGN_DATES.DW01Sta = 12&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ASSIGN_DATES.LN10Sta = 'D' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN10Sub IN (1,2,3,4)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;OR ISNULL(ASSIGN_DATES.LN10Disb,'') &gt; ISNULL(ASSIGN_DATES.DODBegin,'')&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ASSIGN_DATES.LN72Begin = ASSIGN_DATES.DODBegin&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72End = ASSIGN_DATES.DODEnd&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ASSIGN_DATES.LN72SCRA = 1 --&quot;M&quot; value from above CTE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR ASSIGN_DATES.LN72RegRate &lt;= 6.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(ASSIGN_DATES.LN72End,'') &gt; ISNULL(ASSIGN_DATES.DODEnd,'')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72SCRA = 1 --&quot;M&quot; value from above CTE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN10CurPri &lt;= 0.00&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ASSIGN_DATES.LN72SCRA &lt;&gt; 1 --&quot;M&quot; value from above CTE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72RegRate &lt;= 6.00&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;OR ISNULL(ASSIGN_DATES.DODEnd,'') &lt; ISNULL(ASSIGN_DATES.LN10Disb,'')&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ASSIGN_DATES.LN72RegRate = 6.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72SCRA = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(ASSIGN_DATES.DODEnd,'') &lt;&gt; ISNULL(ASSIGN_DATES.LN72End,'')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(ASSIGN_DATES.LN72End,'') &gt;= DATEADD(DAY,31,ASSIGN_DATES.StatusDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.DODEnd = CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72End &lt;&gt; CONVERT(DATE,'99990101')&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;THEN 'B'&#xA;&#x9;&#x9;&#x9; WHEN &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(ASSIGN_DATES.LN72End,'') &gt; ISNULL(ASSIGN_DATES.DODEnd,'')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.DODEnd &lt;&gt; CONVERT(DATE,'20991231')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72End &lt;&gt; CONVERT(DATE,'99990101')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72SCRA = 1 --&quot;M&quot; value from above CTE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN10CurPri &gt; 0.00&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ASSIGN_DATES.LN72RegRate &lt; 6.00&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ASSIGN_DATES.LN72SCRA = 1 --&quot;M&quot; value from above CTE&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;THEN 'E'&#xA;&#x9;&#x9;&#x9;ELSE 'U'&#xA;&#x9;&#x9;END AS ScriptAction,&#xA;&#x9;&#x9;GETDATE() AS CreatedAt,&#xA;&#x9;&#x9;SYSTEM_USER AS CreatedBy&#xA;&#x9;FROM&#xA;&#x9;&#x9;ASSIGN_DATES&#xA;&#x9;&#x9;LEFT JOIN MIN_DATES MN --DATA CHUNK 1 borrower level&#xA;&#x9;&#x9;&#x9;ON ASSIGN_DATES.BorrSSN = MN.BorrSSN&#xA;&#x9;&#x9;&#x9;AND ASSIGN_DATES.Loan = MN.Loan&#xA;&#x9;&#x9;LEFT JOIN MAX_DATES MX --DATA CHUNK 2 borrower level&#xA;&#x9;&#x9;&#x9;ON ASSIGN_DATES.BorrSSN = MX.BorrSSN&#xA;&#x9;&#x9;&#x9;AND ASSIGN_DATES.Loan = MX.Loan&#xA;) NEWDATA&#xA;&#x9;LEFT JOIN ULS.scra.ScriptProcessing EXISTING_DATA&#xA;&#x9;&#x9;ON NEWDATA.BorrSSN = EXISTING_DATA.BorrSSN&#xA;&#x9;&#x9;AND NEWDATA.DataComparisonId = EXISTING_DATA.DataComparisonId&#xA;&#x9;&#x9;AND NEWDATA.Loan = EXISTING_DATA.Loan&#xA;&#x9;&#x9;AND NEWDATA.LN72Begin = EXISTING_DATA.LN72Begin&#xA;&#x9;&#x9;AND NEWDATA.LN72End = EXISTING_DATA.LN72End&#xA;&#x9;&#x9;AND NEWDATA.LN72RegRate = EXISTING_DATA.LN72RegRate&#xA;&#x9;&#x9;AND NEWDATA.LN72SCRA = EXISTING_DATA.LN72SCRA&#xA;&#x9;&#x9;AND NEWDATA.LN10LnAdd = EXISTING_DATA.LN10LnAdd&#xA;&#x9;&#x9;AND NEWDATA.LN10Disb = EXISTING_DATA.LN10Disb&#xA;&#x9;&#x9;AND NEWDATA.LN10CurPri = EXISTING_DATA.LN10CurPri&#xA;&#x9;&#x9;AND NEWDATA.LN10Sta = EXISTING_DATA.LN10Sta&#xA;&#x9;&#x9;AND COALESCE(NEWDATA.LN10Sub,'') = COALESCE(EXISTING_DATA.LN10Sub,'')--nullable&#xA;&#x9;&#x9;AND NEWDATA.DW01Sta = EXISTING_DATA.DW01Sta&#xA;&#x9;&#x9;AND NEWDATA.DODBegin = EXISTING_DATA.DODBegin&#xA;&#x9;&#x9;AND NEWDATA.DODEnd = EXISTING_DATA.DODEnd&#xA;&#x9;&#x9;AND NEWDATA.BenefitSourceId = EXISTING_DATA.BenefitSourceId&#xA;&#x9;&#x9;AND NEWDATA.ScriptAction = EXISTING_DATA.ScriptAction&#xA;&#x9;&#x9;AND CAST(NEWDATA.CreatedAt AS DATE) = CAST(EXISTING_DATA.CreatedAt AS DATE)&#xA;WHERE&#xA;&#x9;EXISTING_DATA.BorrSSN IS NULL&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - main table inserts\Execute SQL Task - update ActiveRow field in DataComparison if newer record"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{94D355BA-A49E-422E-90BC-39494B641D12}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - update ActiveRow field in DataComparison if newer record"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBCCAA49-7D33-44D5-BBDB-702170D9B3B8}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="&#xA;DECLARE @DOD_BORR TABLE (BorrSSN VARCHAR(9), Loan SMALLINT);&#xA;&#xA;INSERT INTO @DOD_BORR (BorrSSN, Loan)&#xA;SELECT DISTINCT&#xA;&#x9;DOD.SSN AS BorrSSN,&#xA;&#x9;LN10.LN_SEQ AS Loan&#xA;FROM &#xA;&#x9;ULS.scra._DODReturnFile DOD&#xA;&#x9;INNER JOIN UDW..LN10_LON LN10&#xA;&#x9;&#x9;ON DOD.SSN = LN10.BF_SSN&#xA;WHERE&#xA;&#x9;DOD.ActiveDutyOnActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;AND DOD.LeftActiveDutyLE367DaysFromActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;AND DOD.NotifiedOfActiveDutyRecallOnActiveDutyStatusDt &lt;&gt; 'Z'&#xA;&#x9;AND ISNULL(LN10.LD_PIF_RPT,GETDATE()) &gt; DATEADD(DAY,-45,CONVERT(DATE,GETDATE()))--exclude paid in full more than 45 days ago&#xA;;&#xA;&#xA;UPDATE &#xA;&#x9;DC&#xA;SET &#xA;&#x9;ActiveRow = 0 --deactivates borrower records in historical table if there's a new record for that borrower&#xA;FROM &#xA;&#x9;ULS.scra.DataComparison DC&#xA;&#x9;INNER JOIN @DOD_BORR DB&#xA;&#x9;&#x9;ON DC.BorrSSN = DB.BorrSSN&#xA;&#x9;&#x9;AND DC.Loan = DB.Loan&#xA;WHERE&#xA;&#x9;DC.ActiveRow = 1&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{A5EDD591-0114-4959-BBE6-1A31DC41510E}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - deactivate ActiveRow field in DataComparison if PIF and 45 days"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B90BC089-4BD3-44C1-93DD-A6A10BA24E96}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ScriptProcessing" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{A598FC9F-78C1-49F3-9DF7-44914A3011B5}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - get ##LN90X_SCRAUHEAA"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{8B2FCE4C-5458-4407-A7BA-93794D9107FA}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - update ActiveRow field in DataComparison if newer record"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - deactivate ActiveRow field in DataComparison if PIF and 45 days" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{58C666BD-D4AC-46E5-8D56-5C7083326611}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ActiveDutyReporting" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{2DF5C5E5-BC9A-4DCF-BF7C-BAFED6CDDE96}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ActiveDutyReporting"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - get ##InputGroups" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{F6D98808-1902-49AD-B6AB-5C87762CF243}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - get ##InputGroups"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into PrintProcessing" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{C8309EA1-7DC5-4B1F-A3DD-76C0DEFC02B4}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ScriptProcessing"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - get ##InputGroups" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{0245C7C6-EF4F-42D0-BC92-E02A4AD24CA9}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - get ##InputGroups"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into EmailProcessing" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{BD3E6A80-AB59-482D-85B3-3F761701AA35}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ArcAddProcessing" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{85124A09-18EC-48DB-8A66-4D720867C86A}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ArcAddProcessing"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - get ##InputGroups" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{BBEE6A48-092C-49FB-841A-2059A25439F4}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into PrintProcessing"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - drop ##InputGroups" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{62E41DD2-B8AB-460A-8941-46EF26332123}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - insert into EmailProcessing"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - drop ##InputGroups" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{D0A775DA-6933-4F81-878C-4BAEDEF3721F}"
          DTS:From="Package\Sequence Container - main table inserts\Execute SQL Task - get ##LN90X_SCRAUHEAA"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Sequence Container - main table inserts\Execute SQL Task - update ActiveRow field in DataComparison if newer record" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{CDFDBC82-62C4-461C-BB12-154F53239364}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::isFileExists]"
      DTS:From="Package\Script Task - check if all files exist"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task - clear out _tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3C32FFE5-ED80-4790-8C28-FD87C01900F7}"
      DTS:EvalOp="1"
      DTS:Expression="! @[User::isFileExists]"
      DTS:From="Package\Script Task - check if all files exist"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Script Task - File Not Exists message" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{ED047881-0F48-466F-8000-B12D2187245E}"
      DTS:From="Package\Execute SQL Task - clear out _tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{0A9FA71A-3E0F-46E8-812C-189598A76E4A}"
      DTS:From="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Execute SQL Task - populate BorrowerCountComparison" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{EEDE570A-CFCD-414B-9896-54AC4664B893}"
      DTS:From="Package\Execute SQL Task - populate BorrowerCountComparison"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Execute SQL Task - populate SentMissingFromReturn" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{CEBB5913-91F1-4FAE-AD73-678A7B2F3D2C}"
      DTS:From="Package\Sequence Container - main table inserts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Script Task - Process Complete pop-up" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{EA6152F2-1219-4DB7-96E9-1800A24A8861}"
      DTS:From="Package\Execute SQL Task - populate SentMissingFromReturn"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Sequence Container - main table inserts" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="254,42"
          Id="Package\Execute SQL Task - clear out _tables"
          TopLeft="333,153" />
        <NodeLayout
          Size="344,42"
          Id="Package\Execute SQL Task - populate BorrowerCountComparison"
          TopLeft="150,521" />
        <NodeLayout
          Size="329,42"
          Id="Package\Execute SQL Task - populate SentMissingFromReturn"
          TopLeft="154,597" />
        <NodeLayout
          Size="248,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing"
          TopLeft="113.5,10.0000000000001" />
        <NodeLayout
          Size="321,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\File System Task - move file to SCRA Archive folder"
          TopLeft="72,82" />
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables.PrecedenceConstraints[Constraint]"
          TopLeft="235,52.0000000000001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.9999999999999"
              Start="0,0"
              End="0,22.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="499,179"
          Size="499,222"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables"
          TopLeft="84,248" />
        <NodeLayout
          Size="238,42"
          Id="Package\Script Task - check if all files exist"
          TopLeft="178,34" />
        <NodeLayout
          Size="254,42"
          Id="Package\Script Task - File Not Exists message"
          TopLeft="27,151" />
        <NodeLayout
          Size="261,42"
          Id="Package\Script Task - Process Complete pop-up"
          TopLeft="355,752" />
        <NodeLayout
          Size="478,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - deactivate ActiveRow field in DataComparison if PIF and 45 days"
          TopLeft="453,164" />
        <NodeLayout
          Size="275,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - drop ##InputGroups"
          TopLeft="302,644" />
        <NodeLayout
          Size="268,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - get ##InputGroups"
          TopLeft="319,459" />
        <NodeLayout
          Size="302,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - get ##LN90X_SCRAUHEAA"
          TopLeft="278,17" />
        <NodeLayout
          Size="320,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ActiveDutyReporting"
          TopLeft="318,340" />
        <NodeLayout
          Size="310,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ArcAddProcessing"
          TopLeft="639,341" />
        <NodeLayout
          Size="306,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into DataComparison"
          TopLeft="284,246" />
        <NodeLayout
          Size="301,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into EmailProcessing"
          TopLeft="541,550" />
        <NodeLayout
          Size="297,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into PrintProcessing"
          TopLeft="71,554" />
        <NodeLayout
          Size="304,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - insert into ScriptProcessing"
          TopLeft="0,338" />
        <NodeLayout
          Size="449,42"
          Id="Package\Sequence Container - main table inserts\Execute SQL Task - update ActiveRow field in DataComparison if newer record"
          TopLeft="463,95" />
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint]"
          TopLeft="692,206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-205.333333333333,40"
              Start="0,0"
              End="-205.333333333333,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.8751625487646" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.8751625487646"
                    Point2="0,23.8751625487646"
                    Point3="-4,23.8751625487646" />
                  <mssgle:LineSegment
                    End="-201.333333333333,23.8751625487646" />
                  <mssgle:CubicBezierSegment
                    Point1="-201.333333333333,23.8751625487646"
                    Point2="-205.333333333333,23.8751625487646"
                    Point3="-205.333333333333,27.8751625487646" />
                  <mssgle:LineSegment
                    End="-205.333333333333,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 1]"
          TopLeft="387.333333333333,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-235.333333333333,50"
              Start="0,0"
              End="-235.333333333333,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.1560468140442" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.1560468140442"
                    Point2="0,20.1560468140442"
                    Point3="-4,20.1560468140442" />
                  <mssgle:LineSegment
                    End="-231.333333333333,20.1560468140442" />
                  <mssgle:CubicBezierSegment
                    Point1="-231.333333333333,20.1560468140442"
                    Point2="-235.333333333333,20.1560468140442"
                    Point3="-235.333333333333,24.1560468140442" />
                  <mssgle:LineSegment
                    End="-235.333333333333,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 10]"
          TopLeft="383.666666666667,59">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,187"
              Start="0,0"
              End="0,179.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,179.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 11]"
          TopLeft="689.75,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 12]"
          TopLeft="437,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36,52"
              Start="0,0"
              End="36,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22"
                    Point2="0,26"
                    Point3="4,26" />
                  <mssgle:LineSegment
                    End="32,26" />
                  <mssgle:CubicBezierSegment
                    Point1="32,26"
                    Point2="36,26"
                    Point3="36,30" />
                  <mssgle:LineSegment
                    End="36,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 13]"
          TopLeft="473,382">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20,77"
              Start="0,0"
              End="-20,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.5"
                    Point2="0,38.5"
                    Point3="-4,38.5" />
                  <mssgle:LineSegment
                    End="-16,38.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-16,38.5"
                    Point2="-20,38.5"
                    Point3="-20,42.5" />
                  <mssgle:LineSegment
                    End="-20,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 2]"
          TopLeft="409.666666666667,501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-190.166666666667,53"
              Start="0,0"
              End="-190.166666666667,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.3887240356083" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.3887240356083"
                    Point2="0,21.3887240356083"
                    Point3="-4,21.3887240356083" />
                  <mssgle:LineSegment
                    End="-186.166666666667,21.3887240356083" />
                  <mssgle:CubicBezierSegment
                    Point1="-186.166666666667,21.3887240356083"
                    Point2="-190.166666666667,21.3887240356083"
                    Point3="-190.166666666667,25.3887240356083" />
                  <mssgle:LineSegment
                    End="-190.166666666667,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 3]"
          TopLeft="152,380">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="257.666666666667,79"
              Start="0,0"
              End="257.666666666667,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.1186943620178" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.1186943620178"
                    Point2="0,47.1186943620178"
                    Point3="4,47.1186943620178" />
                  <mssgle:LineSegment
                    End="253.666666666667,47.1186943620178" />
                  <mssgle:CubicBezierSegment
                    Point1="253.666666666667,47.1186943620178"
                    Point2="257.666666666667,47.1186943620178"
                    Point3="257.666666666667,51.1186943620178" />
                  <mssgle:LineSegment
                    End="257.666666666667,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 4]"
          TopLeft="496.333333333333,501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="195.166666666667,49"
              Start="0,0"
              End="195.166666666667,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.7744807121662" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.7744807121662"
                    Point2="0,19.7744807121662"
                    Point3="4,19.7744807121662" />
                  <mssgle:LineSegment
                    End="191.166666666667,19.7744807121662" />
                  <mssgle:CubicBezierSegment
                    Point1="191.166666666667,19.7744807121662"
                    Point2="195.166666666667,19.7744807121662"
                    Point3="195.166666666667,23.7744807121662" />
                  <mssgle:LineSegment
                    End="195.166666666667,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 5]"
          TopLeft="486.666666666667,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="307.333333333333,53"
              Start="0,0"
              End="307.333333333333,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.3654096228869" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.3654096228869"
                    Point2="0,21.3654096228869"
                    Point3="4,21.3654096228869" />
                  <mssgle:LineSegment
                    End="303.333333333333,21.3654096228869" />
                  <mssgle:CubicBezierSegment
                    Point1="303.333333333333,21.3654096228869"
                    Point2="307.333333333333,21.3654096228869"
                    Point3="307.333333333333,25.3654096228869" />
                  <mssgle:LineSegment
                    End="307.333333333333,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 6]"
          TopLeft="794,383">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-297.666666666667,76"
              Start="0,0"
              End="-297.666666666667,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.3293768545994" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.3293768545994"
                    Point2="0,45.3293768545994"
                    Point3="-4,45.3293768545994" />
                  <mssgle:LineSegment
                    End="-293.666666666667,45.3293768545994" />
                  <mssgle:CubicBezierSegment
                    Point1="-293.666666666667,45.3293768545994"
                    Point2="-297.666666666667,45.3293768545994"
                    Point3="-297.666666666667,49.3293768545994" />
                  <mssgle:LineSegment
                    End="-297.666666666667,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 7]"
          TopLeft="219.5,596">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="175.5,48"
              Start="0,0"
              End="175.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.6334056399132" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.6334056399132"
                    Point2="0,28.6334056399132"
                    Point3="4,28.6334056399132" />
                  <mssgle:LineSegment
                    End="171.5,28.6334056399132" />
                  <mssgle:CubicBezierSegment
                    Point1="171.5,28.6334056399132"
                    Point2="175.5,28.6334056399132"
                    Point3="175.5,32.6334056399132" />
                  <mssgle:LineSegment
                    End="175.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 8]"
          TopLeft="691.5,592">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-207.5,52"
              Start="0,0"
              End="-207.5,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.0195227765727" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.0195227765727"
                    Point2="0,31.0195227765727"
                    Point3="-4,31.0195227765727" />
                  <mssgle:LineSegment
                    End="-203.5,31.0195227765727" />
                  <mssgle:CubicBezierSegment
                    Point1="-203.5,31.0195227765727"
                    Point2="-207.5,31.0195227765727"
                    Point3="-207.5,35.0195227765727" />
                  <mssgle:LineSegment
                    End="-207.5,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - main table inserts.PrecedenceConstraints[Constraint 9]"
          TopLeft="478,59">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209.5,36"
              Start="0,0"
              End="209.5,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5138339920949" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5138339920949"
                    Point2="0,14.5138339920949"
                    Point3="4,14.5138339920949" />
                  <mssgle:LineSegment
                    End="205.5,14.5138339920949" />
                  <mssgle:CubicBezierSegment
                    Point1="205.5,14.5138339920949"
                    Point2="209.5,14.5138339920949"
                    Point3="209.5,18.5138339920949" />
                  <mssgle:LineSegment
                    End="209.5,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="950,741"
          Size="950,784"
          Id="Package\Sequence Container - main table inserts"
          TopLeft="691,22" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="335.333333333333,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="124.666666666667,77"
              Start="0,0"
              End="124.666666666667,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1085141903172" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.1085141903172"
                    Point2="0,31.1085141903172"
                    Point3="4,31.1085141903172" />
                  <mssgle:LineSegment
                    End="120.666666666667,31.1085141903172" />
                  <mssgle:CubicBezierSegment
                    Point1="120.666666666667,31.1085141903172"
                    Point2="124.666666666667,31.1085141903172"
                    Point3="124.666666666667,35.1085141903172" />
                  <mssgle:LineSegment
                    End="124.666666666667,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="54.3333333333333,36.1085141903172,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="258.666666666667,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-104.666666666667,75"
              Start="0,0"
              End="-104.666666666667,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3005008347245" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.3005008347245"
                    Point2="0,30.3005008347245"
                    Point3="-4,30.3005008347245" />
                  <mssgle:LineSegment
                    End="-100.666666666667,30.3005008347245" />
                  <mssgle:CubicBezierSegment
                    Point1="-100.666666666667,30.3005008347245"
                    Point2="-104.666666666667,30.3005008347245"
                    Point3="-104.666666666667,34.3005008347245" />
                  <mssgle:LineSegment
                    End="-104.666666666667,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.3333333333333,35.3005008347245,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="460,195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-126.5,53"
              Start="0,0"
              End="-126.5,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="-4,26.5" />
                  <mssgle:LineSegment
                    End="-122.5,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-122.5,26.5"
                    Point2="-126.5,26.5"
                    Point3="-126.5,30.5" />
                  <mssgle:LineSegment
                    End="-126.5,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="333.5,470">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,51"
              Start="0,0"
              End="-11.5,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="-4,25.5" />
                  <mssgle:LineSegment
                    End="-7.5,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,25.5"
                    Point2="-11.5,25.5"
                    Point3="-11.5,29.5" />
                  <mssgle:LineSegment
                    End="-11.5,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="320.25,563">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="691,543.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-75,229.666666666667"
              Start="0,0"
              End="-67.5,229.666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-26.091649694501,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-26.091649694501,0"
                    Point2="-30.091649694501,0"
                    Point3="-30.091649694501,4" />
                  <mssgle:LineSegment
                    End="-30.091649694501,225.666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.091649694501,225.666666666667"
                    Point2="-30.091649694501,229.666666666667"
                    Point3="-34.091649694501,229.666666666667" />
                  <mssgle:LineSegment
                    End="-67.5,229.666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="483,618">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208,-333.333333333333"
              Start="0,0"
              End="200.5,-333.333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="120.545824847251,0" />
                  <mssgle:CubicBezierSegment
                    Point1="120.545824847251,0"
                    Point2="124.545824847251,0"
                    Point3="124.545824847251,-4" />
                  <mssgle:LineSegment
                    End="124.545824847251,-329.333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="124.545824847251,-329.333333333333"
                    Point2="124.545824847251,-333.333333333333"
                    Point3="128.545824847251,-333.333333333333" />
                  <mssgle:LineSegment
                    End="200.5,-333.333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="301,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name and Line Data"
          TopLeft="546,240" />
        <NodeLayout
          Size="329,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table"
          TopLeft="66,240" />
        <NodeLayout
          Size="357,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table"
          TopLeft="524,360" />
        <NodeLayout
          Size="309,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Flat File Source - Read R File Based On Iteration"
          TopLeft="310,24" />
        <NodeLayout
          Size="274,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Script Component - Get Error Description"
          TopLeft="552,136" />
        <NodeLayout
          Size="233,42"
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\Derived Column - Get File Name"
          TopLeft="117,134" />
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Output 0]"
          TopLeft="692.75,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Flat File Source Output]"
          TopLeft="414.333333333333,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-180.833333333333,68"
              Start="0,0"
              End="-180.833333333333,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4101738570509" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.4101738570509"
                    Point2="0,27.4101738570509"
                    Point3="-4,27.4101738570509" />
                  <mssgle:LineSegment
                    End="-176.833333333333,27.4101738570509" />
                  <mssgle:CubicBezierSegment
                    Point1="-176.833333333333,27.4101738570509"
                    Point2="-180.833333333333,27.4101738570509"
                    Point3="-180.833333333333,31.4101738570509" />
                  <mssgle:LineSegment
                    End="-180.833333333333,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Flat File Source Error Output]"
          TopLeft="464.5,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="224.5,70"
              Start="0,0"
              End="224.5,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31"
                    Point2="0,35"
                    Point3="4,35" />
                  <mssgle:LineSegment
                    End="220.5,35" />
                  <mssgle:CubicBezierSegment
                    Point1="220.5,35"
                    Point2="224.5,35"
                    Point3="224.5,39" />
                  <mssgle:LineSegment
                    End="224.5,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="48.62361328125,40,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Derived Column Output1]"
          TopLeft="699.5,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing.Paths[Derived Column Output]"
          TopLeft="232,176">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFile table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container - validate all R files and populate _DODReturnFile tables\Data Flow Task - flat-file processing\OLE DB Destination - Populate _DODReturnFileErrors table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>