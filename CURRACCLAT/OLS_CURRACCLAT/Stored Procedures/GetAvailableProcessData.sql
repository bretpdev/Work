CREATE PROCEDURE [curracclat].[GetAvailableProcessData]
AS

DECLARE @Today DATE = GETDATE()
DECLARE @DayCount INT = DAY(DATEADD(DAY, -30, @Today))
DECLARE @MonthCount INT = MONTH(@Today)

MERGE [curracclat].[ProcessData] AS T USING
	(
		SELECT DISTINCT
			DC11.BF_SSN				
		FROM 
			(
				SELECT DISTINCT
					DC11.BF_SSN,
					DC11.LD_TRX_EFF,
					DC11.AF_APL_ID,
					DC11.AF_APL_ID_SFX,
					DC01.LD_NXT_PAY_DUE,
					DC01.LD_LST_PAY,
					DC01.LA_CLM_PRI,
					DC01.LA_CLM_INT,
					DC01.LA_PRI_COL,
					DC01.LA_INT_ACR,
					DC01.LA_INT_COL,
					DC01.LA_LEG_CST_ACR,
					DC01.LA_LEG_CST_COL,
					DC01.LA_OTH_CHR_ACR,
					DC01.LA_OTH_CHR_COL,
					DC01.LA_COL_CST_ACR,
					DC01.LA_COL_CST_COL,
					DC01.LD_DFL_LST_CNC,
					DC01.LD_CLM_ASN_DOE
 				FROM
					ODW..DC11_LON_FAT DC11
					INNER JOIN ODW..DC01_LON_CLM_INF DC01
						ON DC01.AF_APL_ID = DC11.AF_APL_ID
						AND DC01.AF_APL_ID_SFX = DC11.AF_APL_ID_SFX 
					INNER JOIN
						(
							SELECT
								DC11_1.BF_SSN,
								MAX(DC11_1.LD_TRX_EFF) AS LD_TRX_EFF
							FROM
								ODW..DC11_LON_FAT DC11_1
							GROUP BY
								DC11_1.BF_SSN
						) DC11_M
						ON DC11_M.BF_SSN = DC11.BF_SSN
						AND DC11_M.LD_TRX_EFF = DC11.LD_TRX_EFF
				WHERE
					DC11.LC_TRX_TYP IN ('BR','EP')
					AND DC01.LC_AUX_STA = ' '
					AND DC01.LC_STA_DC10 = '03'
					AND DC01.LF_DFL_CLR = 'WG000001'
					AND (DAY(DC01.LD_DFL_LST_CNC) < @DayCount OR DC01.LD_DFL_LST_CNC IS NULL)
					AND MONTH(DC01.LD_LST_PAY) <> @MonthCount
			) DC11
			INNER JOIN ODW..DC02_BAL_INT DC02
				ON DC02.AF_APL_ID = DC11.AF_APL_ID
				AND DC02.AF_APL_ID_SFX = DC11.AF_APL_ID_SFX
			LEFT JOIN ODW..CT30_CALL_QUE CT30
				ON CT30.DF_PRS_ID_BR = DC11.BF_SSN
				AND CT30.IF_WRK_GRP = 'WRK GP01'
		WHERE
			DC11.LD_CLM_ASN_DOE IS NULL
			AND CT30.DF_PRS_ID_BR IS NULL
		GROUP BY
			DC11.BF_SSN,
			DC11.LD_NXT_PAY_DUE,
			DC11.LD_LST_PAY
	) AS S
		ON
			(
				S.BF_SSN = T.Ssn
				AND T.ProcessedAt IS NULL
				AND T.DeletedAt IS NULL
			)
			OR 
			(
				S.BF_SSN = T.Ssn
				AND CAST(T.AddedAt AS DATE) = @Today
			)
	WHEN NOT MATCHED BY TARGET THEN
		INSERT (Ssn)
		VALUES(S.BF_SSN);