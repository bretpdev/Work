/*LIVE*/
%LET NOBLE = %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\NOBLECALLS.dsn; update_lock_typ=nolock; bl_keepnulls=no");
LIBNAME NOBLE ODBC &NOBLE ;

/*TEST*/
/*%LET NOBLE = %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\NOBLECALLS_TEST.dsn; update_lock_typ=nolock; bl_keepnulls=no");*/
/*LIBNAME NOBLE ODBC &NOBLE;*/

PROC SQL;
	CREATE TABLE SOURCE AS
		SELECT
			NobleCallHistoryId,
			strip(AccountIdentifier) as AccountIdentifier
		FROM	
			NOBLE.NOBLECALLHISTORY NCH
			INNER JOIN NOBLE.REGIONS R
				ON R.REGIONID = NCH.REGIONID
		WHERE
			R.REGION = 'CompassUheaa'
			AND ArcAddProcessingId IS NOT NULL
			AND NCH.DELETED = 0
			AND RECONCILEDAT IS NULL
			
;
	CREATE TABLE ARCS AS
		SELECT DISTINCT
			ARC
		FROM
			NOBLE.ARCS
;

QUIT;

/*TEST*/
/*LIBNAME  DUSTER  REMOTE  SERVER=QADBD004 SLIBREF=WORK  ;*/

/*LIVE*/
LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;

DATA DUSTER.SOURCE; 
SET SOURCE;
RUN;

DATA DUSTER.ARCS; 
SET ARCS;
RUN;

RSUBMIT;
/*%let DB = DLGSWQUT;  *This is test;*/
%let DB = DLGSUTWH;  *This is live;

LIBNAME OLWHRM1 DB2 DATABASE=&DB OWNER=OLWHRM1;

PROC SQL;
	CREATE TABLE DATA AS
					SELECT DISTINCT
						AY10.BF_SSN,
						INPUT(SUBSTR(LX_ATY,(INDEX(LX_ATY,'NOBLECALLHISTORYID:') + 19),((INDEX(LX_ATY, 'AGENT:')) - (INDEX(LX_ATY,'NOBLECALLHISTORYID:') + 19))), BEST12.) AS NOBLECALLHISTORYID
					FROM
						OLWHRM1.AY10_BR_LON_ATY AY10
						INNER JOIN OLWHRM1.PD10_PRS_NME PD10
							ON PD10.DF_PRS_ID = AY10.BF_SSN
						INNER JOIN OLWHRM1.AY15_ATY_CMT AY15
							ON AY10.BF_SSN = AY15.BF_SSN
							AND AY10.LN_ATY_SEQ = AY15.LN_ATY_SEQ
						INNER JOIN OLWHRM1.AY20_ATY_TXT AY20
							ON AY20.BF_SSN = AY15.BF_SSN
							AND AY20.LN_ATY_SEQ = AY15.LN_ATY_SEQ 
							AND AY20.LN_ATY_CMT_SEQ = AY15.LN_ATY_CMT_SEQ
						INNER JOIN ARCS A
							ON A.ARC = AY10.PF_REQ_ACT 
						INNER JOIN SOURCE S
							ON S.NOBLECALLHISTORYID = INPUT(SUBSTR(LX_ATY,(INDEX(LX_ATY,'NOBLECALLHISTORYID:') + 19),((INDEX(LX_ATY, 'AGENT:')) - (INDEX(LX_ATY,'NOBLECALLHISTORYID:') + 19))), BEST12.)
					WHERE
						AY10.LD_ATY_REQ_RCV BETWEEN TODAY() AND (TODAY() - 7)
;
QUIT;

ENDRSUBMIT;

DATA DATA;
SET DUSTER.DATA; 
RUN;


PROC SQL; /*SAS DOES NOT SUPPORT AN UPDATE WITH AN INNER JOIN*/
	UPDATE
		NOBLE.NOBLECALLHISTORY AS NCH
	SET 
		IsReconciled = 1, 
		ReconciledAt = DATETIME()
	WHERE
		NobleCallHistoryId IN (SELECT NOBLECALLHISTORYID FROM DATA)
;
QUIT;
