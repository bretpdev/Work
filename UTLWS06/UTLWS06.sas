/*=======================================*/
/*UTLWS06 - COMPASS REPAYMENT DISCLOSURES*/
/*=======================================*/
LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*LIVE;
%LET RPTLIB = %SYSGET(reportdir);*LIVE;
/*%LET RPTLIB = T:\SAS;*TEST;*/
FILENAME REPORT2 "&RPTLIB/ULWS06.LWS06R2";
FILENAME REPORT5 "&RPTLIB/ULWS06.LWS06R5";
FILENAME REPORT7 "&RPTLIB/ULWS06.LWS06R7";
FILENAME REPORT8 "&RPTLIB/ULWS06.LWS06R8";
FILENAME REPORT9 "&RPTLIB/ULWS06.LWS06R9";
FILENAME REPORT10 "&RPTLIB/ULWS06.LWS06R10";
FILENAME REPORT11 "&RPTLIB/ULWS06.LWS06R11";
FILENAME REPORT12 "&RPTLIB/ULWS06.LWS06R12";
FILENAME REPORT13 "&RPTLIB/ULWS06.LWS06R13";
FILENAME REPORT14 "&RPTLIB/ULWS06.LWS06R14";
/*DEFINE DATES FOR SPECIFIC RUN DATES*/
/********************************************************/
/*%LET CHAR_DAYS_2 = '01/21/2009';*/
/*%LET CHAR_TODAY = '01/23/2009';*/
/********************************************************/
DATA _NULL_;
	CALL SYMPUT('CHAR_DAYS_2',"'"||PUT(INTNX('DAY',TODAY(),-2,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('CHAR_TODAY',"'"||PUT(INTNX('DAY',TODAY(),-0,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'BEGINNING'), MMDDYY10.));
RUN;
DATA _NULL_;
	CALL SYMPUT('INT_DAYS_2',INPUT(&CHAR_DAYS_2, MMDDYY10.));
	CALL SYMPUT('INT_TODAY',INPUT(&CHAR_TODAY, MMDDYY10.));
RUN;
%SYSLPUT CHAR_DAYS_2 = &CHAR_DAYS_2;
%SYSLPUT CHAR_TODAY = &CHAR_TODAY;
%SYSLPUT INT_DAYS_2 = &INT_DAYS_2;
%SYSLPUT INT_TODAY = &INT_TODAY;

/*LIBNAME  WORKLOCL  REMOTE  SERVER=QADBD004 SLIBREF=work ;*TEST;*/
LIBNAME  WORKLOCL  REMOTE  SERVER=DUSTER  SLIBREF=work  ;*LIVE;
/*RSUBMIT;*/
LIBNAME SAS_TAB V8 '/sas/whse/progrevw';
PROC SQL NOPRINT;
	SELECT "'"||TRIM(LENDER_ID)||"'"
		INTO :UHEAA_LIST SEPARATED BY ","
	FROM SAS_TAB.LDR_AFF
	WHERE AFFILIATION = 'UHEAA';
QUIT;
PROC SQL STIMER;
/*CONNECT TO DB2 (DATABASE=DLGSWQUT);*TEST;*/
CONNECT TO DB2 (DATABASE=DLGSUTWH);*LIVE;

/*RS LEVEL BORROWER DATA*/
CREATE TABLE RPDS_RS_A1_BRW AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT 
		/*RS LEVEL*/
			LN65.BF_SSN AS SSN
			,RS10.LN_RPS_SEQ
			,LN65.LC_TYP_SCH_DIS
			,RS10.LD_SNT_RPD_DIS
			,RS10.LD_RPS_1_PAY_DU
		/*BORROWER LEVEL*/
			,PD10.DF_SPE_ACC_ID
			,CASE
				WHEN PD10.DM_PRS_MID = ' '
				THEN RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX))
				ELSE RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_MID)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX))
			 END AS NAME
			,PD10.DM_PRS_LST
			,PD30.DX_STR_ADR_1
			,PD30.DX_STR_ADR_2
			,PD30.DX_STR_ADR_3
			,PD30.DM_CT
			,CASE
				WHEN PD30.DC_DOM_ST = ' '
				THEN PD30.DM_FGN_ST
				ELSE PD30.DC_DOM_ST
			 END AS DOM_FGN_ST
			,CASE
				WHEN SUBSTR(PD30.DF_ZIP_CDE,6,1) <> ' '
				THEN SUBSTR(PD30.DF_ZIP_CDE,1,5)||'-'||SUBSTR(PD30.DF_ZIP_CDE,6,4)
				ELSE PD30.DF_ZIP_CDE
			 END AS DF_ZIP_CDE
			,PD30.DM_FGN_CNY
		/*RS LEVEL LOAN SUMMARY INFO*/
			,COALESCE(LN65.RS_LA_ANT_CAP,0) AS RS_LA_ANT_CAP
			,COALESCE(LN65.RS_LA_CPI_RPD_DIS,0) + COALESCE(LN65.RS_LA_ANT_CAP,0) AS RS_PRI_RPY
			,COALESCE(LN65.RS_LA_RPD_INT_DIS,0) AS RS_LA_RPD_INT_DIS
			,LN65.RS_LA_TOT_RPD_DIS
			,LN65.LD_CRT_LON65
			,NON.NON_USB_WAMU
			,PD30.DC_ADR
			,CASE 
				WHEN PD30.DI_VLD_ADR = 'Y' OR PH05.DF_SPE_ID IS NOT NULL /*And the Address is valid (DI_VLD_ADR = 'Y') or (PH05.DI_CNC_ELT_OPI = 'Y' and DI_VLD_CNC_EML_ADR = 'Y'))*/
				THEN 'Y'
			 	ELSE 'N'
			 END AS VLD_ADR
		/*RS LEVEL LOAN DISCLOSURE INFO*/
		FROM (
				SELECT 
					BF_SSN
					,LN_RPS_SEQ
					,LC_TYP_SCH_DIS
					,LR_INT_RPD_DIS
					,LC_RPD_DIS
					,SUM(LA_ANT_CAP) AS RS_LA_ANT_CAP
					,SUM(LA_CPI_RPD_DIS) AS RS_LA_CPI_RPD_DIS
					,SUM(LA_RPD_INT_DIS) AS RS_LA_RPD_INT_DIS
					,SUM(LA_TOT_RPD_DIS) AS RS_LA_TOT_RPD_DIS
					,LD_CRT_LON65
				FROM 
					OLWHRM1.LN65_LON_RPS
				WHERE 
					LC_STA_LON65 = 'A'
				GROUP BY 
					BF_SSN, 
					LN_RPS_SEQ, 
					LC_TYP_SCH_DIS,
					LR_INT_RPD_DIS, 
					LC_RPD_DIS, 
					LD_CRT_LON65
			)LN65
			INNER JOIN OLWHRM1.RS10_BR_RPD RS10
				ON LN65.BF_SSN = RS10.BF_SSN
				AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
			INNER JOIN OLWHRM1.PD10_PRS_NME PD10
				ON LN65.BF_SSN = PD10.DF_PRS_ID
			INNER JOIN OLWHRM1.PD30_PRS_ADR PD30
				ON LN65.BF_SSN = PD30.DF_PRS_ID
			LEFT JOIN OLWHRM1.PH01_SUPER_ID PH01
				ON LN65.BF_SSN = PH01.DF_PRS_ID
			LEFT JOIN OLWHRM1.PH05_CNC_EML PH05 /*or (PH05.DI_CNC_ELT_OPI = 'Y' and DI_VLD_CNC_EML_ADR = 'Y')*/
				ON PH01.DF_SPE_ID = PH05.DF_SPE_ID
				AND PH05.DI_CNC_ELT_OPI = 'Y'
				AND PH05.DI_VLD_CNC_EML_ADR = 'Y'
			LEFT JOIN
				(
					SELECT
						BF_SSN
					FROM
						OLWHRM1.DW01_DW_CLC_CLU 
					WHERE 
						WC_DW_LON_STA = '21'
				) DW01
					ON LN65.BF_SSN = DW01.BF_SSN
			/*SET INDICATOR IF BWR HAS OPEN, RELEASED LOAN AT A LENDER OTHER THAN USB OR WAM*/
			LEFT OUTER JOIN
				(
					SELECT DISTINCT 
						BF_SSN
						,'Y' AS NON_USB_WAMU
					 FROM 
						OLWHRM1.LN10_LON
					 WHERE 
						LC_STA_LON10 = 'R'
					 	AND LA_CUR_PRI > 0
					 	AND LF_LON_CUR_OWN  NOT IN ('829505')
				)NON
					ON LN65.BF_SSN = NON.BF_SSN
			LEFT OUTER JOIN
				(
					SELECT 
						A.BF_SSN 						
					FROM 
						OLWHRM1.AY10_BR_LON_ATY A
					WHERE 
						A.PF_REQ_ACT = 'DISCL'
						AND A.PF_RSP_ACT = 'COMPL'
						AND A.LD_ATY_RSP >= &CHAR_DAYS_2
				) IN_AY10
					ON IN_AY10.BF_SSN = LN65.BF_SSN
		WHERE 
			PD30.DC_ADR = 'L'
			AND RS10.LC_STA_RPST10 = 'A'
			AND DW01.BF_SSN IS NULL
			AND 
				(
					RS10.LD_SNT_RPD_DIS >= &CHAR_DAYS_2
					OR IN_AY10.BF_SSN IS NOT NULL
	 			)	
);


/*RS LEVEL COBORROWER DATA*/
CREATE TABLE RPDS_RS_A1_EDR AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT 
		/*RS LEVEL*/
			LN65.LF_EDS AS SSN
			,RS10.LN_RPS_SEQ
			,LN65.LC_TYP_SCH_DIS
			,RS10.LD_SNT_RPD_DIS
			,RS10.LD_RPS_1_PAY_DU
		/*BORROWER LEVEL*/
			,PD10BRW.DF_SPE_ACC_ID  /*borrower account number*/
			,CASE
				WHEN PD10.DM_PRS_MID = ' '
				THEN RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX))
				ELSE RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_MID)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX))
			 END AS NAME
			,PD10.DM_PRS_LST
			,PD30.DX_STR_ADR_1
			,PD30.DX_STR_ADR_2
			,PD30.DX_STR_ADR_3
			,PD30.DM_CT
			,CASE
				WHEN PD30.DC_DOM_ST = ' '
				THEN PD30.DM_FGN_ST
				ELSE PD30.DC_DOM_ST
			 END AS DOM_FGN_ST
			,CASE
				WHEN SUBSTR(PD30.DF_ZIP_CDE,6,1) <> ' '
				THEN SUBSTR(PD30.DF_ZIP_CDE,1,5)||'-'||SUBSTR(PD30.DF_ZIP_CDE,6,4)
				ELSE PD30.DF_ZIP_CDE
			 END AS DF_ZIP_CDE
			,PD30.DM_FGN_CNY
		/*RS LEVEL LOAN SUMMARY INFO*/
			,COALESCE(LN65.RS_LA_ANT_CAP,0) AS RS_LA_ANT_CAP
			,COALESCE(LN65.RS_LA_CPI_RPD_DIS,0) + COALESCE(LN65.RS_LA_ANT_CAP,0) AS RS_PRI_RPY
			,COALESCE(LN65.RS_LA_RPD_INT_DIS,0) AS RS_LA_RPD_INT_DIS
			,LN65.RS_LA_TOT_RPD_DIS
			,LN65.LD_CRT_LON65
			,NON.NON_USB_WAMU
			,PD30.DC_ADR
			,CASE 
				WHEN PD30.DI_VLD_ADR = 'Y' OR PH05.DF_SPE_ID IS NOT NULL /*And the Address is valid (DI_VLD_ADR = 'Y') or (PH05.DI_CNC_ELT_OPI = 'Y' and DI_VLD_CNC_EML_ADR = 'Y'))*/
				THEN 'Y'
			 	ELSE 'N'
			 END AS VLD_ADR
		/*RS LEVEL LOAN DISCLOSURE INFO*/
		FROM
			(
				SELECT 
					RPS.BF_SSN
					,LN20.LF_EDS
					,RPS.LN_RPS_SEQ 
					,RPS.LC_TYP_SCH_DIS
					,RPS.LR_INT_RPD_DIS 
					,RPS.LC_RPD_DIS
					,SUM(RPS.LA_ANT_CAP) AS RS_LA_ANT_CAP
					,SUM(RPS.LA_CPI_RPD_DIS) AS RS_LA_CPI_RPD_DIS
					,SUM(RPS.LA_RPD_INT_DIS) AS RS_LA_RPD_INT_DIS
					,SUM(RPS.LA_TOT_RPD_DIS) AS RS_LA_TOT_RPD_DIS
					,RPS.LD_CRT_LON65
				FROM 
					OLWHRM1.LN65_LON_RPS RPS
					INNER JOIN OLWHRM1.LN20_EDS LN20
						ON RPS.BF_SSN = LN20.BF_SSN
						AND RPS.LN_SEQ = LN20.LN_SEQ
						AND LN20.LC_EDS_TYP = 'M'
						AND LN20.LC_STA_LON20 = 'A'			
				WHERE 
					LC_STA_LON65 = 'A'
				GROUP BY 
					RPS.BF_SSN
					,LN20.LF_EDS
					,RPS.LN_RPS_SEQ 
					,RPS.LC_TYP_SCH_DIS 
					,RPS.LR_INT_RPD_DIS 
					,RPS.LC_RPD_DIS
					,RPS.LD_CRT_LON65
			) LN65
			INNER JOIN OLWHRM1.RS10_BR_RPD RS10
				ON LN65.BF_SSN = RS10.BF_SSN
				AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
			INNER JOIN OLWHRM1.PD10_PRS_NME PD10BRW  /*join on borrower SSN to get borrower account number*/
				ON LN65.BF_SSN = PD10BRW.DF_PRS_ID
			INNER JOIN OLWHRM1.PD10_PRS_NME PD10 /*join on CO-borrower SSN to get CO-borrower name*/
				ON LN65.LF_EDS = PD10.DF_PRS_ID
			INNER JOIN OLWHRM1.PD30_PRS_ADR PD30
				ON LN65.LF_EDS = PD30.DF_PRS_ID
			LEFT JOIN OLWHRM1.PH01_SUPER_ID PH01
				ON LN65.LF_EDS = PH01.DF_PRS_ID
			LEFT JOIN OLWHRM1.PH05_CNC_EML PH05 /*or (PH05.DI_CNC_ELT_OPI = 'Y' and DI_VLD_CNC_EML_ADR = 'Y')*/
				ON PH01.DF_SPE_ID = PH05.DF_SPE_ID
				AND PH05.DI_CNC_ELT_OPI = 'Y'
				AND PH05.DI_VLD_CNC_EML_ADR = 'Y'
			LEFT JOIN 
				(
					SELECT
						CLU.BF_SSN
						,LN20.LF_EDS
					FROM
						OLWHRM1.DW01_DW_CLC_CLU CLU
						LEFT JOIN OLWHRM1.LN20_EDS LN20
							ON CLU.BF_SSN = LN20.BF_SSN
							AND CLU.LN_SEQ = LN20.LN_SEQ
							AND LN20.LC_EDS_TYP = 'M'
							AND LN20.LC_STA_LON20 = 'A'
					WHERE 
						CLU.WC_DW_LON_STA = '21'
				) DW01
					ON LN65.LF_EDS = DW01.LF_EDS
			/*SET INDICATOR IF BWR HAS OPEN, RELEASED LOAN AT A LENDER OTHER THAN USB OR WAM*/
			LEFT JOIN
				(
					SELECT DISTINCT 
						LN10.BF_SSN
						,LN20.LF_EDS
						,'Y' AS NON_USB_WAMU
					FROM 
						OLWHRM1.LN10_LON LN10
						LEFT JOIN OLWHRM1.LN20_EDS LN20
							ON LN10.BF_SSN = LN20.BF_SSN
							AND LN10.LN_SEQ = LN20.LN_SEQ
							AND LN20.LC_EDS_TYP = 'M'
							AND LN20.LC_STA_LON20 = 'A'
					WHERE 
						LN10.LC_STA_LON10 = 'R'
						AND LN10.LA_CUR_PRI > 0
						AND LN10.LF_LON_CUR_OWN  NOT IN ('829505')
				 ) NON
					ON LN65.LF_EDS = NON.LF_EDS
			LEFT JOIN
			  	(
					SELECT DISTINCT
						LN20.LF_EDS 						
					FROM 
						OLWHRM1.AY10_BR_LON_ATY ATY
						INNER JOIN OLWHRM1.LN85_LON_ATY LN85
							ON ATY.BF_SSN = LN85.BF_SSN
							AND ATY.LN_ATY_SEQ = LN85.LN_ATY_SEQ
						INNER JOIN OLWHRM1.LN20_EDS LN20
							ON LN85.BF_SSN = LN20.BF_SSN
							AND LN85.LN_SEQ = LN20.LN_SEQ
							AND LN20.LC_EDS_TYP = 'M'
							AND LN20.LC_STA_LON20 = 'A'	
					WHERE 
						ATY.PF_REQ_ACT = 'DISCL'
						AND ATY.PF_RSP_ACT = 'COMPL'
						AND ATY.LD_ATY_RSP >= &CHAR_DAYS_2						
	 		   	) IN_LN20
					ON IN_LN20.LF_EDS = LN65.LF_EDS
		WHERE 
			PD30.DC_ADR = 'L'
			AND RS10.LC_STA_RPST10 = 'A'
			AND DW01.BF_SSN IS NULL
			AND 
				(
					RS10.LD_SNT_RPD_DIS >= &CHAR_DAYS_2
					OR IN_LN20.LF_EDS IS NOT NULL
				 )	
);



/*INSTALLMENT LEVEL RS BORROWER DATA*/
CREATE TABLE RPDS_IS_A_BRW AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT 
			LN66.BF_SSN AS SSN
			,LN66.LN_SEQ
			,LN66.LN_RPS_SEQ
			,RS10.LD_RPS_1_PAY_DU
			,LN66.LN_GRD_RPS_SEQ
			,LN66.LN_RPS_TRM
			,LN66.LA_RPS_ISL
		FROM
			OLWHRM1.LN65_LON_RPS LN65
			INNER JOIN OLWHRM1.LN66_LON_RPS_SPF LN66
				ON LN65.BF_SSN = LN66.BF_SSN
				AND LN65.LN_SEQ = LN66.LN_SEQ
				AND LN65.LN_RPS_SEQ = LN66.LN_RPS_SEQ
			INNER JOIN OLWHRM1.RS10_BR_RPD RS10
				ON LN65.BF_SSN = RS10.BF_SSN
				AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
			LEFT JOIN
				(
					SELECT
						A.BF_SSN 						
			 		FROM
						OLWHRM1.AY10_BR_LON_ATY A
			 		WHERE
						A.PF_REQ_ACT = 'DISCL'
			 		AND A.PF_RSP_ACT = 'COMPL'
			 		AND A.LD_ATY_RSP >= &CHAR_DAYS_2
				) IN_AY10
					ON IN_AY10.BF_SSN = LN66.BF_SSN
		WHERE 
			LN65.LC_STA_LON65 = 'A'
			AND RS10.LC_STA_RPST10 = 'A'
			AND 
				(
					RS10.LD_SNT_RPD_DIS >= &CHAR_DAYS_2
			 		OR
					IN_AY10.BF_SSN IS NOT NULL
			 	)	
		ORDER BY 
			LN66.BF_SSN
			,LN66.LN_RPS_SEQ
			,LN66.LN_SEQ
			,LN66.LN_GRD_RPS_SEQ
);


/*INSTALLMENT LEVEL RS COBORROWER DATA*/
CREATE TABLE RPDS_IS_A_EDR AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT 
			LN20.LF_EDS AS SSN
			,LN66.LN_SEQ
			,LN66.LN_RPS_SEQ
			,RS10.LD_RPS_1_PAY_DU
			,LN66.LN_GRD_RPS_SEQ
			,LN66.LN_RPS_TRM
			,LN66.LA_RPS_ISL
		FROM 
			OLWHRM1.LN65_LON_RPS LN65
			INNER JOIN OLWHRM1.LN66_LON_RPS_SPF LN66
				ON LN65.BF_SSN = LN66.BF_SSN
				AND LN65.LN_SEQ = LN66.LN_SEQ
				AND LN65.LN_RPS_SEQ = LN66.LN_RPS_SEQ
			INNER JOIN OLWHRM1.RS10_BR_RPD RS10
				ON LN65.BF_SSN = RS10.BF_SSN
				AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
			INNER JOIN OLWHRM1.LN20_EDS LN20
				ON LN65.BF_SSN = LN20.BF_SSN
				AND LN65.LN_SEQ = LN20.LN_SEQ
				AND LN20.LC_EDS_TYP = 'M'
				AND LN20.LC_STA_LON20 = 'A'
			LEFT JOIN
				(
					SELECT DISTINCT
						LN20.LF_EDS 						
					FROM 
						OLWHRM1.AY10_BR_LON_ATY ATY
						INNER JOIN OLWHRM1.LN85_LON_ATY LN85
							ON ATY.BF_SSN = LN85.BF_SSN
							AND ATY.LN_ATY_SEQ = LN85.LN_ATY_SEQ
						INNER JOIN OLWHRM1.LN20_EDS LN20
							ON LN85.BF_SSN = LN20.BF_SSN
							AND LN85.LN_SEQ = LN20.LN_SEQ
							AND LN20.LC_EDS_TYP = 'M'
							AND LN20.LC_STA_LON20 = 'A'	
					WHERE 
						ATY.PF_REQ_ACT = 'DISCL'
						AND ATY.PF_RSP_ACT = 'COMPL'
						AND ATY.LD_ATY_RSP >= &CHAR_DAYS_2						
		 		 ) IN_LN20
				 	ON IN_LN20.LF_EDS = LN20.LF_EDS
		WHERE 
			LN65.LC_STA_LON65 = 'A'
			AND RS10.LC_STA_RPST10 = 'A'
			AND 
				(
					RS10.LD_SNT_RPD_DIS >= &CHAR_DAYS_2
					OR IN_LN20.LF_EDS IS NOT NULL
				)	
		ORDER BY 
			LN20.LF_EDS
			,LN66.LN_RPS_SEQ
			,LN66.LN_SEQ
			,LN66.LN_GRD_RPS_SEQ
);



/*LOAN LEVEL RS BORROWER DATA*/
CREATE TABLE RPDS_LN1_BRW AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT DISTINCT
		/*RS LEVEL*/
			LN10.BF_SSN AS SSN
			,LN65.LN_RPS_SEQ
			,CASE
				WHEN LN10.IC_LON_PGM IN ('SUBCNS','UNCNS','SUBSPC','UNSPC','CNSLDN')
				THEN 'CONSOLIDATION' 
				WHEN LN10.IC_LON_PGM IN ('STFFRD','UNSTFD')
				THEN 'STAFFORD'
				ELSE LN10.IC_LON_PGM
			 END AS IC_LON_PGM
		/*LOAN LEVEL*/
			,LN10.LD_LON_1_DSB
/*			,COBR.CO_SSN*/
			,LN10.LN_SEQ
			,LR10.IM_LDR_SHO
			,DW01.WD_LON_RPD_SR
			,LN65.LA_CPI_RPD_DIS
			,COALESCE(LN65.LA_ACR_INT_RPD,0) + 
			 COALESCE(LN65.LA_ANT_CAP,0) AS LA_ACR_INT_RPD
			,LN65.LR_INT_RPD_DIS / 100 AS LR_INT_RPD_DIS
			,LN65.LC_RPD_DIS
			,LN10.LF_LON_CUR_OWN
			,RS10.LD_SNT_RPD_DIS
			,CASE
				WHEN LN72.LC_ITR_TYP IN ('F1','F2','IN','IS','SR')
				THEN 'fixed'
				ELSE 'variable'
			 END AS LC_ITR_TYP
			,ABS(COALESCE(IPTD.LA_FAT_NSI,0)) AS LA_FAT_NSI
		FROM  
			OLWHRM1.LN10_LON LN10
			INNER JOIN OLWHRM1.LN65_LON_RPS LN65
				ON LN10.BF_SSN = LN65.BF_SSN
				AND LN10.LN_SEQ = LN65.LN_SEQ
			INNER JOIN OLWHRM1.LR10_LDR_DMO LR10
				ON LN10.LF_LON_CUR_OWN = LR10.IF_DOE_LDR
			INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
			INNER JOIN OLWHRM1.RS10_BR_RPD RS10
				ON LN65.BF_SSN = RS10.BF_SSN
				AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
			INNER JOIN OLWHRM1.LN72_INT_RTE_HST LN72
				ON LN10.BF_SSN = LN72.BF_SSN
				AND LN10.LN_SEQ = LN72.LN_SEQ
			/*----------INTEREST PAID TO DATE----------*/
			LEFT OUTER JOIN
				(
					SELECT 
						BF_SSN
						,LN_SEQ
						,SUM(COALESCE(LA_FAT_NSI,0)) AS LA_FAT_NSI
					FROM 
						OLWHRM1.LN90_FIN_ATY 
					WHERE
						LC_STA_LON90 = 'A'
						AND LC_FAT_REV_REA = ''
						AND PC_FAT_TYP = '10'
						AND PC_FAT_SUB_TYP IN 
						(
							'10','11','15','16','20',
							'21','26','35','36','37'
						)
					GROUP BY
						BF_SSN
						,LN_SEQ
				) IPTD
					ON LN10.BF_SSN = IPTD.BF_SSN
					AND LN10.LN_SEQ = IPTD.LN_SEQ
			LEFT OUTER JOIN	 	  	   
				(
					SELECT 
						A.BF_SSN
					FROM 
						OLWHRM1.AY10_BR_LON_ATY A
					WHERE 
						A.PF_REQ_ACT = 'DISCL'
						AND A.PF_RSP_ACT = 'COMPL'
						AND A.LD_ATY_RSP >= &CHAR_DAYS_2
				) IN_LN65
					ON IN_LN65.BF_SSN = LN65.BF_SSN
		WHERE 
			LN10.LC_STA_LON10 = 'R'
			AND LN65.LC_STA_LON65 = 'A'
			AND RS10.LC_STA_RPST10 = 'A'
			AND
				(
					 	(
							LN10.IC_LON_PGM IN ('STFFRD','UNSTFD','PLUS','SUBCNS','UNCNS','SUBSPC','UNSPC','PLUSGB','CNSLDN','SLS','TILP','COMPLT')
					 	 	AND 
								(
									RS10.LD_SNT_RPD_DIS >= &CHAR_DAYS_2	
					 	 	  		OR IN_LN65.BF_SSN IS NOT NULL
					 		   )
						 )
					 OR 
				 		(
							LN10.IC_LON_PGM IN ('SUBCNS','UNCNS','SUBSPC','UNSPC','CNSLDN')
				  	 		AND RS10.LD_SNT_RPD_DIS >= LN10.LD_LON_1_DSB
						)
			 	)
			AND LN72.LC_STA_LON72 = 'A'
			AND &CHAR_TODAY BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END
);	

/*LOAN LEVEL RS COBORROWER DATA*/
CREATE TABLE RPDS_LN1_EDR AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT DISTINCT 
		/*RS LEVEL*/
			LN20.LF_EDS AS SSN
			,LN65.LN_RPS_SEQ
			,CASE
				WHEN LN10.IC_LON_PGM IN ('SUBCNS','UNCNS','SUBSPC','UNSPC','CNSLDN')
				THEN 'CONSOLIDATION' 
				WHEN LN10.IC_LON_PGM IN ('STFFRD','UNSTFD')
				THEN 'STAFFORD'
				ELSE LN10.IC_LON_PGM
			 END AS IC_LON_PGM
		/*LOAN LEVEL*/
			,LN10.LD_LON_1_DSB
			,LN10.LN_SEQ
			,LR10.IM_LDR_SHO
			,DW01.WD_LON_RPD_SR
			,LN65.LA_CPI_RPD_DIS
			,COALESCE(LN65.LA_ACR_INT_RPD,0) + 
			 COALESCE(LN65.LA_ANT_CAP,0) AS LA_ACR_INT_RPD
			,LN65.LR_INT_RPD_DIS / 100 AS LR_INT_RPD_DIS
			,LN65.LC_RPD_DIS
			,LN10.LF_LON_CUR_OWN
			,RS10.LD_SNT_RPD_DIS
			,CASE
				WHEN LN72.LC_ITR_TYP IN (
					'F1','F2','IN','IS','SR'
					)
				THEN 'fixed'
				ELSE 'variable'
			 END AS LC_ITR_TYP
			,ABS(COALESCE(IPTD.LA_FAT_NSI,0)) AS LA_FAT_NSI
		FROM  
			OLWHRM1.LN10_LON LN10
			INNER JOIN OLWHRM1.LN65_LON_RPS LN65
				ON LN10.BF_SSN = LN65.BF_SSN
				AND LN10.LN_SEQ = LN65.LN_SEQ
			INNER JOIN OLWHRM1.LR10_LDR_DMO LR10
				ON LN10.LF_LON_CUR_OWN = LR10.IF_DOE_LDR
			INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
			INNER JOIN OLWHRM1.RS10_BR_RPD RS10
				ON LN65.BF_SSN = RS10.BF_SSN
				AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
			INNER JOIN OLWHRM1.LN72_INT_RTE_HST LN72
				ON LN10.BF_SSN = LN72.BF_SSN
				AND LN10.LN_SEQ = LN72.LN_SEQ
			INNER JOIN OLWHRM1.LN20_EDS LN20
				ON LN10.BF_SSN = LN20.BF_SSN
				AND LN10.LN_SEQ = LN20.LN_SEQ
				AND LN20.LC_EDS_TYP = 'M'
				AND LN20.LC_STA_LON20 = 'A'
			/*----------INTEREST PAID TO DATE----------*/
			LEFT OUTER JOIN
				(
					SELECT 
						BF_SSN
						,LN_SEQ
						,SUM(COALESCE(LA_FAT_NSI,0)) AS LA_FAT_NSI
					FROM 
						OLWHRM1.LN90_FIN_ATY 
					WHERE 
						LC_STA_LON90 = 'A'
						AND LC_FAT_REV_REA = ''
						AND PC_FAT_TYP = '10'
						AND PC_FAT_SUB_TYP IN 
						(
							'10','11','15','16','20',
							'21','26','35','36','37'
						)
					GROUP BY BF_SSN
						,LN_SEQ
				) IPTD
					ON LN10.BF_SSN = IPTD.BF_SSN
					AND LN10.LN_SEQ = IPTD.LN_SEQ
			LEFT OUTER JOIN
			  	(
					SELECT DISTINCT
						LN20.LF_EDS 						
					FROM 
						OLWHRM1.AY10_BR_LON_ATY ATY
						INNER JOIN OLWHRM1.LN85_LON_ATY LN85
							ON ATY.BF_SSN = LN85.BF_SSN
							AND ATY.LN_ATY_SEQ = LN85.LN_ATY_SEQ
						INNER JOIN OLWHRM1.LN20_EDS LN20
							ON LN85.BF_SSN = LN20.BF_SSN
							AND LN85.LN_SEQ = LN20.LN_SEQ
							AND LN20.LC_EDS_TYP = 'M'
							AND LN20.LC_STA_LON20 = 'A'	
					WHERE 
						ATY.PF_REQ_ACT = 'DISCL'
						AND ATY.PF_RSP_ACT = 'COMPL'
						AND ATY.LD_ATY_RSP >= &CHAR_DAYS_2
				) IN_EDS
					ON IN_EDS.LF_EDS = LN20.LF_EDS
		WHERE 
			LN10.LC_STA_LON10 = 'R'
			AND LN65.LC_STA_LON65 = 'A'
			AND RS10.LC_STA_RPST10 = 'A'
			AND 
				(
					/*THIS IS MET*/
				 		(
							LN10.IC_LON_PGM IN ('STFFRD','UNSTFD','PLUS','SUBCNS','UNCNS','SUBSPC','UNSPC','PLUSGB','CNSLDN','SLS','TILP','COMPLT')
				 	 		AND
								(
									RS10.LD_SNT_RPD_DIS >= &CHAR_DAYS_2	
									OR IN_EDS.LF_EDS IS NOT NULL
								)
						 )
				 	OR 
				 		(
							LN10.IC_LON_PGM IN ('SUBCNS','UNCNS','SUBSPC','UNSPC','CNSLDN')
				  	 		AND RS10.LD_SNT_RPD_DIS >= LN10.LD_LON_1_DSB
						)
			 	)
			AND LN72.LC_STA_LON72 = 'A'
			AND &CHAR_TODAY BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END
);	



/*GET BORROWER ARC ACTIVITY FOR RECONCILIATION*/
CREATE TABLE AY10_BRW AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT AY10.BF_SSN AS SSN
			,AY10.LC_STA_ACTY10
			,AY10.PF_REQ_ACT 
			,AY10.PF_RSP_ACT
			,AY10.LD_ATY_REQ_RCV 
			,AY10.LF_USR_REQ_ATY
			,CASE
				WHEN PD10.DM_PRS_MID = ' '
				THEN RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX))
				ELSE RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_MID)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX))
			 END AS NAME
			,PD10.DM_PRS_LST
			,PD10.DF_SPE_ACC_ID
		FROM 
			OLWHRM1.AY10_BR_LON_ATY AY10
			LEFT OUTER JOIN OLWHRM1.PD10_PRS_NME PD10
				ON AY10.BF_SSN = PD10.DF_PRS_ID
		WHERE 
			LC_STA_ACTY10 = 'A'
			AND PF_REQ_ACT = 'B314Q'
			AND PF_RSP_ACT = 'PRNTD'
			AND LD_ATY_REQ_RCV = &CHAR_TODAY
);


/*GET CO BORROWER ARC ACTIVITY FOR RECONCILIATION*/
CREATE TABLE AY10_EDR AS
	SELECT *
	FROM CONNECTION TO DB2 (
		SELECT 
			LN20.LF_EDS AS SSN
			,AY10.LC_STA_ACTY10
			,AY10.PF_REQ_ACT 
			,AY10.PF_RSP_ACT
			,AY10.LD_ATY_REQ_RCV 
			,AY10.LF_USR_REQ_ATY
			,CASE
				WHEN PD10.DM_PRS_MID = ' '
				THEN RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX))
				ELSE RTRIM(PD10.DM_PRS_1)||' '||RTRIM(PD10.DM_PRS_MID)||' '||RTRIM(PD10.DM_PRS_LST)||RTRIM(' '||RTRIM(PD10.DM_PRS_LST_SFX)) 
			 END AS NAME
			,PD10.DM_PRS_LST
			,PD10BRW.DF_SPE_ACC_ID /*borrower account number*/
		FROM 
			OLWHRM1.AY10_BR_LON_ATY AY10
			INNER JOIN OLWHRM1.LN85_LON_ATY LN85
				ON AY10.BF_SSN = LN85.BF_SSN
				AND AY10.LN_ATY_SEQ = LN85.LN_ATY_SEQ
			INNER JOIN OLWHRM1.LN20_EDS LN20
				ON LN85.BF_SSN = LN20.BF_SSN
				AND LN85.LN_SEQ = LN20.LN_SEQ
				AND LN20.LC_EDS_TYP = 'M'
				AND LN20.LC_STA_LON20 = 'A'	
			INNER JOIN OLWHRM1.PD10_PRS_NME PD10BRW /*join on borrower SSN to get borrower account number*/
				ON AY10.BF_SSN = PD10BRW.DF_PRS_ID
			LEFT OUTER JOIN OLWHRM1.PD10_PRS_NME PD10 /*join on CO-borrower SSN to get CO-borrower name*/
				ON LN20.LF_EDS = PD10.DF_PRS_ID
		WHERE 
			AY10.LC_STA_ACTY10 = 'A'
			AND AY10.PF_REQ_ACT = 'B314Q'
			AND AY10.PF_RSP_ACT = 'PRNTD'
			AND AY10.LD_ATY_REQ_RCV = &CHAR_TODAY

);

DISCONNECT FROM DB2;
QUIT;

/*COMBINE BORROWER AND COBORROWER TABLES*/
DATA RPDS_RS_A1;
	SET RPDS_RS_A1_BRW RPDS_RS_A1_EDR;
RUN;


DATA RPDS_IS_A;
	SET RPDS_IS_A_BRW RPDS_IS_A_EDR;
RUN;


DATA RPDS_LN1;
	SET RPDS_LN1_BRW RPDS_LN1_EDR;
RUN;


DATA AY10;
	SET AY10_BRW AY10_EDR;
RUN;


/*BEGIN EDR TEST CODE*/
/*ENDRSUBMIT;*/
/**/
/*DATA RPDS_RS_A1_BRW; SET WORKLOCL.RPDS_RS_A1_BRW; RUN;*/
/*DATA RPDS_IS_A_BRW; SET WORKLOCL.RPDS_IS_A_BRW; RUN;*/
/*DATA RPDS_LN1_BRW; SET WORKLOCL.RPDS_LN1_BRW; RUN;*/
/**/
/*DATA RPDS_RS_A1_EDR; SET WORKLOCL.RPDS_RS_A1_EDR; RUN;*/
/*DATA RPDS_IS_A_EDR; SET WORKLOCL.RPDS_IS_A_EDR; RUN;*/
/*DATA RPDS_LN1_EDR; SET WORKLOCL.RPDS_LN1_EDR; RUN;*/
/**/
/*DATA RPDS_RS_A1; SET WORKLOCL.RPDS_RS_A1; RUN;*/
/*DATA RPDS_IS_A; SET WORKLOCL.RPDS_IS_A; RUN;*/
/*DATA RPDS_LN1; SET WORKLOCL.RPDS_LN1; RUN;*/
/*END EDR TEST CODE*/



PROC SORT DATA=RPDS_RS_A1;
	BY SSN LN_RPS_SEQ;
RUN;

PROC SQL;
CREATE TABLE RPDS_RS_A AS 
	SELECT DISTINCT RS.*
		,CASE 
			WHEN LN.IC_LON_PGM IN ('CONSOLIDATION') 
				AND LN.LD_SNT_RPD_DIS = LN.LD_LON_1_DSB
				AND LN.LD_SNT_RPD_DIS = &INT_DAYS_2
			THEN 'B' 
		 	ELSE 'A'
		 END AS STYPE
	FROM RPDS_RS_A1 RS
		INNER JOIN RPDS_LN1 LN
			ON RS.SSN = LN.SSN
			AND RS.LN_RPS_SEQ = LN.LN_RPS_SEQ
	WHERE 
		(
			LN.IC_LON_PGM IN ('STAFFORD','PLUS','PLUSGB','SLS','COMPLT')
			AND LN.LD_SNT_RPD_DIS = &INT_TODAY
		)
		OR 
		(
			LN.IC_LON_PGM IN ('CONSOLIDATION')
			AND 
			(
				LN.LD_SNT_RPD_DIS = LN.LD_LON_1_DSB
				AND	LN.LD_SNT_RPD_DIS = &INT_DAYS_2
			)
			OR
			(
				LN.LD_SNT_RPD_DIS > LN.LD_LON_1_DSB
				AND	LN.LD_SNT_RPD_DIS = &INT_TODAY
			)
		)
;
QUIT;

PROC SQL;
	CREATE TABLE RPDS_LN AS 
		SELECT
			DISTINCT LN.*
		FROM 
			RPDS_LN1 LN
			INNER JOIN RPDS_RS_A RS
				ON LN.SSN = RS.SSN
				AND LN.LN_RPS_SEQ = RS.LN_RPS_SEQ
	;
QUIT;


/*=========CALCULATE COST CENTER CODE=========*/
DATA CSTCNTR (KEEP=SSN LF_LON_CUR_OWN);
	SET RPDS_LN;
RUN;

DATA INHOUSE;
	SET CSTCNTR;
	WHERE LF_LON_CUR_OWN IN (&UHEAA_LIST);
	IH_IND = 'Y';
RUN;

/*ENDRSUBMIT;*/

/*DATA RPDS_RS_A; SET WORKLOCL.RPDS_RS_A; RUN;*/
/*DATA RPDS_IS_A; SET WORKLOCL.RPDS_IS_A; RUN;*/
/*DATA RPDS_LN; SET WORKLOCL.RPDS_LN; RUN;*/
/*DATA COBR; SET WORKLOCL.COBR;RUN;*/
/*DATA CSTCNTR; SET WORKLOCL.CSTCNTR;RUN;*/
/*DATA INHOUSE; SET WORKLOCL.INHOUSE;RUN;*/
/*DATA AY10; SET WORKLOCL.AY10; RUN;*/

PROC SORT DATA=INHOUSE NODUPKEY;BY SSN;RUN;
PROC SORT DATA=CSTCNTR;BY SSN;RUN;

DATA CSTCNTR;
	MERGE CSTCNTR INHOUSE ;
	BY SSN;
RUN;

DATA CSTCNTR (KEEP=SSN CSTCD);
	SET CSTCNTR;
	IF IH_IND = 'Y' THEN CSTCD = 'MA2324';
	ELSE CSTCD = 'MA2327';
RUN;

/********************************************************************/
/*CALCULATE NEW RPS FROM SYSTEM-ASSIGNED RPS AND ADD TO EACH DATASET*/
/********************************************************************/

/*ASSIGN CURE RPS INDICATOR*/
DATA RPDS_LN (DROP=LF_LON_CUR_OWN);
	SET RPDS_LN;
	IF LC_RPD_DIS = '4' THEN CURE_IND = 'Y';
	ELSE CURE_IND = 'N';
RUN;

/*CREATE UNIQUE REPAYMENT SCHEDULE ID*/
DATA RPDS_LN;
	SET RPDS_LN;
/*	RPS_UID = TRIM(LEFT(SSN))||' '||TRIM(LEFT(LN_RPS_SEQ)); changed to zero filled LN_RPS_SEQ by SASR 4776 because this value doesn't sort correctly*/
	RPS_UID = SSN||PUT(LN_RPS_SEQ,Z4.); *create rps ID with zero filled LN_RPS_SEQ;
RUN;

PROC SORT DATA=RPDS_LN;
	BY RPS_UID IC_LON_PGM LR_INT_RPD_DIS CURE_IND LD_LON_1_DSB LN_SEQ;
RUN;

/*CALCULATE NEW RPS SEQUENCE NUMBERS FOR LOANS DATASET*/
DATA RPDS_LN;
	SET RPDS_LN;
	BY RPS_UID IC_LON_PGM LR_INT_RPD_DIS CURE_IND LD_LON_1_DSB LN_SEQ;
	IF FIRST.RPS_UID  THEN RPS_SEQ_NEW + 1;
	RETAIN RPS_SEQ_NEW;
RUN;

/*ADD NEW RPS SEQUENCE NUMBERS TO INSTALLMENT DATASET*/
PROC SQL;
	CREATE TABLE RPDS_IS AS
		SELECT DISTINCT
			IS.*
			,LN.RPS_SEQ_NEW
		FROM 
			RPDS_IS_A IS
			INNER JOIN RPDS_LN LN
				ON IS.SSN = LN.SSN
				AND IS.LN_RPS_SEQ = LN.LN_RPS_SEQ
	;
QUIT;

/*ADD NEW RPS SEQUENCE NUMBERS TO RPS DATASET AND SUMMARIZE*/
PROC SQL;
	CREATE TABLE RPDS_RS AS
		SELECT DISTINCT
			RS.*
			,LN.RPS_SEQ_NEW
		FROM 
			RPDS_RS_A RS
			INNER JOIN RPDS_LN LN
				ON RS.SSN = LN.SSN
				AND RS.LN_RPS_SEQ = LN.LN_RPS_SEQ
	;
QUIT;

PROC SORT DATA=RPDS_RS;
	BY SSN RPS_SEQ_NEW;
RUN;

/*SUM INTEREST AT REPAYMENT FOR REPAYMENT SCHEDULE*/
PROC SQL;
	CREATE TABLE RPDS_INT AS 
		SELECT 
			SSN
			,RPS_SEQ_NEW
			,SUM(LA_FAT_NSI) AS LA_FAT_NSI
		FROM 
			RPDS_LN
		GROUP BY 
			SSN
			,RPS_SEQ_NEW
		ORDER BY 
			SSN
			,RPS_SEQ_NEW
	;
QUIT;

/*SUMMARIZE NEW RPS DATASET TO NEW RPS LEVEL*/
DATA RPDS_RS (DROP=SUM1-SUM4);
	SET RPDS_RS;
	BY SSN RPS_SEQ_NEW;
	IF FIRST.RPS_SEQ_NEW THEN
		DO;
			SUM1 = 0;
			SUM2 = 0;
			SUM3 = 0;
			SUM4 = 0;
		END;
	SUM1 + RS_LA_ANT_CAP;
	SUM2 + RS_PRI_RPY;
	SUM3 + RS_LA_RPD_INT_DIS;
	SUM4 + RS_LA_TOT_RPD_DIS;
	IF LAST.RPS_SEQ_NEW THEN 
		DO;
			RS_LA_ANT_CAP = SUM1;
			RS_PRI_RPY = SUM2;
			RS_LA_RPD_INT_DIS = SUM3;
			RS_LA_TOT_RPD_DIS = SUM4; 
			OUTPUT;
		END;
RUN;

/************************************************************************************/
/************************CREATE RPS LEVEL PAYMENT INFORMATION************************/
/************************************************************************************/

/*SET ASIDE LD_RPS_1_PAY_DU FOR LATER USE*/
DATA RPDS_ISKEEP (KEEP=SSN RPS_SEQ_NEW LD_RPS_1_PAY_DU);
	SET RPDS_IS;
RUN;
PROC SORT DATA=RPDS_ISKEEP NODUPKEY;
	BY SSN RPS_SEQ_NEW LD_RPS_1_PAY_DU;
RUN;

/*START CALCULATION OF RPS LEVEL INSTALLMENTS BY UNIQUELY CREATING EACH PAYMENT
FOR EACH LOAN*/
DATA RPDS_IS;
	SET RPDS_IS;
	DO I=1 TO LN_RPS_TRM;
		OUTPUT;
		END;
RUN;

PROC SORT DATA = RPDS_IS;
	BY SSN RPS_SEQ_NEW LN_SEQ;
RUN;

/*NUMBER EACH PAYMENT FOR SUMMARIZATION ACROSS ALL LOANS IN THE RPS*/
DATA RPDS_IS;
	SET RPDS_IS;
	BY SSN RPS_SEQ_NEW LN_SEQ;
	IF FIRST.LN_SEQ THEN PMT_NO = 0;
	PMT_NO + 1;
RUN;

/*TRANSPOSE EACH REAL LOAN PAYMENT TO ALLOW SUMMARIZATION ACROSS ALL LOANS IN THE RPS*/
PROC TRANSPOSE DATA=RPDS_IS OUT=RPDS_IS (DROP=_NAME_ _LABEL_ LN_SEQ) PREFIX=PMT_;
	ID PMT_NO;
	VAR LA_RPS_ISL;
	BY SSN RPS_SEQ_NEW LN_SEQ;
RUN;

/*SUMMARIZE EACH REAL LOAN PAYMENT AT THE RPS LEVEL*/
PROC MEANS DATA=RPDS_IS NOPRINT SUM;
	BY SSN RPS_SEQ_NEW;
	OUTPUT OUT=RPDS_IS (DROP=_TYPE_ _FREQ_) SUM=;
RUN;

/*TRANSPOSE SUMMARIZED RPS LEVEL PAYMENTS FOR FURTHER DATA STEP PROCESSING*/
PROC TRANSPOSE DATA=RPDS_IS OUT=RPDS_IS (RENAME=(COL1=TOT_PMT));
	BY SSN RPS_SEQ_NEW;
RUN;

/*RE-ADD LD_RPS_1_PAY_DU TO THE DATASET*/
DATA RPDS_IS;
	MERGE RPDS_ISKEEP (IN=A) RPDS_IS (IN=B);
	BY SSN RPS_SEQ_NEW;
RUN;

/*SUMMARIZE PAYMENT DATA INTO INSTALLMENT DATA AND CALCULATE PAYMENT NUMBERS 
AND DUE DATES FOR EACH INSTALLMENT*/
DATA RPDS_IS (KEEP = SSN RPS_SEQ_NEW INSTALL_NO NUM_PMTS TOT_PMT PMT_DUE_1ST);
	SET RPDS_IS;
	WHERE TOT_PMT NE .;
	FORMAT PMT_DUE_1ST MMDDYY10.;
	BY SSN RPS_SEQ_NEW TOT_PMT NOTSORTED;
	IF FIRST.RPS_SEQ_NEW THEN INSTALL_NO = 0;
	IF FIRST.TOT_PMT THEN NUM_PMTS = 0;
	NUM_PMTS + 1;
	IF LAST.TOT_PMT THEN
		DO;
			INSTALL_NO + 1;
			ISL = INPUT(SUBSTR(_NAME_,5,4),4.);
			MON_INC = ISL - NUM_PMTS;
			PMT_DUE_1ST = INTNX('MONTH',LD_RPS_1_PAY_DU,MON_INC) + DAY(LD_RPS_1_PAY_DU) - 1;
			OUTPUT;
		END;
RUN;

/*CREATE TRUE RPS-LEVEL RECORD WITH MULTIPLE INSTALLMENT COLUMNS*/
%MACRO TRSP_IS(NEWDS,NEWCOL);
PROC TRANSPOSE DATA=RPDS_IS OUT=RPDS_PT&NEWDS (DROP=_NAME_) PREFIX=&NEWCOL;
	VAR &NEWCOL;
	BY SSN RPS_SEQ_NEW;
	ID INSTALL_NO;
RUN;
%MEND TRSP_IS;
%TRSP_IS(1,NUM_PMTS);
%TRSP_IS(2,TOT_PMT);
%TRSP_IS(3,PMT_DUE_1ST);
DATA RPDS_PT;
	MERGE RPDS_PT1 RPDS_PT2 RPDS_PT3;
	BY SSN RPS_SEQ_NEW;
RUN;

/************************************************************************************/
/************************CREATE RPS LEVEL LOAN INFORMATION***************************/
/************************************************************************************/

/*TRANSPOSE RESULTS OF COMBINE TO CREATE RS LEVEL DATA WITH LOAN DATA*/
%MACRO TRSP_RS(NEWDS,NEWCOL);
PROC TRANSPOSE DATA=RPDS_LN /*(KEEP = SSN RPS_SEQ_NEW IC_LON_PGM &NEWCOL)*/
	OUT=RPDS_LN&NEWDS (DROP=_NAME_ _LABEL_) PREFIX=&NEWCOL;
	VAR &NEWCOL;
	BY SSN RPS_SEQ_NEW IC_LON_PGM CURE_IND LR_INT_RPD_DIS LC_ITR_TYP;
RUN;
%MEND TRSP_RS;
%TRSP_RS(1,LN_SEQ);
%TRSP_RS(2,LD_LON_1_DSB);
%TRSP_RS(3,IM_LDR_SHO);
%TRSP_RS(4,WD_LON_RPD_SR);
%TRSP_RS(5,LA_CPI_RPD_DIS);
%TRSP_RS(6,LA_ACR_INT_RPD);
DATA RPDS_LN;
	MERGE RPDS_LN1 RPDS_LN2 RPDS_LN3 RPDS_LN4 RPDS_LN5 RPDS_LN6;
	BY SSN RPS_SEQ_NEW IC_LON_PGM  CURE_IND LR_INT_RPD_DIS LC_ITR_TYP;
RUN;

/*COMBINE RS LEVEL DATA WITH LOAN LEVEL AND PAYMENT LEVEL DATA*/
DATA RPDS;
	MERGE RPDS_RS RPDS_LN RPDS_PT RPDS_INT;
	BY SSN RPS_SEQ_NEW;
RUN;

/*CALCULATE VARIABLE INTEREST EFFECTIVE DATE AS THE LAST DAY 
OF THE FISCAL YEAR IN WHICH THE DISCLOSURE CREATE DATE FALLS*/
DATA RPDS;
	SET RPDS;
	VAR_INT_EFF_DT = INTNX('YEAR.7',LD_CRT_LON65,0,'END');
	FORMAT VAR_INT_EFF_DT MMDDYY10.;
RUN;

/*CALCULATE TOTAL SUM OF UNPAID PRINCIPAL BALANCE AT REPAYMENT SCHEDULE LEVEL*/
DATA RPDS;
	SET RPDS;
	TOT_LA_CPI_RPD_DIS = SUM(OF LA_CPI_RPD_DIS:);
RUN;

/*SET BUYER*/
DATA RPDS;
	SET RPDS;
	LENGTH BUYER $ 8.;
	BUYER = 'INHOUSE';
RUN;

PROC FORMAT;
	VALUE $RPSTYP
	'EG' = 'EXTENDED GRADUATED'
	'EL' = 'EXTENDED LEVEL'
	'E2' = 'EXTENDED SELECT 2 REPAYMENT OPTION'
	'E5' = 'EXTENDED SELECT 5 REPAYMENT OPTION'
	'G' = 'GRADUATED'
	'IS' = 'INCOME SENSITIVE'
	'L' = 'LEVEL'
	'MG' = 'MODIFIED GRADUATED'
	'RP' = 'REDUCED PAYMENT'
	'S2' = 'SELECT 2'
	'S5' = 'SELECT 5'
	'IB' = 'IBR-PFH PAYMENTS'
	'IL' = 'IBR-STANDARD-STANDARD PAYMENTS';
RUN;

/*===ADD COST CENTER CODE TO RPDS DATA SET AND SORT===*/
PROC SORT DATA=CSTCNTR NODUPKEY;BY SSN;RUN;
PROC SORT DATA=RPDS;BY SSN;RUN;

DATA RPDS;
	MERGE RPDS CSTCNTR;
	BY SSN;
RUN;

DATA RPDS;
	SET RPDS;
	IF DOM_FGN_ST IN ('FC',' ') THEN SVAR = 1;
	ELSE SVAR = 2;
RUN;

*CALCULATE ACS KEYLINE;
%MACRO KEY_CLC(TBL);
DATA &TBL (DROP = KEYSSN MODAY KEYLINE CHKDIG DIG I 
	CHKDIG CHK1 CHK2 CHK3 CHKDIGIT CHECK);
	SET &TBL;
	KEYSSN = TRANSLATE(SSN,'MYLAUGHTER','0987654321');
	MODAY = PUT(DATE(),MMDDYYN4.);
	KEYLINE = "P"||KEYSSN||MODAY||DC_ADR;
	CHKDIG = 0;
	LENGTH DIG $2.;
	DO I = 1 TO LENGTH(KEYLINE);
		IF I/2 NE ROUND(I/2,1) 
			THEN DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4) * 2, 2.);
		ELSE DIG = PUT(INPUT(SUBSTR(KEYLINE,I,1),BITS4.4), 2.);
		IF SUBSTR(DIG,1,1) = " " 
			THEN CHKDIG = CHKDIG + INPUT(SUBSTR(DIG,2,1),1.);
			ELSE DO;
				CHK1 = INPUT(SUBSTR(DIG,1,1),1.);
				CHK2 = INPUT(SUBSTR(DIG,2,1),1.);
				IF CHK1 + CHK2 >= 10
					THEN DO;
						CHK3 = PUT(CHK1 + CHK2,2.);
						CHK1 = INPUT(SUBSTR(CHK3,1,1),1.);
						CHK2 = INPUT(SUBSTR(CHK3,2,1),1.);
					END;
				CHKDIG = CHKDIG + CHK1 + CHK2;
			END;
	END;
	CHKDIGIT = 10 - INPUT(SUBSTR((RIGHT(PUT(CHKDIG,3.))),3,1),3.);
	IF CHKDIGIT = 10 THEN CHKDIGIT = 0;
	CHECK = PUT(CHKDIGIT,1.);
	ACSKEY = "#"||KEYLINE||CHECK||"#";
RUN;
%MEND KEY_CLC;
%KEY_CLC(RPDS);

PROC SORT DATA=RPDS;
	BY CSTCD SVAR;
RUN;

%LET MAX_LN = 36;
%LET MAX_IS = 10;

%MACRO RPSPRN(DSET,RPNO,CRIT);

DATA &DSET;
	SET RPDS;
	&CRIT;
RUN;

/*ADD 3 OF 9 VALUE*/
PROC SORT DATA=&DSET; BY CSTCD SVAR;RUN;

DATA &DSET;
	SET &DSET;
	BY CSTCD;
	IF FIRST.CSTCD THEN _3OF9 = 1;
	ELSE _3OF9+1;
RUN;

DATA _NULL_;
	SET &DSET;
	FILE REPORT&RPNO DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT SSN $9. ;
	FORMAT ACSKEY $18. ;
	FORMAT IC_LON_PGM $13. ;
	FORMAT NAME $70. ;
	FORMAT DX_STR_ADR_1 $30. ;
	FORMAT DX_STR_ADR_2 $30. ;
	FORMAT DX_STR_ADR_3 $30. ;
	FORMAT DM_CT $20. ;
	FORMAT DOM_FGN_ST $15. ;
	FORMAT DF_ZIP_CDE $17. ;
	FORMAT DM_FGN_CNY $25. ;
	FORMAT DF_SPE_ACC_ID $10. ;
	FORMAT LC_TYP_SCH_DIS $RPSTYP. ;
	FORMAT LD_SNT_RPD_DIS MMDDYY10. ;

	FORMAT LD_LON_1_DSB1-LD_LON_1_DSB&MAX_LN MMDDYY10. ;
	FORMAT LN_SEQ1-LN_SEQ&MAX_LN 6. ;
	FORMAT IM_LDR_SHO1-IM_LDR_SHO&MAX_LN $20. ;
	FORMAT WD_LON_RPD_SR1-WD_LON_RPD_SR&MAX_LN MMDDYY10. ;
	FORMAT LA_CPI_RPD_DIS1-LA_CPI_RPD_DIS&MAX_LN DOLLAR12.2 ;
	FORMAT LA_ACR_INT_RPD1-LA_ACR_INT_RPD&MAX_LN DOLLAR15.2 ;

	FORMAT NUM_PMTS1-NUM_PMTS&MAX_IS 4. ;
	FORMAT TOT_PMT1-TOT_PMT&MAX_IS DOLLAR11.2 ;
	FORMAT PMT_DUE_1ST1-PMT_DUE_1ST&MAX_IS  MMDDYY10. ;

	FORMAT LR_INT_RPD_DIS PERCENT10.3 ;
	FORMAT LC_ITR_TYP $8.;
	FORMAT TOT_LA_CPI_RPD_DIS COMMA12.2;
	FORMAT RS_LA_ANT_CAP COMMA12.2 ;
	FORMAT RS_PRI_RPY COMMA12.2 ;
	FORMAT RS_LA_RPD_INT_DIS COMMA12.2 ;
	FORMAT RS_LA_TOT_RPD_DIS COMMA12.2 ;
	FORMAT VAR_INT_EFF_DT MMDDYY10. ;
	FORMAT CSTCD $6. ;
	FORMAT _3OF9 Z6.;
	FORMAT LA_FAT_NSI 12.2;

	/* WRITE COLUMN NAMES */
	IF _N_ = 1 THEN        
	DO;
		PUT
		'BF_SSN' ','
		'ACSKEY' ','
		'IC_LON_PGM' ','
		'NAME' ','
		'DX_STR_ADR_1' ','
		'DX_STR_ADR_2' ','
		'DX_STR_ADR_3' ','
		'DM_CT' ','
		'DOM_FGN_ST' ','
		'DF_ZIP_CDE' ','
		'DM_FGN_CNY' ','
		'DF_SPE_ACC_ID' ','
		'LC_TYP_SCH_DIS' ',' @;
		DO I=1 TO &MAX_LN;PUT 'LD_LON_1_DSB' I @;END;
		DO I=1 TO &MAX_LN;PUT 'LN_SEQ' I  @;END;
		DO I=1 TO &MAX_LN;PUT 'IM_LDR_SHO' I @;END;
		DO I=1 TO &MAX_LN;PUT 'WD_LON_RPD_SR' I @;END;
		DO I=1 TO &MAX_LN;PUT 'LA_CPI_RPD_DIS' I @;END;
		DO I=1 TO &MAX_LN;PUT 'LA_ACR_INT_RPD' I @;END;
		DO I=1 TO &MAX_IS;PUT 'NUM_PMTS' I @;END;
		DO I=1 TO &MAX_IS;PUT 'TOT_PMT' I @;END;
		DO I=1 TO &MAX_IS;PUT 'PMT_DUE_1ST' I @;END;
		PUT
		'LR_INT_RPD_DIS' ','
		'LC_ITR_TYP' ','
		'TOT_LA_CPI_RPD_DIS' ','
		'RS_LA_ANT_CAP' ','
		'RS_PRI_RPY' ','
		'RS_LA_RPD_INT_DIS' ','
		'RS_LA_TOT_RPD_DIS' ','
		'VAR_INT_EFF_DT'	','
		'DATE'	',' 
		'LA_FAT_NSI' ',' 
		'3OF9' ','
		'STATE_IND'	','
		'COST_CENTER_CODE'	
		;
	END;
	DO;
		PUT SSN $ @;
		PUT ACSKEY $ @;
		PUT IC_LON_PGM $ @;
		PUT NAME $ @;
		PUT DX_STR_ADR_1 $ @;
		PUT DX_STR_ADR_2 $ @;
		PUT DX_STR_ADR_3 $ @;
		PUT DM_CT $ @;
		PUT DOM_FGN_ST $ @;
		PUT DF_ZIP_CDE $ @;
		PUT DM_FGN_CNY $ @;
		PUT DF_SPE_ACC_ID $ @;
		PUT LC_TYP_SCH_DIS $ @;

		PUT LD_LON_1_DSB1-LD_LON_1_DSB&MAX_LN @;
		PUT LN_SEQ1-LN_SEQ&MAX_LN @;
		PUT IM_LDR_SHO1-IM_LDR_SHO&MAX_LN $ @;
		PUT WD_LON_RPD_SR1-WD_LON_RPD_SR&MAX_LN @;
		PUT LA_CPI_RPD_DIS1-LA_CPI_RPD_DIS&MAX_LN @;
		PUT LA_ACR_INT_RPD1-LA_ACR_INT_RPD&MAX_LN @;

		PUT NUM_PMTS1-NUM_PMTS&MAX_IS @;
		PUT TOT_PMT1-TOT_PMT&MAX_IS @;
		PUT PMT_DUE_1ST1-PMT_DUE_1ST&MAX_IS @;

		PUT LR_INT_RPD_DIS @;
		PUT LC_ITR_TYP $ @;
		PUT TOT_LA_CPI_RPD_DIS @;
		PUT RS_LA_ANT_CAP @;
		PUT RS_PRI_RPY @;
		PUT RS_LA_RPD_INT_DIS @;
		PUT RS_LA_TOT_RPD_DIS @;
		PUT VAR_INT_EFF_DT @;
		PUT LD_SNT_RPD_DIS @;
		PUT	LA_FAT_NSI @;
		PUT _3OF9 @;
		PUT DOM_FGN_ST $ @;
		PUT CSTCD $ ;
	END;
RUN;
%MEND RPSPRN;

%MACRO CARC(DSET,CRIT);
PROC SORT DATA=RPDS;BY SSN;RUN;
PROC SORT DATA=AY10;BY SSN;RUN;
DATA &DSET;
	MERGE AY10 (IN=A) RPDS (IN=B);
	BY SSN;
	&CRIT;
RUN;
%MEND CARC;

/*CREATE VALID ADDRESS FILES AND DATA SETS FOR COMPARISON AND RECONCILIATION*/
/*==========================================================================*/
%RPSPRN(R2,2,WHERE IC_LON_PGM IN ('STAFFORD','PLUS','CONSOLIDATION','PLUSGB','SLS') 
	AND CURE_IND NE 'Y' 
	AND VLD_ADR = 'Y' 
	AND BUYER = 'INHOUSE'
	AND STYPE = 'A');
%RPSPRN(R5,5,WHERE IC_LON_PGM IN ('STAFFORD','PLUS','CONSOLIDATION','PLUSGB','SLS') 
	AND CURE_IND EQ 'Y' 
	AND VLD_ADR = 'Y');
%RPSPRN(R10,10,WHERE STYPE = 'B'
	AND VLD_ADR = 'Y');
%RPSPRN(R12,12,WHERE IC_LON_PGM IN ('TILP') 
	AND CURE_IND NE 'Y' 
	AND VLD_ADR = 'Y' 
	AND STYPE = 'A');
%RPSPRN(R14,14,WHERE IC_LON_PGM IN ('COMPLT') 
	AND CURE_IND NE 'Y' 
	AND VLD_ADR = 'Y' 
	AND STYPE = 'A');
/*==========================================================================*/

/*ENVOKE MACRO TO CREATE DATA SETS FOR ARC RECONCILIATION*/
/*=========================================================================*/
%CARC(NOARC,IF B AND NOT A AND STYPE NE 'B');
%CARC(NTSLT,IF A AND NOT B );
/*========================================================================*/

/*RECONCILE JOB SELECTION AND WRITTEN FILES*/
/*========================================================================*/
DATA FLREC (KEEP=SSN NAME DM_PRS_LST);
	SET R2 R5 R12;
RUN;

PROC SORT DATA=FLREC;BY SSN;RUN;
PROC SORT DATA=RPDS;BY SSN;RUN;

DATA FLREC;
	MERGE RPDS (IN=A) FLREC (IN=B);
	BY SSN;
	IF A AND NOT B AND STYPE NE 'B';
RUN;
/*========================================================================*/

/*CREATE DATA SET FOR BUYER CRITERIA MISMATCH*/
DATA BYMTCH;
	SET RPDS;
	WHERE BUYER = 'MULTI' AND CURE_IND NE 'Y';
RUN;

/*FINAL SORT*/
PROC SORT DATA=BYMTCH NODUPKEY;BY SSN;RUN;
PROC SORT DATA=FLREC NODUPKEY;BY DF_SPE_ACC_ID DM_PRS_LST;RUN;
PROC SORT DATA=NOARC NODUPKEY;BY DF_SPE_ACC_ID DM_PRS_LST;RUN;
PROC SORT DATA=NTSLT NODUPKEY;BY DF_SPE_ACC_ID DM_PRS_LST;RUN;
/*========================================================================*/
/*WRITE RECONCILIATION REPORTS*/
/*========================================================================*/
%MACRO PRTREC(REPNO,DSET,TITLE1);
PROC PRINTTO PRINT=REPORT&REPNO NEW;
	RUN;
	OPTIONS ORIENTATION = LANDSCAPE;
	OPTIONS CENTER NODATE PAGENO=1 PS=39 LS=127;
	TITLE "&TITLE1";
	TITLE2 "RUN DATE:  &RUNDATE";
	FOOTNOTE  "JOB = UTLWS06     REPORT = ULWS06.LWS06R&REPNO";
PROC CONTENTS DATA=&DSET OUT=EMPTYSET NOPRINT;
DATA _NULL_;
	SET EMPTYSET;
	FILE PRINT;
	IF  NOBS=0 AND _N_ =1 THEN DO;
		PUT // 127*'-';
		PUT      //////
			@51 '**** NO OBSERVATIONS FOUND ****';
		PUT ////////
			@57 '-- END OF REPORT --';
		PUT /////////////
			@46 "JOB = UTLWS06     REPORT = ULWS06.LWS06R&REPNO";
		END;
	RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=&DSET WIDTH=UNIFORM WIDTH=MIN;
	VAR DF_SPE_ACC_ID NAME;
	LABEL DF_SPE_ACC_ID = 'ACCT #';
	TITLE "&TITLE1";
	TITLE2 "RUN DATE:  &RUNDATE";
	FOOTNOTE  "JOB = UTLWS06     REPORT = ULWS06.LWS06R&REPNO";
RUN;
PROC PRINTTO;
RUN;
%MEND PRTREC;

%PRTREC(7,FLREC,RS SELECTED BUT DOES NOT MEET CRITERIA);
%PRTREC(8,NOARC,RS SELECTED BUT NO COMPASS ACTIVITY COMMENT);

DATA _NULL_;
	SET NTSLT ;
	LENGTH DESCRIPTION $600.;
	USER = LF_USR_REQ_ATY;
	ACT_DT = LD_ATY_REQ_RCV;
	DESCRIPTION = CATX(',',DF_SPE_ACC_ID,NAME);
	FILE REPORT9 DELIMITER=',' DSD DROPOVER LRECL=32767;
	FORMAT USER $10. ;
	FORMAT ACT_DT MMDDYY10. ;
	FORMAT DESCRIPTION $600. ;
	IF _N_ = 1 THEN DO;
		PUT "USER,ACT_DT,DESCRIPTION";
	END;
	DO;
	   PUT USER $ @;
	   PUT ACT_DT @;
	   PUT DESCRIPTION $ ;
	END;
RUN;

DATA IVAD;
	SET RPDS;
	WHERE VLD_ADR = 'N';
RUN;

/*INVALID ADDRESS REPORT*/
PROC PRINTTO PRINT=REPORT11 NEW;
RUN;
	OPTIONS ORIENTATION = LANDSCAPE;
	OPTIONS CENTER NODATE PAGENO=1 PS=39 LS=127;
	TITLE 'REPAYMENT SCHEDULE INVALID ADDRESS';
	TITLE2 "RUN DATE:  &RUNDATE";
	FOOTNOTE  'JOB = UTLWS06     REPORT = ULWS06.LWS06R11';
PROC CONTENTS DATA=IVAD OUT=EMPTYSET NOPRINT;
DATA _NULL_;
	SET EMPTYSET;
	FILE PRINT;
	IF  NOBS=0 AND _N_ =1 THEN DO;
		PUT // 127*'-';
		PUT      //////
			@51 '**** NO OBSERVATIONS FOUND ****';
		PUT ////////
			@57 '-- END OF REPORT --';
		PUT /////////////
			@46 "JOB = UTLWS06     REPORT = ULWS06.LWS06R11";
		END;
	RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=IVAD WIDTH=UNIFORM WIDTH=MIN N='TOTAL NUMBER OF BORROWERS = ';
	VAR DF_SPE_ACC_ID
		NAME 
		IC_LON_PGM
		LD_LON_1_DSB1;
	LABEL DF_SPE_ACC_ID='ACCT #'
		IC_LON_PGM = 'LOAN TYPE'
		LD_LON_1_DSB1 = 'LOAN 1 FIRST DISB DATE';
	RUN;
PROC PRINTTO;
RUN;

/*DATA WORKLOCL.IVAD(KEEP=SSN);  * USE THIS LINE FOR LOCAL RUNS;*/
DATA IVAD(KEEP=SSN); * USE THIS LINE FOR AES SCHEDULED RUNS;
	SET IVAD;
RUN;

/*RSUBMIT;*/
LIBNAME SAS_TAB V8 '/sas/whse/progrevw';
DATA SAS_TAB.IVAD;
	SET IVAD;
RUN;
/*ENDRSUBMIT;*/

DATA TSH (KEEP= DF_SPE_ACC_ID NAME LD_SNT_RPD_DIS);
	SET RPDS;
	IF SUM(OF NUM_PMTS1-NUM_PMTS&MAX_IS) = . 
		OR SUM(OF TOT_PMT1-TOT_PMT&MAX_IS) = .
		OR MAX(OF PMT_DUE_1ST1-PMT_DUE_1ST&MAX_IS) = .;
RUN;

PROC PRINTTO PRINT=REPORT13 NEW;
RUN;
	OPTIONS ORIENTATION = LANDSCAPE;
	OPTIONS CENTER NODATE PAGENO=1 PS=39 LS=127;
	TITLE 'BORROWERS WITH NO PAYMENT INFO ON DISCLOSURE';
	TITLE2 "RUN DATE:  &RUNDATE";
	FOOTNOTE  'JOB = UTLWS06     REPORT = ULWS06.LWS06R13';
PROC CONTENTS DATA=TSH OUT=EMPTYSET NOPRINT;
DATA _NULL_;
	SET EMPTYSET;
	FILE PRINT;
	IF  NOBS=0 AND _N_ =1 THEN DO;
		PUT // 127*'-';
		PUT      //////
			@51 '**** NO OBSERVATIONS FOUND ****';
		PUT ////////
			@57 '-- END OF REPORT --';
		PUT /////////////
			@46 "JOB = UTLWS06     REPORT = ULWS06.LWS06R13";
		END;
	RETURN;
RUN;
PROC PRINT NOOBS SPLIT='/' DATA=TSH WIDTH=UNIFORM WIDTH=MIN ;
	FORMAT LD_SNT_RPD_DIS MMDDYY10.;
	VAR DF_SPE_ACC_ID NAME LD_SNT_RPD_DIS;
	LABEL DF_SPE_ACC_ID='ACCT #'
		LD_SNT_RPD_DIS = 'REPAYMENT DATE';
RUN;
PROC PRINTTO;
RUN;
