/*UTLWS19 - BSV DUE DILIGENCE REPORT*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWS19.LWS19R2";
FILENAME REPORT3 "&RPTLIB/ULWS19.LWS19R3";
FILENAME REPORTZ "&RPTLIB/ULWS19.LWS19RZ";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK ;
  %IF  &SQLXRC NE 0  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @01 " ********************************************************************* "
              / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @01 " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @01 " ****  &SQLXMSG   **** "
              / @01 " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;
PROC SQL STIMER;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE DEMO AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.BF_SSN 	AS SSN
	,PD10.DF_SPE_ACC_ID
	,B.LD_DLQ_OCC 			AS DELQ_DATE
	,B.NUM_DELQ_DAYS 
	,C.LD_ATY_RSP 			AS ATTEMPT
	,C2.LD_ATY_RSP 			AS CONTACT
	,EH.DC_PHN
	,EH.DI_PHN_VLD
	,EH.DD_CRT_PD42
	,D.DI_VLD_ADR 			AS ADDRV
FROM OLWHRM1.LN65_LON_RPS A
INNER JOIN (
	SELECT BF_SSN 
		,LN_SEQ
		,MAX(LD_DLQ_OCC) 	AS LD_DLQ_OCC 
		,LN_DLQ_MAX 		AS NUM_DELQ_DAYS  
		,LN_DLQ_ITL
	FROM OLWHRM1.LN16_LON_DLQ_HST 
	WHERE LC_STA_LON16 = '1'
	AND (
		 LN_DLQ_MAX BETWEEN 80 AND 90
		 OR 
		 LN_DLQ_MAX BETWEEN 170 AND 180
		 )
	GROUP BY BF_SSN
		,LN_SEQ
		,LN_DLQ_ITL
		,LN_DLQ_MAX
	) B
ON A.BF_SSN = B.BF_SSN
AND A.LN_SEQ = B.LN_SEQ
INNER JOIN OLWHRM1.PD30_PRS_ADR D
	ON D.DF_PRS_ID = A.BF_SSN
	AND D.DC_ADR = 'L'
INNER JOIN OLWHRM1.PD42_PRS_PHN EH
	ON EH.DF_PRS_ID = A.BF_SSN
INNER JOIN OLWHRM1.LN10_LON LN10
	ON A.BF_SSN = LN10.BF_SSN
	AND A.LN_SEQ = LN10.LN_SEQ 
INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
	ON A.BF_SSN = DW01.BF_SSN
	AND A.LN_SEQ = DW01.LN_SEQ 
INNER JOIN OLWHRM1.PD10_PRS_NME PD10
	ON A.BF_SSN = PD10.DF_PRS_ID
/*--------------- ATTEMPTS ---------------*/
LEFT OUTER JOIN (
	SELECT Y.BF_SSN	
		, Y.LD_ATY_RSP AS LD_ATY_RSP
	FROM OLWHRM1.AY10_BR_LON_ATY Y
	INNER JOIN OLWHRM1.AC10_ACT_REQ Z
		ON Y.PF_REQ_ACT = Z.PF_REQ_ACT
		AND Z.PC_DD_ACT_STA = 'D'
	WHERE Y.PF_RSP_ACT IN ('NOCTC','INVPH')
	 ) C
	ON C.BF_SSN = A.BF_SSN
/*--------------- CONTACTS ---------------*/
LEFT OUTER JOIN ( 
	SELECT Y.BF_SSN 
		,Y.LD_ATY_RSP AS LD_ATY_RSP
	FROM OLWHRM1.AY10_BR_LON_ATY Y
	INNER JOIN OLWHRM1.AC10_ACT_REQ Z
		ON Y.PF_REQ_ACT = Z.PF_REQ_ACT
		AND Z.PC_DD_ACT_STA = 'D'
	WHERE Y.PF_RSP_ACT IN ('CNTCT')
	 ) C2
	ON C2.BF_SSN = A.BF_SSN
WHERE A.LC_STA_LON65 = 'A'
AND LN10.LC_STA_LON10 = 'R'
AND LN10.LA_CUR_PRI > 0
AND LN10.LI_CON_PAY_STP_PUR <> 'Y'
AND DW01.WC_DW_LON_STA NOT IN (
	'01','02','04','05','12','17','19',
	'22','23','88','98','21','06'
	)
AND EH.DC_PHN IN (
	'H','A','W','M'
	)
AND EH.DI_PHN_VLD = 'Y'
AND EH.DN_DOM_PHN_ARA||EH.DN_DOM_PHN_XCH||EH.DN_DOM_PHN_LCL <> ''
AND DAYS(CURRENT DATE)-DAYS(EH.DD_CRT_PD42) > 20
/*--------------------NO BANKRUPTCY WITHIN 10 DAYS------------------------*/
AND NOT EXISTS (
	 SELECT *
	 FROM OLWHRM1.PD24_PRS_BKR X
	 WHERE X.DF_PRS_ID = LN10.BF_SSN
	 AND X.DC_BKR_STA = '05'
	 AND DAYS(X.DD_BKR_STA) >= DAYS(CURRENT DATE)-10
	 )
/*---------------------------NOT PAID AHEAD------------------------------*/
AND NOT EXISTS (
	 SELECT * 
	 FROM OLWHRM1.BL10_BR_BIL BL10
	 WHERE BL10.BF_SSN = LN10.BF_SSN
	 AND BL10.LC_STA_BIL10 = 'A'
	 AND BL10.LC_IND_BIL_SNT = '5'
	 AND DAYS(LD_BIL_CRT) > DAYS(CURRENT DATE)
	 )
/*-----------------------NO DEFAULT OR FORBEARANCE-----------------------*/
AND (
	NOT EXISTS (
		SELECT *
		FROM OLWHRM1.LN50_BR_DFR_APV LN50
		WHERE LN50.BF_SSN = LN10.BF_SSN
		AND LN50.LN_SEQ = LN10.LN_SEQ
		AND LN50.LC_STA_LON50 = 'A'
		AND DAYS(LN50.LD_DFR_END) > DAYS(CURRENT DATE)
		)
	OR NOT EXISTS (
		SELECT *
		FROM OLWHRM1.LN60_BR_FOR_APV LN60
		WHERE LN60.BF_SSN = LN10.BF_SSN
		AND LN60.LN_SEQ = LN10.LN_SEQ
		AND LN60.LC_STA_LON60 = 'A'
		AND DAYS(LN60.LD_FOR_END) > DAYS(CURRENT DATE)
		)
	)
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK;*/
/*QUIT;*/
ENDRSUBMIT;
DATA DEMO; 
SET WORKLOCL.DEMO; 
RUN;

DATA DEMO;
SET DEMO;
IF NUM_DELQ_DAYS <= 90 THEN GROUP = 'A';
ELSE GROUP = 'B';
RUN;

PROC SORT DATA=DEMO;
BY GROUP SSN;
RUN;

%MACRO EX_A(NEWTAB,CVAR,COP);
PROC SQL;
CREATE TABLE &NEWTAB AS
SELECT SSN 
	,COUNT(DISTINCT &CVAR) AS COUNT
FROM DEMO
WHERE &CVAR BETWEEN DELQ_DATE AND DELQ_DATE + 80
AND GROUP = 'A'
GROUP BY SSN
HAVING COUNT(DISTINCT &CVAR) &COP 1
;
QUIT;
%MEND ;
%MACRO EX_B(NEWTAB,CVAR,COP);
PROC SQL;
CREATE TABLE &NEWTAB AS
SELECT SSN 
	,COUNT(DISTINCT &CVAR) AS COUNT
FROM DEMO
WHERE &CVAR BETWEEN DELQ_DATE+90 AND DELQ_DATE+180
AND GROUP = 'B'
GROUP BY SSN
HAVING COUNT(DISTINCT &CVAR) &COP 1
;
QUIT;
%MEND ;
%EX_A(ATTEMPTS_A,ATTEMPT,GT);
%EX_A(CONTACTS_A,CONTACT,GE);
%EX_B(ATTEMPTS_B,ATTEMPT,GT);
%EX_B(CONTACTS_B,CONTACT,GE);
%MACRO EXING(A);
PROC SQL;
CREATE TABLE GROUP_&A AS
SELECT DISTINCT COALESCE(A.SSN, B.SSN) AS SSN
FROM ATTEMPTS_&A B
FULL JOIN
CONTACTS_&A A
ON A.SSN = B.SSN;
QUIT;
%MEND ;
%EXING(A);
%EXING(B);

PROC SQL;
CREATE TABLE DEMO2 AS
SELECT DISTINCT A.SSN
	,A.DF_SPE_ACC_ID
	,A.NUM_DELQ_DAYS 
	,MAX(A.ATTEMPT) AS LAST_ATTEMPT
	,MAX(A.CONTACT) AS LAST_CONTACT
	,A.ADDRV 
	,B.HOMEPV 
	,C.ALTPV 
	,D.WORKPV 
	,E.MOBILEPV 
	,A.GROUP
FROM DEMO A
LEFT OUTER JOIN (
	SELECT DISTINCT SSN
		,DI_PHN_VLD AS HOMEPV 
	FROM DEMO 
	WHERE DC_PHN = 'H'
	 ) B
	ON A.SSN = B.SSN
LEFT OUTER JOIN (
	SELECT DISTINCT  SSN
		,DI_PHN_VLD AS ALTPV 
	FROM DEMO 
	WHERE DC_PHN = 'A'
	 ) C
	ON A.SSN = C.SSN
LEFT OUTER JOIN (
	SELECT DISTINCT  SSN
		,DI_PHN_VLD AS WORKPV 
	FROM DEMO 
	WHERE DC_PHN = 'W'
	 ) D
	ON A.SSN = D.SSN
LEFT OUTER JOIN (
	SELECT DISTINCT  SSN
		,DI_PHN_VLD AS MOBILEPV
	FROM DEMO 
	WHERE DC_PHN = 'M'
	 ) E
	ON A.SSN = E.SSN
WHERE (
	A.GROUP = 'A'
	AND A.SSN NOT IN (
		SELECT SSN 
		FROM GROUP_A
		)
	)
OR (
	A.GROUP = 'B'
	AND A.SSN NOT IN (
		SELECT SSN 
		FROM GROUP_B
		)
	)
GROUP BY A.SSN 
	,A.NUM_DELQ_DAYS 
	,A.ADDRV 
	,B.HOMEPV 
	,C.ALTPV 
	,D.WORKPV 
	,E.MOBILEPV 
	,A.GROUP
;
QUIT; 
DATA DEMO_PRNT;
SET DEMO2;
WHERE GROUP = "A";
RUN;

DATA _NULL_;
SET DEMO_PRNT ;
LENGTH DESCRIPTION $600.;
USER = ' ';
ACT_DT = LAST_ATTEMPT;
DESCRIPTION = CATX(',',
	DF_SPE_ACC_ID,
	NUM_DELQ_DAYS,
	PUT(LAST_ATTEMPT,MMDDYY10.),
	PUT(LAST_CONTACT,MMDDYY10.),
	ADDRV,
	HOMEPV,
	ALTPV,
	WORKPV,
	MOBILEPV
);
FILE REPORT2 DELIMITER=',' DSD DROPOVER LRECL=32767;
FORMAT USER $10. ;
FORMAT ACT_DT MMDDYY10. ;
FORMAT DESCRIPTION $600. ;
IF _N_ = 1 THEN DO;
	PUT "USER,ACT_DT,DESCRIPTION";
END;
DO;
   PUT USER $ @;
   PUT ACT_DT @;
   PUT DESCRIPTION $ ;
END;
RUN;

*BEGINNING OF REPORT 3 STUFF;

DATA DEMO_PRNT;
SET DEMO2;
WHERE GROUP = "B";
RUN;

PROC PRINTTO PRINT=REPORT3 NEW; 
RUN;

OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS CENTER DATE NUMBER PAGENO=1 PS=39 LS=127;

TITLE 'BSV DUE DILIGENCE REPORT';
TITLE2 "BORROWER DELINQUENT 170 - 180 DAYS";
TITLE3 'LESS THAN 2 CALL ATTEMPTS';
FOOTNOTE  "JOB = UTLWS19     REPORT = UTLWS19.LWS19R3";

PROC CONTENTS DATA=DEMO_PRNT OUT=EMPTYSET NOPRINT;RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 127*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWS19          REPORT = ULWS19.LWS19R3";
	END;
RETURN;
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=DEMO_PRNT;
FORMAT LAST_ATTEMPT LAST_CONTACT MMDDYY10.;
VAR DF_SPE_ACC_ID NUM_DELQ_DAYS LAST_ATTEMPT LAST_CONTACT ADDRV HOMEPV ALTPV WORKPV MOBILEPV;
LABEL	DF_SPE_ACC_ID = 'ACCT #'
		NUM_DELQ_DAYS = '# DAYS DELINQUENT'
		LAST_ATTEMPT = 'DATE LAST ATTEMPT'
		LAST_CONTACT = 'DATE LAST CONTACT'
		ADDRV = 'ADDRESS VALIDITY'
		HOMEPV = 'HOME PHONE'
		ALTPV = 'ALTERNATE PHONE'
		WORKPV = 'WORK PHONE'
		MOBILEPV = 'MOBILE PHONE';
RUN;

PROC PRINTTO;
RUN;
