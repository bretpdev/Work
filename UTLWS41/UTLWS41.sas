/*Find all late fees PC_FAT_TYP + PC_FAT_SUB_TYP = 2601 in the previous month.*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORTZ "&RPTLIB/ULWS41.LWS41RZ";
FILENAME REPORT2 "&RPTLIB/ULWS41.LWS41R2";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
DATA _NULL_;
	EFFDT = TODAY();
    CALL SYMPUT('BEGIN',"'"||PUT(INTNX('MONTH',TODAY(),-1,'BEGINNING'), MMDDYYD10.)||"'");
	CALL SYMPUT('END',"'"||PUT(INTNX('MONTH',TODAY(),-1,'END'), MMDDYYD10.)||"'");
    CALL SYMPUT('EFFDATE',put(EFFDT,MMDDYY10.));
	CALL SYMPUT('RUNDATE',"'"||put(EFFDT,MMDDYY10.)||"'");
RUN;
%SYSLPUT BEGIN = &BEGIN;
%SYSLPUT END = &END;
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK ;
  %IF  &SQLXRC NE 0  %THEN  %DO  ;
    DATA _NULL_  ;
            FILE REPORTZ NOTITLES  ;
            PUT @01 " ********************************************************************* "
              / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
              / @01 " ****  THE SAS SHOULD BE REVIEWED.                                **** "       
              / @01 " ********************************************************************* "
              / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
              / @01 " ****  &SQLXMSG   **** "
              / @01 " ********************************************************************* "
            ;
         RUN  ;
  %END  ;
%MEND  ;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE DOLLAR AS
SELECT *
	FROM CONNECTION TO DB2 (
		SELECT BF_SSN
			,LA_FAT_LTE_FEE
			,PC_FAT_TYP
			,PC_FAT_SUB_TYP
			,LC_STA_LON90
			,LD_FAT_EFF
		FROM OLWHRM1.LN90_FIN_ATY
		WHERE PC_FAT_TYP IN ('26', '10')
		AND PC_FAT_SUB_TYP IN ('01', '10')
		AND LA_FAT_LTE_FEE > 0
		AND LD_FAT_EFF BETWEEN &BEGIN AND &END
		
FOR READ ONLY WITH UR
);
CREATE TABLE FORDFR AS
SELECT * 
FROM CONNECTION TO DB2 (
			(SELECT DISTINCT DF10.BF_SSN
 				,CASE
					WHEN LN50.LD_DFR_BEG < &BEGIN THEN &BEGIN
					ELSE LN50.LD_DFR_BEG
				END	AS LD_BEG
				,CASE
					WHEN LN50.LD_DFR_END > &END THEN &END
					ELSE LN50.LD_DFR_END
				END	AS LD_END
			FROM OLWHRM1.DF10_BR_DFR_REQ DF10
			INNER JOIN OLWHRM1.LN50_BR_DFR_APV LN50
				ON DF10.BF_SSN = LN50.BF_SSN
				AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
			WHERE DF10.LC_STA_DFR10 = 'A'
				AND DF10.LC_DFR_STA = 'A'
				AND LN50.LC_STA_LON50 = 'A'
				AND LN50.LD_DFR_BEG <= &END
				AND LN50.LD_DFR_END >= &BEGIN)
	UNION
			(SELECT DISTINCT FB10.BF_SSN
				,CASE
					WHEN LN60.LD_FOR_BEG < &BEGIN THEN &BEGIN
					ELSE LN60.LD_FOR_BEG
				END AS LD_BEG
				,CASE 
					WHEN LN60.LD_FOR_END > &END THEN &END
					ELSE LN60.LD_FOR_END
				END AS LD_END
			FROM OLWHRM1.FB10_BR_FOR_REQ FB10
			INNER JOIN OLWHRM1.LN60_BR_FOR_APV LN60
				ON FB10.BF_SSN = LN60.BF_SSN
				AND FB10.LF_DFR_CTL_NUM = LN60.LF_FOR_CTL_NUM
			WHERE FB10.LC_STA_FOR10 = 'A'
				AND FB10.LC_FOR_STA = 'A'
				AND LN60.LC_STA_LON60 = 'A'
				AND LN60.LD_FOR_BEG <= &END
				AND LN60.LD_FOR_END >= &BEGIN)

FOR READ ONLY WITH UR
);

CREATE TABLE WAIVED AS
SELECT *
	FROM CONNECTION TO DB2 (
		SELECT A.BF_SSN
			,A.LX_ATY AS TEXT
			,B.PF_REQ_ACT
			,B.LD_ATY_RSP
		FROM OLWHRM1.AY20_ATY_TXT A, OLWHRM1.AY10_BR_LON_ATY B 
			WHERE PF_REQ_ACT = 'DRLFA'
			AND LD_ATY_RSP BETWEEN &BEGIN AND &END
			AND A.BF_SSN = B.BF_SSN
			AND A.LN_ATY_SEQ = B.LN_ATY_SEQ
	FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;

/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>> ;  ** INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK;*/
/*QUIT;*/

ENDRSUBMIT;
DATA DOLLAR;
	SET WORKLOCL.DOLLAR;
RUN;
DATA WAIVED;*(DROP=PF_REQ_ACT LD_ATY_RSP);
	SET WORKLOCL.WAIVED;
RUN;
DATA FORDFR;
	SET WORKLOCL.FORDFR;
RUN;

PROC SORT DATA=FORDFR;
	BY BF_SSN LD_BEG LD_END;
RUN;
/*FOR DEFERMENT AND FORBEARANCE CALCULATIONS, */
/*SOME BORROWERS HAVE LAPSES OR MULTIPLE FORBEARANCES */
/*WITHIN THE PREVIOUS MONTH. THE FOLLOWING STEP IS TO*/
/*CREATE A LIST OF DATES COVERED BY A FORBEARANCE OR*/
/*DEFERMENT*/
DATA FORDFR (KEEP= BF_SSN A B C D E F);
SET FORDFR;
BY BF_SSN LD_BEG LD_END;
IF FIRST.BF_SSN THEN DO;
	RETAIN A;
	RETAIN B;
	RETAIN C;
	RETAIN D;
	RETAIN E;
	RETAIN F;
	A=LD_BEG;
	B=LD_END;
	C=.;
	D=.;
	E=.;
	F=.;
END;
IF FIRST.BF_SSN = 0 AND C = . THEN DO;
	IF B >= LD_BEG - 1 THEN DO;
		IF B < LD_END THEN B=LD_END;
	END;
	IF B < LD_BEG - 1 THEN DO;
		C = LD_BEG;
		D = LD_END;
	END;
END;
IF C > 0 AND E = . THEN DO;
	IF D >= LD_BEG - 1 THEN DO;
		IF D < LD_END THEN D = LD_END;
	END;
	IF D < LD_BEG - 1 THEN DO;
		E = LD_BEG;
		F = LD_END;
	END;
END;
IF LAST.BF_SSN THEN OUTPUT ;
RUN;
PROC SQL;
CREATE TABLE AFTERALL AS
SELECT A.*
	,B.A FORMAT=MMDDYY10. 
	,B.B FORMAT=MMDDYY10.
	,B.C FORMAT=MMDDYY10.
	,B.D FORMAT=MMDDYY10.
	,B.E FORMAT=MMDDYY10.
	,B.F FORMAT=MMDDYY10.
FROM DOLLAR A
INNER JOIN FORDFR B
ON A.BF_SSN = B.BF_SSN;
QUIT;

DATA WAIVED;
SET WAIVED;
FORMAT LATEFEE $10.;
IF INDEX(TEXT,'$') > 0 THEN LATEFEE = SUBSTR(TEXT,INDEX(TEXT,'$')+1);
IF INDEX(LATEFEE,' ') > 0 THEN LATEFEE = SUBSTR(LATEFEE,1,INDEX(LATEFEE,' ')); 
IF SUBSTR(LATEFEE,LENGTH(LATEFEE),1) = '.' THEN LATEFEE = SUBSTR(LATEFEE,1,LENGTH(LATEFEE)-1);
ELSE LATEFEE = LATEFEE; 
LATEFEE = TRANSLATE(LATEFEE,' ','A',' ','B',' ','C',' ','D',' ','E',' ','F',' ','G',' ','H',' ','I',' ','J',
' ','K',' ','L',' ','M',' ','N',' ','O',' ','P',' ','Q',' ','R',' ','S',' ','T',' ','U',' ','V',' ','W',' ',
'X',' ','Y',' ','Z',' ','}');
LATEFEE = TRANSLATE(LATEFEE,'','-');
LATEFEE = TRIM(LATEFEE);
IF INDEX(LATEFEE,',') > 0 THEN LATEFEE = SUBSTR(LATEFEE,1,INDEX(LATEFEE,',')-1) || SUBSTR(LATEFEE,INDEX(LATEFEE,',')+1);
RUN;

DATA LATEFEES;
/*(KEEP=NUM_WAIVED DOL_WAIVED ASSESSED COLLECTED PER_COL PER_WAIVED PER_OUTSTD DOL_REMVD NUM_REMVD PER_REMVD) ;*/
	FORMAT COLLECTED DOLLAR10.2;
	FORMAT ASSESSED DOLLAR10.2;
	FORMAT DOL_REMVD DOLLAR10.2;
	FORMAT NUM_WAIVED 4.0;
	FORMAT NUM_REMVD 4.0;
	FORMAT DOL_WAIVED DOLLAR10.2;
	FORMAT PER_COL PERCENT6.4;
	FORMAT PER_WAIVED PERCENT6.2;
	FORMAT PER_OUTSTD PERCENT6.2;
	FORMAT PER_REMVD PERCENT6.2;
	SET WAIVED AFTERALL END=LAST;
			IF (PC_FAT_TYP = ('10') AND PC_FAT_SUB_TYP = ('10')) 
				THEN DO;
					COLLECTED + (-LA_FAT_LTE_FEE);
					IF LC_STA_LON90 = 'A' AND (A <= LD_FAT_EFF <= B OR C <= LD_FAT_EFF <= D OR E <= LD_FAT_EFF <= F)
					THEN DO;
						DOL_REMVD + (-LA_FAT_LTE_FEE);
						NUM_REMVD + 1;
					END;
				END;
			IF (PC_FAT_TYP = ('26') AND PC_FAT_SUB_TYP = ('01'))
				THEN DO;
					ASSESSED + LA_FAT_LTE_FEE;
				END;
			IF (LATEFEE > 0) THEN DO;
					NUM_WAIVED + 1;
					DOL_WAIVED + LATEFEE;
			END;
	IF LAST THEN DO;
		PER_COL = COLLECTED / ASSESSED;
		PER_WAIVED = DOL_WAIVED / ASSESSED;	
		PER_REMVD = DOL_REMVD / ASSESSED;
		COLLECTED = COLLECTED * -1;
		DOL_REMVD = DOL_REMVD * -1;
		PER_OUTSTD = (ASSESSED - (COLLECTED + DOL_WAIVED + DOL_REMVD))/ASSESSED;
		OUTPUT;
	END;
RUN;


PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127;
TITLE 'LATE FEES - DETAIL';
TITLE2	"RUNDATE &RUNDATE";
FOOTNOTE1  	"THIS DOCUMENT MAY CONTAIN BORROWERS' SENSITIVE INFORMATION THAT UHEAA HAS PLEDGED TO PROTECT.";
FOOTNOTE2	'PLEASE TAKE APPROPRIATE PRECAUTIONS TO SAFEGUARD THIS INFORMATION.';
FOOTNOTE3	;
FOOTNOTE4   'JOB = UTLWS41  	 REPORT = ULWS41.LWS41R2';

PROC CONTENTS DATA=LATEFEES OUT=EMPTYSET NOPRINT;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 132*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWS41  	 REPORT = ULWS41.LWS41R2";
	END;
RETURN;
RUN;

PROC PRINT NOOBS SPLIT='/' DATA=LATEFEES WIDTH=UNIFORM WIDTH=MIN LABEL;
	VAR ASSESSED COLLECTED DOL_WAIVED NUM_WAIVED DOL_REMVD NUM_REMVD PER_COL PER_WAIVED PER_REMVD PER_OUTSTD;
	LABEL ASSESSED = 'DOLLARS/ASESSED'
		COLLECTED = 'DOLLARS/COLLECTED'
		DOL_WAIVED = 'DOLLARS/WAIVED'
		NUM_WAIVED = 'NUMBER/WAIVED'
		DOL_REMVD = 'DOLLARS/REMOVED'
		NUM_REMVD = 'NUMBER/REMOVED'
		PER_COL = 'PERCENT/COLLECTED'
		PER_WAIVED = 'PERCENT/WAIVED'
		PER_REMVD = 'PERCENT/REMOVED'
		PER_OUTSTD = 'PERCENT/OUTSTANDING';
RUN;

PROC PRINTTO;
RUN;
