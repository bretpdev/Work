/*
Deployment script for ULS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ULS"
:setvar DefaultFilePrefix "ULS"
:setvar DefaultDataPath "D:\Program Files\Microsoft SQL Server\MSSQL10.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Program Files\Microsoft SQL Server\MSSQL10.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];



GO
PRINT N'Dropping [print].[PrintProcessing].[IX_DELETEDAT_ADDEDAT>]...';


GO
DROP INDEX [IX_DELETEDAT_ADDEDAT>]
    ON [print].[PrintProcessing];


GO
PRINT N'Dropping [print].[PrintProcessing].[IX_PrintProcessing_EmailAddress]...';


GO
DROP INDEX [IX_PrintProcessing_EmailAddress]
    ON [print].[PrintProcessing];


GO
PRINT N'Dropping [print].[PrintProcessing].[IX_SCIPTDATAID_ONECORR_ARCADDPROCESSING_ARCNEEDED]...';


GO
DROP INDEX [IX_SCIPTDATAID_ONECORR_ARCADDPROCESSING_ARCNEEDED]
    ON [print].[PrintProcessing];


GO
PRINT N'Dropping unnamed constraint on [print].[PrintProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] DROP CONSTRAINT [DF__PrintProc__ArcNe__2453463D];


GO
PRINT N'Dropping unnamed constraint on [print].[PrintProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] DROP CONSTRAINT [DF__PrintProc__Imagi__25476A76];


GO
PRINT N'Dropping unnamed constraint on [print].[PrintProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] DROP CONSTRAINT [DF__PrintProc__OnEco__235F2204];


GO
PRINT N'Dropping unnamed constraint on [print].[PrintProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] DROP CONSTRAINT [DF__PrintProc__Added__263B8EAF];


GO
PRINT N'Dropping unnamed constraint on [print].[ScriptData]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [DF__ScriptDat__Activ__2082B559];


GO
PRINT N'Dropping unnamed constraint on [print].[ScriptData]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [DF__ScriptDat__IsEnd__1BBE003C];


GO
PRINT N'Dropping unnamed constraint on [print].[ScriptData]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [DF__ScriptDat__AddBa__1CB22475];


GO
PRINT N'Dropping unnamed constraint on [print].[ScriptData]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [DF__ScriptDat__DoNot__1DA648AE];


GO
PRINT N'Dropping unnamed constraint on [print].[ScriptData]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [DF__ScriptDat__LastP__1E9A6CE7];


GO
PRINT N'Dropping unnamed constraint on [print].[ScriptData]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [DF__ScriptDat__Added__1F8E9120];


GO
PRINT N'Dropping unnamed constraint on [print].[PrintProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] DROP CONSTRAINT [FK__PrintProc__Scrip__2DDCB077];


GO
PRINT N'Dropping unnamed constraint on [print].[PrintProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] DROP CONSTRAINT [FK__PrintProc__Scrip__2ED0D4B0];


GO
PRINT N'Dropping [print].[FK_PrintProcessing_ToArcAddProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] DROP CONSTRAINT [FK_PrintProcessing_ToArcAddProcessing];


GO
PRINT N'Dropping [print].[FK_ArcScriptFileMapping_ToScriptData]...';


GO
ALTER TABLE [print].[ArcScriptDataMapping] DROP CONSTRAINT [FK_ArcScriptFileMapping_ToScriptData];


GO
PRINT N'Dropping [print].[FK_ScriptFiles_ToDocIds]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [FK_ScriptFiles_ToDocIds];


GO
PRINT N'Dropping [print].[FK_ScriptFiles_ToFileHeaders]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [FK_ScriptFiles_ToFileHeaders];


GO
PRINT N'Dropping [print].[FK_ScriptFiles_ToLetters]...';


GO
ALTER TABLE [print].[ScriptData] DROP CONSTRAINT [FK_ScriptFiles_ToLetters];


GO
PRINT N'Altering [print].[ArcScriptDataMapping]...';


GO
SET QUOTED_IDENTIFIER ON;

SET ANSI_NULLS OFF;


GO
ALTER TABLE [print].[ArcScriptDataMapping]
    ADD [ArcResponseCodeId] INT NULL;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [print].[Letters]...';


GO
SET QUOTED_IDENTIFIER ON;

SET ANSI_NULLS OFF;


GO
ALTER TABLE [print].[Letters] ALTER COLUMN [PagesPerDocument] INT NULL;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [print].[PrintProcessing]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [print].[tmp_ms_xx_PrintProcessing] (
    [PrintProcessingId]      INT           IDENTITY (1, 1) NOT NULL,
    [AccountNumber]          CHAR (10)     NOT NULL,
    [EmailAddress]           VARCHAR (256) NULL,
    [ScriptDataId]           INT           NOT NULL,
    [SourceFile]             VARCHAR (100) NULL,
    [LetterData]             VARCHAR (MAX) NOT NULL,
    [CostCenter]             VARCHAR (10)  NOT NULL,
    [InValidAddress]         BIT           DEFAULT ((0)) NOT NULL,
    [DoNotProcessEcorr]      BIT           DEFAULT ((0)) NOT NULL,
    [OnEcorr]                BIT           DEFAULT ((0)) NOT NULL,
    [ArcAddProcessingId]     BIGINT        NULL,
    [ArcNeeded]              BIT           DEFAULT ((0)) NOT NULL,
    [ImagedAt]               DATETIME      NULL,
    [ImagingNeeded]          BIT           DEFAULT ((0)) NOT NULL,
    [EcorrDocumentCreatedAt] DATETIME      NULL,
    [PrintedAt]              DATETIME      NULL,
    [AddedBy]                VARCHAR (50)  NOT NULL,
    [AddedAt]                DATETIME      DEFAULT (getdate()) NOT NULL,
    [DeletedAt]              DATE          NULL,
    [DeletedBy]              VARCHAR (50)  NULL,
    PRIMARY KEY NONCLUSTERED ([PrintProcessingId] ASC) WITH (FILLFACTOR = 95)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [print].[PrintProcessing])
    BEGIN
        SET IDENTITY_INSERT [print].[tmp_ms_xx_PrintProcessing] ON;
        INSERT INTO [print].[tmp_ms_xx_PrintProcessing] ([PrintProcessingId], [AccountNumber], [EmailAddress], [ScriptDataId], [SourceFile], [LetterData], [CostCenter], [OnEcorr], [ArcAddProcessingId], [ArcNeeded], [ImagedAt], [ImagingNeeded], [EcorrDocumentCreatedAt], [PrintedAt], [AddedBy], [AddedAt], [DeletedAt], [DeletedBy])
        SELECT [PrintProcessingId],
               [AccountNumber],
               [EmailAddress],
               [ScriptDataId],
               [SourceFile],
               [LetterData],
               [CostCenter],
               [OnEcorr],
               [ArcAddProcessingId],
               [ArcNeeded],
               [ImagedAt],
               [ImagingNeeded],
               [EcorrDocumentCreatedAt],
               [PrintedAt],
               [AddedBy],
               [AddedAt],
               [DeletedAt],
               [DeletedBy]
        FROM   [print].[PrintProcessing];
        SET IDENTITY_INSERT [print].[tmp_ms_xx_PrintProcessing] OFF;
    END

DROP TABLE [print].[PrintProcessing];

EXECUTE sp_rename N'[print].[tmp_ms_xx_PrintProcessing]', N'PrintProcessing';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [print].[PrintProcessing].[IX_PrintProcessing_ScriptDataId_DeletedAt]...';


GO
CREATE NONCLUSTERED INDEX [IX_PrintProcessing_ScriptDataId_DeletedAt]
    ON [print].[PrintProcessing]([ScriptDataId] ASC, [DeletedAt] ASC)
    INCLUDE([PrintProcessingId], [AccountNumber], [EmailAddress], [LetterData], [OnEcorr], [ArcAddProcessingId], [ArcNeeded], [ImagedAt], [ImagingNeeded], [EcorrDocumentCreatedAt], [PrintedAt]) WITH (FILLFACTOR = 95, PAD_INDEX = ON);


GO
PRINT N'Starting rebuilding table [print].[ScriptData]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [print].[tmp_ms_xx_ScriptData] (
    [ScriptDataId]              INT           IDENTITY (1, 1) NOT NULL,
    [ScriptID]                  VARCHAR (10)  NOT NULL,
    [SourceFile]                VARCHAR (100) NULL,
    [LetterId]                  INT           NOT NULL,
    [DocIdId]                   INT           NULL,
    [FileHeaderId]              INT           NOT NULL,
    [ProcessAllFiles]           BIT           NOT NULL,
    [IsEndorser]                BIT           DEFAULT ((0)) NOT NULL,
    [EndorsersBorrowerSSNIndex] INT           NULL,
    [Priority]                  INT           NULL,
    [AddBarCodes]               BIT           DEFAULT ((0)) NOT NULL,
    [DoNotProcessEcorr]         BIT           DEFAULT ((0)) NOT NULL,
    [InvalidAddressFile]        BIT           DEFAULT ((0)) NOT NULL,
    [LastProcessed]             DATETIME      DEFAULT (getdate()) NOT NULL,
    [AddedBy]                   VARCHAR (50)  NULL,
    [AddedAt]                   DATETIME      DEFAULT (getdate()) NOT NULL,
    [Active]                    BIT           DEFAULT ((1)) NOT NULL,
    PRIMARY KEY CLUSTERED ([ScriptDataId] ASC) WITH (FILLFACTOR = 95),
    CONSTRAINT [tmp_ms_xx_constraint_AK_ScriptData_Priority1] UNIQUE NONCLUSTERED ([Priority] ASC) WITH (FILLFACTOR = 95)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [print].[ScriptData])
    BEGIN
        SET IDENTITY_INSERT [print].[tmp_ms_xx_ScriptData] ON;
        INSERT INTO [print].[tmp_ms_xx_ScriptData] ([ScriptDataId], [ScriptId], [SourceFile], [LetterId], [DocIdId], [FileHeaderId], [ProcessAllFiles], [IsEndorser], [EndorsersBorrowerSSNIndex], [Priority], [AddBarCodes], [DoNotProcessEcorr], [LastProcessed], [AddedBy], [AddedAt], [Active])
        SELECT   [ScriptDataId],
                 [ScriptId],
                 [SourceFile],
                 [LetterId],
                 [DocIdId],
                 [FileHeaderId],
                 [ProcessAllFiles],
                 [IsEndorser],
                 [EndorsersBorrowerSSNIndex],
                 [Priority],
                 [AddBarCodes],
                 [DoNotProcessEcorr],
                 [LastProcessed],
                 [AddedBy],
                 [AddedAt],
                 [Active]
        FROM     [print].[ScriptData]
        ORDER BY [ScriptDataId] ASC;
        SET IDENTITY_INSERT [print].[tmp_ms_xx_ScriptData] OFF;
    END

DROP TABLE [print].[ScriptData];

EXECUTE sp_rename N'[print].[tmp_ms_xx_ScriptData]', N'ScriptData';

EXECUTE sp_rename N'[print].[tmp_ms_xx_constraint_AK_ScriptData_Priority1]', N'AK_ScriptData_Priority', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating unnamed constraint on [print].[PrintProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] WITH NOCHECK
    ADD FOREIGN KEY ([ScriptDataId]) REFERENCES [print].[ScriptData] ([ScriptDataId]);


GO
PRINT N'Creating [print].[FK_PrintProcessing_ToArcAddProcessing]...';


GO
ALTER TABLE [print].[PrintProcessing] WITH NOCHECK
    ADD CONSTRAINT [FK_PrintProcessing_ToArcAddProcessing] FOREIGN KEY ([ArcAddProcessingId]) REFERENCES [dbo].[ArcAddProcessing] ([ArcAddProcessingId]);


GO
PRINT N'Creating [print].[FK_ArcScriptFileMapping_ToScriptData]...';


GO
ALTER TABLE [print].[ArcScriptDataMapping] WITH NOCHECK
    ADD CONSTRAINT [FK_ArcScriptFileMapping_ToScriptData] FOREIGN KEY ([ScriptDataId]) REFERENCES [print].[ScriptData] ([ScriptDataId]);


GO
PRINT N'Creating [print].[FK_ScriptFiles_ToDocIds]...';


GO
ALTER TABLE [print].[ScriptData] WITH NOCHECK
    ADD CONSTRAINT [FK_ScriptFiles_ToDocIds] FOREIGN KEY ([DocIdId]) REFERENCES [print].[DocIds] ([DocIdId]);


GO
PRINT N'Creating [print].[FK_ScriptFiles_ToFileHeaders]...';


GO
ALTER TABLE [print].[ScriptData] WITH NOCHECK
    ADD CONSTRAINT [FK_ScriptFiles_ToFileHeaders] FOREIGN KEY ([FileHeaderId]) REFERENCES [print].[FileHeaders] ([FileHeaderId]);


GO
PRINT N'Creating [print].[FK_ScriptFiles_ToLetters]...';


GO
ALTER TABLE [print].[ScriptData] WITH NOCHECK
    ADD CONSTRAINT [FK_ScriptFiles_ToLetters] FOREIGN KEY ([LetterId]) REFERENCES [print].[Letters] ([LetterId]);


GO
PRINT N'Creating [print].[FK_ArcScriptDataMapping_ArcResponseCodes]...';


GO
ALTER TABLE [print].[ArcScriptDataMapping] WITH NOCHECK
    ADD CONSTRAINT [FK_ArcScriptDataMapping_ArcResponseCodes] FOREIGN KEY ([ArcResponseCodeId]) REFERENCES [dbo].[ArcResponseCodes] ([ArcResponseCodeId]);


GO
PRINT N'Creating [print].[CK_ScriptData_EndorserBorrowerSSNIndex]...';


GO
ALTER TABLE [print].[ScriptData] WITH NOCHECK
    ADD CONSTRAINT [CK_ScriptData_EndorserBorrowerSSNIndex] CHECK ([IsEndorser]=(0) OR [EndorsersBorrowerSSNIndex] IS NOT NULL);


GO
PRINT N'Creating [print].[CK_ScriptData_EndorserBorrowerSSNIndex2]...';


GO
ALTER TABLE [print].[ScriptData] WITH NOCHECK
    ADD CONSTRAINT [CK_ScriptData_EndorserBorrowerSSNIndex2] CHECK ([IsEndorser]=(1) OR [EndorsersBorrowerSSNIndex] IS NULL);


GO
PRINT N'Altering [print].[LoadPrintData]...';


GO

ALTER PROCEDURE [print].[LoadPrintData]
(
	@ScriptDataId int,
	@SourceFile VARCHAR(100),
	@AddedBy VARCHAR(50)
)

AS

BEGIN TRANSACTION
DECLARE @ERROR INT = 0 
DECLARE @AccountNumberLocation INT = (
	SELECT
		FH.AccountNumberIndex
	FROM
		[print].ScriptData SD
		INNER JOIN [print].FileHeaders FH
			ON FH.FileHeaderId = SD.FileHeaderId
	WHERE
		SD.ScriptDataId = @ScriptDataId)

DECLARE @CostCenterCodeIndex INT = (
	SELECT
		FH.CostCenterCodeIndex
	FROM
		[print].ScriptData SD
		INNER JOIN [print].FileHeaders FH
			ON FH.FileHeaderId = SD.FileHeaderId
	WHERE
		SD.ScriptDataId = @ScriptDataId)

SET @ERROR = @@ERROR

IF @ERROR != 0
BEGIN
	ROLLBACK
	RAISERROR('AN ERROR OCCURED PULLING THE ACCOUNT NUMBER INDEX FOR SCRIPTDATAID:%d', 16, 1, @ScriptDataId) 
END

		

--Insert data into Print.PrintProcessing from _BulkLoad
INSERT INTO [print].PrintProcessing
(
	AccountNumber, 
	ScriptDataId,
	SourceFile,
	LetterData,
	ArcNeeded,
	ImagingNeeded, 
	AddedBy,
	CostCenter,
	InValidAddress,
	DoNotProcessEcorr
) 
SELECT DISTINCT
	dbo.SplitAndRemoveQuotes(BL.LineData, ',', @AccountNumberLocation, 1) as AccountNumber, 
	@ScriptDataId,
	@SourceFile,
	BL.LineData,
	CASE WHEN SD.InvalidAddressFile = 1 THEN 1 WHEN ASM.ArcId IS NOT NULL THEN 1 ELSE 0 END,
	CASE WHEN SD.InvalidAddressFile = 1 THEN 0 WHEN DI.DocIdId IS NOT NULL THEN 1 ELSE 0 END,
	@AddedBy,
	dbo.SplitAndRemoveQuotes(BL.LineData, ',', @CostCenterCodeIndex, 1) as CostCenter,
	SD.InvalidAddressFile,
	CASE WHEN SD.InvalidAddressFile = 1 THEN 1 ELSE SD.DoNotProcessEcorr END
FROM
	[print]._BulkLoad BL
	INNER JOIN [print].ScriptData SD
		ON SD.ScriptDataId = @ScriptDataId
	LEFT JOIN [print].DocIds DI
		ON DI.DocIdId = SD.DocIdId
	LEFT JOIN [print].ArcScriptDataMapping ASM
		ON ASM.ScriptDataId = SD.ScriptDataId
ORDER BY
	AccountNumber

SET @ERROR = @ERROR + @@ERROR

IF @ERROR != 0
BEGIN
	ROLLBACK
	RAISERROR('AN ERROR CREATING [print].PrintProcessing FOR SCRIPTDATAID:%d', 16, 1, @ScriptDataId) 
END

UPDATE 
	S
SET
	S.EmailAddress = COALESCE(OQ.EmailAddress, 'ECORR@UHEAA.ORG'),
	S.OnEcorr = CASE WHEN S.InValidAddress = 1 THEN 0 ELSE COALESCE(OQ.OnEcorr,0) END
FROM
	[print].PrintProcessing S
	LEFT JOIN 
	(
		SELECT
			 PH05.DF_SPE_ID AS AccountNumber,
			 PH05.DX_CNC_EML_ADR AS EmailAddress,
			 CASE
				WHEN BFH.BillingFileHeaderDataId IS NULL AND PH05.DI_CNC_ELT_OPI = 'Y' AND PH05.DI_VLD_CNC_EML_ADR = 'Y' THEN 1
				WHEN BFH.BillingFileHeaderDataId IS NOT NULL AND PH05.DI_CNC_EBL_OPI = 'Y' AND PH05.DI_VLD_CNC_EML_ADR = 'Y' THEN 1
				ELSE 0
			END AS OnEcorr
		FROM 
			UDW..PH05_CNC_EML PH05
			LEFT JOIN [print].ScriptData SD 
				ON SD.ScriptDataId = @ScriptDataId
			LEFT JOIN [print].BillingFileHeaderData BFH
				ON BFH.FileHeaderId = SD.FileHeaderId
	) OQ
		ON S.AccountNumber = OQ.AccountNumber
	WHERE
		S.EmailAddress IS NULL

SET @ERROR = @ERROR + @@ERROR

IF @ERROR != 0
BEGIN
	ROLLBACK
	RAISERROR('AN ERROR UPDATING [print].PrintProcessing FOR SCRIPTDATAID:%d', 16, 1, @ScriptDataId) 
END

DELETE FROM [print]._BulkLoad

SET @ERROR = @ERROR + @@ERROR

IF @ERROR != 0
BEGIN
	ROLLBACK
	RAISERROR('AN ERROR OCCURED DELETING _BULKLOAD SCRIPTDATAID:%d', 16, 1, @ScriptDataId) 
END
ELSE
	COMMIT
GO
PRINT N'Altering [print].[GetArcData]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER PROCEDURE [print].[GetArcData]
	@ScriptDataId INT
	
AS
	SELECT
		MAP.ArcScriptDataMappingId,
		C.Comment,
		A.Arc,
		MAP.ArcTypeId as [Type],
		ARC.ResponseCode
	FROM
		ArcScriptDataMapping MAP
		INNER JOIN Arcs A 
			ON A.ArcId = MAP.ArcId
		LEFT JOIN Comments C
			ON C.CommentId = MAP.CommentId
		LEFT JOIN DBO.ArcResponseCodes ARC
			ON ARC.ArcResponseCodeId = MAP.ArcResponseCodeId
	WHERE
		MAP.ScriptDataId = @ScriptDataId
RETURN 0
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [print].[GetNextScriptForProcessing]...';


GO




ALTER PROCEDURE [print].[GetNextScriptForProcessing]
	@ScriptDataIds ProcessedScriptDataIds READONLY
AS
BEGIN TRANSACTION
DECLARE @ScriptDataId int = NULL
	
SELECT
	@ScriptDataId = sd.ScriptDataId
FROM
	[print].ScriptData SD
	INNER JOIN
	(
		SELECT
			MIN(SD.[Priority]) [Priority]
		FROM
			[print].ScriptData SD
			INNER JOIN
			(
				SELECT
					CAST(MIN(LastProcessed) AS DATE) [LastProcessed]
				FROM
					[print].ScriptData
				WHERE
					Active = 1
			)LP 
				ON LP.LastProcessed = CAST(SD.LastProcessed AS DATE)
			LEFT JOIN 
			(
				SELECT 
					CAST(context_info AS INT) [ScriptDataId]
				FROM 
					sys.dm_exec_sessions
				WHERE 
					context_info IS NOT NULL AND  context_info != 0x
				GROUP BY 
					cast(context_info as INT)
			) CON
				ON CON.ScriptDataId = SD.ScriptDataId 
		WHERE
			CON.ScriptDataId IS NULL
			AND SD.ScriptDataId NOT IN (SELECT * FROM @ScriptDataIds)
	)POP
		ON POP.[Priority] = SD.[Priority]

IF @ScriptDataId IS NOT NULL
BEGIN
	DECLARE @binary VARBINARY(128) = CAST(@ScriptDataId AS VARBINARY(128))
	SET CONTEXT_INFO @binary 
END

SELECT 
	SD.ScriptDataId,
	SD.ScriptID,
	SD.SourceFile,
	L.Letter,
	DID.DocIdName,
	FH.FileHeader,
	FH.StateIndex,
	FH.AccountNumberIndex,
	FH.CostCenterCodeIndex,
	SD.ProcessAllFiles,
	SD.[Priority],
	SD.DoNotProcessEcorr,
	SD.AddBarCodes,
	BFHD.BillDueDateIndex,
	BFHD.BillSeqIndex,
	BFHD.TotalDueIndex,
	BFHD.BillCreateDateIndex,
	SD.IsEndorser,
	SD.EndorsersBorrowerSSNIndex,
	SD.InvalidAddressFile,
	SLR.Recipient
FROM
	[print].ScriptData SD
	INNER JOIN [print].FileHeaders FH
		ON FH.FileHeaderId = SD.FileHeaderId
	INNER JOIN [print].Letters L
		ON L.LetterId = SD.LetterId
	LEFT JOIN [print].DocIds DID
		ON DID.DocIdId = SD.DocIdId
	LEFT JOIN [print].BillingFileHeaderData BFHD
		ON BFHD.FileHeaderId = FH.FileHeaderId
	LEFT JOIN ULS.[dbo].SpecialLetterRecipients SLR
		on SLR.LetterId = l.Letter
WHERE
	SD.ScriptDataId = @ScriptDataId
	
COMMIT
RETURN 0
GO
PRINT N'Altering [print].[GetPendingAccountsForScript]...';


GO

ALTER PROCEDURE [print].[GetPendingAccountsForScript]
(
	@ScriptDataId INT
)
AS
BEGIN
	SELECT DISTINCT
		PP.PrintProcessingId,
		PP.AccountNumber,
		PP.EmailAddress,
		PD10.DF_PRS_ID AS BF_SSN,
		pp.LetterData,
		PP.ArcAddProcessingId,
		PP.ArcNeeded,
		PP.ImagedAt,
		PP.ImagingNeeded,
		PP.PrintedAt,
		PP.EcorrDocumentCreatedAt,
		PP.OnEcorr,
		PP.InValidAddress,
		PP.DoNotProcessEcorr
	FROM
		[print].PrintProcessing PP
		INNER JOIN [print].ScriptData SD
			ON SD.ScriptDataId = PP.ScriptDataId
		INNER JOIN [print].FileHeaders FH
			ON FH.FileHeaderId = SD.FileHeaderId
		INNER JOIN [print].Letters L 
			ON L.LetterId = SD.LetterId
		LEFT JOIN [print].DocIds D
			ON D.DocIdId = SD.DocIdId
		LEFT JOIN [UDW].[dbo].PD10_PRS_NME PD10
			ON PD10.DF_SPE_ACC_ID = PP.AccountNumber
WHERE 
       PP.ScriptDataId = @ScriptDataId
       AND (
			  (PP.ArcAddProcessingId IS NULL AND PP.ArcNeeded = 1)
              OR (PP.PrintedAt IS NULL AND (pp.OnEcorr = 0 AND PP.InValidAddress = 0))
              OR (PP.ImagedAt IS NULL AND  PP.ImagingNeeded = 1)
			  OR (PP.EcorrDocumentCreatedAt IS NULL AND PP.DoNotProcessEcorr = 0)
		   )
		AND DeletedAt IS NULL
		AND PP.AccountNumber != ''
ORDER BY
	pp.AccountNumber
END;
GO





GO
PRINT N'Refreshing [print].[GetHeadersForArcs]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[print].[GetHeadersForArcs]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [print].[GetAllScriptsForProcessing]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[print].[GetAllScriptsForProcessing]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [print].[GetBillingLetterIds]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[print].[GetBillingLetterIds]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [print].[InsertPrintData]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[print].[InsertPrintData]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [print].[CheckFileProcessed]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[CheckFileProcessed]';


GO
PRINT N'Refreshing [print].[SetArcAddComplete]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetArcAddComplete]';


GO
PRINT N'Refreshing [print].[SetEcorrDocumentCreatedAt]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetEcorrDocumentCreatedAt]';


GO
PRINT N'Refreshing [print].[SetEcorrDocumentCreatedAtWithTable]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetEcorrDocumentCreatedAtWithTable]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [print].[SetImagedAt]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetImagedAt]';


GO
PRINT N'Refreshing [print].[SetImagedAtWithTable]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetImagedAtWithTable]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [print].[SetImagingComplete]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetImagingComplete]';


GO
PRINT N'Refreshing [print].[SetPrintingComplete]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetPrintingComplete]';


GO
PRINT N'Refreshing [print].[SetPrintingCompleteWithTable]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetPrintingCompleteWithTable]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [print].[UpdatePrinted]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[UpdatePrinted]';


GO
PRINT N'Refreshing [print].[GetFileNamesForScript]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[GetFileNamesForScript]';


GO
PRINT N'Refreshing [print].[SetLastProcessed]...';


GO
EXECUTE sp_refreshsqlmodule N'[print].[SetLastProcessed]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [print].[ArcScriptDataMapping] WITH CHECK CHECK CONSTRAINT [FK_ArcScriptFileMapping_ToScriptData];

ALTER TABLE [print].[ScriptData] WITH CHECK CHECK CONSTRAINT [FK_ScriptFiles_ToDocIds];

ALTER TABLE [print].[ScriptData] WITH CHECK CHECK CONSTRAINT [FK_ScriptFiles_ToFileHeaders];

ALTER TABLE [print].[ScriptData] WITH CHECK CHECK CONSTRAINT [FK_ScriptFiles_ToLetters];

ALTER TABLE [print].[ArcScriptDataMapping] WITH CHECK CHECK CONSTRAINT [FK_ArcScriptDataMapping_ArcResponseCodes];

ALTER TABLE [print].[ScriptData] WITH CHECK CHECK CONSTRAINT [CK_ScriptData_EndorserBorrowerSSNIndex];

ALTER TABLE [print].[ScriptData] WITH CHECK CHECK CONSTRAINT [CK_ScriptData_EndorserBorrowerSSNIndex2];

GO
PRINT N'Update complete.';


GO
