/*----------------------------------------------*
| UTLWO36 TIMELY PAYMENT ORIGINATION FEE CREDIT |  
*----------------------------------------------*/
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWO36.LWO36R2";
FILENAME REPORT3 "&RPTLIB/ULWO36.LWO36R3";
FILENAME REPORT4 "&RPTLIB/ULWO36.LWO36R4";
FILENAME REPORT5 "&RPTLIB/ULWO36.LWO36R5";
FILENAME REPORT6 "&RPTLIB/ULWO36.LWO36R6";
FILENAME REPORT7 "&RPTLIB/ULWO36.LWO36R7";
FILENAME REPORTZ "&RPTLIB/ULWO36.LWO36RZ";

DATA _NULL_;
CALL SYMPUT('RUNDATE',PUT(INTNX('DAY',TODAY(),0,'beginning'), MMDDYY10.));
CALL SYMPUT('RUNTIME',PUT(TIME(), TIME.));
RUN;

LIBNAME  WORKLOCL  REMOTE  SERVER=DUSTER  SLIBREF=WORK;
RSUBMIT;
%MACRO SQLCHECK (SQLRPT= );
%IF &SQLXRC NE 0 %THEN %DO;
	DATA _NULL_;
    FILE REPORTZ NOTITLES;
    PUT @01 " ********************************************************************* "
      / @01 " ****  THE SQL CODE ABOVE HAS EXPERIENCED AN ERROR.               **** "
      / @01 " ****  THE SAS LOG IN &SQLRPT SHOULD BE REVIEWED.          **** "       
      / @01 " ********************************************************************* "
      / @01 " ****  THE SQL ERROR CODE IS  &SQLXRC  AND THE SQL ERROR MESSAGE  **** "
      / @01 " ****  &SQLXMSG   **** "
      / @01 " ********************************************************************* ";
	RUN;
%END;
%MEND;
PROC SQL stimer;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE TIPOFC_A AS
SELECT 
	*
FROM CONNECTION TO DB2 
(
	SELECT DISTINCT 
	PD10.DM_PRS_LST  
	,LN10.BF_SSN 
	,LN10.LN_SEQ 
	,LN10.IC_LON_PGM 
	,LN10.LD_LON_1_DSB 
	,LN10.LA_LON_AMT_GTR
	,LN10.LD_LON_GTR
	,LN10.LF_LON_CUR_OWN
	,LN10.LA_CUR_PRI
	,DW01.WC_DW_LON_STA
	,BillData.LD_BIL_CRT 
	,BillData.LN_SEQ_BIL_WI_DTE 
	,BillData.LC_BIL_TYP 
	,BillData.LD_BIL_STS_RIR_TOL
	,BillData.LD_BIL_DU_LON
	,BillData.LI_BIL_DLQ_OVR_RIR
	,BillData.LC_STA_LON80
	,UTOFD.UTOFD_IND
	,DRLFA.DRLFA_IND
	,TS01.TS01_IND
	,COALESCE(UTMOF_COUNT,0) AS UTMOF_COUNT
	,ABS(LN90.AMNT) AS AMNT
	,LN90.TRX
	,0.00 AS Z_AMNT
	,'' AS Z_TRX
	,AY10.LD_ATY_REQ_RCV
FROM 
	OLWHRM1.LN10_LON LN10
	INNER JOIN OLWHRM1.PD10_PRS_NME PD10
		 ON LN10.BF_SSN = PD10.DF_PRS_ID
	INNER JOIN OLWHRM1.DW01_DW_CLC_CLU DW01
		ON LN10.BF_SSN = DW01.BF_SSN
		AND LN10.LN_SEQ = DW01.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT 
			LN85.BF_SSN
			,LN85.LN_SEQ
			,'X' AS UTOFD_IND
		FROM 
			OLWHRM1.AY10_BR_LON_ATY AY10
			INNER JOIN OLWHRM1.LN85_LON_ATY LN85
				ON AY10.BF_SSN = LN85.BF_SSN
				AND AY10.LN_ATY_SEQ = LN85.LN_ATY_SEQ
		WHERE 
			AY10.PF_REQ_ACT = 'UTOFD'
			AND AY10.LC_STA_ACTY10 = 'A'
	) UTOFD
		ON UTOFD.BF_SSN = LN10.BF_SSN
		AND UTOFD.LN_SEQ = LN10.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT 
			LN85.BF_SSN
			,LN85.LN_SEQ
			,'X' AS DRLFA_IND
		FROM 
			OLWHRM1.AY10_BR_LON_ATY AY10
			INNER JOIN OLWHRM1.LN85_LON_ATY LN85
				ON AY10.BF_SSN = LN85.BF_SSN
				AND AY10.LN_ATY_SEQ = LN85.LN_ATY_SEQ
		WHERE 
			AY10.PF_REQ_ACT = 'DRLFA'
			AND AY10.LC_STA_ACTY10 = 'A'
	) DRLFA
		ON DRLFA.BF_SSN = LN10.BF_SSN
		AND DRLFA.LN_SEQ = LN10.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT 
			LN85.BF_SSN
			,LN85.LN_SEQ
			,COUNT(*) AS UTMOF_COUNT
		FROM 
			OLWHRM1.AY10_BR_LON_ATY AY10
			INNER JOIN OLWHRM1.LN85_LON_ATY LN85
				ON AY10.BF_SSN = LN85.BF_SSN
				AND AY10.LN_ATY_SEQ = LN85.LN_ATY_SEQ
		WHERE 
			AY10.PF_REQ_ACT = 'UTMOF'
			AND AY10.LC_STA_ACTY10 = 'A'
		GROUP BY 
			LN85.BF_SSN,
			LN85.LN_SEQ
	) UTMOF
		ON UTMOF.BF_SSN = LN10.BF_SSN
		AND UTMOF.LN_SEQ = LN10.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT 
			LN90.BF_SSN
			,LN90.LN_SEQ
			,'X' AS TS01_IND
		FROM 
			OLWHRM1.LN90_FIN_ATY LN90
		WHERE 
			LN90.PC_FAT_TYP = '26'
			AND LN90.PC_FAT_SUB_TYP = '01'
			AND LN90.LC_STA_LON90 = 'A'
			AND COALESCE(LN90.LC_FAT_REV_REA,'') = ''
	) TS01
		ON TS01.BF_SSN = LN10.BF_SSN
		AND TS01.LN_SEQ = LN10.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT 
			BIL.BF_SSN
			,LN_BIL.LN_SEQ
			,BIL.LD_BIL_CRT 
			,BIL.LN_SEQ_BIL_WI_DTE 
			,BIL.LC_BIL_TYP 
			,LN_BIL.LD_BIL_STS_RIR_TOL
			,LN_BIL.LD_BIL_DU_LON
			,LN_BIL.LI_BIL_DLQ_OVR_RIR
			,LN_BIL.LC_STA_LON80
		FROM 
			OLWHRM1.BL10_BR_BIL BIL
			INNER JOIN OLWHRM1.LN80_LON_BIL_CRF LN_BIL
				ON BIL.BF_SSN = LN_BIL.BF_SSN
				AND BIL.LD_BIL_CRT = LN_BIL.LD_BIL_CRT
				AND BIL.LN_SEQ_BIL_WI_DTE = LN_BIL.LN_SEQ_BIL_WI_DTE
		WHERE 
			BIL.LC_BIL_TYP = 'P'
	) BillData
		ON LN10.BF_SSN = BillData.BF_SSN
		AND LN10.LN_SEQ = BillData.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT
			BF_SSN, 
			LN_SEQ,
			SUM(COALESCE(LA_FAT_CUR_PRI,0)) AS AMNT,
			PC_FAT_TYP || PC_FAT_SUB_TYP AS TRX
		FROM 
			OLWHRM1.LN90_FIN_ATY 
		WHERE 
			(
				( 
					PC_FAT_TYP IN('01','80','14')
				    AND PC_FAT_SUB_TYP = '01'
				)
				OR 
				(
					PC_FAT_TYP = '02'
					AND PC_FAT_SUB_TYP = '91'
				)
				OR 
				(
					PC_FAT_TYP = '14'
					AND PC_FAT_SUB_TYP IN ('86','48')
				)
			)
			AND COALESCE(LC_FAT_REV_REA,'') = ''
			AND LC_STA_LON90 = 'A'
		 GROUP BY 
			BF_SSN, 
			LN_SEQ, 
			PC_FAT_TYP || PC_FAT_SUB_TYP 
	) LN90
		ON LN10.BF_SSN = LN90.BF_SSN
		AND LN10.LN_SEQ = LN90.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT DISTINCT 
			LN85.BF_SSN	
			,AY10.LD_ATY_REQ_RCV
		FROM 
			OLWHRM1.AY10_BR_LON_ATY AY10
			INNER JOIN OLWHRM1.AY15_ATY_CMT AY15
				ON AY10.BF_SSN = AY15.BF_SSN
				AND AY10.LN_ATY_SEQ = AY15.LN_ATY_SEQ
			INNER JOIN OLWHRM1.AY20_ATY_TXT AY20
				ON AY15.BF_SSN = AY20.BF_SSN
				AND AY15.LN_ATY_SEQ = AY20.LN_ATY_SEQ
				AND AY15.LN_ATY_CMT_SEQ = AY20.LN_ATY_CMT_SEQ
			INNER JOIN OLWHRM1.LN85_LON_ATY LN85
				ON AY10.BF_SSN = LN85.BF_SSN
				AND AY10.LN_ATY_SEQ = LN85.LN_ATY_SEQ 
		WHERE 
			AY10.PF_REQ_ACT = 'U48MD'
			AND SUBSTR(LX_ATY,1,69) = '48 ON TIME PAYMENT DISQUALIFICATION - LOAN MORE THAN 15 DAYS PAST DUE'
	) AY10
		ON LN10.BF_SSN = AY10.BF_SSN
WHERE 
	LN10.IC_LON_PGM IN ('PLUS','STFFRD','UNSTFD')
	AND LN10.LC_STA_LON10 = 'R'
	AND LN10.LD_LON_1_DSB >= '01/01/1995'
	AND LN10.LD_LON_GTR < '05/01/2000'
	AND DW01.WC_DW_LON_STA NOT IN ('23','88')
	AND NOT EXISTS 
	( 
  		SELECT 
			LN90W.* 
  		FROM 
			OLWHRM1.LN90_FIN_ATY LN90W 
  		WHERE 
			LN90W.BF_SSN = LN10.BF_SSN 
  			AND LN90W.LN_SEQ = LN10.LN_SEQ 
  			AND LN90W.PC_FAT_TYP = '10' 
  			AND LN90W.PC_FAT_SUB_TYP = '34' 
  			AND LN90W.LC_STA_LON90 = 'A' 
  	) 

FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
/*%PUT  SQLXRC= >>> &SQLXRC <<< ||| SQLXMSG= >>> &SQLXMSG >>>  ;  * INCLUDES ERROR MESSAGES TO SAS LOG  ;*/
/*%SQLCHECK (SQLRPT=ULWO36.LWO36RZ);*/
/*QUIT;*/
ENDRSUBMIT;

DATA TIPOFC_A; SET WORKLOCL.TIPOFC_A; RUN;

/*************************************************************************************
* CALCULATE THE ORIGINATION FEE 
*************************************************************************************/
%MACRO STP2(DS,BYVAL1,BYVAL2);
PROC SORT DATA=&DS NODUPKEY;
	BY &BYVAL1 ;
RUN;

PROC TRANSPOSE DATA=&DS OUT=&DS (DROP=_NAME_);
VAR AMNT;
	BY &BYVAL2 ;
	ID TRX;
RUN;
%MEND STP2;

%MACRO STP3(DS,TRX_TYP);
DATA &DS;
	SET &DS;
FORMAT &TRX_TYP 10.2;
IF &TRX_TYP = . THEN &TRX_TYP = 0;
ELSE &TRX_TYP = ABS(&TRX_TYP);
RUN;
%MEND STP3;

PROC SQL;
CREATE TABLE CALCA AS
SELECT DISTINCT 
	BF_SSN
	,AMNT 
	,TRX
	,Z_AMNT 
	,Z_TRX
	,'' AS O291_IND
	,'' AS O101_IND
FROM 
	TIPOFC_A
;
QUIT;
/*************************************************************************************
* DECIDE WHICH FORMULA TO USE
*************************************************************************************/
PROC SQL;
CREATE TABLE FRMLA AS
SELECT DISTINCT 
	BF_SSN
	, 'C' AS FRMLA_IND
FROM CALCA
;
QUIT;
/*************************************************************************************
* BREAK OUT ZIONS REGION FINANCIAL TRANSACTIONS AND DECIDE WHICH TRANSACTIONS TO USE 
*************************************************************************************/
DATA FIN (KEEP=BF_SSN AMNT TRX O291_IND O101_IND );
SET CALCA;
RUN;

DATA FINZ (KEEP=BF_SSN Z_AMNT Z_TRX O291_IND O101_IND );
SET CALCA;
	WHERE Z_TRX ^= '';
RUN;

PROC SORT DATA=FIN NODUPRECS ;BY BF_SSN;RUN;
PROC SORT DATA=FINZ NODUPRECS;BY BF_SSN;RUN;

DATA FIN (DROP=O291_IND O101_IND);
SET FIN;
	IF O291_IND = 'Y' AND TRX = '0291' THEN DELETE;
	ELSE OUTPUT;
RUN;

DATA FINZ (DROP=Z_TRX Z_AMNT O291_IND O101_IND);
SET FINZ;
	TRX = Z_TRX;
	AMNT = Z_AMNT;
RUN;

DATA FIN; SET FIN FINZ; RUN;

PROC SQL;
CREATE TABLE OFEE AS
SELECT DISTINCT 
	A.BF_SSN
	,A.TRX	
	,B.FRMLA_IND
	,SUM(AMNT) AS AMNT
FROM 
	FIN A
	INNER JOIN FRMLA B
		ON A.BF_SSN = B.BF_SSN
GROUP BY 
	A.BF_SSN
	,A.TRX	
;
QUIT;

%STP2(OFEE,BF_SSN TRX FRMLA_IND,BF_SSN FRMLA_IND);
%STP3(OFEE,_0101);
%STP3(OFEE,_0685);
%STP3(OFEE,_1401);
%STP3(OFEE,_0291);
%STP3(OFEE,_1486);
%STP3(OFEE,_1448);
%STP3(OFEE,_8001);
/*************************************************************************************
* FINAL ORIGINATION FEE CALCULATION
*************************************************************************************/
DATA OFEE;
SET OFEE; 
FORMAT CR_AMT 10.2;
IF FRMLA_IND IN ('C','A') THEN 
	CR_AMT = ROUND(((_0101 + _0291 + _0685) * .03) - _1401 - _1486 - _1448,.01);
ELSE IF FRMLA_IND = 'B' THEN 
	CR_AMT = ROUND(((_0101 + _0685) * .03) - _1401 - _1486 - _1448,.01);
RUN;

DATA OFEE (KEEP=BF_SSN /*LN_SEQ*/);
SET OFEE;
WHERE CR_AMT >= 240;
RUN;
/*************************************************************************************
* CREATE DATA SET WITH U48MD ARC INFORMATION
*************************************************************************************/
PROC SQL;
CREATE TABLE U48MD AS 
SELECT DISTINCT 
	BF_SSN
	,LD_ATY_REQ_RCV
FROM 
	TIPOFC_A
WHERE 
	LD_ATY_REQ_RCV ^= .
;
QUIT;

PROC SQL;
CREATE TABLE TIPOFC AS
SELECT DISTINCT 
	A.DM_PRS_LST  
	,A.BF_SSN 
	,A.LN_SEQ 
	,A.IC_LON_PGM 
	,A.LD_LON_1_DSB 
	,A.LA_LON_AMT_GTR
	,A.LD_LON_GTR
	,A.LF_LON_CUR_OWN
	,A.LA_CUR_PRI
	,A.WC_DW_LON_STA
	,A.LD_BIL_CRT 
	,A.LN_SEQ_BIL_WI_DTE 
	,A.LC_BIL_TYP 
	,A.LD_BIL_STS_RIR_TOL
	,A.LD_BIL_DU_LON
	,A.LI_BIL_DLQ_OVR_RIR
	,A.LC_STA_LON80
	,A.UTOFD_IND
	,A.DRLFA_IND
	,A.TS01_IND
	,A.UTMOF_COUNT
FROM 
	TIPOFC_A A
	INNER JOIN OFEE B
		ON A.BF_SSN = B.BF_SSN
;
QUIT;

DATA I_BILL (KEEP=BF_SSN LN_SEQ LD_BIL_CRT LN_SEQ_BIL_WI_DTE LC_BIL_TYP 
		LD_BIL_DU_LON LI_BIL_DLQ_OVR_RIR LD_BIL_STS_RIR_TOL BILL_SAT);
SET TIPOFC;
	IF LD_BIL_STS_RIR_TOL ^= . THEN BILL_SAT = 'Y';
	ELSE BILL_SAT = 'N';
RUN;

PROC SORT DATA=I_BILL NODUPKEY;
	BY BF_SSN LN_SEQ LD_BIL_DU_LON BILL_SAT LI_BIL_DLQ_OVR_RIR;
RUN;
/*************************************************************************************
* GET THE 24TH INSTALLMENT BILL INFO IF IT EXISTS
*************************************************************************************/
DATA ARC_TEST (KEEP=BF_SSN LD_BIL_STS_RIR_TOL I);
SET I_BILL;
	BY BF_SSN LN_SEQ LD_BIL_DU_LON BILL_SAT LI_BIL_DLQ_OVR_RIR;
	WHERE LI_BIL_DLQ_OVR_RIR <> 'Y'	AND BILL_SAT <> 'N';
	IF FIRST.LN_SEQ THEN i=1;
	ELSE i+1;
	IF i=24 THEN OUTPUT;
RUN;

PROC SQL;
CREATE TABLE COUNTS AS 
SELECT DISTINCT 
	A.DM_PRS_LST  
	,A.BF_SSN 
	,A.LN_SEQ 
	,A.IC_LON_PGM 
	,A.LD_LON_1_DSB 
	,A.LA_LON_AMT_GTR
	,A.LD_LON_GTR
	,A.LF_LON_CUR_OWN
	,A.WC_DW_LON_STA
	,A.LA_CUR_PRI
	,A.UTOFD_IND
	,A.DRLFA_IND
	,A.TS01_IND
	,A.UTMOF_COUNT
	,COALESCE(B.C1,0) AS IBS_COUNT
	,COALESCE(C.C2,0) AS DT1_COUNT_30
	,COALESCE(D.C3,0) AS DT2_COUNT_15
FROM 
	TIPOFC A
	LEFT OUTER JOIN 
	(
		SELECT 
			BF_SSN
			,LN_SEQ
			,COUNT(*) AS C1
		FROM 
			I_BILL
		WHERE 
			LC_BIL_TYP = 'P'
			AND LI_BIL_DLQ_OVR_RIR <> 'Y'
			AND BILL_SAT <> 'N'
		GROUP BY 
			BF_SSN
			,LN_SEQ
	 ) B
		ON A.BF_SSN = B.BF_SSN
		AND A.LN_SEQ = B.LN_SEQ
	LEFT OUTER JOIN 
	(
		SELECT 
			BF_SSN
			,COUNT(*) AS C2
		FROM 
		(
			SELECT 
				BF_SSN
				,LD_BIL_CRT 
				,LN_SEQ_BIL_WI_DTE 
			FROM 
				I_BILL
			WHERE 
				LC_BIL_TYP = 'P'
				AND LI_BIL_DLQ_OVR_RIR <> 'Y'
				AND BILL_SAT <> 'N'
				AND LD_BIL_DU_LON + 30 < LD_BIL_STS_RIR_TOL 
		)
		GROUP BY 
			BF_SSN
	 ) C
		ON A.BF_SSN = C.BF_SSN
	LEFT OUTER JOIN 
	(
		SELECT 
			BF_SSN
			,COUNT(*) AS C3
		FROM 
		(
			SELECT 
				BF_SSN
				,LD_BIL_CRT 
				,LN_SEQ_BIL_WI_DTE 
			FROM 
				I_BILL
			WHERE 
				LC_BIL_TYP = 'P'
				AND LI_BIL_DLQ_OVR_RIR <> 'Y'
				AND BILL_SAT <> 'N'
				AND LD_BIL_DU_LON + 15 < LD_BIL_STS_RIR_TOL 
		)
		GROUP BY 
			BF_SSN
	) D
		ON A.BF_SSN = D.BF_SSN
WHERE 
(
	NOT EXISTS 
	(
		SELECT 
			*
		FROM 
			U48MD X
		WHERE 
			X.BF_SSN = A.BF_SSN
	)
	OR NOT EXISTS 
	(
		SELECT 
			*
		FROM 
			ARC_TEST X
			INNER JOIN U48MD Y
				ON X.BF_SSN = Y.BF_SSN
		WHERE 
			Y.BF_SSN = A.BF_SSN
			AND Y.LD_ATY_REQ_RCV <= X.LD_BIL_STS_RIR_TOL
	)
)
;
QUIT;

PROC SORT DATA=COUNTS;BY BF_SSN LN_SEQ ;RUN;
/*----------------------*
|    MACRO DEFINITION   |
*----------------------*/
%MACRO NO_OBS(DS,REPNO);
PROC CONTENTS DATA=&DS OUT=EMPTYSET NOPRINT;RUN;
DATA _NULL_;
SET EMPTYSET;
FILE PRINT;
IF  NOBS=0 AND _N_ =1 THEN DO;
	PUT // 127*'-';
	PUT      //////
		@51 '**** NO OBSERVATIONS FOUND ****';
	PUT //////
		@57 '-- END OF REPORT --';
	PUT //////////////
		@46 "JOB = UTLWO36  	 REPORT = ULWO36.LWO36R&REPNO";
	END;
RETURN;
RUN;
%MEND NO_OBS;
%MACRO CREATE_REPORT_DS(DSCRIT);
DATA REPDS;
	SET COUNTS;
	WHERE &DSCRIT ;
RUN;
%MEND CREATE_REPORT_DS;
%MACRO BRCOUNT;
PROC SORT DATA=REPDS;
	BY BF_SSN;
RUN;
DATA REPDS;
	SET REPDS;
	BY BF_SSN;
	IF FIRST.BF_SSN THEN I=1;
	ELSE I=0;
RUN;
%MEND BRCOUNT;
/*---------------------------------------------------------*
| PLEASE NOTE: THIS JOB USES A MACRO TO REDEFINE THE SAME  |
| DATA SET TO CREATE EACH REPORT. THIS DATA SET IS NAMED   |
| REPDS. EVEN THOUGH ALL OF THE UNDERLYING REPORTS ARE     |
| CREATED FROM REPDS, IT DOES NOT CONTAIN THE SAME DATA    |
| WHEN THE REPORTS ARE CREATED. IT IS OVERWRITTEN BY THE   |
| CRITERIA IN THE CREATE_REPORT_DS MACRO.                  |
*----------------------------------------------------------*
| REPORT 2 - BORROWERS ELIGIBLE FOR TIMELY ORIGINATION FEE |
*---------------------------------------------------------*/
%CREATE_REPORT_DS(LF_LON_CUR_OWN EQ '828476'
	AND IBS_COUNT GE 24 
	AND (DT1_COUNT_30 LT 1 AND DT2_COUNT_15 LE 3)
	);
%BRCOUNT;
PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE PAGENO=1 CENTER NODATE;
OPTIONS PS=39 LS=127;
TITLE 'BORROWERS ELIGIBLE FOR TIMELY ORIGINATION FEE';
TITLE2 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO36  	 REPORT = ULWO36.LWO36R2';
%NO_OBS(REPDS,2);
PROC REPORT DATA=REPDS HEADSKIP SPLIT='/' NOWD SPACING=2;
COLUMN BF_SSN DM_PRS_LST LN_SEQ IC_LON_PGM I;
DEFINE BF_SSN / DISPLAY 'SSN' WIDTH=9 FORMAT=$9.;
DEFINE DM_PRS_LST / DISPLAY 'LAST NAME' WIDTH=40 FORMAT=$9.;
DEFINE LN_SEQ / DISPLAY 'LOAN SEQ' WIDTH=4 ;
DEFINE IC_LON_PGM /DISPLAY 'LOAN TYPE' WIDTH=6;
DEFINE I / NOPRINT ANALYSIS SUM;
COMPUTE AFTER;
LINE ' ';
LINE @1 'TOTAL NUMBER OF BORROWERS: ' I.SUM ;
LINE ' ';
ENDCOMP; 
RUN;
/*-------------------------------------------------------------*
| REPORT 3 - BORROWERS DISQUALIFIED FOR TIMELY ORIG FEE CREDIT |
*--------------------------------------------------------------*
| NOTE: THIS REPORT HAS SOME EXTRA PROCESSING TO GET THE LATE  |
| BILLS ON THE SAME LINE                                       |
*-------------------------------------------------------------*/
%CREATE_REPORT_DS(LF_LON_CUR_OWN EQ '828476' 
	AND UTOFD_IND = ''
	AND (DT1_COUNT_30 GE 1 OR DT2_COUNT_15 GT 3)
	AND LA_CUR_PRI GT 0
	);
PROC SQL NOPRINT;
SELECT COUNT(*) 
INTO : OBS
FROM REPDS
;
QUIT;
%MACRO PRT3ORNOT(RECNUM);
%IF &RECNUM EQ 0 %THEN %DO;
	PROC PRINTTO PRINT=REPORT3 NEW;
	RUN;
	OPTIONS ORIENTATION = LANDSCAPE PAGENO=1 CENTER NODATE;
	OPTIONS PS=39 LS=127;
	TITLE 'BORROWERS DISQUALIFIED FOR TIMELY ORIG FEE CREDIT';
	TITLE2 "&RUNDATE - &RUNTIME";
	%NO_OBS(REPDS,3);
%END;
%ELSE %DO;
	PROC SQL;
	CREATE TABLE REPDS2 AS 
	SELECT 
		A.BF_SSN 
		,A.DM_PRS_LST 
		,A.LN_SEQ 
		,A.IC_LON_PGM
		,A.LD_BIL_DU_LON
	FROM 
		TIPOFC A
		INNER JOIN REPDS B
			ON A.BF_SSN = B.BF_SSN
			AND A.LN_SEQ = B.LN_SEQ
	WHERE 
		LC_BIL_TYP = 'P'
	ORDER BY 
		A.BF_SSN 
		,A.DM_PRS_LST 
		,A.LN_SEQ 
		,A.IC_LON_PGM
		,A.LD_BIL_DU_LON
	;
	QUIT;
	/*------------------------------------------------------*
	| GET CHARACTER DATES FOR LATE BILLS FOR PROCESSING     |
	*------------------------------------------------------*/
	%MACRO DT_CONCAT(DS,CRT_DT);
	DATA &DS (DROP=MONTH DAY YEAR);
	SET &DS;
		IF LENGTH(LEFT(MONTH(&CRT_DT))) EQ 1 THEN MONTH = '0'||TRIM(LEFT(MONTH(&CRT_DT)));
		ELSE MONTH = TRIM(LEFT(MONTH(&CRT_DT)));

		IF LENGTH(LEFT(DAY(&CRT_DT))) EQ 1 THEN DAY = '0'||TRIM(LEFT(DAY(&CRT_DT)));
		ELSE DAY = TRIM(LEFT(DAY(&CRT_DT)));

		YEAR = TRIM(LEFT(YEAR(&CRT_DT)));

		CHAR_&CRT_DT = LEFT(TRIM(MONTH)||'/'||TRIM(DAY)||'/'||TRIM(YEAR));
	RUN;
	%MEND DT_CONCAT;

	%DT_CONCAT(REPDS2,LD_BIL_DU_LON);

	PROC TRANSPOSE DATA=REPDS2 OUT=REPDS PREFIX=PST_DUE;
		VAR CHAR_LD_BIL_DU_LON;
		BY BF_SSN DM_PRS_LST LN_SEQ IC_LON_PGM ;
	RUN;
	/*------------------------------------------------------*
	| CONCAT THE CHARACTER DATES INTO ONE VARIABLE FOR FILE |
	*------------------------------------------------------*/
	DATA REPDS;
	SET REPDS (KEEP=BF_SSN DM_PRS_LST LN_SEQ IC_LON_PGM PST_DUE1-PST_DUE3);
		IF PST_DUE3 = ' ' OR BF_SSN = '' THEN DELETE;
		DATE_LIST = LEFT(TRIM(PST_DUE1))||' '||LEFT(TRIM(PST_DUE2))||' '||LEFT(TRIM(PST_DUE3));
	RUN;
	%BRCOUNT;

	PROC PRINTTO PRINT=REPORT3 NEW;
	RUN;
	OPTIONS ORIENTATION = LANDSCAPE PAGENO=1 CENTER NODATE;
	OPTIONS PS=39 LS=127;
	TITLE 'BORROWERS DISQUALIFIED FOR TIMELY ORIG FEE CREDIT';
	TITLE2 "&RUNDATE - &RUNTIME";
	FOOTNOTE 'JOB = UTLWO36  	 REPORT = ULWO36.LWO36R3';
	PROC REPORT DATA=REPDS HEADSKIP SPLIT='/' NOWD /*SPACING=2*/;
	COLUMN BF_SSN DM_PRS_LST LN_SEQ IC_LON_PGM DATE_LIST I;
	DEFINE BF_SSN / DISPLAY 'SSN' WIDTH=9 FORMAT=$9.;
	DEFINE DM_PRS_LST / DISPLAY 'LAST NAME' WIDTH=30 FORMAT=$9.;
	DEFINE LN_SEQ / DISPLAY 'LOAN SEQ' WIDTH=4 ;
	DEFINE IC_LON_PGM /DISPLAY 'LOAN TYPE' WIDTH=6;
	DEFINE DATE_LIST / DISPLAY 'PAST DUE BILLS' WIDTH=50;
	DEFINE I / NOPRINT ANALYSIS SUM;
	COMPUTE AFTER;
	LINE ' ';
	LINE @1 'TOTAL NUMBER OF BORROWERS: ' I.SUM ;
	LINE ' ';
	ENDCOMP; 
	RUN;
%END;
%MEND PRT3ORNOT;
%PRT3ORNOT(&OBS);
/*-------------------------------------------------------------*
| REPORT 4 - BORROWERS PIF W/O 24 SATISFIED BILLS              |
*-------------------------------------------------------------*/
%CREATE_REPORT_DS(LF_LON_CUR_OWN EQ '828476'
	AND WC_DW_LON_STA EQ '22'
	AND IBS_COUNT LT 24
	AND UTOFD_IND EQ ''
	);
%BRCOUNT;
PROC PRINTTO PRINT=REPORT4 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE PAGENO=1 CENTER NODATE;
OPTIONS PS=39 LS=127;
TITLE 'BORROWERS PIF W/O 24 SATISFIED BILLS';
TITLE2 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO36  	 REPORT = ULWO36.LWO36R4';
%NO_OBS(REPDS,4);
PROC REPORT DATA=REPDS HEADSKIP SPLIT='/' NOWD SPACING=2;
COLUMN BF_SSN DM_PRS_LST LN_SEQ I;
DEFINE BF_SSN / DISPLAY 'SSN' WIDTH=9 FORMAT=$9.;
DEFINE DM_PRS_LST / DISPLAY 'LAST NAME' WIDTH=40 FORMAT=$9.;
DEFINE LN_SEQ / DISPLAY 'LOAN SEQ' WIDTH=4 ;
DEFINE I / NOPRINT ANALYSIS SUM;
COMPUTE AFTER;
LINE ' ';
LINE @1 'TOTAL NUMBER OF BORROWERS: ' I.SUM ;
LINE ' ';
ENDCOMP; 
RUN;
/*-------------------------------------------------------------*
| REPORT 5 - LOANS NOT CURRENTLY OWNED BY UHEAA                |
*-------------------------------------------------------------*/
%CREATE_REPORT_DS(LF_LON_CUR_OWN NE '828476'
	AND LA_CUR_PRI GT 0
	);
%BRCOUNT;
PROC PRINTTO PRINT=REPORT5 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE PAGENO=1 CENTER NODATE;
OPTIONS PS=39 LS=127;
TITLE 'LOANS NOT CURRENTLY OWNED BY UHEAA';
TITLE2 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO36  	 REPORT = ULWO36.LWO36R5';
%NO_OBS(REPDS,5);
PROC REPORT DATA=REPDS HEADSKIP SPLIT='/' NOWD SPACING=2;
COLUMN BF_SSN DM_PRS_LST LN_SEQ LF_LON_CUR_OWN I;
DEFINE BF_SSN / DISPLAY 'SSN' WIDTH=9 FORMAT=$9.;
DEFINE DM_PRS_LST / DISPLAY 'LAST NAME' WIDTH=40 FORMAT=$9.;
DEFINE LN_SEQ / DISPLAY 'LOAN SEQ' WIDTH=4 ;
DEFINE LF_LON_CUR_OWN / DISPLAY 'CURRENT OWNER' ;
DEFINE I / NOPRINT ANALYSIS SUM;
COMPUTE AFTER;
LINE ' ';
LINE @1 'TOTAL NUMBER OF BORROWERS: ' I.SUM ;
LINE ' ';
ENDCOMP; 
RUN;
/*-------------------------------------------------------------*
| REPORT 6 - BORROWERS NOT YET ELIGIBLE FOR TIMELY OFC         |
*-------------------------------------------------------------*/
%CREATE_REPORT_DS(LF_LON_CUR_OWN EQ '828476'
	AND LA_CUR_PRI GT 0
	AND IBS_COUNT LT 24
	AND UTOFD_IND = ''
	AND (DT1_COUNT_30 LT 1 AND DT2_COUNT_15 LE 3)
	);
%BRCOUNT;
PROC PRINTTO PRINT=REPORT6 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE PAGENO=1 CENTER NODATE;
OPTIONS PS=39 LS=127;
TITLE 'BORROWERS NOT YET ELIGIBLE FOR TIMELY OFC';
TITLE2 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO36  	 REPORT = ULWO36.LWO36R6';
%NO_OBS(REPDS,6);
PROC REPORT DATA=REPDS HEADSKIP SPLIT='/' NOWD SPACING=2;
COLUMN BF_SSN DM_PRS_LST LN_SEQ LF_LON_CUR_OWN I;
DEFINE BF_SSN / DISPLAY 'SSN' WIDTH=9 FORMAT=$9.;
DEFINE DM_PRS_LST / DISPLAY 'LAST NAME' WIDTH=40 FORMAT=$9.;
DEFINE LN_SEQ / DISPLAY 'LOAN SEQ' WIDTH=4 ;
DEFINE LF_LON_CUR_OWN / DISPLAY 'CURRENT OWNER' ;
DEFINE I / NOPRINT ANALYSIS SUM;
COMPUTE AFTER;
LINE ' ';
LINE @1 'TOTAL NUMBER OF BORROWERS: ' I.SUM ;
LINE ' ';
ENDCOMP; 
RUN;
/*-------------------------------------------------------------*
| REPORT 7 - LOANS NOT FIT TIMELY OFC                          |
*-------------------------------------------------------------*/
%CREATE_REPORT_DS(
/*R2*/
	NOT (LF_LON_CUR_OWN EQ '828476'
		AND IBS_COUNT GE 24 
		AND (DT1_COUNT_30 LT 1 AND DT2_COUNT_15 LE 3)
		)
/*R3*/
	AND NOT (LF_LON_CUR_OWN EQ '828476' 
		AND UTOFD_IND = ''
		AND (DT1_COUNT_30 GE 1 OR DT2_COUNT_15 GE 3)
		)
/*R4*/
	AND NOT (LF_LON_CUR_OWN EQ '828476'
		AND WC_DW_LON_STA EQ '22'
		AND IBS_COUNT LT 24
		AND UTOFD_IND EQ ''
		)
/*R5*/
	AND NOT (LF_LON_CUR_OWN NE '828476'
		AND LA_CUR_PRI GT 0
		)
/*R6*/
	AND NOT (LF_LON_CUR_OWN EQ '828476'
		AND LA_CUR_PRI GT 0
		AND IBS_COUNT LT 24
		AND UTOFD_IND = ''
		AND (DT1_COUNT_30 LT 1 AND DT2_COUNT_15 LE 3)
		)
	);
%BRCOUNT;
PROC PRINTTO PRINT=REPORT7 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE PAGENO=1 CENTER NODATE;
OPTIONS PS=39 LS=127;
TITLE ' LOANS NOT FIT TIMELY OFC';
TITLE2 "&RUNDATE - &RUNTIME";
FOOTNOTE 'JOB = UTLWO36  	 REPORT = ULWO36.LWO36R7';
%NO_OBS(REPDS,7);
PROC REPORT DATA=REPDS HEADSKIP SPLIT='/' NOWD SPACING=2;
COLUMN BF_SSN DM_PRS_LST LN_SEQ LF_LON_CUR_OWN I;
DEFINE BF_SSN / DISPLAY 'SSN' WIDTH=9 FORMAT=$9.;
DEFINE DM_PRS_LST / DISPLAY 'LAST NAME' WIDTH=40 FORMAT=$9.;
DEFINE LN_SEQ / DISPLAY 'LOAN SEQ' WIDTH=4 ;
DEFINE LF_LON_CUR_OWN / DISPLAY 'CURRENT OWNER' ;
DEFINE I / NOPRINT ANALYSIS SUM;
COMPUTE AFTER;
LINE ' ';
LINE @1 'TOTAL NUMBER OF BORROWERS: ' I.SUM ;
LINE ' ';
ENDCOMP; 
RUN;
PROC PRINTTO;
RUN;

/*-------------------------------------------------------------*
| CREATE FILE FOR TESTING                                      |
*-------------------------------------------------------------*/
/*PROC SORT DATA=TIPOFC OUT=TEST_DS;*/
/*BY BF_SSN LN_SEQ LN_SEQ_BIL_WI_DTE LD_BIL_CRT;*/
/*RUN;*/
/*PROC EXPORT DATA=TEST_DS*/
/*            OUTFILE= "T:\SAS\TEST_DS.xls" */
/*            DBMS=EXCEL2000 REPLACE;*/
/*RUN;*/
