CREATE PROCEDURE [dbo].[GetFinalBillLoanInformation]
	@AccountNumber char(10)

AS
	SELECT
		LN10.IC_LON_PGM AS LoanProgram,
		LN10.LD_LON_1_DSB AS DisbDate,
		LN10.LA_LON_AMT_GTR AS OrigPrincipalBalance,
		DW01.WA_TOT_BRI_OTS AS OutstandingInterestDue,
		sum(ISNULL(PAYMENTS_SINCE_lAST_STATEMENT.PRINCIPAL_PAID, 0.00)) AS PrincipalPaidSinceLastStatement,
		sum(ISNULL(PAYMENTS_SINCE_lAST_STATEMENT.INTEREST_PAID, 0.00)) AS InterestPaidSinceLastStatement,
		sum(ISNULL(PAYMENTS_SINCE_lAST_STATEMENT.FEES_PAID, 0.00)) AS FeesPaidSinceLastPayment,
		sum(CASE
			WHEN PAYMENTS_SINCE_lAST_STATEMENT.INTEREST_PAID IS NULL THEN 0.00
			ELSE (PAYMENTS_SINCE_lAST_STATEMENT.PRINCIPAL_PAID + PAYMENTS_SINCE_lAST_STATEMENT.INTEREST_PAID + PAYMENTS_SINCE_lAST_STATEMENT.FEES_PAID)
		END) AS TotalPaidSinceLastStatement,
		LN10.LA_CUR_PRI AS CurrentPrincipalBalance,
		LN72.LR_ITR AS InterestRate,
		CASE 
			WHEN (BL10.LA_BIL_PAS_DU = 0.00 AND CAST(BL10.LD_BIL_DU_LON AS DATE) < GETDATE() AND BL10.BIL_SAT = 'N') THEN (BL10.LA_BIL_CUR_DU - BL10.LA_TOT_BIL_STS)
			ELSE BL10.LA_BIL_PAS_DU
		END AS AmountPastDue,
		BL10.LA_LTE_FEE_OTS_PRT AS OutStandingLastFees,
		ISNULL(TOTAL_PAID.TOTAL_PRINCIPAL_PAID, 0.00) AS TotalPrincipalPaid,
		ISNULL(TOTAL_PAID.TOTAL_INTEREST_PAID,0.00) AS TotalInterestPaid,
		ISNULL(TOTAL_PAID.TOTAL_FEES_PAID,0.00) AS TotalFeesPaid,
		ISNULL(TOTAL_PAID.DateLastPaymentReceived,'') as DateLastPaymentReceived,
		(LN10.LA_CUR_PRI + BL10.LA_LTE_FEE_OTS_PRT + DW01.WA_TOT_BRI_OTS) AS LoanPayoff
	FROM	
		LN10_Loan LN10
	INNER JOIN DW01_Loan DW01
		ON DW01.DF_SPE_ACC_ID = LN10.DF_SPE_ACC_ID
		AND DW01.LN_SEQ = LN10.LN_SEQ
	INNER JOIN
		(
			SELECT 
				DF_SPE_ACC_ID,
				LN_SEQ,
				MAX(CAST(LD_BIL_CRT AS DATE)) AS MAX_CREATE_DATE
			FROM 
				BL10_Bill
			WHERE
				LC_STA_BIL10 = 'A'
			GROUP BY 
				DF_SPE_ACC_ID,
				LN_SEQ
		)MAX_BILL
			ON MAX_BILL.DF_SPE_ACC_ID = LN10.DF_SPE_ACC_ID
			AND MAX_BILL.LN_SEQ = LN10.LN_SEQ
	INNER JOIN BL10_Bill BL10
		ON BL10.DF_SPE_ACC_ID = MAX_BILL.DF_SPE_ACC_ID
		AND BL10.LN_SEQ = MAX_BILL.LN_SEQ
		AND CAST(BL10.LD_BIL_CRT AS DATE) = MAX_BILL.MAX_CREATE_DATE
	INNER JOIN LN72_InterestRate LN72
		ON LN72.DF_SPE_ACC_ID = LN10.DF_SPE_ACC_ID
		AND LN72.LN_SEQ = LN10.LN_SEQ
	LEFT JOIN
		(
			SELECT
				DF_SPE_ACC_ID,
				LN_SEQ,
				cast(LD_FAT_EFF as date) as LD_FAT_EFF,
				ABS(SUM(LA_FAT_NSI)) AS INTEREST_PAID,
				ABS(SUM(LA_FAT_LTE_FEE)) AS FEES_PAID,
				ABS(SUM(LA_FAT_CUR_PRI)) AS PRINCIPAL_PAID

			FROM
				LN90_FinancialHistory
			WHERE
				PC_FAT_TYP = '10'
				AND PC_FAT_SUB_TYP = '10'
			GROUP BY
				DF_SPE_ACC_ID,
				LN_SEQ,
				LD_FAT_EFF

		)PAYMENTS_SINCE_lAST_STATEMENT
			ON PAYMENTS_SINCE_lAST_STATEMENT.DF_SPE_ACC_ID = LN10.DF_SPE_ACC_ID
			AND PAYMENTS_SINCE_lAST_STATEMENT.LN_SEQ = LN10.LN_SEQ
			and PAYMENTS_SINCE_lAST_STATEMENT.LD_FAT_EFF > MAX_BILL.MAX_CREATE_DATE
	LEFT JOIN
		(
			SELECT  
				DF_SPE_ACC_ID,
			    LN_SEQ,
				ABS(SUM(LA_FAT_CUR_PRI + LA_FAT_ILG_PRI)) AS TOTAL_PRINCIPAL_PAID, --PAYMENTS ARE NEGATIVE AMOUNTS SO WE GET THE abs OF THE SUM
				ABS(SUM(LA_FAT_NSI)) AS TOTAL_INTEREST_PAID,
				ABS(SUM(LA_FAT_LTE_FEE + LA_FAT_ILG_PRI)) AS TOTAL_FEES_PAID,
				MAX(CAST(LD_FAT_EFF as date)) as DateLastPaymentReceived
		  FROM 
				LN90_FinancialHistory
		  WHERE 
				(PC_FAT_TYP + PC_FAT_SUB_TYP) NOT IN  ('0291', '7001')
		  GROUP BY 
				DF_SPE_ACC_ID,
				LN_SEQ
		)TOTAL_PAID
			ON TOTAL_PAID.DF_SPE_ACC_ID = LN10.DF_SPE_ACC_ID
			AND TOTAL_PAID.LN_SEQ = LN10.LN_SEQ
	WHERE
		LN10.DF_SPE_ACC_ID = @AccountNumber
	GROUP BY
		LN10.IC_LON_PGM,
		LN10.LD_LON_1_DSB ,
		LN10.LA_LON_AMT_GTR,
		DW01.WA_TOT_BRI_OTS ,
		LN10.LA_CUR_PRI ,
		LN72.LR_ITR,
		BL10.LA_LTE_FEE_OTS_PRT ,
		ISNULL(TOTAL_PAID.TOTAL_PRINCIPAL_PAID, 0.00) ,
		ISNULL(TOTAL_PAID.TOTAL_INTEREST_PAID,0.00),
		ISNULL(TOTAL_PAID.TOTAL_FEES_PAID,0.00),
		ISNULL(TOTAL_PAID.DateLastPaymentReceived,'') ,
		(LN10.LA_CUR_PRI + BL10.LA_LTE_FEE_OTS_PRT + DW01.WA_TOT_BRI_OTS),
		CASE 
			WHEN (BL10.LA_BIL_PAS_DU = 0.00 AND CAST(BL10.LD_BIL_DU_LON AS DATE) < GETDATE() AND BL10.BIL_SAT = 'N') THEN (BL10.LA_BIL_CUR_DU - BL10.LA_TOT_BIL_STS)
			ELSE BL10.LA_BIL_PAS_DU
		END
		
RETURN 0
