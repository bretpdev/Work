CREATE PROCEDURE [rhbrwinpc].[GetAvailableLetterData]
	@TestMode bit
AS
DECLARE @Query VARCHAR(Max)
IF @TestMode = 0
	SET @Query = 'MERGE [rhbrwinpc].[Letters] AS T USING (SELECT D.* FROM OPENQUERY(DUSTER,'
ELSE 
	SET @Query = 'MERGE [rhbrwinpc].[Letters] AS T USING (SELECT D.* FROM OPENQUERY(QADBD004,'

SELECT @Query = @Query + 
		'''
			SELECT DISTINCT E.DF_SPE_ACC_ID
			,E.DM_PRS_1
			,E.DM_PRS_LST
			,E.DX_STR_ADR_1
			,E.DX_STR_ADR_2
			,E.DM_CT
			,CASE 
				WHEN E.DC_DOM_ST = ''''FC'''' THEN ''''''''
				ELSE E.DC_DOM_ST
			END AS DC_DOM_ST
			,E.DF_ZIP
			,E.DM_FGN_CNY
		FROM OLWHRM1.DC01_LON_CLM_INF A
		INNER JOIN (
			SELECT IJ1.BF_SSN
				,IJ2.LD_AUX_STA_UPD
			FROM OLWHRM1.DC01_LON_CLM_INF IJ1
			INNER JOIN (
				SELECT BF_SSN
					,MAX(LD_AUX_STA_UPD) AS LD_AUX_STA_UPD
				FROM OLWHRM1.DC01_LON_CLM_INF 
				WHERE LD_AUX_STA_UPD IS NOT NULL
				GROUP BY BF_SSN
				) IJ2
				ON IJ1.BF_SSN = IJ2.BF_SSN
				AND IJ1.LD_AUX_STA_UPD = IJ2.LD_AUX_STA_UPD
			WHERE IJ1.LC_AUX_STA = ''''10''''
			) B
			ON A.BF_SSN = B.BF_SSN
		INNER JOIN (
			SELECT IJ3.BF_SSN
				,IJ4.LD_STA_UPD_DC10
			FROM OLWHRM1.DC01_LON_CLM_INF IJ3
			INNER JOIN (
				SELECT BF_SSN
					,MAX(LD_STA_UPD_DC10) AS LD_STA_UPD_DC10
				FROM OLWHRM1.DC01_LON_CLM_INF	
				GROUP BY BF_SSN
				) IJ4
				ON IJ3.BF_SSN = IJ4.BF_SSN
				AND IJ3.LD_STA_UPD_DC10 = IJ4.LD_STA_UPD_DC10
			WHERE IJ3.LC_STA_DC10 = ''''01''''
			AND IJ3.LC_PCL_REA IN (''''DB'''',''''DF'''',''''DQ'''')
			) C
			ON A.BF_SSN = C.BF_SSN
		LEFT OUTER JOIN OLWHRM1.AY01_BR_ATY D
			ON A.BF_SSN = D.DF_PRS_ID	
			AND D.PF_ACT = ''''ALSBR''''
		INNER JOIN OLWHRM1.PD01_PDM_INF E
			ON A.BF_SSN = E.DF_PRS_ID
		WHERE B.LD_AUX_STA_UPD < C.LD_STA_UPD_DC10
			AND DATE(DAYS(A.LD_PCL_SUP_LST_ATT)) < DATE(DAYS(CURRENT DATE) - 3)
			AND DATE(DAYS(A.LD_PCL_SUP_LST_CNC)) < DATE(DAYS(CURRENT DATE) - 5)
			AND E.DI_VLD_ADR = ''''Y''''
			AND D.DF_PRS_ID IS NULL
			'') D) AS S
	ON
		(S.DF_SPE_ACC_ID = T.DF_SPE_ACC_ID
		AND (T.ArcAddedAt IS NULL OR T.PrintedAt IS NULL)
		AND T.DeletedAt IS NULL)
		OR (S.DF_SPE_ACC_ID = T.DF_SPE_ACC_ID
		AND CAST(T.AddedAt AS DATE) = CAST(GETDATE() AS DATE))
	WHEN NOT MATCHED BY TARGET THEN
		INSERT (DF_SPE_ACC_ID,DM_PRS_1,DM_PRS_LST,DX_STR_ADR_1,DX_STR_ADR_2,DM_CT,DC_DOM_ST,DF_ZIP,DM_FGN_CNY)
		VALUES(S.DF_SPE_ACC_ID,S.DM_PRS_1,DM_PRS_LST,S.DX_STR_ADR_1,S.DX_STR_ADR_2,S.DM_CT,S.DC_DOM_ST,S.DF_ZIP,S.DM_FGN_CNY)
	WHEN NOT MATCHED BY SOURCE AND (T.ArcAddedAt IS NULL AND T.PrintedAt IS NULL AND T.DeletedAt IS NULL AND T.AddedAt < DATEADD(DAY, -3, GETDATE())) THEN
		UPDATE
		SET
			DeletedAt = GETDATE(),
			DeletedBy = SUSER_SNAME()
	WHEN MATCHED AND (S.DF_SPE_ACC_ID = T.DF_SPE_ACC_ID	AND (T.ArcAddedAt IS NULL OR T.PrintedAt IS NULL) AND T.DeletedAt IS NULL) THEN
		UPDATE
		SET
			DF_SPE_ACC_ID = S.DF_SPE_ACC_ID,
			DM_PRS_1 = S.DM_PRS_1,
			DM_PRS_LST = S.DM_PRS_LST,
			DX_STR_ADR_1 = S.DX_STR_ADR_1,
			DX_STR_ADR_2 =S. DX_STR_ADR_2,
			DM_CT = S.DM_CT,
			DC_DOM_ST = S.DC_DOM_ST,
			DF_ZIP = S.DF_ZIP,
			DM_FGN_CNY = S.DM_FGN_CNY;
		'
EXEC (@Query)
GO
GRANT EXECUTE
    ON OBJECT::[rhbrwinpc].[GetAvailableLetterData] TO [db_executor]
    AS [dbo];

