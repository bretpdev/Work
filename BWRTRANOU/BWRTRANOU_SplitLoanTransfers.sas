/*******************************
	SPLIT LOAN TRANSFERS
*******************************/

%LET RPTLIB = T:\Split Loan Transfer - ; *TEST;
/*%LET RPTLIB = Q:\CS Loan Servicing\Split Loan Transfer\Split Loan Transfer - ; *LIVE;*/

%LET DATERUN = %SYSFUNC(TODAY(), YYMMDDN8.);
%PUT &DATERUN;

%LET TIMERUN = %SYSFUNC(COMPRESS(%SYSFUNC(TRANSLATE(%SYSFUNC(TIME(),TIMEAMPM11.),.,:))));
%PUT &TIMERUN;

LIBNAME XL 'T:\BWRTRANOU.xlsx';
DATA XLSOURCE;
	SET XL.'SHEET1$'N;
	IF BORROWER_SSN ^= ''; *subsetting IF to remove nulls;
	BF_SSN = STRIP(COMPRESS(BORROWER_SSN,'-'));
	FORMAT BF_SSN $9.;
	KEEP BF_SSN;
RUN;
LIBNAME XL CLEAR;

LIBNAME LEGEND REMOTE SERVER=LEGEND SLIBREF=WORK;
DATA LEGEND.XLSOURCE;
	SET XLSOURCE;
RUN;

RSUBMIT LEGEND;
/*%let DB = DNFPRUUT;  *This is VUK3 test;*/
/*%let DB = DNFPRQUT;  *This is VUK1 test;*/
%LET DB = DNFPUTDL;  *This is live;

LIBNAME PKUB DB2 DATABASE=&DB OWNER=PKUB;
PROC SQL;
	CREATE TABLE BORROWERS AS
		SELECT DISTINCT	
			 XLS.BF_SSN
			,PD10.DM_PRS_1
			,PD10.DM_PRS_LST
			,LN10.LN_SEQ
			,LN10.IC_LON_PGM
			,SUM(LN10.LA_CUR_PRI, DW01.LA_NSI_OTS, DW01.LA_NSI_ACR) AS LA_LON_BAL
			,LN10.LC_FED_PGM_YR
			,LN10.LD_LON_GTR
			,BAL.LA_TOT_BAL
			,DELQ.LN_DLQ_MAX
			,CASE
				WHEN CONS.BF_SSN IS NOT NULL THEN 1
				ELSE 0
			END AS IS_CONS /*consolidation*/
			,CASE 
				WHEN DW01S.WC_DW_LON_STA IN ('20','21') THEN 1
				ELSE 0
			END AS IN_BNK /*bankruptcy*/
			,CASE 
				WHEN DW01S.WC_DW_LON_STA IN ('18','19') THEN 1
				ELSE 0
			END AS IN_TPD
			,CASE 
				WHEN DW01S.WC_DW_LON_STA IN ('16','17') THEN 1
				ELSE 0
			END AS IN_DTH /*death*/
			,CASE
				WHEN AY10.BF_SSN IS NOT NULL THEN AY10.PF_REQ_ACT
				ELSE ''
			END AS OTHER_SPCL /*other specialty claim*/
			,CASE
				WHEN COVID.Reason IS NOT NULL THEN COVID.Reason
				ELSE ''
			END AS COVID
			,RPS.LC_TYP_SCH_DIS /*repayment schedule type*/
			,FS10.LF_FED_AWD
			,FS10.LN_FED_AWD_SEQ
		FROM
			XLSOURCE XLS
			INNER JOIN PKUB.PD10_PRS_NME PD10
				ON XLS.BF_SSN = PD10.DF_PRS_ID
			INNER JOIN PKUB.LN10_LON LN10
				ON XLS.BF_SSN = LN10.BF_SSN
			INNER JOIN PKUB.DW01_DW_CLC_CLU DW01
				ON LN10.BF_SSN = DW01.BF_SSN
				AND LN10.LN_SEQ = DW01.LN_SEQ
			INNER JOIN 
			(/*get total principal balance*/
				SELECT DISTINCT
					LN10.BF_SSN,
					SUM(SUM(LN10.LA_CUR_PRI, DW01.LA_NSI_OTS, DW01.LA_NSI_ACR)) AS LA_TOT_BAL
				FROM
					PKUB.LN10_LON LN10
					INNER JOIN PKUB.DW01_DW_CLC_CLU DW01
						ON LN10.BF_SSN = DW01.BF_SSN
						AND LN10.LN_SEQ = DW01.LN_SEQ
				GROUP BY
					LN10.BF_SSN
			) BAL
				ON LN10.BF_SSN = BAL.BF_SSN
			LEFT JOIN 
			(/*get max deliquency on loans with a balance*/
				SELECT DISTINCT
					LN16.BF_SSN,
					MAX(LN16.LN_DLQ_MAX) AS LN_DLQ_MAX
				FROM
					PKUB.LN16_LON_DLQ_HST LN16
					INNER JOIN PKUB.LN10_LON LN10
						ON LN16.BF_SSN = LN10.BF_SSN
						AND LN16.LN_SEQ = LN10.LN_SEQ
				WHERE
					LN16.LC_STA_LON16 = '1'
					AND LN10.LA_CUR_PRI > 0.00
				GROUP BY
					LN16.BF_SSN
			) DELQ
				ON DELQ.BF_SSN = LN10.BF_SSN
			LEFT JOIN 
			(/*consolidation on loans with a balance*/
				SELECT DISTINCT
					AY10.BF_SSN
				FROM
					PKUB.AY10_BR_LON_ATY AY10
					INNER JOIN PKUB.LN10_LON LN10
						ON AY10.BF_SSN = LN10.BF_SSN
				WHERE
					AY10.PF_REQ_ACT = 'DLCON'
					AND AY10.LD_ATY_REQ_RCV >= (TODAY() - 180)
					AND LN10.LA_CUR_PRI > 0.00
					AND AY10.LC_STA_ACTY10 = 'A'
					AND LN10.LC_STA_LON10 = 'R'
			) CONS
				ON LN10.BF_SSN = CONS.BF_SSN
			LEFT JOIN 
			(/*bankruptcy,tpd,death on loans with a balance*/
				SELECT DISTINCT 
					DW01.BF_SSN,
					DW01.WC_DW_LON_STA
				FROM 
					PKUB.DW01_DW_CLC_CLU DW01
					INNER JOIN PKUB.LN10_LON LN10
						ON DW01.BF_SSN = LN10.BF_SSN
						AND DW01.LN_SEQ = LN10.LN_SEQ
				WHERE 
					DW01.WC_DW_LON_STA IN ('16','17','18','19','20','21')
					AND LN10.LA_CUR_PRI > 0.00
			) DW01S
				ON LN10.BF_SSN = DW01S.BF_SSN
			LEFT JOIN
			(/*specialty claim on loans with a balance*/
				SELECT DISTINCT
					AY10.BF_SSN,
					AY10.PF_REQ_ACT
				FROM
					PKUB.AY10_BR_LON_ATY AY10
					INNER JOIN PKUB.LN10_LON LN10
						ON AY10.BF_SSN = LN10.BF_SSN
				WHERE
					AY10.PF_REQ_ACT IN ('CSFSA','TLFSA','FCFSA')
					AND LN10.LA_CUR_PRI > 0.00
					AND AY10.LC_STA_ACTY10 = 'A'
					AND LN10.LC_STA_LON10 = 'R'
			) AY10 
				ON LN10.BF_SSN = AY10.BF_SSN
			LEFT JOIN
			(/*gets active repayment schedule on loans with a balance*/
				SELECT DISTINCT
					RS10.BF_SSN,
					LN65.LN_SEQ,
					LN65.LC_TYP_SCH_DIS
				FROM
					PKUB.RS10_BR_RPD RS10
					INNER JOIN PKUB.LN65_LON_RPS LN65
						ON RS10.BF_SSN = LN65.BF_SSN
						AND RS10.LN_RPS_SEQ = LN65.LN_RPS_SEQ
					INNER JOIN PKUB.LN10_LON LN10
						ON LN65.BF_SSN = LN10.BF_SSN
						AND LN65.LN_SEQ = LN10.LN_SEQ
				WHERE
					RS10.LC_STA_RPST10 = 'A'
					AND LN65.LC_STA_LON65 = 'A'
					AND LN10.LA_CUR_PRI > 0.00
			) RPS
				ON LN10.BF_SSN = RPS.BF_SSN
				AND LN10.LN_SEQ = RPS.LN_SEQ
			LEFT JOIN PKUB.FS10_DL_LON FS10 /*gets award ID*/
				ON LN10.BF_SSN = FS10.BF_SSN
				AND LN10.LN_SEQ = FS10.LN_SEQ
			LEFT JOIN
			(
				SELECT DISTINCT
					LN50.BF_SSN,
					LN50.LN_SEQ,
					'COVID - Future Defer' AS Reason
				FROM
					PKUB.LN50_BR_DFR_APV LN50
					INNER JOIN PKUB.DF10_BR_DFR_REQ DF10
						ON DF10.BF_SSN = LN50.BF_SSN
						AND DF10.LF_DFR_CTL_NUM = LN50.LF_DFR_CTL_NUM
						AND DF10.LC_STA_DFR10 = 'A'
						AND DF10.LC_DFR_STA ='A'
				WHERE
					LN50.LC_STA_LON50 = 'A'
					AND LN50.LC_DFR_RSP <> '003'
					AND LN50.LD_DFR_BEG >= '01OCT2020'd
					AND '01OCT2020'd > TODAY() /*only apply exclude if job run prior to 10/01/2020*/

				UNION ALL

				SELECT DISTINCT
					LN60.BF_SSN,
					LN60.LN_SEQ,
					'COVID - Future Forb' AS Reason
				FROM
					PKUB.LN60_BR_FOR_APV LN60
					INNER JOIN PKUB.FB10_BR_FOR_REQ FB10
						ON FB10.BF_SSN = LN60.BF_SSN
						AND FB10.LF_FOR_CTL_NUM = LN60.LF_FOR_CTL_NUM
						AND FB10.LC_STA_FOR10 = 'A'
						AND FB10.LC_FOR_STA ='A'
				WHERE
					LN60.LC_STA_LON60 = 'A'
					AND LN60.LC_FOR_RSP <> '003'
					AND LN60.LD_FOR_BEG >= '01OCT2020'd
					AND '01OCT2020'd > TODAY() /*only apply exclude if job run prior to 10/01/2020*/
					
				UNION ALL

				SELECT DISTINCT
					LN85.BF_SSN,
					LN85.LN_SEQ,
					'COVID - Opt Out' AS Reason
				FROM
					PKUB.AY10_BR_LON_ATY AY10
					INNER JOIN PKUB.LN85_LON_ATY LN85
						ON LN85.BF_SSN = AY10.BF_SSN
						AND LN85.LN_ATY_SEQ = AY10.LN_ATY_SEQ
				WHERE
					AY10.LC_STA_ACTY10 = 'A'
					AND AY10.PF_REQ_ACT = 'CVDOO'
					AND '01OCT2020'd > TODAY() /*only apply exclude if job run prior to 10/01/2020*/

				UNION ALL

				SELECT DISTINCT
					LN65.BF_SSN,
					LN65.LN_SEQ,
					'COVID - IDR' AS Reason
				FROM
					PKUB.LN65_LON_RPS LN65
				WHERE
					LN65.LC_TYP_SCH_DIS IN('IB','IL','C1','C2','C3','CQ','CA','CP','IA','I5','IP','I3')
					AND LN65.LC_STA_LON65 = 'A'
					AND '01OCT2020'd > TODAY() /*only apply exclude if job run prior to 10/01/2020*/
			) COVID
				ON COVID.BF_SSN = LN10.BF_SSN
				AND COVID.LN_SEQ = LN10.LN_SEQ
	;

	CREATE TABLE NOTEXIST AS
		SELECT
			XLS.BF_SSN
			,1 AS SSNNOTEXIST
		FROM
			XLSOURCE XLS
			LEFT JOIN PKUB.LN10_LON LN10
				ON XLS.BF_SSN = LN10.BF_SSN
		WHERE
			LN10.BF_SSN IS NULL
	;
QUIT;
ENDRSUBMIT;

DATA BORROWERS; 
	SET LEGEND.BORROWERS
		LEGEND.NOTEXIST;
RUN;

DATA REASONS;
	SET BORROWERS;
	IF LA_TOT_BAL <= 25 AND SSNNOTEXIST ^=1
		THEN REASON1 = 'Total Balance <= $25';
	IF LN_DLQ_MAX >= 330 
		THEN REASON2 = 'Active Delinquency =330';
	IF IS_CONS = 1
		THEN REASON3 = 'Consolidation in Process';
	IF IN_BNK = 1 
		THEN REASON4 = 'Specialty Claim/Bankruptcy';
	IF IN_TPD = 1 
		THEN REASON5 = 'Specialty Claim/TPD';
	IF IN_DTH = 1 
		THEN REASON6 = 'Specialty Claim/Death';
	IF OTHER_SPCL ^= '' 
		THEN REASON7 = CATS('Specialty Claim/',OTHER_SPCL);
	IF SSNNOTEXIST = 1
		THEN REASON8 = 'Borrower not on our system/student only';
	IF COVID ^= ''
		THEN REASON9 = COVID;

	REASON = CATX(' | ',REASON1,REASON2,REASON3,REASON4,REASON5,REASON6,REASON7,REASON8,REASON9);
RUN;

PROC SQL;
	CREATE TABLE R2 AS
		SELECT DISTINCT
			*
		FROM
		(/*combines all reasons into one field*/
			SELECT DISTINCT
				BF_SSN 		AS SSN,
				DM_PRS_1 	AS First_Name,
				DM_PRS_LST	AS Last_Name,
				CATX(' | ',REASON1,REASON2,REASON3,REASON4,REASON5,REASON6,REASON7,REASON8,REASON9) AS Exclusion_Reason
			FROM
			(/*puts multiple reasons on one row for same borrower*/
				SELECT DISTINCT
					BF_SSN,
					DM_PRS_1,
					DM_PRS_LST,
					MAX(REASON1) AS REASON1,
					MAX(REASON2) AS REASON2,
					MAX(REASON3) AS REASON3,
					MAX(REASON4) AS REASON4,
					MAX(REASON5) AS REASON5,
					MAX(REASON6) AS REASON6,
					MAX(REASON7) AS REASON7,
					MAX(REASON8) AS REASON8,
					MAX(REASON9) AS REASON9
				FROM
					REASONS
				GROUP BY
					BF_SSN
					,DM_PRS_1
					,DM_PRS_LST
			)
		)
		WHERE
			Exclusion_Reason ^= ''
		ORDER BY
			Exclusion_Reason,
			Last_Name
	;
QUIT;

PROC EXPORT
	DATA=R2
	OUTFILE="&RPTLIB. R2 - &DATERUN. - &TIMERUN..xlsx"
	DBMS = EXCEL
	REPLACE;
RUN;

PROC SQL;
	CREATE TABLE R3 AS
		SELECT
			REASONS.BF_SSN 			AS SSN,
			REASONS.DM_PRS_1 		AS First_Name,
			REASONS.DM_PRS_LST 		AS Last_Name,
			REASONS.LN_SEQ 			AS Loan_Sequence,
			REASONS.IC_LON_PGM 		AS Loan_Program,
			REASONS.LC_FED_PGM_YR 	AS Loan_Code,
			CATS(REASONS.LF_FED_AWD, PUT(REASONS.LN_FED_AWD_SEQ,z3.)) AS Award_ID,
			REASONS.LD_LON_GTR 		AS Guaranty_Date,
			REASONS.LA_LON_BAL 		AS Loan_Balance,
			REASONS.LC_TYP_SCH_DIS 	AS Repayment_Schedule_Type
		FROM
			REASONS
			LEFT JOIN R2
				ON REASONS.BF_SSN = R2.SSN
		WHERE 
			REASON = ''
			AND R2.SSN IS NULL /*excludes R2 borrowers*/
			AND REASONS.LA_LON_BAL > 0.00
		ORDER BY
			SSN,
			Loan_Sequence
	;
QUIT;

PROC EXPORT
	DATA=R3
	OUTFILE="&RPTLIB. R3 - &DATERUN. - &TIMERUN..xlsx"
	DBMS = EXCEL
	REPLACE;
RUN;

PROC SQL;
	CREATE TABLE R4 AS
		SELECT DISTINCT
			 SSN
			,Loan_Sequence
		FROM
			R3
		ORDER BY
			 SSN
			,Loan_Sequence
	;
QUIT;

PROC EXPORT
	DATA=R4
	OUTFILE="&RPTLIB. R4 - &DATERUN. - &TIMERUN..xlsx"
	DBMS = EXCEL
	REPLACE;
RUN;
