*--------------------------------------------*
| UTLWQ26 NEW VS. SERIAL BORROWERS GT 7/1/08 |
*--------------------------------------------*;
/*LIBNAME DLGSUTWH DB2 DATABASE=DLGSUTWH OWNER=OLWHRM1;*/
/*%LET RPTLIB = %SYSGET(reportdir);*/
%LET RPTLIB = T:\SAS;
FILENAME REPORT2 "&RPTLIB/ULWQ26.LWQ26R2";
FILENAME REPORT3 "&RPTLIB/ULWQ26.LWQ26R3";
LIBNAME  WORKLOCL  REMOTE  SERVER=CYPRUS  SLIBREF=WORK;
RSUBMIT;
PROC SQL;
CONNECT TO DB2 (DATABASE=DLGSUTWH);
CREATE TABLE NVSBG AS
SELECT *
FROM CONNECTION TO DB2 (
SELECT DISTINCT A.DF_PRS_ID_BR
	,B.AF_APL_ID||B.AF_APL_ID_SFX AS CLUID
	,B.AA_GTE_LON_AMT - B.AA_TOT_RFD - COALESCE(B.AA_TOT_CAN,0) AS AA_GTE_LON_AMT
	,A.AF_ORG_APL_OPS_LDR
	,A.AF_CUR_APL_OPS_LDR
	,A.AF_APL_OPS_SCL
	,A.AD_IST_TRM_END
	,C.*
	,E.BR_1ST_DSB
	,F.IM_IST_FUL AS LDR_NM
	,G.IM_IST_FUL AS SCL_NM
FROM OLWHRM1.GA01_APP A
INNER JOIN OLWHRM1.GA10_LON_APP B
	ON A.AF_APL_ID = B.AF_APL_ID
INNER JOIN OLWHRM1.GA11_LON_DSB_ATY C
	ON B.AF_APL_ID = C.AF_APL_ID
	AND B.AF_APL_ID_SFX = C.AF_APL_ID_SFX
INNER JOIN OLWHRM1.GA14_LON_STA D
	ON B.AF_APL_ID = D.AF_APL_ID
	AND B.AF_APL_ID_SFX = D.AF_APL_ID_SFX
LEFT OUTER JOIN (
	SELECT E1.DF_PRS_ID_BR
		,MIN(AD_DSB_ADJ) AS BR_1ST_DSB
	FROM OLWHRM1.GA01_APP E1
	INNER JOIN OLWHRM1.GA10_LON_APP E2
		ON E1.AF_APL_ID = E2.AF_APL_ID
	INNER JOIN OLWHRM1.GA11_LON_DSB_ATY E3
		ON E2.AF_APL_ID = E3.AF_APL_ID
		AND E2.AF_APL_ID_SFX = E3.AF_APL_ID_SFX
		WHERE E3.AC_DSB_ADJ_STA = 'A'
			AND E3.AC_DSB_ADJ = 'A'
			AND E3.AN_DSB_SEQ = 1
	GROUP BY E1.DF_PRS_ID_BR
	) E
	ON A.DF_PRS_ID_BR = E.DF_PRS_ID_BR
LEFT OUTER JOIN OLWHRM1.IN01_LGS_IDM_MST F
	ON A.AF_CUR_APL_OPS_LDR = F.IF_IST
LEFT OUTER JOIN OLWHRM1.SC01_LGS_SCL_INF G
	ON A.AF_APL_OPS_SCL = G.IF_IST
WHERE C.AC_DSB_ADJ_STA = 'A'
	AND C.AC_DSB_ADJ = 'A'
	AND EXISTS 
	(
		SELECT 1
		FROM OLWHRM1.GA11_LON_DSB_ATY X
		INNER JOIN OLWHRM1.GA10_LON_APP Y
			ON X.AF_APL_ID = Y.AF_APL_ID
			AND X.AF_APL_ID_SFX = Y.AF_APL_ID_SFX
		INNER JOIN OLWHRM1.GA01_APP Z
			ON Y.AF_APL_ID = Z.AF_APL_ID
		WHERE X.AF_APL_ID = B.AF_APL_ID
			AND X.AF_APL_ID_SFX = B.AF_APL_ID_SFX
			AND X.AD_DSB_ADJ >= '07/01/2008'
			AND X.AC_DSB_ADJ_STA = 'A'
			AND X.AC_DSB_ADJ = 'A'
			AND X.AN_DSB_SEQ = 1
			AND Z.AD_IST_TRM_END >= '07/01/2008'
	) 
	AND D.AC_STA_GA14 = 'A'
	AND D.AC_LON_STA_TYP IN 
	(
		'CR','DA','FB','IA',
		'ID','IG','IM','RP','UA','UB'
	)
	AND B.AC_LON_TYP != 'CL'
FOR READ ONLY WITH UR
);
DISCONNECT FROM DB2;
ENDRSUBMIT;
DATA NVSBG;
	SET WORKLOCL.NVSBG;
RUN;
DATA ADSB ;
SET NVSBG;
IF BR_1ST_DSB >= '01JUL2008'D 
	THEN DSB_GE_JUL1 = 'Y';
ELSE 
	DSB_GE_JUL1 = 'N';
RUN;
PROC SORT DATA=ADSB NODUPKEY;
	BY DF_PRS_ID_BR AF_APL_ID AF_APL_ID_SFX ;
RUN;
PROC SQL;
CREATE TABLE LNDR_DAT AS
SELECT AF_CUR_APL_OPS_LDR
	,LDR_NM
	,DSB_GE_JUL1
	,COUNT(DISTINCT DF_PRS_ID_BR) AS BR_CT
	,COUNT(*) AS LN_CT
	,SUM(AA_GTE_LON_AMT) AS T_AMT
FROM ADSB
GROUP BY AF_CUR_APL_OPS_LDR
	,LDR_NM
	,DSB_GE_JUL1
;
CREATE TABLE SCHL_DAT AS
SELECT AF_APL_OPS_SCL
	,SCL_NM
	,DSB_GE_JUL1
	,COUNT(DISTINCT DF_PRS_ID_BR) AS BR_CT
	,COUNT(*) AS LN_CT
	,SUM(AA_GTE_LON_AMT) AS T_AMT
FROM ADSB
GROUP BY AF_APL_OPS_SCL
	,SCL_NM
	,DSB_GE_JUL1
;
QUIT;
PROC SQL NOPRINT;
	SELECT SUM(AA_GTE_LON_AMT) AS AA_GTE_LON_AMT FORMAT=DOLLAR20.2
		,COUNT(DISTINCT DF_PRS_ID_BR) FORMAT=COMMA8.
		,COUNT(*) FORMAT=COMMA8.
	INTO :TOTAL_NEW,:BOR_NEW,:LON_NEW
	FROM ADSB
	WHERE DSB_GE_JUL1 = 'Y'
;
	SELECT SUM(AA_GTE_LON_AMT) AS AA_GTE_LON_AMT FORMAT=DOLLAR20.2
		,COUNT(DISTINCT DF_PRS_ID_BR) FORMAT=COMMA8.
		,COUNT(*) FORMAT=COMMA8.
	INTO :TOTAL_SER,:BOR_SER,:LON_SER
	FROM ADSB
	WHERE DSB_GE_JUL1 = 'N'
;
	SELECT SUM(AA_GTE_LON_AMT) AS AA_GTE_LON_AMT FORMAT=DOLLAR20.2
		,COUNT(DISTINCT DF_PRS_ID_BR) FORMAT=COMMA8.
		,COUNT(*) FORMAT=COMMA8.
	INTO :TOTAL_AMT,:BOR_TOT,:LON_TOT
	FROM ADSB
;
QUIT;
PROC FORMAT;
	VALUE $DSBSTA	'N' = 'SERIAL BORROWERS'
					'Y' = 'NEW BORROWERS';
QUIT;
PROC PRINTTO PRINT=REPORT2 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 DATE CENTER;
TITLE 'NEW VS SERIAL BORROWERS BY LENDER';
FOOTNOTE   'JOB = UTLWQ26				REPORT = ULWQ26.LWQ26R2';
PROC REPORT DATA=LNDR_DAT SPLIT='/' NOWD HEADSKIP;
	COLUMN AF_CUR_APL_OPS_LDR LDR_NM DSB_GE_JUL1 BR_CT LN_CT T_AMT;
	DEFINE AF_CUR_APL_OPS_LDR / GROUP "LENDER/CODE";
	DEFINE LDR_NM / GROUP "LENDER/NAME";
	DEFINE DSB_GE_JUL1 / GROUP "/" FORMAT=$DSBSTA.;	
	DEFINE BR_CT / ANALYSIS "# OF/BORROWERS" FORMAT=COMMA8. WIDTH=9;
	DEFINE LN_CT / ANALYSIS "# OF/LOANS" FORMAT=COMMA8.;
	DEFINE T_AMT / ANALYSIS "$ OF/LOANS" FORMAT=DOLLAR20.2 WIDTH=20;
	BREAK AFTER AF_CUR_APL_OPS_LDR / SUMMARIZE SUPPRESS SKIP DOL;
	COMPUTE AFTER;
		LINE '';
		LINE @1 "TOTALS FOR NEW BORROWERS:" @80 "&BOR_NEW" @90 "&LON_NEW" @100 "&TOTAL_NEW";
		LINE @1 "TOTALS FOR SERIAL BORROWERS:" @80 "&BOR_SER" @90 "&LON_SER"  @100 "&TOTAL_SER";
		LINE @1 119*'=';
		LINE @80 "&BOR_TOT" @90 "&LON_TOT"  @100 "&TOTAL_AMT";
	ENDCOMP;
RUN;

PROC PRINTTO;
RUN;
PROC PRINTTO PRINT=REPORT3 NEW;
RUN;
OPTIONS ORIENTATION = LANDSCAPE;
OPTIONS PS=39 LS=127 PAGENO=1 DATE CENTER;
TITLE 'NEW VS SERIAL BORROWERS BY SCHOOL';
FOOTNOTE   'JOB = UTLWQ26				REPORT = ULWQ26.LWQ26R3';
PROC REPORT DATA=SCHL_DAT SPLIT='/' NOWD HEADSKIP;
	COLUMN AF_APL_OPS_SCL SCL_NM DSB_GE_JUL1 BR_CT LN_CT T_AMT;
	DEFINE AF_APL_OPS_SCL / GROUP "SCHOOL/CODE";
	DEFINE SCL_NM / GROUP "SCHOOL/NAME" FLOW;
	DEFINE DSB_GE_JUL1 / GROUP "/" FORMAT=$DSBSTA.;
	DEFINE BR_CT / ANALYSIS "# OF/BORROWERS" FORMAT=COMMA8. WIDTH=9;
	DEFINE LN_CT / ANALYSIS "# OF/LOANS" FORMAT=COMMA8.;
	DEFINE T_AMT / ANALYSIS "$ OF/LOANS" FORMAT=DOLLAR20.2 WIDTH=20;
	BREAK AFTER AF_APL_OPS_SCL / SUMMARIZE SUPPRESS SKIP DOL;
	COMPUTE AFTER;
		LINE '';
		LINE @1 "TOTALS FOR NEW BORROWERS:" @80 "&BOR_NEW" @90 "&LON_NEW" @100 "&TOTAL_NEW";
		LINE @1 "TOTALS FOR SERIAL BORROWERS:" @80 "&BOR_SER" @90 "&LON_SER"  @100 "&TOTAL_SER";
		LINE @1 119*'=';
		LINE @80 "&BOR_TOT" @90 "&LON_TOT"  @100 "&TOTAL_AMT";
	ENDCOMP;
RUN;
PROC PRINTTO;
RUN;
/***************************************************************************************************/
data _null_;
set  WORK.Adsb;
file 'T:\SAS\UTLWQ26.Detail.txt' delimiter=',' DSD DROPOVER lrecl=32767;
   format DF_PRS_ID_BR $9. ;
   format AA_GTE_LON_AMT 16.2 ;
   format AF_ORG_APL_OPS_LDR $8. ;
   format AF_CUR_APL_OPS_LDR $8. ;
   format AF_APL_OPS_SCL $8. ;
   format AF_APL_ID $17. ;
   format AF_APL_ID_SFX $2. ;
   format AN_DSB_SEQ 6. ;
   format AF_CRT_DTS_GA11 datetime25.6 ;
   format AC_DSB_ADJ $1. ;
   format AA_DSB_ADJ 10.2 ;
   format AD_DSB_ADJ MMDDYY10. ;
   format AC_DSB_ADJ_STA $1. ;
   format AA_GTE_FEE_ADJ 9.2 ;
   format AA_ORG_FEE_ADJ 9.2 ;
   format AC_NSL_ACP $1. ;
   format AF_LST_DTS_GA11 datetime25.6 ;
   format AC_DSB_ADJ_SRC $1. ;
   format AF_LST_USR_GA11 $8. ;
   format AA_LDR_GTE_FEE_ADJ 9.2 ;
   format AA_3PT_GTE_FEE_ADJ 9.2 ;
   format AD_LST_USR_UPD MMDDYY10. ;
   format BR_1ST_DSB MMDDYY10. ;
   format DSB_GE_JUL1 $1. ;
   format AD_IST_TRM_END MMDDYY10.;
if _n_ = 1 then do;
   put
   'DF_PRS_ID_BR'
   ','
   'AA_GTE_LON_AMT'
   ','
   'AF_ORG_APL_OPS_LDR'
   ','
   'AF_CUR_APL_OPS_LDR'
   ','
   'AF_APL_OPS_SCL'
   ','
   'AF_APL_ID'
   ','
   'AF_APL_ID_SFX'
   ','
   'AN_DSB_SEQ'
   ','
   'AF_CRT_DTS_GA11'
   ','
   'AC_DSB_ADJ'
   ','
   'AA_DSB_ADJ'
   ','
   'AD_DSB_ADJ'
   ','
   'AC_DSB_ADJ_STA'
   ','
   'AA_GTE_FEE_ADJ'
   ','
   'AA_ORG_FEE_ADJ'
   ','
   'AC_NSL_ACP'
    ','
    'AF_LST_DTS_GA11'
    ','
    'AC_DSB_ADJ_SRC'
    ','
    'AF_LST_USR_GA11'
    ','
    'AA_LDR_GTE_FEE_ADJ'
    ','
    'AA_3PT_GTE_FEE_ADJ'
    ','
    'AD_LST_USR_UPD'
    ','
    'BR_1ST_DSB'
    ','
    'DSB_GE_JUL1'
	','
	'AD_IST_TRM_END'
    ;
end;
do;
    put DF_PRS_ID_BR $ @;
    put AA_GTE_LON_AMT @;
    put AF_ORG_APL_OPS_LDR $ @;
    put AF_CUR_APL_OPS_LDR $ @;
    put AF_APL_OPS_SCL $ @;
    put AF_APL_ID $ @;
    put AF_APL_ID_SFX $ @;
    put AN_DSB_SEQ @;
    put AF_CRT_DTS_GA11 @;
    put AC_DSB_ADJ $ @;
    put AA_DSB_ADJ @;
    put AD_DSB_ADJ @;
    put AC_DSB_ADJ_STA $ @;
    put AA_GTE_FEE_ADJ @;
    put AA_ORG_FEE_ADJ @;
    put AC_NSL_ACP $ @;
    put AF_LST_DTS_GA11 @;
    put AC_DSB_ADJ_SRC $ @;
    put AF_LST_USR_GA11 $ @;
    put AA_LDR_GTE_FEE_ADJ @;
    put AA_3PT_GTE_FEE_ADJ @;
    put AD_LST_USR_UPD @;
    put BR_1ST_DSB @;
    put DSB_GE_JUL1 $ @;
	put AD_IST_TRM_END ;
end;
run;
