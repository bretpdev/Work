--CSFOLFED.sql: CLOSED SCHOOL FOLLOW UP - FED
USE CDW;
GO

DROP TABLE IF EXISTS #BASE_POP;

BEGIN TRY
	BEGIN TRANSACTION
				--Follow up letter data set:
		DECLARE @ScriptId VARCHAR(10) = 'CLSCNOTFED'; --letter ID
		DECLARE @ScriptDataId INT = (SELECT ScriptDataId FROM CLS.[print].ScriptData WHERE ScriptId = @ScriptId)
				,@AddedBy VARCHAR(8) = 'CSFOLFED'; --Sacker SAS ID

		DECLARE @TODAY DATE = GETDATE();
		
		SELECT DISTINCT
			 PD10.DF_SPE_ACC_ID
			,LN10.BF_SSN
			,IIF(LN10.IC_LON_PGM IN ('DPLUS','DLPLUS','DLPCNS'), 0, 1) AS SelectAllLoans
		INTO
			#BASE_POP
		FROM
			LN10_LON LN10
			INNER JOIN PD10_PRS_NME PD10
				ON LN10.BF_SSN = PD10.DF_PRS_ID
			INNER JOIN LN85_LON_ATY LN85
				ON LN10.BF_SSN = LN85.BF_SSN
				AND LN10.LN_SEQ = LN85.LN_SEQ
			INNER JOIN 
			(--get min CSREQ arc
				SELECT DISTINCT
					 AY10.BF_SSN
					,LN85.LN_SEQ
					,MIN(AY10.LN_ATY_SEQ) AS min_LN_ATY_SEQ 
					,CONVERT(DATE, MIN(AY10.LD_ATY_REQ_RCV)) AS min_LD_ATY_REQ_RCV
				FROM
					AY10_BR_LON_ATY AY10
					INNER JOIN LN85_LON_ATY LN85
						ON AY10.BF_SSN = LN85.BF_SSN
						AND AY10.LN_ATY_SEQ = LN85.LN_ATY_SEQ
				WHERE
					AY10.PF_REQ_ACT = 'CSREQ'
					AND AY10.LC_STA_ACTY10 = 'A'
					AND AY10.LD_ATY_REQ_RCV >= CONVERT(DATETIME,'20181016') --exclude CSREQ before 10/16/2018
				GROUP BY
					 AY10.BF_SSN
					,LN85.LN_SEQ
			) MIN_CSREQ
				ON LN85.BF_SSN = MIN_CSREQ.BF_SSN
				AND LN85.LN_SEQ = MIN_CSREQ.LN_SEQ
				AND LN85.LN_ATY_SEQ = MIN_CSREQ.min_LN_ATY_SEQ
			LEFT JOIN 
			(--exclude CSRQ2
				SELECT DISTINCT
					 AY10.BF_SSN
					,LN85.LN_SEQ
					,AY10.LN_ATY_SEQ
					,CONVERT(DATE, AY10.LD_ATY_REQ_RCV) AS LD_ATY_REQ_RCV
				FROM
					AY10_BR_LON_ATY AY10
					INNER JOIN LN85_LON_ATY LN85
						ON AY10.BF_SSN = LN85.BF_SSN
						AND AY10.LN_ATY_SEQ = LN85.LN_ATY_SEQ
				WHERE
					AY10.PF_REQ_ACT = 'CSRQ2'
					AND AY10.LC_STA_ACTY10 = 'A'
			) X_CSRQ2
				ON MIN_CSREQ.BF_SSN = X_CSRQ2.BF_SSN
				AND MIN_CSREQ.LN_SEQ = X_CSRQ2.LN_SEQ
				AND X_CSRQ2.LD_ATY_REQ_RCV >= MIN_CSREQ.min_LD_ATY_REQ_RCV
				AND X_CSRQ2.LD_ATY_REQ_RCV <= @TODAY
			LEFT JOIN
			(--exclude ADCSH/DICSK
				SELECT DISTINCT
					 BF_SSN
					,CONVERT(DATE, LD_ATY_REQ_RCV) AS LD_ATY_REQ_RCV
				FROM
					AY10_BR_LON_ATY
				WHERE
					PF_REQ_ACT IN ('ADCSH','DICSK')
					AND LC_STA_ACTY10 = 'A'
			) X_ADCSHDICSK
				ON LN10.BF_SSN = X_ADCSHDICSK.BF_SSN
				AND X_ADCSHDICSK.LD_ATY_REQ_RCV >= MIN_CSREQ.min_LD_ATY_REQ_RCV
				AND X_ADCSHDICSK.LD_ATY_REQ_RCV <= @TODAY
			LEFT JOIN 
			(
				SELECT DISTINCT
					BF_SSN
				FROM
					DW01_DW_CLC_CLU
				WHERE
					WC_DW_LON_STA IN ('17','19')
			) DW01
			ON DW01.BF_SSN = PD10.DF_PRS_ID
		WHERE
			LN10.LA_CUR_PRI > 0.00
			AND LN10.LC_STA_LON10 = 'R'
			AND MIN_CSREQ.min_LD_ATY_REQ_RCV <= DATEADD(DAY, -60, @TODAY)
			AND X_CSRQ2.BF_SSN IS NULL --exclude CSRQ2
			AND X_ADCSHDICSK.BF_SSN IS NULL --exclude ADCSH/DICSK
			AND DW01.BF_SSN IS NULL
		;
		--select * from #BASE_POP order by min_LD_ATY_REQ_RCV --TEST
		

		INSERT INTO CLS.[print].PrintProcessing
		(
			 AccountNumber
			,EmailAddress
			,ScriptDataId
			,SourceFile
			,LetterData
			,CostCenter
			,DoNotProcessEcorr
			,OnEcorr
			,ArcNeeded
			,ImagingNeeded
			,AddedBy
			,AddedAt
		)
		SELECT DISTINCT
			 BP.DF_SPE_ACC_ID AS AccountNumber
			,COALESCE(PH05.DX_CNC_EML_ADR,'Ecorr@MyCornerStoneLoan.org') AS EmailAddress
			,@ScriptDataId AS ScriptDataId
			,'' AS SourceFile
			,COALESCE(LTRIM(RTRIM(CentralData.dbo.CreateACSKeyline(BP.BF_SSN, 'B', PD30.DC_ADR))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD10.DM_PRS_1,',',''))),'')
			+ ' ' + COALESCE(LTRIM(RTRIM(REPLACE(PD10.DM_PRS_LST,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD30.DX_STR_ADR_1,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD30.DX_STR_ADR_2,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD30.DM_CT,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD30.DC_DOM_ST,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD30.DF_ZIP_CDE,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD30.DM_FGN_ST,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(REPLACE(PD30.DM_FGN_CNY,',',''))),'')
			+ ',' + COALESCE(LTRIM(RTRIM(PD10.DF_SPE_ACC_ID)),'')
			+ ',' + 'MA4481' AS LetterData
			,'MA4481' AS CostCenter
			,SD.DoNotProcessEcorr
			,CASE WHEN PH05.DF_SPE_ID IS NOT NULL THEN 1 ELSE 0 END AS OnEcorr
			,IIF(SDM.ArcId IS NULL, 0, 1) AS ArcNeeded
			,IIF(SD.DocIdId IS NULL, 0, 1) AS ImagingNeeded
			,@AddedBy
			,GETDATE() AS AddedAt
		FROM
			#BASE_POP BP
			INNER JOIN CDW..PD10_PRS_NME PD10
				ON PD10.DF_PRS_ID = BP.BF_SSN
			INNER JOIN CDW..PD30_PRS_ADR PD30
				ON PD10.DF_PRS_ID = PD30.DF_PRS_ID
				AND PD30.DC_ADR = 'L' --legal address
			INNER JOIN CLS.[print].ScriptData SD
				ON SD.ScriptId = @ScriptId
				AND SD.ScriptDataId = @ScriptDataId
			INNER JOIN CLS.[print].ArcScriptDataMapping SDM
				ON SDM.ScriptDataId = SD.ScriptDataId
			LEFT JOIN CDW..PH05_CNC_EML PH05 
				ON PH05.DF_SPE_ID = BP.DF_SPE_ACC_ID
				AND PH05.DI_VLD_CNC_EML_ADR = 'Y'
				AND PH05.DI_CNC_ELT_OPI = 'Y'
			LEFT JOIN CLS.[print].PrintProcessing EXISTING_DATA
				ON  EXISTING_DATA.AccountNumber = BP.DF_SPE_ACC_ID
				AND EXISTING_DATA.AddedBy = @AddedBy
				AND CAST(EXISTING_DATA.AddedAt AS DATE) >= @TODAY
				AND CAST(EXISTING_DATA.AddedAt AS DATE) < DATEADD(DAY, 1, @TODAY)
		WHERE
			EXISTING_DATA.AccountNumber IS NULL
			AND --ON EOCRR OR HAS A VALID ADDRESS
			(
				PH05.DF_SPE_ID IS NOT NULL
				OR
				PD30.DI_VLD_ADR = 'Y'
			)
		;
		--SELECT * FROM  CLS.[print].PrintProcessing WHERE AddedBy = 'CLSCNOTFED' --TEST


	COMMIT TRANSACTION;
END TRY
BEGIN CATCH
	PRINT 'CSFOLFED.sql transaction NOT committed.';
	ROLLBACK TRANSACTION;
	THROW;
END CATCH;