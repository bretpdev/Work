%LET BANA = %STR(REQUIRED="FILEDSN=X:\PADR\ODBC\EA27_BANA.dsn; update_lock_typ=nolock; bl_keepnulls=no");
LIBNAME BANA ODBC &BANA ;

PROC SQL;
	CREATE TABLE DATA AS 
		SELECT DISTINCT
			P.BORROWERSSN,
			SUM(S.PartialFinancialHardshipAmount) as PartialFinancialHardshipAmount,
			RepaymentPlanCode
		FROM	
			BANA._03PaymentDataRecord P
			INNER JOIN BANA._05SupplementalBorrowerRecord S
				ON S.BORROWERSSN = P.BORROWERSSN
				AND S.LOAN_NUMBER = P.LOAN_NUMBER
		WHERE
			P.RepaymentPlanCode IN ('IB','IP')
		GROUP BY
			P.BORROWERSSN,
			RepaymentPlanCode
;
QUIT;

PROC SQL;
	CREATE TABLE Supp AS
		SELECT 
				*
		FROM BANA._05SupplementalBorrowerRecord
;
QUIT;

PROC SQL;
	CREATE TABLE Addr AS
		SELECT 
				*
		FROM BANA._06BorrowerAddressRecord
;
QUIT;

PROC SQL;
	CREATE TABLE CompassLoanMapping AS
		SELECT 
				*
		FROM BANA.CompassLoanMapping
;
QUIT;

/*TEST*/
/*LIBNAME  DUSTER  REMOTE  SERVER=QADBD004 SLIBREF=WORK  ;*/

/*LIVE*/
LIBNAME  DUSTER  REMOTE  SERVER=DUSTER  SLIBREF=WORK;

DATA DUSTER.DATA;
SET DATA;
RUN;
DATA DUSTER.Supp;
SET Supp;
RUN;
DATA DUSTER.Addr;
SET Addr;
RUN;

DATA DUSTER.CompassLoanMapping;
SET CompassLoanMapping;
RUN;

RSUBMIT;  
/*%let DB = DLGSWQUT;  *This is test;*/
%let DB = DLGSUTWH;  *This is live;
LIBNAME OLWHRM1 DB2 DATABASE=&DB OWNER=OLWHRM1;
PROC SQL;
	CREATE TABLE BASE AS
		SELECT DISTINCT
			LN66.BF_SSN,
			LN66.LN_SEQ,
			LN66.LN_RPS_SEQ,
			LN66.LN_GRD_RPS_SEQ,
			RS10.LC_RPD_DIS AS NEW_REPAYMENT_PLAN,
			d.RepaymentPlanCode as OLD_REPAYMENT_PLAN,
			D.PartialFinancialHardshipAmount AS EA27_PAYMENT,
			LN66.LA_RPS_ISL AS NEW_PAYMENT,
			LN10.LA_CUR_PRI,
            PD30.DC_DOM_ST,
            LN72.LR_ITR
		FROM
			 DATA D
		INNER JOIN OLWHRM1.RS10_BR_RPD RS10
			ON D.BORROWERSSN = RS10.BF_SSN
		INNER JOIN OLWHRM1.LN65_LON_RPS LN65
			ON LN65.BF_SSN = RS10.BF_SSN
			AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
		INNER JOIN OLWHRM1.LN66_LON_RPS_SPF LN66
			ON LN66.BF_SSN = LN65.BF_SSN
			AND LN65.LN_SEQ = LN66.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN66.LN_RPS_SEQ
		INNER JOIN OLWHRM1.LN10_LON LN10
        	ON LN66.BF_SSN = LN10.BF_SSN 
       		AND LN66.LN_SEQ = LN10.LN_SEQ
		JOIN OLWHRM1.LN72_INT_RTE_HST LN72
	        ON LN66.BF_SSN = LN72.BF_SSN
	        AND LN66.LN_SEQ = LN72.LN_SEQ
	        AND LN72.LC_STA_LON72 = 'A'
	        AND TODAY() BETWEEN LN72.LD_ITR_EFF_BEG AND LN72.LD_ITR_EFF_END
		LEFT JOIN OLWHRM1.PD30_PRS_ADR PD30
	        ON RS10.BF_SSN = PD30.DF_PRS_ID
	        AND PD30.DC_ADR = 'L'
		WHERE
			RS10.LC_RPD_DIS = 'L'
			AND RS10.LC_STA_RPST10 = 'A'
		
;
QUIT;

PROC SQL;
	CREATE TABLE RS10 AS
		SELECT DISTINCT
			B.BF_SSN,
			1 AS LN_RPS_SEQ,
			'L' AS OLD_LC_TYP_SCH_DIS,
			CASE WHEN B.OLD_REPAYMENT_PLAN = 'IB' THEN 'IB'
				 WHEN B.OLD_REPAYMENT_PLAN = 'IP' THEN 'IL' END AS NEW_LC_TYP_SCH_DIS
		FROM
			WORK.BASE B
;
QUIT;

PROC SQL;
	CREATE TABLE RS05 AS
		SELECT DISTINCT
			B.BF_SSN,
			CASE WHEN B.OLD_REPAYMENT_PLAN = 'IB' THEN DATEPART(S.PFHBeginDate)
				 WHEN B.OLD_REPAYMENT_PLAN = 'IP' THEN INTNX('month',DATEPART(S.PFHEndDate),1) END AS BD_CRT_RS05,
			1 AS BN_IBR_SEQ,
			'DCR' AS BF_CRT_USE_RS05,
			YEAR(DATEPART(S.PFHBeginDate)) AS BF_CRY_YR,
			Addr.BorrowerState AS BC_ST_IBR,
			'A' AS BC_STA_RS05,
			CASE WHEN B.OLD_REPAYMENT_PLAN = 'IB' AND Addr.BorrowerState = 'AK' THEN (((S.PartialFinancialHardshipAmount*12)/0.15)+29880)   
                 WHEN B.OLD_REPAYMENT_PLAN = 'IB' AND Addr.BorrowerState = 'HI' THEN (((S.PartialFinancialHardshipAmount*12)/0.15)+27495)   
				 WHEN B.OLD_REPAYMENT_PLAN = 'IB' THEN (((S.PartialFinancialHardshipAmount*12)/0.15)+23895)   
				 WHEN B.OLD_REPAYMENT_PLAN = 'IP' THEN 10000 END AS BA_AGI,
			2 AS BN_MEM_HSE_HLD,
			S.PermanentStandardPayAmount AS BA_PMN_STD_TOT_PAY,
			'TAX' AS BC_IBR_INF_SRC_VER,
			'DIG Timestamp' AS BF_LST_DTS_RS05,
			'NULL' AS BF_SSN_SPO,
			'NULL' AS BC_IRS_TAX_FIL_STA,
			'NULL' AS BI_JNT_BR_SPO_RPY,
			INTNX('month',DATEPART(S.PFHBeginDate),12) AS BD_ANV_QLF_IBR,
			'NULL' AS BC_DOC_SNT_BR_IDR
		FROM
			WORK.BASE B
			INNER JOIN WORK.CompassLoanMapping CLM
				ON CLM.BorrowerSSN = B.BF_SSN
				AND CLM.LN_SEQ = B.LN_SEQ
			INNER JOIN 
                (
                      SELECT 
                            SUM(PermanentStandardPayAmount) AS PermanentStandardPayAmount,
                            SUM(PartialFinancialHardshipAmount) AS PartialFinancialHardshipAmount,
                            MAX(PFHBeginDate) AS PFHBeginDate,
                            MAX(PFHEndDate) AS PFHEndDate,
                            BorrowerSSN
                      FROM
                            WORK.Supp
                      GROUP BY
                            BorrowerSSN
                ) S ON S.BorrowerSSN = CLM.BorrowerSSN
			INNER JOIN WORK.Addr Addr
				ON Addr.BorrowerSSN = CLM.BorrowerSSN
;
QUIT;

PROC SQL;
	CREATE TABLE RS20 AS
		SELECT DISTINCT
			B.BF_SSN,
			CASE WHEN B.OLD_REPAYMENT_PLAN = 'IB' THEN DATEPART(S.PFHBeginDate)
				 WHEN B.OLD_REPAYMENT_PLAN = 'IP' THEN INTNX('month',DATEPART(S.PFHEndDate),1) END AS BD_CRT_RS05,
			1 AS BN_IBR_SEQ,
			B.LN_SEQ AS LN_SEQ,
			S.PartialFinancialHardshipAmount AS LA_PFH_PAY,
			S.PermanentStandardPayAmount AS LA_PMT_STD_PAY,
			'DIG Timestamp' AS BF_LST_DTS_RS20,
			LN10.LA_CUR_PRI AS LA_OTS_PRI_IBR_ADD,
			'NULL' AS LA_OTS_NSI_IBR_ADD,
			'NULL' AS LA_ANN_PAY_IBR_CLC
		FROM
			WORK.BASE B
			INNER JOIN OLWHRM1.LN10_LON LN10
				ON LN10.BF_SSN = B.BF_SSN
				AND LN10.LN_SEQ = B.LN_SEQ
			INNER JOIN WORK.CompassLoanMapping CLM
				ON CLM.BorrowerSSN = B.BF_SSN
				AND CLM.LN_SEQ = B.LN_SEQ
			INNER JOIN WORK.Supp S
				ON S.BorrowerSSN = CLM.BorrowerSSN
				AND S.loan_number = CLM.loan_number
		WHERE
			B.LA_CUR_PRI > 0
;
QUIT;

PROC SQL;
	CREATE TABLE LN65 AS
		SELECT DISTINCT
			B.BF_SSN,
			B.LN_SEQ,
			B.LN_RPS_SEQ,
			'L' AS OLD_LC_TYP_SCH_DIS,
			CASE WHEN B.OLD_REPAYMENT_PLAN = 'IB' THEN 'IB'
				 WHEN B.OLD_REPAYMENT_PLAN = 'IP' THEN 'IL' END AS NEW_LC_TYP_SCH_DIS
		FROM
			WORK.BASE B
			INNER JOIN OLWHRM1.LN65_LON_RPS LN65
				ON LN65.BF_SSN = B.BF_SSN
				AND LN65.LN_SEQ = B.LN_SEQ
				AND LN65.LN_RPS_SEQ = B.LN_RPS_SEQ
		WHERE
			B.LA_CUR_PRI > 0
;
	CREATE TABLE LN65_DELETE AS 
		SELECT DISTINCT 
			B.BF_SSN,
			B.LN_SEQ,
			B.LN_RPS_SEQ
		FROM
			BASE B
		WHERE
			B.LA_CUR_PRI = 0
;		
QUIT;

PROC SQL;
	CREATE TABLE LN66Tier1Up AS
		SELECT DISTINCT
			LN66.BF_SSN,
			LN66.LN_SEQ,
			LN66.LN_RPS_SEQ,
			LN66.LN_GRD_RPS_SEQ AS LN_GRD_RPS_SEQ,
			LN66.LA_RPS_ISL AS OLD_LA_RPS_ISL,
			S.PartialFinancialHardshipAmount AS NEW_LA_RPS_ISL
		FROM
			WORK.BASE B
			INNER JOIN WORK.CompassLoanMapping CLM
				ON CLM.BorrowerSSN = B.BF_SSN
				AND CLM.LN_SEQ = B.LN_SEQ
			INNER JOIN WORK.Supp S
				ON S.BorrowerSSN = CLM.BorrowerSSN
				AND S.loan_number = CLM.loan_number
			INNER JOIN
				( 
					SELECT 
						BF_SSN,
						LN_SEQ,
						LN_RPS_SEQ,
						MIN(LN_GRD_RPS_SEQ) AS LN_GRD_RPS_SEQ,
						LA_RPS_ISL,
						LN_RPS_TRM
					FROM
						OLWHRM1.LN66_LON_RPS_SPF
					GROUP BY
						BF_SSN,
						LN_SEQ,
						LN_RPS_SEQ,
						LA_RPS_ISL,
						LN_RPS_TRM
				) LN66 ON LN66.BF_SSN = B.BF_SSN
				AND LN66.LN_SEQ = B.LN_SEQ
				AND LN66.LN_RPS_SEQ = B.LN_RPS_SEQ
		WHERE 
			B.OLD_REPAYMENT_PLAN IN ('IB','IP')
			AND B.LA_CUR_PRI > 0
;
	CREATE TABLE LN66_DELETE AS 
		SELECT
			LN66.BF_SSN,
			LN66.LN_SEQ,
			LN66.LN_RPS_SEQ,
			LN66.LN_GRD_RPS_SEQ 
		FROM
			OLWHRM1.LN66_LON_RPS_SPF ln66
			INNER JOIN BASE B
				ON BASE.BF_SSN = LN66.BF_SSN
				AND BASE.LN_SEQ = LN66.LN_SEQ
		WHERE
			B.LA_CUR_PRI = 0
;			
QUIT;

PROC SQL;
	CREATE TABLE LN66Tier2Add AS
		SELECT DISTINCT
			B.BF_SSN,
			B.LN_SEQ,
			B.LN_RPS_SEQ,
			2 AS LN_GRD_RPS_SEQ,
			S.PermanentStandardPayAmount AS LA_RPS_ISL,
			CASE WHEN B.OLD_REPAYMENT_PLAN = 'IB' THEN DATEPART(S.PFHBeginDate)
				 WHEN B.OLD_REPAYMENT_PLAN = 'IP' THEN INTNX('month',DATEPART(S.PFHEndDate),1) END AS LD_CRT_LON66,
			CEIL((300 - ((TODAY() - DATEPART(S.IBRForgiveStartDate)) /365 * 12) - 12)) AS LN_RPS_TRM,
			'DIG Timestamp' AS LF_LST_DTS_LN66,
			'NULL' AS LA_PRI_RDC_GRD,
			'NULL' AS LN_PRI_RDC_GRD_TRM
		FROM
			WORK.BASE B
			INNER JOIN WORK.CompassLoanMapping CLM
				ON CLM.BorrowerSSN = B.BF_SSN
				AND CLM.LN_SEQ = B.LN_SEQ
			INNER JOIN WORK.Supp S
				ON S.BorrowerSSN = CLM.BorrowerSSN
				AND S.loan_number = CLM.loan_number
			LEFT OUTER JOIN
				( 
					SELECT 
						BF_SSN,
						LN_SEQ,
						LN_RPS_SEQ,
						LN_GRD_RPS_SEQ,
						LA_RPS_ISL 
					FROM
						OLWHRM1.LN66_LON_RPS_SPF
					WHERE 
						LN_GRD_RPS_SEQ = 2
				) LN66 ON LN66.BF_SSN = B.BF_SSN
				AND LN66.LN_SEQ = B.LN_SEQ
				AND LN66.LN_RPS_SEQ = B.LN_RPS_SEQ
		WHERE 
			B.OLD_REPAYMENT_PLAN IN ('IB','IP')
			AND LN66.BF_SSN IS NULL
			AND B.LA_CUR_PRI > 0
;

QUIT;

ENDRSUBMIT;

DATA WORK.RS10; SET DUSTER.RS10; RUN;
DATA WORK.RS05; SET DUSTER.RS05; FORMAT BD_CRT_RS05 MMDDYY10.; FORMAT BD_ANV_QLF_IBR MMDDYY10.; RUN;
DATA WORK.RS20; SET DUSTER.RS20; FORMAT BD_CRT_RS05 MMDDYY10.; RUN;
DATA WORK.LN65; SET DUSTER.LN65; RUN; 
DATA WORK.LN66Tier1Up; SET DUSTER.LN66Tier1Up; RUN; 
DATA WORK.LN66Tier2Add; SET DUSTER.LN66Tier2Add; FORMAT LD_CRT_LON66 MMDDYY10.; RUN;
DATA WORK.LN65_DELETE; SET DUSTER.LN65_DELETE; RUN; 
DATA WORK.LN66_DELETE; SET DUSTER.LN66_DELETE; RUN; 

PROC EXPORT DATA = WORK.RS10 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="RS10-CHANGE"; 
RUN;

PROC EXPORT DATA = WORK.RS05 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="RS05-ADD"; 
RUN;

PROC EXPORT DATA = WORK.RS20 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="RS20-ADD"; 
RUN;

PROC EXPORT DATA = WORK.LN65 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="LN65-CHANGE"; 
RUN;

PROC EXPORT DATA = WORK.LN66Tier1Up 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="LN66-CHANGE"; 
RUN;

PROC EXPORT DATA = WORK.LN66Tier2Add 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="LN66-ADD"; 
RUN;


PROC EXPORT DATA = WORK.LN65_DELETE 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="LN65-DELETE"; 
RUN;

PROC EXPORT DATA = WORK.LN66_DELETE 
            OUTFILE = "T:\IBR FIX DCR.xlsx" 
            DBMS = EXCEL
			REPLACE;
     SHEET="LN66-DELETE"; 
RUN;
