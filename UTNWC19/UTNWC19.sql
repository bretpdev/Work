--note:  if Visual Studio throws #ERROR, delete the .rdl.data file associated with this report

/*comment out these GO statements for Visual Studio*/
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
GO
IF OBJECT_ID('tempdb..#LN65_MAX') IS NOT NULL 
	DROP TABLE #LN65_MAX
GO
/*************************************************/

--date variables
DECLARE @BEGIN_LAST_MONTH DATE = CAST(DATEADD(DAY, 1, EOMONTH(GETDATE(),-2)) AS DATE) --beginning of last month
DECLARE @END_LAST_MONTH DATE = CAST(EOMONTH(GETDATE(),-1) AS DATE) --End of last month

--table variables to hold queried data
DECLARE @RECENT_ACTIVE TABLE (BF_SSN CHAR(9),RPY_TYP VARCHAR(6),LAST_MONTH TINYINT,LC_STA_LON65 VARCHAR(1)); --Active status
DECLARE @REMOVED TABLE (RPY_TYP VARCHAR(6),BF_SSN CHAR(9),LN_SEQ SMALLINT,LN_RPS_SEQ SMALLINT,scenario TINYINT,POP_TYP VARCHAR(13)); --Inactive status

--table variable used to create output
DECLARE @CATEGORIES TABLE (LIST_ORDER TINYINT, RPY_TYP VARCHAR(6), CATEGORY VARCHAR(28));
INSERT INTO @CATEGORIES (LIST_ORDER, RPY_TYP, CATEGORY)
VALUES
	 (1,'IBR','IBR running total')
	,(2,'IBR','IBR for the month')
	,(3,'IBR','IBR removed running total')
	,(4,'IBR','IBR removed for the month')
	,(5,'ICR','ICR running total')
	,(6,'ICR','ICR for the month')
	,(7,'ICR','ICR removed running total')
	,(8,'ICR','ICR removed for the month')
	,(9,'PAYE','PAYE running total')
	,(10,'PAYE','PAYE for the month')
	,(11,'PAYE','PAYE removed running total')
	,(12,'PAYE','PAYE removed for the month')
	,(13,'REPAYE','REPAYE running total')
	,(14,'REPAYE','REPAYE for the month')
	,(15,'REPAYE','REPAYE removed running total')
	,(16,'REPAYE','REPAYE removed for the month')
;

--max loan repayment sequence with a balance
CREATE TABLE #LN65_MAX (BF_SSN CHAR(9),LN_SEQ SMALLINT,LN_RPS_SEQ SMALLINT);
INSERT INTO #LN65_MAX
SELECT
	LN65M.BF_SSN
	,LN65M.LN_SEQ
	,LN65M.LN_RPS_SEQ
FROM
	CDW..LN10_LON LN10
	INNER JOIN
	(
		SELECT
			BF_SSN
			,LN_SEQ
			,MAX(LN_RPS_SEQ) OVER (PARTITION BY BF_SSN, LN_SEQ) [LN_RPS_SEQ]
		FROM
			CDW..LN65_LON_RPS
	) LN65M
		ON LN10.BF_SSN = LN65M.BF_SSN
		AND LN10.LN_SEQ = LN65M.LN_SEQ
WHERE
	LN10.LA_CUR_PRI > 0.00

/*******************************************************************************************/
/*********************** ACTIVE RECORD PROCESSING ******************************************/
/*******************************************************************************************/

--get most recent ACTIVE record
INSERT INTO
	@RECENT_ACTIVE
SELECT
	BF_SSN
	,RPY_TYP
	,LAST_MONTH
	,LC_STA_LON65
FROM
(--assign row number to all records pulled
	SELECT 
		ROW_NUMBER() OVER(PARTITION BY RPY_TYP, BF_SSN ORDER BY RPY_TYP, BF_SSN, LD_CRT_LON65 DESC) [ROWNUM]
		,POP.*
	FROM
	(--core population
		SELECT DISTINCT 
			LN10.BF_SSN
			,CASE 
				WHEN LN65.LC_TYP_SCH_DIS IN ('IB','I3')
					THEN 'IBR'
				WHEN LN65.LC_TYP_SCH_DIS IN ('C1','C2','C3') 
					THEN 'ICR'
				WHEN LN65.LC_TYP_SCH_DIS = 'CA'
					THEN 'PAYE'
				WHEN LN65.LC_TYP_SCH_DIS = 'I5'
					THEN 'REPAYE'
				ELSE 'ERROR'
				END AS RPY_TYP
			,CASE --flags if updated last month
				WHEN CAST(LN65.LD_CRT_LON65 AS DATE) BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
				THEN 1
				ELSE 0
			END AS LAST_MONTH
			,LN65.LD_CRT_LON65
			,LN65.LC_STA_LON65
		FROM
			CDW..LN10_LON LN10
			INNER JOIN CDW..LN65_LON_RPS LN65
				ON LN10.BF_SSN = LN65.BF_SSN
				AND LN10.LN_SEQ = LN65.LN_SEQ
		WHERE
			LN10.LA_CUR_PRI > 0.00
			AND	LN10.LC_STA_LON10 = 'R'
			AND LN65.LC_TYP_SCH_DIS IN ('IB','I3','C1','C2','C3','CA','I5')
	) POP
) NUMS
WHERE
	NUMS.ROWNUM = 1
	AND NUMS.LC_STA_LON65 = 'A';

--SELECT * FROM @RECENT_ACTIVE ORDER BY RPY_TYP,BF_SSN;

/*******************************************************************************************/
/*********************** INACTIVE RECORD PROCESSING ****************************************/
/*******************************************************************************************/

------------------------- IBR removed running total ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--gets any instance of non-max IBR (ie pre-max IBR)
			SELECT
				 LN65.BF_SSN
				,LN65.LN_SEQ
				,LN65.LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS LN65
				LEFT JOIN 
				(--exclude max repayment sequence
					SELECT
						BF_SSN
						,LN_SEQ
						,MAX(LN_RPS_SEQ) OVER (PARTITION BY BF_SSN, LN_SEQ) [LN_RPS_SEQ]
					FROM
						CDW..LN65_LON_RPS
				) LN65A
					ON LN65.BF_SSN = LN65A.BF_SSN
					AND LN65.LN_SEQ = LN65A.LN_SEQ
					AND LN65.LN_RPS_SEQ = LN65A.LN_RPS_SEQ
			WHERE
				LN65A.BF_SSN IS NULL
				AND LN65A.LN_SEQ IS NULL
				AND LN65A.LN_RPS_SEQ IS NULL
				AND LN65.LC_TYP_SCH_DIS IN ('IB','IL','IP','I3')
		) PRIOR_IBR
			ON LN65.BF_SSN = PRIOR_IBR.BF_SSN
			--AND LN65.LN_SEQ = PRIOR_IBR.LN_SEQ
			--AND LN65.LN_RPS_SEQ = PRIOR_IBR.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('IB','IL')
		AND LN65.LC_STA_LON65 = 'A'

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		 LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
	WHERE
		LN65.LC_STA_LON65 = 'I'
		AND LN65.LC_TYP_SCH_DIS IN ('IB','IL','IP','I3')
)
INSERT INTO
	@REMOVED
SELECT 
	'IBR'[RPY_TYP]
	,*
	,'RUNNING TOTAL'[POP_TYP]
FROM
	BOTH;

------------------------- IBR removed for the month ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--get 2nd to max loan repayment sequence
			SELECT
				NUM.BF_SSN
				,NUM.LN_SEQ
				,NUM.LN_RPS_SEQ
				,NUM.LC_TYP_SCH_DIS
				,NUM.LF_LST_DTS_LN65
				,NUM.LC_STA_LON65
			FROM
				CDW..LN10_LON LN10
				INNER JOIN
				(--assign number starting with highest repayment sequence first
					SELECT
						ROW_NUMBER() OVER(PARTITION BY BF_SSN, LN_SEQ ORDER BY LN_RPS_SEQ DESC) [ROWNUM]
						,BF_SSN
						,LN_SEQ
						,LN_RPS_SEQ
						,LC_TYP_SCH_DIS
						,LF_LST_DTS_LN65
						,LC_STA_LON65
					FROM
						CDW..LN65_LON_RPS
				) NUM
					ON LN10.BF_SSN = NUM.BF_SSN
					AND LN10.LN_SEQ = NUM.LN_SEQ
			WHERE
				NUM.ROWNUM = 2
				AND	NUM.LC_TYP_SCH_DIS IN ('IB','IL','IP','I3')
				AND NUM.LF_LST_DTS_LN65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
				AND NUM.LC_STA_LON65 = 'I'
				AND LN10.LA_CUR_PRI > 0.00
		) SECOND_TO_MAX
			ON LN65.BF_SSN = SECOND_TO_MAX.BF_SSN
			AND LN65.LN_SEQ = SECOND_TO_MAX.LN_SEQ
			--AND LN65.LN_RPS_SEQ = STM.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('IB','IL','IP','I3')

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN
		(--gets previous month's repayment schedule
			SELECT
				 BF_SSN
				,LN_SEQ
				,LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS
			WHERE
				LD_CRT_LON65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
		) LN65_PREV
			ON LN65.BF_SSN = LN65_PREV.BF_SSN
			AND LN65.LN_SEQ = LN65_PREV.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_PREV.LN_RPS_SEQ
		INNER JOIN CDW..RS10_BR_RPD RS10
			ON LN65.BF_SSN = RS10.BF_SSN
			AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS IN ('IB','IL','IP','I3')
		AND RS10.LC_STA_RPST10 = 'I'
)
INSERT INTO
	@REMOVED
SELECT 
	'IBR'[RPY_TYP]
	,*
	,'FOR THE MONTH'[POP_TYP]
FROM
	BOTH;

------------------------- ICR removed running total ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--gets any instance of non-max ICR (ie pre-max ICR)
			SELECT
				 LN65.BF_SSN
				,LN65.LN_SEQ
				,LN65.LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS LN65
				LEFT JOIN
				( --exclude max repayment sequence
					SELECT
						BF_SSN
						,LN_SEQ
						,MAX(LN_RPS_SEQ) OVER (PARTITION BY BF_SSN, LN_SEQ) [LN_RPS_SEQ]
					FROM
						CDW..LN65_LON_RPS
				) LN65A
					ON LN65.BF_SSN = LN65A.BF_SSN
					AND LN65.LN_SEQ = LN65A.LN_SEQ
					AND LN65.LN_RPS_SEQ = LN65A.LN_RPS_SEQ
			WHERE
				LN65A.BF_SSN IS NULL
				AND LN65A.LN_SEQ IS NULL
				AND LN65A.LN_RPS_SEQ IS NULL
				AND LN65.LC_TYP_SCH_DIS IN ('CQ','C1','C2','C3')
		) PRIOR_ICR
			ON LN65.BF_SSN = PRIOR_ICR.BF_SSN
			--AND LN65.LN_SEQ = PRIOR_ICR.LN_SEQ
			--AND LN65.LN_RPS_SEQ = PRIOR_ICR.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('CQ','C1','C2','C3')
		AND LN65.LC_STA_LON65 = 'A'

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		 LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
	WHERE
		LN65.LC_STA_LON65 = 'I'
		AND LN65.LC_TYP_SCH_DIS IN ('CQ','C1','C2','C3')
)
INSERT INTO
	@REMOVED
SELECT 
	'ICR'[RPY_TYP]
	,*
	,'RUNNING TOTAL'[POP_TYP]
FROM
	BOTH;

------------------------- ICR removed for the month ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--get 2nd to max loan repayment sequence
			SELECT
				NUM.BF_SSN
				,NUM.LN_SEQ
				,NUM.LN_RPS_SEQ
				,NUM.LC_TYP_SCH_DIS
				,NUM.LF_LST_DTS_LN65
				,NUM.LC_STA_LON65
			FROM
				CDW..LN10_LON LN10
				INNER JOIN
				(--assign number starting with highest repayment sequence first
					SELECT
						ROW_NUMBER() OVER(PARTITION BY BF_SSN, LN_SEQ ORDER BY LN_RPS_SEQ DESC) [ROWNUM]
						,BF_SSN
						,LN_SEQ
						,LN_RPS_SEQ
						,LC_TYP_SCH_DIS
						,LF_LST_DTS_LN65
						,LC_STA_LON65
					FROM
						CDW..LN65_LON_RPS
				) NUM
					ON LN10.BF_SSN = NUM.BF_SSN
					AND LN10.LN_SEQ = NUM.LN_SEQ
			WHERE
				NUM.ROWNUM = 2
				AND	NUM.LC_TYP_SCH_DIS IN ('CQ','C1','C2','C3')
				AND NUM.LF_LST_DTS_LN65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
				AND NUM.LC_STA_LON65 = 'I'
				AND LN10.LA_CUR_PRI > 0.00
		) SECOND_TO_MAX
			ON LN65.BF_SSN = SECOND_TO_MAX.BF_SSN
			AND LN65.LN_SEQ = SECOND_TO_MAX.LN_SEQ
			--AND LN65.LN_RPS_SEQ = STM.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('CQ','C1','C2','C3')

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN
		(--gets previous month's repayment schedule
			SELECT
				 BF_SSN
				,LN_SEQ
				,LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS
			WHERE
				LD_CRT_LON65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
		) LN65_PREV
			ON LN65.BF_SSN = LN65_PREV.BF_SSN
			AND LN65.LN_SEQ = LN65_PREV.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_PREV.LN_RPS_SEQ
		INNER JOIN CDW..RS10_BR_RPD RS10
			ON LN65.BF_SSN = RS10.BF_SSN
			AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS IN ('CQ','C1','C2','C3')
		AND RS10.LC_STA_RPST10 = 'I'
)
INSERT INTO
	@REMOVED
SELECT 
	'ICR'[RPY_TYP]
	,*
	,'FOR THE MONTH'[POP_TYP]
FROM
	BOTH;

------------------------- PAYE removed running total ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--gets any instance of non-max PAYE (ie pre-max PAYE)
			SELECT
				 LN65.BF_SSN
				,LN65.LN_SEQ
				,LN65.LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS LN65
				LEFT JOIN 
				(--exclude max repayment sequence
					SELECT
						BF_SSN
						,LN_SEQ
						,MAX(LN_RPS_SEQ) OVER (PARTITION BY BF_SSN, LN_SEQ) [LN_RPS_SEQ]
					FROM
						CDW..LN65_LON_RPS
				) LN65A
					ON LN65.BF_SSN = LN65A.BF_SSN
					AND LN65.LN_SEQ = LN65A.LN_SEQ
					AND LN65.LN_RPS_SEQ = LN65A.LN_RPS_SEQ
			WHERE
				LN65A.BF_SSN IS NULL
				AND LN65A.LN_SEQ IS NULL
				AND LN65A.LN_RPS_SEQ IS NULL
				AND LN65.LC_TYP_SCH_DIS IN ('CA','CP')
		) PRIOR_PAYE
			ON LN65.BF_SSN = PRIOR_PAYE.BF_SSN
			--AND LN65.LN_SEQ = PRIOR_PAYE.LN_SEQ
			--AND LN65.LN_RPS_SEQ = PRIOR_PAYE.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('CA','CP')
		AND LN65.LC_STA_LON65 = 'A'

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		 LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
	WHERE
		LN65.LC_STA_LON65 = 'I'
		AND LN65.LC_TYP_SCH_DIS IN ('CA','CP')
)
INSERT INTO
	@REMOVED
SELECT 
	'PAYE'[RPY_TYP]
	,*
	,'RUNNING TOTAL'[POP_TYP]
FROM
	BOTH;

------------------------- PAYE removed for the month ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--get 2nd to max loan repayment sequence
			SELECT
				NUM.BF_SSN
				,NUM.LN_SEQ
				,NUM.LN_RPS_SEQ
				,NUM.LC_TYP_SCH_DIS
				,NUM.LF_LST_DTS_LN65
				,NUM.LC_STA_LON65
			FROM
				CDW..LN10_LON LN10
				INNER JOIN
				(--assign number starting with highest repayment sequence first
					SELECT
						ROW_NUMBER() OVER(PARTITION BY BF_SSN, LN_SEQ ORDER BY LN_RPS_SEQ DESC) [ROWNUM]
						,BF_SSN
						,LN_SEQ
						,LN_RPS_SEQ
						,LC_TYP_SCH_DIS
						,LF_LST_DTS_LN65
						,LC_STA_LON65
					FROM
						CDW..LN65_LON_RPS
				) NUM
					ON LN10.BF_SSN = NUM.BF_SSN
					AND LN10.LN_SEQ = NUM.LN_SEQ
			WHERE
				NUM.ROWNUM = 2
				AND	NUM.LC_TYP_SCH_DIS IN ('CA','CP')
				AND NUM.LF_LST_DTS_LN65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
				AND NUM.LC_STA_LON65 = 'I'
				AND LN10.LA_CUR_PRI > 0.00
		) SECOND_TO_MAX
			ON LN65.BF_SSN = SECOND_TO_MAX.BF_SSN
			AND LN65.LN_SEQ = SECOND_TO_MAX.LN_SEQ
			--AND LN65.LN_RPS_SEQ = STM.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('CA','CP')

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN
		(--gets previous month's repayment schedule
			SELECT
				 BF_SSN
				,LN_SEQ
				,LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS
			WHERE
				LD_CRT_LON65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
		) LN65_PREV
			ON LN65.BF_SSN = LN65_PREV.BF_SSN
			AND LN65.LN_SEQ = LN65_PREV.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_PREV.LN_RPS_SEQ
		INNER JOIN CDW..RS10_BR_RPD RS10
			ON LN65.BF_SSN = RS10.BF_SSN
			AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS IN ('CA','CP')
		AND RS10.LC_STA_RPST10 = 'I'
)
INSERT INTO
	@REMOVED
SELECT 
	'PAYE'[RPY_TYP]
	,*
	,'FOR THE MONTH'[POP_TYP]
FROM
	BOTH;

------------------------- REPAYE removed running total ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--gets any instance of non-max REPAYE (ie pre-max REPAYE)
			SELECT
				 LN65.BF_SSN
				,LN65.LN_SEQ
				,LN65.LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS LN65
				LEFT JOIN
				( --exclude max repayment sequence
					SELECT
						BF_SSN
						,LN_SEQ
						,MAX(LN_RPS_SEQ) OVER (PARTITION BY BF_SSN, LN_SEQ) [LN_RPS_SEQ]
					FROM
						CDW..LN65_LON_RPS
				) LN65A
					ON LN65.BF_SSN = LN65A.BF_SSN
					AND LN65.LN_SEQ = LN65A.LN_SEQ
					AND LN65.LN_RPS_SEQ = LN65A.LN_RPS_SEQ
			WHERE
				LN65A.BF_SSN IS NULL
				AND LN65A.LN_SEQ IS NULL
				AND LN65A.LN_RPS_SEQ IS NULL
				AND LN65.LC_TYP_SCH_DIS IN ('I5','IA')
		) PRIOR_REPAYE
			ON LN65.BF_SSN = PRIOR_REPAYE.BF_SSN
			--AND LN65.LN_SEQ = PRIOR_REPAYE.LN_SEQ
			--AND LN65.LN_RPS_SEQ = PRIOR_REPAYE.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('I5','IA')
		AND LN65.LC_STA_LON65 = 'A'

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		 LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
	WHERE
		LN65.LC_STA_LON65 = 'I'
		AND LN65.LC_TYP_SCH_DIS IN ('I5','IA')
)
INSERT INTO
	@REMOVED
SELECT 
	'REPAYE'[RPY_TYP]
	,*
	,'RUNNING TOTAL'[POP_TYP]
FROM
	BOTH;

------------------------- REPAYE removed for the month ----------------------------------------
;WITH BOTH AS
(	--SCENARIO_2
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,2 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN 
		(--get 2nd to max loan repayment sequence
			SELECT
				NUM.BF_SSN
				,NUM.LN_SEQ
				,NUM.LN_RPS_SEQ
				,NUM.LC_TYP_SCH_DIS
				,NUM.LF_LST_DTS_LN65
				,NUM.LC_STA_LON65
			FROM
				CDW..LN10_LON LN10
				INNER JOIN
				(--assign number starting with highest repayment sequence first
					SELECT
						ROW_NUMBER() OVER(PARTITION BY BF_SSN, LN_SEQ ORDER BY LN_RPS_SEQ DESC) [ROWNUM]
						,BF_SSN
						,LN_SEQ
						,LN_RPS_SEQ
						,LC_TYP_SCH_DIS
						,LF_LST_DTS_LN65
						,LC_STA_LON65
					FROM
						CDW..LN65_LON_RPS
				) NUM
					ON LN10.BF_SSN = NUM.BF_SSN
					AND LN10.LN_SEQ = NUM.LN_SEQ
			WHERE
				NUM.ROWNUM = 2
				AND	NUM.LC_TYP_SCH_DIS IN ('I5','IA')
				AND NUM.LF_LST_DTS_LN65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
				AND NUM.LC_STA_LON65 = 'I'
				AND LN10.LA_CUR_PRI > 0.00
		) SECOND_TO_MAX
			ON LN65.BF_SSN = SECOND_TO_MAX.BF_SSN
			AND LN65.LN_SEQ = SECOND_TO_MAX.LN_SEQ
			--AND LN65.LN_RPS_SEQ = STM.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS NOT IN ('I5','IA')

	UNION ALL

	--SCENARIO_1
	SELECT DISTINCT
		LN65.BF_SSN
		,LN65.LN_SEQ
		,LN65.LN_RPS_SEQ
		,1 [scenario]
	FROM
		CDW..LN65_LON_RPS LN65
		INNER JOIN #LN65_MAX LN65_MAX
			ON LN65.BF_SSN = LN65_MAX.BF_SSN
			AND LN65.LN_SEQ = LN65_MAX.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_MAX.LN_RPS_SEQ
		INNER JOIN
		(--gets previous month's repayment schedule
			SELECT
				 BF_SSN
				,LN_SEQ
				,LN_RPS_SEQ
			FROM
				CDW..LN65_LON_RPS
			WHERE
				LD_CRT_LON65 BETWEEN @BEGIN_LAST_MONTH AND @END_LAST_MONTH
		) LN65_PREV
			ON LN65.BF_SSN = LN65_PREV.BF_SSN
			AND LN65.LN_SEQ = LN65_PREV.LN_SEQ
			AND LN65.LN_RPS_SEQ = LN65_PREV.LN_RPS_SEQ
		INNER JOIN CDW..RS10_BR_RPD RS10
			ON LN65.BF_SSN = RS10.BF_SSN
			AND LN65.LN_RPS_SEQ = RS10.LN_RPS_SEQ
	WHERE
		LN65.LC_TYP_SCH_DIS IN ('I5','IA')
		AND RS10.LC_STA_RPST10 = 'I'
)
INSERT INTO
	@REMOVED
SELECT 
	'REPAYE'[RPY_TYP]
	,*
	,'FOR THE MONTH'[POP_TYP]
FROM
	BOTH;


/*******************************************************************************************/
/*********************** CREATE FINAL OUTPUT TABLE *****************************************/
/*******************************************************************************************/

DROP TABLE #LN65_MAX

--SSRS table output
SELECT
	CAT.LIST_ORDER
	,CAT.RPY_TYP
	,CAT.CATEGORY
	,COALESCE(UNIONEDSET.TOTAL,0) [TOTAL]
FROM
	@CATEGORIES CAT
	LEFT JOIN
	(
		SELECT
			RPY_TYP
			,COUNT(DISTINCT BF_SSN) [TOTAL]
			,RPY_TYP + ' running total' [DESC_TEXT]
		FROM
			@RECENT_ACTIVE
		GROUP BY
			RPY_TYP

		UNION ALL

		SELECT
			RPY_TYP
			,COUNT(DISTINCT BF_SSN) [TOTAL]
			,RPY_TYP + ' for the month' [DESC_TEXT]
		FROM
			@RECENT_ACTIVE
		WHERE
			LAST_MONTH = 1
		GROUP BY
			RPY_TYP

		UNION ALL
	
		SELECT
			RPY_TYP
			,COUNT(DISTINCT BF_SSN) [TOTAL]
			,RPY_TYP + ' removed running total' [DESC_TEXT]
		FROM
			@REMOVED
		WHERE
			POP_TYP = 'RUNNING TOTAL'
		GROUP BY
			RPY_TYP

		UNION ALL

		SELECT
			RPY_TYP
			,COUNT(DISTINCT BF_SSN) [TOTAL]
			,RPY_TYP + ' removed for the month' [DESC_TEXT]
		FROM
			@REMOVED
		WHERE
			POP_TYP = 'FOR THE MONTH'
		GROUP BY
			RPY_TYP
	) UNIONEDSET
		ON CAT.RPY_TYP = UNIONEDSET.RPY_TYP
		AND CAT.CATEGORY = UNIONEDSET.DESC_TEXT
ORDER BY
	CAT.LIST_ORDER
