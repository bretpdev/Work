CREATE PROCEDURE [trdprtyres].[GetReferences]
	@AccountIdentifier VARCHAR(10)
AS
	SELECT
		RF10.BF_RFR AS ReferenceId,
		CONCAT(RTRIM(PD10.DM_PRS_1), ' ', RTRIM(PD10.DM_PRS_LST)) AS ReferenceName,
		PD10.DM_PRS_1 AS FirstName,
		PD10.DM_PRS_MID AS MiddleInitial,
		PD10.DM_PRS_LST AS LastName,
		CASE WHEN PD30.DI_VLD_ADR = 'Y' THEN 1 ELSE 0 END AS IsValidAddress,
		PD30.DX_STR_ADR_1 AS Address1,
		PD30.DX_STR_ADR_2 AS Address2,
		PD30.DM_CT As City,
		PD30.DC_DOM_ST AS [State],
		PD30.DF_ZIP_CDE AS ZipCode,
		CASE WHEN PD42.DC_PHN = 'H' THEN CONCAT(PD42.DN_DOM_PHN_ARA, PD42.DN_DOM_PHN_XCH, PD42.DN_DOM_PHN_LCL) ELSE '' END AS HomePhone,
		CASE WHEN PD42.DC_PHN = 'H' THEN PD42.DN_PHN_XTN ELSE '' END AS HomeExt,
		CASE WHEN PD42.DC_PHN = 'A' THEN CONCAT(PD42.DN_DOM_PHN_ARA, PD42.DN_DOM_PHN_XCH, PD42.DN_DOM_PHN_LCL) ELSE '' END AS AltPhone,
		CASE WHEN PD42.DC_PHN = 'A' THEN PD42.DN_PHN_XTN ELSE '' END AS HomeExt,
		CONCAT(PD42.DN_FGN_PHN_CNY, PD42.DN_FGN_PHN_CT, PD42.DN_FGN_PHN_LCL) AS ForeignPhone,
		CASE WHEN PD42.DN_FGN_PHN_CNY != '' THEN PD42.DN_PHN_XTN ELSE '' END AS ForeignExt,
		ISNULL(PD32.DX_ADR_EML, '') AS EmailAddress,
		'' AS SourceCode,
		RF10.BC_RFR_REL_BR AS RelationshipCode
	FROM
		UDW..RF10_RFR RF10
		LEFT JOIN UDW..PD10_PRS_NME PD10
			ON PD10.DF_PRS_ID = RF10.BF_RFR
		LEFT JOIN UDW..PD30_PRS_ADR PD30
			ON PD30.DF_PRS_ID = RF10.BF_RFR
		LEFT JOIN UDW..PD42_PRS_PHN PD42
			ON PD42.DF_PRS_ID = RF10.BF_RFR
		LEFT JOIN UDW..PD32_PRS_ADR_EML PD32
			ON PD32.DF_PRS_ID = RF10.BF_RFR
		LEFT JOIN UDW..PD10_PRS_NME PD10_B
			ON PD10_B.DF_PRS_ID = RF10.BF_SSN
	WHERE
		@AccountIdentifier IN (RF10.BF_SSN, PD10_B.DF_SPE_ACC_ID)